/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./node_modules/colormap/colorScale.js":
/*!*********************************************!*\
  !*** ./node_modules/colormap/colorScale.js ***!
  \*********************************************/
/***/ ((module) => {

module.exports={
	"jet":[{"index":0,"rgb":[0,0,131]},{"index":0.125,"rgb":[0,60,170]},{"index":0.375,"rgb":[5,255,255]},{"index":0.625,"rgb":[255,255,0]},{"index":0.875,"rgb":[250,0,0]},{"index":1,"rgb":[128,0,0]}],

	"hsv":[{"index":0,"rgb":[255,0,0]},{"index":0.169,"rgb":[253,255,2]},{"index":0.173,"rgb":[247,255,2]},{"index":0.337,"rgb":[0,252,4]},{"index":0.341,"rgb":[0,252,10]},{"index":0.506,"rgb":[1,249,255]},{"index":0.671,"rgb":[2,0,253]},{"index":0.675,"rgb":[8,0,253]},{"index":0.839,"rgb":[255,0,251]},{"index":0.843,"rgb":[255,0,245]},{"index":1,"rgb":[255,0,6]}],

	"hot":[{"index":0,"rgb":[0,0,0]},{"index":0.3,"rgb":[230,0,0]},{"index":0.6,"rgb":[255,210,0]},{"index":1,"rgb":[255,255,255]}],

	"spring":[{"index":0,"rgb":[255,0,255]},{"index":1,"rgb":[255,255,0]}],

	"summer":[{"index":0,"rgb":[0,128,102]},{"index":1,"rgb":[255,255,102]}],

	"autumn":[{"index":0,"rgb":[255,0,0]},{"index":1,"rgb":[255,255,0]}],

	"winter":[{"index":0,"rgb":[0,0,255]},{"index":1,"rgb":[0,255,128]}],

	"bone":[{"index":0,"rgb":[0,0,0]},{"index":0.376,"rgb":[84,84,116]},{"index":0.753,"rgb":[169,200,200]},{"index":1,"rgb":[255,255,255]}],

	"copper":[{"index":0,"rgb":[0,0,0]},{"index":0.804,"rgb":[255,160,102]},{"index":1,"rgb":[255,199,127]}],

	"greys":[{"index":0,"rgb":[0,0,0]},{"index":1,"rgb":[255,255,255]}],

	"yignbu":[{"index":0,"rgb":[8,29,88]},{"index":0.125,"rgb":[37,52,148]},{"index":0.25,"rgb":[34,94,168]},{"index":0.375,"rgb":[29,145,192]},{"index":0.5,"rgb":[65,182,196]},{"index":0.625,"rgb":[127,205,187]},{"index":0.75,"rgb":[199,233,180]},{"index":0.875,"rgb":[237,248,217]},{"index":1,"rgb":[255,255,217]}],

	"greens":[{"index":0,"rgb":[0,68,27]},{"index":0.125,"rgb":[0,109,44]},{"index":0.25,"rgb":[35,139,69]},{"index":0.375,"rgb":[65,171,93]},{"index":0.5,"rgb":[116,196,118]},{"index":0.625,"rgb":[161,217,155]},{"index":0.75,"rgb":[199,233,192]},{"index":0.875,"rgb":[229,245,224]},{"index":1,"rgb":[247,252,245]}],

	"yiorrd":[{"index":0,"rgb":[128,0,38]},{"index":0.125,"rgb":[189,0,38]},{"index":0.25,"rgb":[227,26,28]},{"index":0.375,"rgb":[252,78,42]},{"index":0.5,"rgb":[253,141,60]},{"index":0.625,"rgb":[254,178,76]},{"index":0.75,"rgb":[254,217,118]},{"index":0.875,"rgb":[255,237,160]},{"index":1,"rgb":[255,255,204]}],

	"bluered":[{"index":0,"rgb":[0,0,255]},{"index":1,"rgb":[255,0,0]}],

	"rdbu":[{"index":0,"rgb":[5,10,172]},{"index":0.35,"rgb":[106,137,247]},{"index":0.5,"rgb":[190,190,190]},{"index":0.6,"rgb":[220,170,132]},{"index":0.7,"rgb":[230,145,90]},{"index":1,"rgb":[178,10,28]}],

	"picnic":[{"index":0,"rgb":[0,0,255]},{"index":0.1,"rgb":[51,153,255]},{"index":0.2,"rgb":[102,204,255]},{"index":0.3,"rgb":[153,204,255]},{"index":0.4,"rgb":[204,204,255]},{"index":0.5,"rgb":[255,255,255]},{"index":0.6,"rgb":[255,204,255]},{"index":0.7,"rgb":[255,153,255]},{"index":0.8,"rgb":[255,102,204]},{"index":0.9,"rgb":[255,102,102]},{"index":1,"rgb":[255,0,0]}],

	"rainbow":[{"index":0,"rgb":[150,0,90]},{"index":0.125,"rgb":[0,0,200]},{"index":0.25,"rgb":[0,25,255]},{"index":0.375,"rgb":[0,152,255]},{"index":0.5,"rgb":[44,255,150]},{"index":0.625,"rgb":[151,255,0]},{"index":0.75,"rgb":[255,234,0]},{"index":0.875,"rgb":[255,111,0]},{"index":1,"rgb":[255,0,0]}],

	"portland":[{"index":0,"rgb":[12,51,131]},{"index":0.25,"rgb":[10,136,186]},{"index":0.5,"rgb":[242,211,56]},{"index":0.75,"rgb":[242,143,56]},{"index":1,"rgb":[217,30,30]}],

	"blackbody":[{"index":0,"rgb":[0,0,0]},{"index":0.2,"rgb":[230,0,0]},{"index":0.4,"rgb":[230,210,0]},{"index":0.7,"rgb":[255,255,255]},{"index":1,"rgb":[160,200,255]}],

	"earth":[{"index":0,"rgb":[0,0,130]},{"index":0.1,"rgb":[0,180,180]},{"index":0.2,"rgb":[40,210,40]},{"index":0.4,"rgb":[230,230,50]},{"index":0.6,"rgb":[120,70,20]},{"index":1,"rgb":[255,255,255]}],

	"electric":[{"index":0,"rgb":[0,0,0]},{"index":0.15,"rgb":[30,0,100]},{"index":0.4,"rgb":[120,0,100]},{"index":0.6,"rgb":[160,90,0]},{"index":0.8,"rgb":[230,200,0]},{"index":1,"rgb":[255,250,220]}],

	"alpha": [{"index":0, "rgb": [255,255,255,0]},{"index":1, "rgb": [255,255,255,1]}],

	"viridis": [{"index":0,"rgb":[68,1,84]},{"index":0.13,"rgb":[71,44,122]},{"index":0.25,"rgb":[59,81,139]},{"index":0.38,"rgb":[44,113,142]},{"index":0.5,"rgb":[33,144,141]},{"index":0.63,"rgb":[39,173,129]},{"index":0.75,"rgb":[92,200,99]},{"index":0.88,"rgb":[170,220,50]},{"index":1,"rgb":[253,231,37]}],

	"inferno": [{"index":0,"rgb":[0,0,4]},{"index":0.13,"rgb":[31,12,72]},{"index":0.25,"rgb":[85,15,109]},{"index":0.38,"rgb":[136,34,106]},{"index":0.5,"rgb":[186,54,85]},{"index":0.63,"rgb":[227,89,51]},{"index":0.75,"rgb":[249,140,10]},{"index":0.88,"rgb":[249,201,50]},{"index":1,"rgb":[252,255,164]}],

	"magma": [{"index":0,"rgb":[0,0,4]},{"index":0.13,"rgb":[28,16,68]},{"index":0.25,"rgb":[79,18,123]},{"index":0.38,"rgb":[129,37,129]},{"index":0.5,"rgb":[181,54,122]},{"index":0.63,"rgb":[229,80,100]},{"index":0.75,"rgb":[251,135,97]},{"index":0.88,"rgb":[254,194,135]},{"index":1,"rgb":[252,253,191]}],

	"plasma": [{"index":0,"rgb":[13,8,135]},{"index":0.13,"rgb":[75,3,161]},{"index":0.25,"rgb":[125,3,168]},{"index":0.38,"rgb":[168,34,150]},{"index":0.5,"rgb":[203,70,121]},{"index":0.63,"rgb":[229,107,93]},{"index":0.75,"rgb":[248,148,65]},{"index":0.88,"rgb":[253,195,40]},{"index":1,"rgb":[240,249,33]}],

	"warm": [{"index":0,"rgb":[125,0,179]},{"index":0.13,"rgb":[172,0,187]},{"index":0.25,"rgb":[219,0,170]},{"index":0.38,"rgb":[255,0,130]},{"index":0.5,"rgb":[255,63,74]},{"index":0.63,"rgb":[255,123,0]},{"index":0.75,"rgb":[234,176,0]},{"index":0.88,"rgb":[190,228,0]},{"index":1,"rgb":[147,255,0]}],

	"cool": [{"index":0,"rgb":[125,0,179]},{"index":0.13,"rgb":[116,0,218]},{"index":0.25,"rgb":[98,74,237]},{"index":0.38,"rgb":[68,146,231]},{"index":0.5,"rgb":[0,204,197]},{"index":0.63,"rgb":[0,247,146]},{"index":0.75,"rgb":[0,255,88]},{"index":0.88,"rgb":[40,255,8]},{"index":1,"rgb":[147,255,0]}],

	"rainbow-soft": [{"index":0,"rgb":[125,0,179]},{"index":0.1,"rgb":[199,0,180]},{"index":0.2,"rgb":[255,0,121]},{"index":0.3,"rgb":[255,108,0]},{"index":0.4,"rgb":[222,194,0]},{"index":0.5,"rgb":[150,255,0]},{"index":0.6,"rgb":[0,255,55]},{"index":0.7,"rgb":[0,246,150]},{"index":0.8,"rgb":[50,167,222]},{"index":0.9,"rgb":[103,51,235]},{"index":1,"rgb":[124,0,186]}],

	"bathymetry": [{"index":0,"rgb":[40,26,44]},{"index":0.13,"rgb":[59,49,90]},{"index":0.25,"rgb":[64,76,139]},{"index":0.38,"rgb":[63,110,151]},{"index":0.5,"rgb":[72,142,158]},{"index":0.63,"rgb":[85,174,163]},{"index":0.75,"rgb":[120,206,163]},{"index":0.88,"rgb":[187,230,172]},{"index":1,"rgb":[253,254,204]}],

	"cdom": [{"index":0,"rgb":[47,15,62]},{"index":0.13,"rgb":[87,23,86]},{"index":0.25,"rgb":[130,28,99]},{"index":0.38,"rgb":[171,41,96]},{"index":0.5,"rgb":[206,67,86]},{"index":0.63,"rgb":[230,106,84]},{"index":0.75,"rgb":[242,149,103]},{"index":0.88,"rgb":[249,193,135]},{"index":1,"rgb":[254,237,176]}],

	"chlorophyll": [{"index":0,"rgb":[18,36,20]},{"index":0.13,"rgb":[25,63,41]},{"index":0.25,"rgb":[24,91,59]},{"index":0.38,"rgb":[13,119,72]},{"index":0.5,"rgb":[18,148,80]},{"index":0.63,"rgb":[80,173,89]},{"index":0.75,"rgb":[132,196,122]},{"index":0.88,"rgb":[175,221,162]},{"index":1,"rgb":[215,249,208]}],

	"density": [{"index":0,"rgb":[54,14,36]},{"index":0.13,"rgb":[89,23,80]},{"index":0.25,"rgb":[110,45,132]},{"index":0.38,"rgb":[120,77,178]},{"index":0.5,"rgb":[120,113,213]},{"index":0.63,"rgb":[115,151,228]},{"index":0.75,"rgb":[134,185,227]},{"index":0.88,"rgb":[177,214,227]},{"index":1,"rgb":[230,241,241]}],

	"freesurface-blue": [{"index":0,"rgb":[30,4,110]},{"index":0.13,"rgb":[47,14,176]},{"index":0.25,"rgb":[41,45,236]},{"index":0.38,"rgb":[25,99,212]},{"index":0.5,"rgb":[68,131,200]},{"index":0.63,"rgb":[114,156,197]},{"index":0.75,"rgb":[157,181,203]},{"index":0.88,"rgb":[200,208,216]},{"index":1,"rgb":[241,237,236]}],

	"freesurface-red": [{"index":0,"rgb":[60,9,18]},{"index":0.13,"rgb":[100,17,27]},{"index":0.25,"rgb":[142,20,29]},{"index":0.38,"rgb":[177,43,27]},{"index":0.5,"rgb":[192,87,63]},{"index":0.63,"rgb":[205,125,105]},{"index":0.75,"rgb":[216,162,148]},{"index":0.88,"rgb":[227,199,193]},{"index":1,"rgb":[241,237,236]}],

	"oxygen": [{"index":0,"rgb":[64,5,5]},{"index":0.13,"rgb":[106,6,15]},{"index":0.25,"rgb":[144,26,7]},{"index":0.38,"rgb":[168,64,3]},{"index":0.5,"rgb":[188,100,4]},{"index":0.63,"rgb":[206,136,11]},{"index":0.75,"rgb":[220,174,25]},{"index":0.88,"rgb":[231,215,44]},{"index":1,"rgb":[248,254,105]}],

	"par": [{"index":0,"rgb":[51,20,24]},{"index":0.13,"rgb":[90,32,35]},{"index":0.25,"rgb":[129,44,34]},{"index":0.38,"rgb":[159,68,25]},{"index":0.5,"rgb":[182,99,19]},{"index":0.63,"rgb":[199,134,22]},{"index":0.75,"rgb":[212,171,35]},{"index":0.88,"rgb":[221,210,54]},{"index":1,"rgb":[225,253,75]}],

	"phase": [{"index":0,"rgb":[145,105,18]},{"index":0.13,"rgb":[184,71,38]},{"index":0.25,"rgb":[186,58,115]},{"index":0.38,"rgb":[160,71,185]},{"index":0.5,"rgb":[110,97,218]},{"index":0.63,"rgb":[50,123,164]},{"index":0.75,"rgb":[31,131,110]},{"index":0.88,"rgb":[77,129,34]},{"index":1,"rgb":[145,105,18]}],

	"salinity": [{"index":0,"rgb":[42,24,108]},{"index":0.13,"rgb":[33,50,162]},{"index":0.25,"rgb":[15,90,145]},{"index":0.38,"rgb":[40,118,137]},{"index":0.5,"rgb":[59,146,135]},{"index":0.63,"rgb":[79,175,126]},{"index":0.75,"rgb":[120,203,104]},{"index":0.88,"rgb":[193,221,100]},{"index":1,"rgb":[253,239,154]}],

	"temperature": [{"index":0,"rgb":[4,35,51]},{"index":0.13,"rgb":[23,51,122]},{"index":0.25,"rgb":[85,59,157]},{"index":0.38,"rgb":[129,79,143]},{"index":0.5,"rgb":[175,95,130]},{"index":0.63,"rgb":[222,112,101]},{"index":0.75,"rgb":[249,146,66]},{"index":0.88,"rgb":[249,196,65]},{"index":1,"rgb":[232,250,91]}],

	"turbidity": [{"index":0,"rgb":[34,31,27]},{"index":0.13,"rgb":[65,50,41]},{"index":0.25,"rgb":[98,69,52]},{"index":0.38,"rgb":[131,89,57]},{"index":0.5,"rgb":[161,112,59]},{"index":0.63,"rgb":[185,140,66]},{"index":0.75,"rgb":[202,174,88]},{"index":0.88,"rgb":[216,209,126]},{"index":1,"rgb":[233,246,171]}],

	"velocity-blue": [{"index":0,"rgb":[17,32,64]},{"index":0.13,"rgb":[35,52,116]},{"index":0.25,"rgb":[29,81,156]},{"index":0.38,"rgb":[31,113,162]},{"index":0.5,"rgb":[50,144,169]},{"index":0.63,"rgb":[87,173,176]},{"index":0.75,"rgb":[149,196,189]},{"index":0.88,"rgb":[203,221,211]},{"index":1,"rgb":[254,251,230]}],

	"velocity-green": [{"index":0,"rgb":[23,35,19]},{"index":0.13,"rgb":[24,64,38]},{"index":0.25,"rgb":[11,95,45]},{"index":0.38,"rgb":[39,123,35]},{"index":0.5,"rgb":[95,146,12]},{"index":0.63,"rgb":[152,165,18]},{"index":0.75,"rgb":[201,186,69]},{"index":0.88,"rgb":[233,216,137]},{"index":1,"rgb":[255,253,205]}],

	"cubehelix": [{"index":0,"rgb":[0,0,0]},{"index":0.07,"rgb":[22,5,59]},{"index":0.13,"rgb":[60,4,105]},{"index":0.2,"rgb":[109,1,135]},{"index":0.27,"rgb":[161,0,147]},{"index":0.33,"rgb":[210,2,142]},{"index":0.4,"rgb":[251,11,123]},{"index":0.47,"rgb":[255,29,97]},{"index":0.53,"rgb":[255,54,69]},{"index":0.6,"rgb":[255,85,46]},{"index":0.67,"rgb":[255,120,34]},{"index":0.73,"rgb":[255,157,37]},{"index":0.8,"rgb":[241,191,57]},{"index":0.87,"rgb":[224,220,93]},{"index":0.93,"rgb":[218,241,142]},{"index":1,"rgb":[227,253,198]}]
};


/***/ }),

/***/ "./node_modules/colormap/index.js":
/*!****************************************!*\
  !*** ./node_modules/colormap/index.js ***!
  \****************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
/*
 * Ben Postlethwaite
 * January 2013
 * License MIT
 */


var colorScale = __webpack_require__(/*! ./colorScale */ "./node_modules/colormap/colorScale.js");
var lerp = __webpack_require__(/*! lerp */ "./node_modules/lerp/index.js")

module.exports = createColormap;

function createColormap (spec) {
    /*
     * Default Options
     */
    var indicies, fromrgba, torgba,
        nsteps, cmap, colormap, format,
        nshades, colors, alpha, i;

    if ( !spec ) spec = {};

    nshades = (spec.nshades || 72) - 1;
    format = spec.format || 'hex';

    colormap = spec.colormap;
    if (!colormap) colormap = 'jet';

    if (typeof colormap === 'string') {
        colormap = colormap.toLowerCase();

        if (!colorScale[colormap]) {
            throw Error(colormap + ' not a supported colorscale');
        }

        cmap = colorScale[colormap];

    } else if (Array.isArray(colormap)) {
        cmap = colormap.slice();

    } else {
        throw Error('unsupported colormap option', colormap);
    }

    if (cmap.length > nshades + 1) {
        throw new Error(
            colormap+' map requires nshades to be at least size '+cmap.length
        );
    }

    if (!Array.isArray(spec.alpha)) {

        if (typeof spec.alpha === 'number') {
            alpha = [spec.alpha, spec.alpha];

        } else {
            alpha = [1, 1];
        }

    } else if (spec.alpha.length !== 2) {
        alpha = [1, 1];

    } else {
        alpha = spec.alpha.slice();
    }

    // map index points from 0..1 to 0..n-1
    indicies = cmap.map(function(c) {
        return Math.round(c.index * nshades);
    });

    // Add alpha channel to the map
    alpha[0] = Math.min(Math.max(alpha[0], 0), 1);
    alpha[1] = Math.min(Math.max(alpha[1], 0), 1);

    var steps = cmap.map(function(c, i) {
        var index = cmap[i].index

        var rgba = cmap[i].rgb.slice();

        // if user supplies their own map use it
        if (rgba.length === 4 && rgba[3] >= 0 && rgba[3] <= 1) {
            return rgba
        }
        rgba[3] = alpha[0] + (alpha[1] - alpha[0])*index;

        return rgba
    })


    /*
     * map increasing linear values between indicies to
     * linear steps in colorvalues
     */
    var colors = []
    for (i = 0; i < indicies.length-1; ++i) {
        nsteps = indicies[i+1] - indicies[i];
        fromrgba = steps[i];
        torgba = steps[i+1];

        for (var j = 0; j < nsteps; j++) {
            var amt = j / nsteps
            colors.push([
                Math.round(lerp(fromrgba[0], torgba[0], amt)),
                Math.round(lerp(fromrgba[1], torgba[1], amt)),
                Math.round(lerp(fromrgba[2], torgba[2], amt)),
                lerp(fromrgba[3], torgba[3], amt)
            ])
        }
    }

    //add 1 step as last value
    colors.push(cmap[cmap.length - 1].rgb.concat(alpha[1]))

    if (format === 'hex') colors = colors.map( rgb2hex );
    else if (format === 'rgbaString') colors = colors.map( rgbaStr );
    else if (format === 'float') colors = colors.map( rgb2float );

    return colors;
};

function rgb2float (rgba) {
    return [
        rgba[0] / 255,
        rgba[1] / 255,
        rgba[2] / 255,
        rgba[3]
    ]
}

function rgb2hex (rgba) {
    var dig, hex = '#';
    for (var i = 0; i < 3; ++i) {
        dig = rgba[i];
        dig = dig.toString(16);
        hex += ('00' + dig).substr( dig.length );
    }
    return hex;
}

function rgbaStr (rgba) {
    return 'rgba(' + rgba.join(',') + ')';
}


/***/ }),

/***/ "./node_modules/css-loader/dist/cjs.js!./node_modules/ol/ol.css":
/*!**********************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js!./node_modules/ol/ol.css ***!
  \**********************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../css-loader/dist/runtime/cssWithMappingToString.js */ "./node_modules/css-loader/dist/runtime/cssWithMappingToString.js");
/* harmony import */ var _css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../css-loader/dist/runtime/api.js */ "./node_modules/css-loader/dist/runtime/api.js");
/* harmony import */ var _css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);
// Imports


var ___CSS_LOADER_EXPORT___ = _css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0___default()));
// Module
___CSS_LOADER_EXPORT___.push([module.id, ".ol-box {\n  box-sizing: border-box;\n  border-radius: 2px;\n  border: 2px solid blue;\n}\n\n.ol-mouse-position {\n  top: 8px;\n  right: 8px;\n  position: absolute;\n}\n\n.ol-scale-line {\n  background: rgba(0,60,136,0.3);\n  border-radius: 4px;\n  bottom: 8px;\n  left: 8px;\n  padding: 2px;\n  position: absolute;\n}\n.ol-scale-line-inner {\n  border: 1px solid #eee;\n  border-top: none;\n  color: #eee;\n  font-size: 10px;\n  text-align: center;\n  margin: 1px;\n  will-change: contents, width;\n  transition: all 0.25s;\n}\n.ol-scale-bar {\n  position: absolute;\n  bottom: 8px;\n  left: 8px;\n}\n.ol-scale-step-marker {\n  width: 1px;\n  height: 15px;\n  background-color: #000000;\n  float: right;\n  z-Index: 10;\n}\n.ol-scale-step-text {\n  position: absolute;\n  bottom: -5px;\n  font-size: 12px;\n  z-Index: 11;\n  color: #000000;\n  text-shadow: -2px 0 #FFFFFF, 0 2px #FFFFFF, 2px 0 #FFFFFF, 0 -2px #FFFFFF;\n}\n.ol-scale-text {\n  position: absolute;\n  font-size: 14px;\n  text-align: center;\n  bottom: 25px;\n  color: #000000;\n  text-shadow: -2px 0 #FFFFFF, 0 2px #FFFFFF, 2px 0 #FFFFFF, 0 -2px #FFFFFF;\n}\n.ol-scale-singlebar {\n  position: relative;\n  height: 10px;\n  z-Index: 9;\n  box-sizing: border-box;\n  border: 1px solid black;\n}\n\n.ol-unsupported {\n  display: none;\n}\n.ol-viewport, .ol-unselectable {\n  -webkit-touch-callout: none;\n  -webkit-user-select: none;\n  -moz-user-select: none;\n  -ms-user-select: none;\n  user-select: none;\n  -webkit-tap-highlight-color: rgba(0,0,0,0);\n}\n.ol-selectable {\n  -webkit-touch-callout: default;\n  -webkit-user-select: text;\n  -moz-user-select: text;\n  -ms-user-select: text;\n  user-select: text;\n}\n.ol-grabbing {\n  cursor: -webkit-grabbing;\n  cursor: -moz-grabbing;\n  cursor: grabbing;\n}\n.ol-grab {\n  cursor: move;\n  cursor: -webkit-grab;\n  cursor: -moz-grab;\n  cursor: grab;\n}\n.ol-control {\n  position: absolute;\n  background-color: rgba(255,255,255,0.4);\n  border-radius: 4px;\n  padding: 2px;\n}\n.ol-control:hover {\n  background-color: rgba(255,255,255,0.6);\n}\n.ol-zoom {\n  top: .5em;\n  left: .5em;\n}\n.ol-rotate {\n  top: .5em;\n  right: .5em;\n  transition: opacity .25s linear, visibility 0s linear;\n}\n.ol-rotate.ol-hidden {\n  opacity: 0;\n  visibility: hidden;\n  transition: opacity .25s linear, visibility 0s linear .25s;\n}\n.ol-zoom-extent {\n  top: 4.643em;\n  left: .5em;\n}\n.ol-full-screen {\n  right: .5em;\n  top: .5em;\n}\n\n.ol-control button {\n  display: block;\n  margin: 1px;\n  padding: 0;\n  color: white;\n  font-size: 1.14em;\n  font-weight: bold;\n  text-decoration: none;\n  text-align: center;\n  height: 1.375em;\n  width: 1.375em;\n  line-height: .4em;\n  background-color: rgba(0,60,136,0.5);\n  border: none;\n  border-radius: 2px;\n}\n.ol-control button::-moz-focus-inner {\n  border: none;\n  padding: 0;\n}\n.ol-zoom-extent button {\n  line-height: 1.4em;\n}\n.ol-compass {\n  display: block;\n  font-weight: normal;\n  font-size: 1.2em;\n  will-change: transform;\n}\n.ol-touch .ol-control button {\n  font-size: 1.5em;\n}\n.ol-touch .ol-zoom-extent {\n  top: 5.5em;\n}\n.ol-control button:hover,\n.ol-control button:focus {\n  text-decoration: none;\n  background-color: rgba(0,60,136,0.7);\n}\n.ol-zoom .ol-zoom-in {\n  border-radius: 2px 2px 0 0;\n}\n.ol-zoom .ol-zoom-out {\n  border-radius: 0 0 2px 2px;\n}\n\n\n.ol-attribution {\n  text-align: right;\n  bottom: .5em;\n  right: .5em;\n  max-width: calc(100% - 1.3em);\n}\n\n.ol-attribution ul {\n  margin: 0;\n  padding: 0 .5em;\n  color: #000;\n  text-shadow: 0 0 2px #fff;\n}\n.ol-attribution li {\n  display: inline;\n  list-style: none;\n}\n.ol-attribution li:not(:last-child):after {\n  content: \" \";\n}\n.ol-attribution img {\n  max-height: 2em;\n  max-width: inherit;\n  vertical-align: middle;\n}\n.ol-attribution ul, .ol-attribution button {\n  display: inline-block;\n}\n.ol-attribution.ol-collapsed ul {\n  display: none;\n}\n.ol-attribution:not(.ol-collapsed) {\n  background: rgba(255,255,255,0.8);\n}\n.ol-attribution.ol-uncollapsible {\n  bottom: 0;\n  right: 0;\n  border-radius: 4px 0 0;\n}\n.ol-attribution.ol-uncollapsible img {\n  margin-top: -.2em;\n  max-height: 1.6em;\n}\n.ol-attribution.ol-uncollapsible button {\n  display: none;\n}\n\n.ol-zoomslider {\n  top: 4.5em;\n  left: .5em;\n  height: 200px;\n}\n.ol-zoomslider button {\n  position: relative;\n  height: 10px;\n}\n\n.ol-touch .ol-zoomslider {\n  top: 5.5em;\n}\n\n.ol-overviewmap {\n  left: 0.5em;\n  bottom: 0.5em;\n}\n.ol-overviewmap.ol-uncollapsible {\n  bottom: 0;\n  left: 0;\n  border-radius: 0 4px 0 0;\n}\n.ol-overviewmap .ol-overviewmap-map,\n.ol-overviewmap button {\n  display: inline-block;\n}\n.ol-overviewmap .ol-overviewmap-map {\n  border: 1px solid #7b98bc;\n  height: 150px;\n  margin: 2px;\n  width: 150px;\n}\n.ol-overviewmap:not(.ol-collapsed) button{\n  bottom: 1px;\n  left: 2px;\n  position: absolute;\n}\n.ol-overviewmap.ol-collapsed .ol-overviewmap-map,\n.ol-overviewmap.ol-uncollapsible button {\n  display: none;\n}\n.ol-overviewmap:not(.ol-collapsed) {\n  background: rgba(255,255,255,0.8);\n}\n.ol-overviewmap-box {\n  border: 2px dotted rgba(0,60,136,0.7);\n}\n\n.ol-overviewmap .ol-overviewmap-box:hover {\n  cursor: move;\n}\n", "",{"version":3,"sources":["webpack://./node_modules/ol/ol.css"],"names":[],"mappings":"AAAA;EACE,sBAAsB;EACtB,kBAAkB;EAClB,sBAAsB;AACxB;;AAEA;EACE,QAAQ;EACR,UAAU;EACV,kBAAkB;AACpB;;AAEA;EACE,8BAA8B;EAC9B,kBAAkB;EAClB,WAAW;EACX,SAAS;EACT,YAAY;EACZ,kBAAkB;AACpB;AACA;EACE,sBAAsB;EACtB,gBAAgB;EAChB,WAAW;EACX,eAAe;EACf,kBAAkB;EAClB,WAAW;EACX,4BAA4B;EAC5B,qBAAqB;AACvB;AACA;EACE,kBAAkB;EAClB,WAAW;EACX,SAAS;AACX;AACA;EACE,UAAU;EACV,YAAY;EACZ,yBAAyB;EACzB,YAAY;EACZ,WAAW;AACb;AACA;EACE,kBAAkB;EAClB,YAAY;EACZ,eAAe;EACf,WAAW;EACX,cAAc;EACd,yEAAyE;AAC3E;AACA;EACE,kBAAkB;EAClB,eAAe;EACf,kBAAkB;EAClB,YAAY;EACZ,cAAc;EACd,yEAAyE;AAC3E;AACA;EACE,kBAAkB;EAClB,YAAY;EACZ,UAAU;EACV,sBAAsB;EACtB,uBAAuB;AACzB;;AAEA;EACE,aAAa;AACf;AACA;EACE,2BAA2B;EAC3B,yBAAyB;EACzB,sBAAsB;EACtB,qBAAqB;EACrB,iBAAiB;EACjB,0CAA0C;AAC5C;AACA;EACE,8BAA8B;EAC9B,yBAAyB;EACzB,sBAAsB;EACtB,qBAAqB;EACrB,iBAAiB;AACnB;AACA;EACE,wBAAwB;EACxB,qBAAqB;EACrB,gBAAgB;AAClB;AACA;EACE,YAAY;EACZ,oBAAoB;EACpB,iBAAiB;EACjB,YAAY;AACd;AACA;EACE,kBAAkB;EAClB,uCAAuC;EACvC,kBAAkB;EAClB,YAAY;AACd;AACA;EACE,uCAAuC;AACzC;AACA;EACE,SAAS;EACT,UAAU;AACZ;AACA;EACE,SAAS;EACT,WAAW;EACX,qDAAqD;AACvD;AACA;EACE,UAAU;EACV,kBAAkB;EAClB,0DAA0D;AAC5D;AACA;EACE,YAAY;EACZ,UAAU;AACZ;AACA;EACE,WAAW;EACX,SAAS;AACX;;AAEA;EACE,cAAc;EACd,WAAW;EACX,UAAU;EACV,YAAY;EACZ,iBAAiB;EACjB,iBAAiB;EACjB,qBAAqB;EACrB,kBAAkB;EAClB,eAAe;EACf,cAAc;EACd,iBAAiB;EACjB,oCAAoC;EACpC,YAAY;EACZ,kBAAkB;AACpB;AACA;EACE,YAAY;EACZ,UAAU;AACZ;AACA;EACE,kBAAkB;AACpB;AACA;EACE,cAAc;EACd,mBAAmB;EACnB,gBAAgB;EAChB,sBAAsB;AACxB;AACA;EACE,gBAAgB;AAClB;AACA;EACE,UAAU;AACZ;AACA;;EAEE,qBAAqB;EACrB,oCAAoC;AACtC;AACA;EACE,0BAA0B;AAC5B;AACA;EACE,0BAA0B;AAC5B;;;AAGA;EACE,iBAAiB;EACjB,YAAY;EACZ,WAAW;EACX,6BAA6B;AAC/B;;AAEA;EACE,SAAS;EACT,eAAe;EACf,WAAW;EACX,yBAAyB;AAC3B;AACA;EACE,eAAe;EACf,gBAAgB;AAClB;AACA;EACE,YAAY;AACd;AACA;EACE,eAAe;EACf,kBAAkB;EAClB,sBAAsB;AACxB;AACA;EACE,qBAAqB;AACvB;AACA;EACE,aAAa;AACf;AACA;EACE,iCAAiC;AACnC;AACA;EACE,SAAS;EACT,QAAQ;EACR,sBAAsB;AACxB;AACA;EACE,iBAAiB;EACjB,iBAAiB;AACnB;AACA;EACE,aAAa;AACf;;AAEA;EACE,UAAU;EACV,UAAU;EACV,aAAa;AACf;AACA;EACE,kBAAkB;EAClB,YAAY;AACd;;AAEA;EACE,UAAU;AACZ;;AAEA;EACE,WAAW;EACX,aAAa;AACf;AACA;EACE,SAAS;EACT,OAAO;EACP,wBAAwB;AAC1B;AACA;;EAEE,qBAAqB;AACvB;AACA;EACE,yBAAyB;EACzB,aAAa;EACb,WAAW;EACX,YAAY;AACd;AACA;EACE,WAAW;EACX,SAAS;EACT,kBAAkB;AACpB;AACA;;EAEE,aAAa;AACf;AACA;EACE,iCAAiC;AACnC;AACA;EACE,qCAAqC;AACvC;;AAEA;EACE,YAAY;AACd","sourcesContent":[".ol-box {\n  box-sizing: border-box;\n  border-radius: 2px;\n  border: 2px solid blue;\n}\n\n.ol-mouse-position {\n  top: 8px;\n  right: 8px;\n  position: absolute;\n}\n\n.ol-scale-line {\n  background: rgba(0,60,136,0.3);\n  border-radius: 4px;\n  bottom: 8px;\n  left: 8px;\n  padding: 2px;\n  position: absolute;\n}\n.ol-scale-line-inner {\n  border: 1px solid #eee;\n  border-top: none;\n  color: #eee;\n  font-size: 10px;\n  text-align: center;\n  margin: 1px;\n  will-change: contents, width;\n  transition: all 0.25s;\n}\n.ol-scale-bar {\n  position: absolute;\n  bottom: 8px;\n  left: 8px;\n}\n.ol-scale-step-marker {\n  width: 1px;\n  height: 15px;\n  background-color: #000000;\n  float: right;\n  z-Index: 10;\n}\n.ol-scale-step-text {\n  position: absolute;\n  bottom: -5px;\n  font-size: 12px;\n  z-Index: 11;\n  color: #000000;\n  text-shadow: -2px 0 #FFFFFF, 0 2px #FFFFFF, 2px 0 #FFFFFF, 0 -2px #FFFFFF;\n}\n.ol-scale-text {\n  position: absolute;\n  font-size: 14px;\n  text-align: center;\n  bottom: 25px;\n  color: #000000;\n  text-shadow: -2px 0 #FFFFFF, 0 2px #FFFFFF, 2px 0 #FFFFFF, 0 -2px #FFFFFF;\n}\n.ol-scale-singlebar {\n  position: relative;\n  height: 10px;\n  z-Index: 9;\n  box-sizing: border-box;\n  border: 1px solid black;\n}\n\n.ol-unsupported {\n  display: none;\n}\n.ol-viewport, .ol-unselectable {\n  -webkit-touch-callout: none;\n  -webkit-user-select: none;\n  -moz-user-select: none;\n  -ms-user-select: none;\n  user-select: none;\n  -webkit-tap-highlight-color: rgba(0,0,0,0);\n}\n.ol-selectable {\n  -webkit-touch-callout: default;\n  -webkit-user-select: text;\n  -moz-user-select: text;\n  -ms-user-select: text;\n  user-select: text;\n}\n.ol-grabbing {\n  cursor: -webkit-grabbing;\n  cursor: -moz-grabbing;\n  cursor: grabbing;\n}\n.ol-grab {\n  cursor: move;\n  cursor: -webkit-grab;\n  cursor: -moz-grab;\n  cursor: grab;\n}\n.ol-control {\n  position: absolute;\n  background-color: rgba(255,255,255,0.4);\n  border-radius: 4px;\n  padding: 2px;\n}\n.ol-control:hover {\n  background-color: rgba(255,255,255,0.6);\n}\n.ol-zoom {\n  top: .5em;\n  left: .5em;\n}\n.ol-rotate {\n  top: .5em;\n  right: .5em;\n  transition: opacity .25s linear, visibility 0s linear;\n}\n.ol-rotate.ol-hidden {\n  opacity: 0;\n  visibility: hidden;\n  transition: opacity .25s linear, visibility 0s linear .25s;\n}\n.ol-zoom-extent {\n  top: 4.643em;\n  left: .5em;\n}\n.ol-full-screen {\n  right: .5em;\n  top: .5em;\n}\n\n.ol-control button {\n  display: block;\n  margin: 1px;\n  padding: 0;\n  color: white;\n  font-size: 1.14em;\n  font-weight: bold;\n  text-decoration: none;\n  text-align: center;\n  height: 1.375em;\n  width: 1.375em;\n  line-height: .4em;\n  background-color: rgba(0,60,136,0.5);\n  border: none;\n  border-radius: 2px;\n}\n.ol-control button::-moz-focus-inner {\n  border: none;\n  padding: 0;\n}\n.ol-zoom-extent button {\n  line-height: 1.4em;\n}\n.ol-compass {\n  display: block;\n  font-weight: normal;\n  font-size: 1.2em;\n  will-change: transform;\n}\n.ol-touch .ol-control button {\n  font-size: 1.5em;\n}\n.ol-touch .ol-zoom-extent {\n  top: 5.5em;\n}\n.ol-control button:hover,\n.ol-control button:focus {\n  text-decoration: none;\n  background-color: rgba(0,60,136,0.7);\n}\n.ol-zoom .ol-zoom-in {\n  border-radius: 2px 2px 0 0;\n}\n.ol-zoom .ol-zoom-out {\n  border-radius: 0 0 2px 2px;\n}\n\n\n.ol-attribution {\n  text-align: right;\n  bottom: .5em;\n  right: .5em;\n  max-width: calc(100% - 1.3em);\n}\n\n.ol-attribution ul {\n  margin: 0;\n  padding: 0 .5em;\n  color: #000;\n  text-shadow: 0 0 2px #fff;\n}\n.ol-attribution li {\n  display: inline;\n  list-style: none;\n}\n.ol-attribution li:not(:last-child):after {\n  content: \" \";\n}\n.ol-attribution img {\n  max-height: 2em;\n  max-width: inherit;\n  vertical-align: middle;\n}\n.ol-attribution ul, .ol-attribution button {\n  display: inline-block;\n}\n.ol-attribution.ol-collapsed ul {\n  display: none;\n}\n.ol-attribution:not(.ol-collapsed) {\n  background: rgba(255,255,255,0.8);\n}\n.ol-attribution.ol-uncollapsible {\n  bottom: 0;\n  right: 0;\n  border-radius: 4px 0 0;\n}\n.ol-attribution.ol-uncollapsible img {\n  margin-top: -.2em;\n  max-height: 1.6em;\n}\n.ol-attribution.ol-uncollapsible button {\n  display: none;\n}\n\n.ol-zoomslider {\n  top: 4.5em;\n  left: .5em;\n  height: 200px;\n}\n.ol-zoomslider button {\n  position: relative;\n  height: 10px;\n}\n\n.ol-touch .ol-zoomslider {\n  top: 5.5em;\n}\n\n.ol-overviewmap {\n  left: 0.5em;\n  bottom: 0.5em;\n}\n.ol-overviewmap.ol-uncollapsible {\n  bottom: 0;\n  left: 0;\n  border-radius: 0 4px 0 0;\n}\n.ol-overviewmap .ol-overviewmap-map,\n.ol-overviewmap button {\n  display: inline-block;\n}\n.ol-overviewmap .ol-overviewmap-map {\n  border: 1px solid #7b98bc;\n  height: 150px;\n  margin: 2px;\n  width: 150px;\n}\n.ol-overviewmap:not(.ol-collapsed) button{\n  bottom: 1px;\n  left: 2px;\n  position: absolute;\n}\n.ol-overviewmap.ol-collapsed .ol-overviewmap-map,\n.ol-overviewmap.ol-uncollapsible button {\n  display: none;\n}\n.ol-overviewmap:not(.ol-collapsed) {\n  background: rgba(255,255,255,0.8);\n}\n.ol-overviewmap-box {\n  border: 2px dotted rgba(0,60,136,0.7);\n}\n\n.ol-overviewmap .ol-overviewmap-box:hover {\n  cursor: move;\n}\n"],"sourceRoot":""}]);
// Exports
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);


/***/ }),

/***/ "./node_modules/css-loader/dist/cjs.js!./src/style.css":
/*!*************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js!./src/style.css ***!
  \*************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../node_modules/css-loader/dist/runtime/cssWithMappingToString.js */ "./node_modules/css-loader/dist/runtime/cssWithMappingToString.js");
/* harmony import */ var _node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../node_modules/css-loader/dist/runtime/api.js */ "./node_modules/css-loader/dist/runtime/api.js");
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);
// Imports


var ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0___default()));
// Module
___CSS_LOADER_EXPORT___.push([module.id, "@font-face {\r\n  font-family: 'San Francisco';\r\n  font-weight: 400;\r\n  src: url('https://applesocial.s3.amazonaws.com/assets/styles/fonts/sanfrancisco/sanfranciscodisplay-regular-webfont.woff');\r\n}\r\n\r\nhtml {\r\n  font-family: 'San Francisco';\r\n  background: #fff;\r\n  color: #333;\r\n}\r\n\r\n/* Typography */\r\n\r\nh2 {\r\n  font-size: 2em;\r\n  margin: 16px 0px 14px 0px;\r\n}\r\n\r\nh3 {\r\n  margin: 30px 0px 20px 0px;\r\n}\r\n\r\nlabel span {\r\n  font-size: 1em;\r\n  font-weight: 501;\r\n}\r\n\r\n* {\r\n  box-sizing: border-box;\r\n}\r\n\r\nbody {\r\n  margin: 0;\r\n  padding: 0;\r\n}\r\n\r\na {\r\n  text-decoration: none;\r\n}\r\n\r\n.map {\r\n  width: 80vw;\r\n  height: 100vh;\r\n}\r\n\r\n.grid-container {\r\n  display: grid;\r\n  grid-template-columns: 20vw 80vw;\r\n  grid-template-rows: 100vh;\r\n}\r\n\r\n.grid-1 {\r\n  margin-top: 14px;\r\n  margin-bottom: 14px;\r\n  overflow-y: auto;\r\n}\r\n\r\n.sidebar {\r\n  margin-left: 30px;\r\n}\r\n\r\n.svg {\r\n  height: 20px;\r\n}\r\n\r\nbutton {\r\n  margin: 0px 3px;\r\n  padding: 5px 6px 3px 6px;\r\n  border: 0px solid black;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  box-shadow: 2px 2px 2px 2px #999;\r\n}\r\n\r\nbutton:active {\r\n  box-shadow: 1px 1px 1px 1px #666;\r\n  transform: translateY(1px);\r\n}\r\n\r\n/*===============================\r\n<!-- AFTER NODEJS INTEGRATION -->\r\n===============================*/\r\n\r\n/* For IE <= 11 */\r\nselect::-ms-expand {\r\n  display: none;\r\n}\r\n\r\n.selectdiv:after {\r\n  content: '<>';\r\n  font-size: 17px;\r\n  color: #333;\r\n  -webkit-transform: rotate(90deg);\r\n  -moz-transform: rotate(90deg);\r\n  -ms-transform: rotate(90deg);\r\n  transform: rotate(90deg);\r\n  right: 11px;\r\n\r\n  top: 18px;\r\n  padding: 0 0 2px;\r\n  border-bottom: 1px solid #999;\r\n  /*left line */\r\n\r\n  position: absolute;\r\n  pointer-events: none;\r\n}\r\n\r\n.selectdiv select {\r\n  -webkit-appearance: none;\r\n  -moz-appearance: none;\r\n  appearance: none;\r\n  /* Add some styling */\r\n\r\n  display: block;\r\n  width: 100%;\r\n  max-width: 200px;\r\n  height: 35px;\r\n  float: left;\r\n  margin: 5px 0px;\r\n  padding: 0px 24px;\r\n  font-size: 16px;\r\n  line-height: 1.75;\r\n  color: #333;\r\n  background-color: #ffffff;\r\n  background-image: none;\r\n  border: 1px solid #cccccc;\r\n  -ms-word-break: normal;\r\n  word-break: normal;\r\n  /* Add dropdown SVG icon */\r\n  background: rgb(255, 255, 255)\r\n    url(\"data:image/svg+xml;utf8,<svg viewBox='0 0 140 140' width='24' height='24' xmlns='http://www.w3.org/2000/svg'><g><path d='m121.3,34.6c-1.6-1.6-4.2-1.6-5.8,0l-51,51.1-51.1-51.1c-1.6-1.6-4.2-1.6-5.8,0-1.6,1.6-1.6,4.2 0,5.8l53.9,53.9c0.8,0.8 1.8,1.2 2.9,1.2 1,0 2.1-0.4 2.9-1.2l53.9-53.9c1.7-1.6 1.7-4.2 0.1-5.8z' fill='black'/></g></svg>\")\r\n    no-repeat;\r\n  background-position: right 5px top 50%;\r\n}\r\n\r\n/*=======================\r\n<!-- Checkbox Styling -->\r\n=======================*/\r\n\r\n.checkbox-container {\r\n  display: block;\r\n  position: relative;\r\n  padding-left: 35px;\r\n  margin-bottom: 12px;\r\n  cursor: pointer;\r\n  font-size: 18px;\r\n  -webkit-user-select: none;\r\n  -moz-user-select: none;\r\n  -ms-user-select: none;\r\n  user-select: none;\r\n}\r\n\r\n.checkbox-container input {\r\n  position: absolute;\r\n  opacity: 0;\r\n  cursor: pointer;\r\n  height: 0;\r\n  width: 0;\r\n}\r\n\r\n.checkmark {\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  height: 25px;\r\n  width: 25px;\r\n  background-color: #eee;\r\n}\r\n\r\n.checkbox-container:hover input ~ .checkmark {\r\n  background-color: #ccc;\r\n}\r\n\r\n.checkbox-container input:checked ~ .checkmark {\r\n  background-color: #2196f3;\r\n}\r\n\r\n.checkmark:after {\r\n  content: '';\r\n  position: absolute;\r\n  display: none;\r\n}\r\n\r\n.checkbox-container input:checked ~ .checkmark:after {\r\n  display: block;\r\n}\r\n\r\n.checkbox-container .checkmark:after {\r\n  left: 9px;\r\n  top: 5px;\r\n  width: 5px;\r\n  height: 10px;\r\n  border: solid white;\r\n  border-width: 0 3px 3px 0;\r\n  -webkit-transform: rotate(45deg);\r\n  -ms-transform: rotate(45deg);\r\n  transform: rotate(45deg);\r\n}\r\n\r\n/*===================\r\n<!-- LINK STYLING --> \r\n===================*/\r\n.btn {\r\n  display: inline-block;\r\n  font-weight: 400;\r\n  text-align: center;\r\n  white-space: nowrap;\r\n  vertical-align: middle;\r\n  -webkit-user-select: none;\r\n  -moz-user-select: none;\r\n  -ms-user-select: none;\r\n  user-select: none;\r\n  border: 1px solid transparent;\r\n  padding: 0.375rem 0.75rem;\r\n  font-size: 1rem;\r\n  line-height: 1.5;\r\n  border-radius: 0.25rem;\r\n  transition: color 0.15s ease-in-out, background-color 0.15s ease-in-out,\r\n    border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;\r\n}\r\n\r\n.btn-outline-dark {\r\n  color: #343a40;\r\n  background-color: transparent;\r\n  background-image: none;\r\n  border-color: #343a40;\r\n}\r\n.btn-outline-dark:hover {\r\n  color: #fff;\r\n  background-color: #343a40;\r\n  border-color: #343a40;\r\n}\r\n.btn-outline-dark.focus,\r\n.btn-outline-dark:focus {\r\n  box-shadow: 0 0 0 0.2rem rgba(52, 58, 64, 0.5);\r\n}\r\n.btn-outline-dark.disabled,\r\n.btn-outline-dark:disabled {\r\n  color: #343a40;\r\n  background-color: transparent;\r\n}\r\n.btn-outline-dark:not(:disabled):not(.disabled).active,\r\n.btn-outline-dark:not(:disabled):not(.disabled):active,\r\n.show > .btn-outline-dark.dropdown-toggle {\r\n  color: #fff;\r\n  background-color: #343a40;\r\n  border-color: #343a40;\r\n}\r\n.btn-outline-dark:not(:disabled):not(.disabled).active:focus,\r\n.btn-outline-dark:not(:disabled):not(.disabled):active:focus,\r\n.show > .btn-outline-dark.dropdown-toggle:focus {\r\n  box-shadow: 0 0 0 0.2rem rgba(52, 58, 64, 0.5);\r\n}\r\n\r\n/*=======================================\r\n<!-- Media queries for responsiveness -->\r\n=======================================*/\r\n@media (max-width: 1330px) {\r\n  .sidebar {\r\n    margin: 15px;\r\n  }\r\n}\r\n\r\n@media (max-width: 1160px) {\r\n  .grid-container {\r\n    grid-template-columns: repeat(1, 1fr);\r\n    grid-template-rows: auto;\r\n  }\r\n\r\n  .map {\r\n    width: 100%;\r\n  }\r\n\r\n  .sidebar {\r\n    margin: 0px 0px 20px 0px;\r\n  }\r\n\r\n  .grid-1 {\r\n    display: flex;\r\n    justify-content: center;\r\n    margin-top: 14px;\r\n    /* align-items: center; */\r\n  }\r\n}\r\n", "",{"version":3,"sources":["webpack://./src/style.css"],"names":[],"mappings":"AAAA;EACE,4BAA4B;EAC5B,gBAAgB;EAChB,0HAA0H;AAC5H;;AAEA;EACE,4BAA4B;EAC5B,gBAAgB;EAChB,WAAW;AACb;;AAEA,eAAe;;AAEf;EACE,cAAc;EACd,yBAAyB;AAC3B;;AAEA;EACE,yBAAyB;AAC3B;;AAEA;EACE,cAAc;EACd,gBAAgB;AAClB;;AAEA;EACE,sBAAsB;AACxB;;AAEA;EACE,SAAS;EACT,UAAU;AACZ;;AAEA;EACE,qBAAqB;AACvB;;AAEA;EACE,WAAW;EACX,aAAa;AACf;;AAEA;EACE,aAAa;EACb,gCAAgC;EAChC,yBAAyB;AAC3B;;AAEA;EACE,gBAAgB;EAChB,mBAAmB;EACnB,gBAAgB;AAClB;;AAEA;EACE,iBAAiB;AACnB;;AAEA;EACE,YAAY;AACd;;AAEA;EACE,eAAe;EACf,wBAAwB;EACxB,uBAAuB;EACvB,kBAAkB;EAClB,eAAe;EACf,gCAAgC;AAClC;;AAEA;EACE,gCAAgC;EAChC,0BAA0B;AAC5B;;AAEA;;gCAEgC;;AAEhC,iBAAiB;AACjB;EACE,aAAa;AACf;;AAEA;EACE,aAAa;EACb,eAAe;EACf,WAAW;EACX,gCAAgC;EAChC,6BAA6B;EAC7B,4BAA4B;EAC5B,wBAAwB;EACxB,WAAW;;EAEX,SAAS;EACT,gBAAgB;EAChB,6BAA6B;EAC7B,aAAa;;EAEb,kBAAkB;EAClB,oBAAoB;AACtB;;AAEA;EACE,wBAAwB;EACxB,qBAAqB;EACrB,gBAAgB;EAChB,qBAAqB;;EAErB,cAAc;EACd,WAAW;EACX,gBAAgB;EAChB,YAAY;EACZ,WAAW;EACX,eAAe;EACf,iBAAiB;EACjB,eAAe;EACf,iBAAiB;EACjB,WAAW;EACX,yBAAyB;EACzB,sBAAsB;EACtB,yBAAyB;EACzB,sBAAsB;EACtB,kBAAkB;EAClB,0BAA0B;EAC1B;;aAEW;EACX,sCAAsC;AACxC;;AAEA;;wBAEwB;;AAExB;EACE,cAAc;EACd,kBAAkB;EAClB,kBAAkB;EAClB,mBAAmB;EACnB,eAAe;EACf,eAAe;EACf,yBAAyB;EACzB,sBAAsB;EACtB,qBAAqB;EACrB,iBAAiB;AACnB;;AAEA;EACE,kBAAkB;EAClB,UAAU;EACV,eAAe;EACf,SAAS;EACT,QAAQ;AACV;;AAEA;EACE,kBAAkB;EAClB,MAAM;EACN,OAAO;EACP,YAAY;EACZ,WAAW;EACX,sBAAsB;AACxB;;AAEA;EACE,sBAAsB;AACxB;;AAEA;EACE,yBAAyB;AAC3B;;AAEA;EACE,WAAW;EACX,kBAAkB;EAClB,aAAa;AACf;;AAEA;EACE,cAAc;AAChB;;AAEA;EACE,SAAS;EACT,QAAQ;EACR,UAAU;EACV,YAAY;EACZ,mBAAmB;EACnB,yBAAyB;EACzB,gCAAgC;EAChC,4BAA4B;EAC5B,wBAAwB;AAC1B;;AAEA;;oBAEoB;AACpB;EACE,qBAAqB;EACrB,gBAAgB;EAChB,kBAAkB;EAClB,mBAAmB;EACnB,sBAAsB;EACtB,yBAAyB;EACzB,sBAAsB;EACtB,qBAAqB;EACrB,iBAAiB;EACjB,6BAA6B;EAC7B,yBAAyB;EACzB,eAAe;EACf,gBAAgB;EAChB,sBAAsB;EACtB;gEAC8D;AAChE;;AAEA;EACE,cAAc;EACd,6BAA6B;EAC7B,sBAAsB;EACtB,qBAAqB;AACvB;AACA;EACE,WAAW;EACX,yBAAyB;EACzB,qBAAqB;AACvB;AACA;;EAEE,8CAA8C;AAChD;AACA;;EAEE,cAAc;EACd,6BAA6B;AAC/B;AACA;;;EAGE,WAAW;EACX,yBAAyB;EACzB,qBAAqB;AACvB;AACA;;;EAGE,8CAA8C;AAChD;;AAEA;;wCAEwC;AACxC;EACE;IACE,YAAY;EACd;AACF;;AAEA;EACE;IACE,qCAAqC;IACrC,wBAAwB;EAC1B;;EAEA;IACE,WAAW;EACb;;EAEA;IACE,wBAAwB;EAC1B;;EAEA;IACE,aAAa;IACb,uBAAuB;IACvB,gBAAgB;IAChB,yBAAyB;EAC3B;AACF","sourcesContent":["@font-face {\r\n  font-family: 'San Francisco';\r\n  font-weight: 400;\r\n  src: url('https://applesocial.s3.amazonaws.com/assets/styles/fonts/sanfrancisco/sanfranciscodisplay-regular-webfont.woff');\r\n}\r\n\r\nhtml {\r\n  font-family: 'San Francisco';\r\n  background: #fff;\r\n  color: #333;\r\n}\r\n\r\n/* Typography */\r\n\r\nh2 {\r\n  font-size: 2em;\r\n  margin: 16px 0px 14px 0px;\r\n}\r\n\r\nh3 {\r\n  margin: 30px 0px 20px 0px;\r\n}\r\n\r\nlabel span {\r\n  font-size: 1em;\r\n  font-weight: 501;\r\n}\r\n\r\n* {\r\n  box-sizing: border-box;\r\n}\r\n\r\nbody {\r\n  margin: 0;\r\n  padding: 0;\r\n}\r\n\r\na {\r\n  text-decoration: none;\r\n}\r\n\r\n.map {\r\n  width: 80vw;\r\n  height: 100vh;\r\n}\r\n\r\n.grid-container {\r\n  display: grid;\r\n  grid-template-columns: 20vw 80vw;\r\n  grid-template-rows: 100vh;\r\n}\r\n\r\n.grid-1 {\r\n  margin-top: 14px;\r\n  margin-bottom: 14px;\r\n  overflow-y: auto;\r\n}\r\n\r\n.sidebar {\r\n  margin-left: 30px;\r\n}\r\n\r\n.svg {\r\n  height: 20px;\r\n}\r\n\r\nbutton {\r\n  margin: 0px 3px;\r\n  padding: 5px 6px 3px 6px;\r\n  border: 0px solid black;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  box-shadow: 2px 2px 2px 2px #999;\r\n}\r\n\r\nbutton:active {\r\n  box-shadow: 1px 1px 1px 1px #666;\r\n  transform: translateY(1px);\r\n}\r\n\r\n/*===============================\r\n<!-- AFTER NODEJS INTEGRATION -->\r\n===============================*/\r\n\r\n/* For IE <= 11 */\r\nselect::-ms-expand {\r\n  display: none;\r\n}\r\n\r\n.selectdiv:after {\r\n  content: '<>';\r\n  font-size: 17px;\r\n  color: #333;\r\n  -webkit-transform: rotate(90deg);\r\n  -moz-transform: rotate(90deg);\r\n  -ms-transform: rotate(90deg);\r\n  transform: rotate(90deg);\r\n  right: 11px;\r\n\r\n  top: 18px;\r\n  padding: 0 0 2px;\r\n  border-bottom: 1px solid #999;\r\n  /*left line */\r\n\r\n  position: absolute;\r\n  pointer-events: none;\r\n}\r\n\r\n.selectdiv select {\r\n  -webkit-appearance: none;\r\n  -moz-appearance: none;\r\n  appearance: none;\r\n  /* Add some styling */\r\n\r\n  display: block;\r\n  width: 100%;\r\n  max-width: 200px;\r\n  height: 35px;\r\n  float: left;\r\n  margin: 5px 0px;\r\n  padding: 0px 24px;\r\n  font-size: 16px;\r\n  line-height: 1.75;\r\n  color: #333;\r\n  background-color: #ffffff;\r\n  background-image: none;\r\n  border: 1px solid #cccccc;\r\n  -ms-word-break: normal;\r\n  word-break: normal;\r\n  /* Add dropdown SVG icon */\r\n  background: rgb(255, 255, 255)\r\n    url(\"data:image/svg+xml;utf8,<svg viewBox='0 0 140 140' width='24' height='24' xmlns='http://www.w3.org/2000/svg'><g><path d='m121.3,34.6c-1.6-1.6-4.2-1.6-5.8,0l-51,51.1-51.1-51.1c-1.6-1.6-4.2-1.6-5.8,0-1.6,1.6-1.6,4.2 0,5.8l53.9,53.9c0.8,0.8 1.8,1.2 2.9,1.2 1,0 2.1-0.4 2.9-1.2l53.9-53.9c1.7-1.6 1.7-4.2 0.1-5.8z' fill='black'/></g></svg>\")\r\n    no-repeat;\r\n  background-position: right 5px top 50%;\r\n}\r\n\r\n/*=======================\r\n<!-- Checkbox Styling -->\r\n=======================*/\r\n\r\n.checkbox-container {\r\n  display: block;\r\n  position: relative;\r\n  padding-left: 35px;\r\n  margin-bottom: 12px;\r\n  cursor: pointer;\r\n  font-size: 18px;\r\n  -webkit-user-select: none;\r\n  -moz-user-select: none;\r\n  -ms-user-select: none;\r\n  user-select: none;\r\n}\r\n\r\n.checkbox-container input {\r\n  position: absolute;\r\n  opacity: 0;\r\n  cursor: pointer;\r\n  height: 0;\r\n  width: 0;\r\n}\r\n\r\n.checkmark {\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  height: 25px;\r\n  width: 25px;\r\n  background-color: #eee;\r\n}\r\n\r\n.checkbox-container:hover input ~ .checkmark {\r\n  background-color: #ccc;\r\n}\r\n\r\n.checkbox-container input:checked ~ .checkmark {\r\n  background-color: #2196f3;\r\n}\r\n\r\n.checkmark:after {\r\n  content: '';\r\n  position: absolute;\r\n  display: none;\r\n}\r\n\r\n.checkbox-container input:checked ~ .checkmark:after {\r\n  display: block;\r\n}\r\n\r\n.checkbox-container .checkmark:after {\r\n  left: 9px;\r\n  top: 5px;\r\n  width: 5px;\r\n  height: 10px;\r\n  border: solid white;\r\n  border-width: 0 3px 3px 0;\r\n  -webkit-transform: rotate(45deg);\r\n  -ms-transform: rotate(45deg);\r\n  transform: rotate(45deg);\r\n}\r\n\r\n/*===================\r\n<!-- LINK STYLING --> \r\n===================*/\r\n.btn {\r\n  display: inline-block;\r\n  font-weight: 400;\r\n  text-align: center;\r\n  white-space: nowrap;\r\n  vertical-align: middle;\r\n  -webkit-user-select: none;\r\n  -moz-user-select: none;\r\n  -ms-user-select: none;\r\n  user-select: none;\r\n  border: 1px solid transparent;\r\n  padding: 0.375rem 0.75rem;\r\n  font-size: 1rem;\r\n  line-height: 1.5;\r\n  border-radius: 0.25rem;\r\n  transition: color 0.15s ease-in-out, background-color 0.15s ease-in-out,\r\n    border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;\r\n}\r\n\r\n.btn-outline-dark {\r\n  color: #343a40;\r\n  background-color: transparent;\r\n  background-image: none;\r\n  border-color: #343a40;\r\n}\r\n.btn-outline-dark:hover {\r\n  color: #fff;\r\n  background-color: #343a40;\r\n  border-color: #343a40;\r\n}\r\n.btn-outline-dark.focus,\r\n.btn-outline-dark:focus {\r\n  box-shadow: 0 0 0 0.2rem rgba(52, 58, 64, 0.5);\r\n}\r\n.btn-outline-dark.disabled,\r\n.btn-outline-dark:disabled {\r\n  color: #343a40;\r\n  background-color: transparent;\r\n}\r\n.btn-outline-dark:not(:disabled):not(.disabled).active,\r\n.btn-outline-dark:not(:disabled):not(.disabled):active,\r\n.show > .btn-outline-dark.dropdown-toggle {\r\n  color: #fff;\r\n  background-color: #343a40;\r\n  border-color: #343a40;\r\n}\r\n.btn-outline-dark:not(:disabled):not(.disabled).active:focus,\r\n.btn-outline-dark:not(:disabled):not(.disabled):active:focus,\r\n.show > .btn-outline-dark.dropdown-toggle:focus {\r\n  box-shadow: 0 0 0 0.2rem rgba(52, 58, 64, 0.5);\r\n}\r\n\r\n/*=======================================\r\n<!-- Media queries for responsiveness -->\r\n=======================================*/\r\n@media (max-width: 1330px) {\r\n  .sidebar {\r\n    margin: 15px;\r\n  }\r\n}\r\n\r\n@media (max-width: 1160px) {\r\n  .grid-container {\r\n    grid-template-columns: repeat(1, 1fr);\r\n    grid-template-rows: auto;\r\n  }\r\n\r\n  .map {\r\n    width: 100%;\r\n  }\r\n\r\n  .sidebar {\r\n    margin: 0px 0px 20px 0px;\r\n  }\r\n\r\n  .grid-1 {\r\n    display: flex;\r\n    justify-content: center;\r\n    margin-top: 14px;\r\n    /* align-items: center; */\r\n  }\r\n}\r\n"],"sourceRoot":""}]);
// Exports
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);


/***/ }),

/***/ "./node_modules/css-loader/dist/runtime/api.js":
/*!*****************************************************!*\
  !*** ./node_modules/css-loader/dist/runtime/api.js ***!
  \*****************************************************/
/***/ ((module) => {

"use strict";


/*
  MIT License http://www.opensource.org/licenses/mit-license.php
  Author Tobias Koppers @sokra
*/
// css base code, injected by the css-loader
// eslint-disable-next-line func-names
module.exports = function (cssWithMappingToString) {
  var list = []; // return the list of modules as css string

  list.toString = function toString() {
    return this.map(function (item) {
      var content = cssWithMappingToString(item);

      if (item[2]) {
        return "@media ".concat(item[2], " {").concat(content, "}");
      }

      return content;
    }).join("");
  }; // import a list of modules into the list
  // eslint-disable-next-line func-names


  list.i = function (modules, mediaQuery, dedupe) {
    if (typeof modules === "string") {
      // eslint-disable-next-line no-param-reassign
      modules = [[null, modules, ""]];
    }

    var alreadyImportedModules = {};

    if (dedupe) {
      for (var i = 0; i < this.length; i++) {
        // eslint-disable-next-line prefer-destructuring
        var id = this[i][0];

        if (id != null) {
          alreadyImportedModules[id] = true;
        }
      }
    }

    for (var _i = 0; _i < modules.length; _i++) {
      var item = [].concat(modules[_i]);

      if (dedupe && alreadyImportedModules[item[0]]) {
        // eslint-disable-next-line no-continue
        continue;
      }

      if (mediaQuery) {
        if (!item[2]) {
          item[2] = mediaQuery;
        } else {
          item[2] = "".concat(mediaQuery, " and ").concat(item[2]);
        }
      }

      list.push(item);
    }
  };

  return list;
};

/***/ }),

/***/ "./node_modules/css-loader/dist/runtime/cssWithMappingToString.js":
/*!************************************************************************!*\
  !*** ./node_modules/css-loader/dist/runtime/cssWithMappingToString.js ***!
  \************************************************************************/
/***/ ((module) => {

"use strict";


function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { if (typeof Symbol === "undefined" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

module.exports = function cssWithMappingToString(item) {
  var _item = _slicedToArray(item, 4),
      content = _item[1],
      cssMapping = _item[3];

  if (typeof btoa === "function") {
    // eslint-disable-next-line no-undef
    var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(cssMapping))));
    var data = "sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(base64);
    var sourceMapping = "/*# ".concat(data, " */");
    var sourceURLs = cssMapping.sources.map(function (source) {
      return "/*# sourceURL=".concat(cssMapping.sourceRoot || "").concat(source, " */");
    });
    return [content].concat(sourceURLs).concat([sourceMapping]).join("\n");
  }

  return [content].join("\n");
};

/***/ }),

/***/ "./node_modules/lerp/index.js":
/*!************************************!*\
  !*** ./node_modules/lerp/index.js ***!
  \************************************/
/***/ ((module) => {

function lerp(v0, v1, t) {
    return v0*(1-t)+v1*t
}
module.exports = lerp

/***/ }),

/***/ "./node_modules/mgrs/mgrs.js":
/*!***********************************!*\
  !*** ./node_modules/mgrs/mgrs.js ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__),
/* harmony export */   "forward": () => (/* binding */ forward),
/* harmony export */   "inverse": () => (/* binding */ inverse),
/* harmony export */   "toPoint": () => (/* binding */ toPoint)
/* harmony export */ });



/**
 * UTM zones are grouped, and assigned to one of a group of 6
 * sets.
 *
 * {int} @private
 */
var NUM_100K_SETS = 6;

/**
 * The column letters (for easting) of the lower left value, per
 * set.
 *
 * {string} @private
 */
var SET_ORIGIN_COLUMN_LETTERS = 'AJSAJS';

/**
 * The row letters (for northing) of the lower left value, per
 * set.
 *
 * {string} @private
 */
var SET_ORIGIN_ROW_LETTERS = 'AFAFAF';

var A = 65; // A
var I = 73; // I
var O = 79; // O
var V = 86; // V
var Z = 90; // Z
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
  forward: forward,
  inverse: inverse,
  toPoint: toPoint
});
/**
 * Conversion of lat/lon to MGRS.
 *
 * @param {object} ll Object literal with lat and lon properties on a
 *     WGS84 ellipsoid.
 * @param {int} accuracy Accuracy in digits (5 for 1 m, 4 for 10 m, 3 for
 *      100 m, 2 for 1000 m or 1 for 10000 m). Optional, default is 5.
 * @return {string} the MGRS string for the given location and accuracy.
 */
function forward(ll, accuracy) {
  accuracy = accuracy || 5; // default accuracy 1m
  return encode(LLtoUTM({
    lat: ll[1],
    lon: ll[0]
  }), accuracy);
};

/**
 * Conversion of MGRS to lat/lon.
 *
 * @param {string} mgrs MGRS string.
 * @return {array} An array with left (longitude), bottom (latitude), right
 *     (longitude) and top (latitude) values in WGS84, representing the
 *     bounding box for the provided MGRS reference.
 */
function inverse(mgrs) {
  var bbox = UTMtoLL(decode(mgrs.toUpperCase()));
  if (bbox.lat && bbox.lon) {
    return [bbox.lon, bbox.lat, bbox.lon, bbox.lat];
  }
  return [bbox.left, bbox.bottom, bbox.right, bbox.top];
};

function toPoint(mgrs) {
  var bbox = UTMtoLL(decode(mgrs.toUpperCase()));
  if (bbox.lat && bbox.lon) {
    return [bbox.lon, bbox.lat];
  }
  return [(bbox.left + bbox.right) / 2, (bbox.top + bbox.bottom) / 2];
};
/**
 * Conversion from degrees to radians.
 *
 * @private
 * @param {number} deg the angle in degrees.
 * @return {number} the angle in radians.
 */
function degToRad(deg) {
  return (deg * (Math.PI / 180.0));
}

/**
 * Conversion from radians to degrees.
 *
 * @private
 * @param {number} rad the angle in radians.
 * @return {number} the angle in degrees.
 */
function radToDeg(rad) {
  return (180.0 * (rad / Math.PI));
}

/**
 * Converts a set of Longitude and Latitude co-ordinates to UTM
 * using the WGS84 ellipsoid.
 *
 * @private
 * @param {object} ll Object literal with lat and lon properties
 *     representing the WGS84 coordinate to be converted.
 * @return {object} Object literal containing the UTM value with easting,
 *     northing, zoneNumber and zoneLetter properties, and an optional
 *     accuracy property in digits. Returns null if the conversion failed.
 */
function LLtoUTM(ll) {
  var Lat = ll.lat;
  var Long = ll.lon;
  var a = 6378137.0; //ellip.radius;
  var eccSquared = 0.00669438; //ellip.eccsq;
  var k0 = 0.9996;
  var LongOrigin;
  var eccPrimeSquared;
  var N, T, C, A, M;
  var LatRad = degToRad(Lat);
  var LongRad = degToRad(Long);
  var LongOriginRad;
  var ZoneNumber;
  // (int)
  ZoneNumber = Math.floor((Long + 180) / 6) + 1;

  //Make sure the longitude 180.00 is in Zone 60
  if (Long === 180) {
    ZoneNumber = 60;
  }

  // Special zone for Norway
  if (Lat >= 56.0 && Lat < 64.0 && Long >= 3.0 && Long < 12.0) {
    ZoneNumber = 32;
  }

  // Special zones for Svalbard
  if (Lat >= 72.0 && Lat < 84.0) {
    if (Long >= 0.0 && Long < 9.0) {
      ZoneNumber = 31;
    }
    else if (Long >= 9.0 && Long < 21.0) {
      ZoneNumber = 33;
    }
    else if (Long >= 21.0 && Long < 33.0) {
      ZoneNumber = 35;
    }
    else if (Long >= 33.0 && Long < 42.0) {
      ZoneNumber = 37;
    }
  }

  LongOrigin = (ZoneNumber - 1) * 6 - 180 + 3; //+3 puts origin
  // in middle of
  // zone
  LongOriginRad = degToRad(LongOrigin);

  eccPrimeSquared = (eccSquared) / (1 - eccSquared);

  N = a / Math.sqrt(1 - eccSquared * Math.sin(LatRad) * Math.sin(LatRad));
  T = Math.tan(LatRad) * Math.tan(LatRad);
  C = eccPrimeSquared * Math.cos(LatRad) * Math.cos(LatRad);
  A = Math.cos(LatRad) * (LongRad - LongOriginRad);

  M = a * ((1 - eccSquared / 4 - 3 * eccSquared * eccSquared / 64 - 5 * eccSquared * eccSquared * eccSquared / 256) * LatRad - (3 * eccSquared / 8 + 3 * eccSquared * eccSquared / 32 + 45 * eccSquared * eccSquared * eccSquared / 1024) * Math.sin(2 * LatRad) + (15 * eccSquared * eccSquared / 256 + 45 * eccSquared * eccSquared * eccSquared / 1024) * Math.sin(4 * LatRad) - (35 * eccSquared * eccSquared * eccSquared / 3072) * Math.sin(6 * LatRad));

  var UTMEasting = (k0 * N * (A + (1 - T + C) * A * A * A / 6.0 + (5 - 18 * T + T * T + 72 * C - 58 * eccPrimeSquared) * A * A * A * A * A / 120.0) + 500000.0);

  var UTMNorthing = (k0 * (M + N * Math.tan(LatRad) * (A * A / 2 + (5 - T + 9 * C + 4 * C * C) * A * A * A * A / 24.0 + (61 - 58 * T + T * T + 600 * C - 330 * eccPrimeSquared) * A * A * A * A * A * A / 720.0)));
  if (Lat < 0.0) {
    UTMNorthing += 10000000.0; //10000000 meter offset for
    // southern hemisphere
  }

  return {
    northing: Math.round(UTMNorthing),
    easting: Math.round(UTMEasting),
    zoneNumber: ZoneNumber,
    zoneLetter: getLetterDesignator(Lat)
  };
}

/**
 * Converts UTM coords to lat/long, using the WGS84 ellipsoid. This is a convenience
 * class where the Zone can be specified as a single string eg."60N" which
 * is then broken down into the ZoneNumber and ZoneLetter.
 *
 * @private
 * @param {object} utm An object literal with northing, easting, zoneNumber
 *     and zoneLetter properties. If an optional accuracy property is
 *     provided (in meters), a bounding box will be returned instead of
 *     latitude and longitude.
 * @return {object} An object literal containing either lat and lon values
 *     (if no accuracy was provided), or top, right, bottom and left values
 *     for the bounding box calculated according to the provided accuracy.
 *     Returns null if the conversion failed.
 */
function UTMtoLL(utm) {

  var UTMNorthing = utm.northing;
  var UTMEasting = utm.easting;
  var zoneLetter = utm.zoneLetter;
  var zoneNumber = utm.zoneNumber;
  // check the ZoneNummber is valid
  if (zoneNumber < 0 || zoneNumber > 60) {
    return null;
  }

  var k0 = 0.9996;
  var a = 6378137.0; //ellip.radius;
  var eccSquared = 0.00669438; //ellip.eccsq;
  var eccPrimeSquared;
  var e1 = (1 - Math.sqrt(1 - eccSquared)) / (1 + Math.sqrt(1 - eccSquared));
  var N1, T1, C1, R1, D, M;
  var LongOrigin;
  var mu, phi1Rad;

  // remove 500,000 meter offset for longitude
  var x = UTMEasting - 500000.0;
  var y = UTMNorthing;

  // We must know somehow if we are in the Northern or Southern
  // hemisphere, this is the only time we use the letter So even
  // if the Zone letter isn't exactly correct it should indicate
  // the hemisphere correctly
  if (zoneLetter < 'N') {
    y -= 10000000.0; // remove 10,000,000 meter offset used
    // for southern hemisphere
  }

  // There are 60 zones with zone 1 being at West -180 to -174
  LongOrigin = (zoneNumber - 1) * 6 - 180 + 3; // +3 puts origin
  // in middle of
  // zone

  eccPrimeSquared = (eccSquared) / (1 - eccSquared);

  M = y / k0;
  mu = M / (a * (1 - eccSquared / 4 - 3 * eccSquared * eccSquared / 64 - 5 * eccSquared * eccSquared * eccSquared / 256));

  phi1Rad = mu + (3 * e1 / 2 - 27 * e1 * e1 * e1 / 32) * Math.sin(2 * mu) + (21 * e1 * e1 / 16 - 55 * e1 * e1 * e1 * e1 / 32) * Math.sin(4 * mu) + (151 * e1 * e1 * e1 / 96) * Math.sin(6 * mu);
  // double phi1 = ProjMath.radToDeg(phi1Rad);

  N1 = a / Math.sqrt(1 - eccSquared * Math.sin(phi1Rad) * Math.sin(phi1Rad));
  T1 = Math.tan(phi1Rad) * Math.tan(phi1Rad);
  C1 = eccPrimeSquared * Math.cos(phi1Rad) * Math.cos(phi1Rad);
  R1 = a * (1 - eccSquared) / Math.pow(1 - eccSquared * Math.sin(phi1Rad) * Math.sin(phi1Rad), 1.5);
  D = x / (N1 * k0);

  var lat = phi1Rad - (N1 * Math.tan(phi1Rad) / R1) * (D * D / 2 - (5 + 3 * T1 + 10 * C1 - 4 * C1 * C1 - 9 * eccPrimeSquared) * D * D * D * D / 24 + (61 + 90 * T1 + 298 * C1 + 45 * T1 * T1 - 252 * eccPrimeSquared - 3 * C1 * C1) * D * D * D * D * D * D / 720);
  lat = radToDeg(lat);

  var lon = (D - (1 + 2 * T1 + C1) * D * D * D / 6 + (5 - 2 * C1 + 28 * T1 - 3 * C1 * C1 + 8 * eccPrimeSquared + 24 * T1 * T1) * D * D * D * D * D / 120) / Math.cos(phi1Rad);
  lon = LongOrigin + radToDeg(lon);

  var result;
  if (utm.accuracy) {
    var topRight = UTMtoLL({
      northing: utm.northing + utm.accuracy,
      easting: utm.easting + utm.accuracy,
      zoneLetter: utm.zoneLetter,
      zoneNumber: utm.zoneNumber
    });
    result = {
      top: topRight.lat,
      right: topRight.lon,
      bottom: lat,
      left: lon
    };
  }
  else {
    result = {
      lat: lat,
      lon: lon
    };
  }
  return result;
}

/**
 * Calculates the MGRS letter designator for the given latitude.
 *
 * @private
 * @param {number} lat The latitude in WGS84 to get the letter designator
 *     for.
 * @return {char} The letter designator.
 */
function getLetterDesignator(lat) {
  //This is here as an error flag to show that the Latitude is
  //outside MGRS limits
  var LetterDesignator = 'Z';

  if ((84 >= lat) && (lat >= 72)) {
    LetterDesignator = 'X';
  }
  else if ((72 > lat) && (lat >= 64)) {
    LetterDesignator = 'W';
  }
  else if ((64 > lat) && (lat >= 56)) {
    LetterDesignator = 'V';
  }
  else if ((56 > lat) && (lat >= 48)) {
    LetterDesignator = 'U';
  }
  else if ((48 > lat) && (lat >= 40)) {
    LetterDesignator = 'T';
  }
  else if ((40 > lat) && (lat >= 32)) {
    LetterDesignator = 'S';
  }
  else if ((32 > lat) && (lat >= 24)) {
    LetterDesignator = 'R';
  }
  else if ((24 > lat) && (lat >= 16)) {
    LetterDesignator = 'Q';
  }
  else if ((16 > lat) && (lat >= 8)) {
    LetterDesignator = 'P';
  }
  else if ((8 > lat) && (lat >= 0)) {
    LetterDesignator = 'N';
  }
  else if ((0 > lat) && (lat >= -8)) {
    LetterDesignator = 'M';
  }
  else if ((-8 > lat) && (lat >= -16)) {
    LetterDesignator = 'L';
  }
  else if ((-16 > lat) && (lat >= -24)) {
    LetterDesignator = 'K';
  }
  else if ((-24 > lat) && (lat >= -32)) {
    LetterDesignator = 'J';
  }
  else if ((-32 > lat) && (lat >= -40)) {
    LetterDesignator = 'H';
  }
  else if ((-40 > lat) && (lat >= -48)) {
    LetterDesignator = 'G';
  }
  else if ((-48 > lat) && (lat >= -56)) {
    LetterDesignator = 'F';
  }
  else if ((-56 > lat) && (lat >= -64)) {
    LetterDesignator = 'E';
  }
  else if ((-64 > lat) && (lat >= -72)) {
    LetterDesignator = 'D';
  }
  else if ((-72 > lat) && (lat >= -80)) {
    LetterDesignator = 'C';
  }
  return LetterDesignator;
}

/**
 * Encodes a UTM location as MGRS string.
 *
 * @private
 * @param {object} utm An object literal with easting, northing,
 *     zoneLetter, zoneNumber
 * @param {number} accuracy Accuracy in digits (1-5).
 * @return {string} MGRS string for the given UTM location.
 */
function encode(utm, accuracy) {
  // prepend with leading zeroes
  var seasting = "00000" + utm.easting,
    snorthing = "00000" + utm.northing;

  return utm.zoneNumber + utm.zoneLetter + get100kID(utm.easting, utm.northing, utm.zoneNumber) + seasting.substr(seasting.length - 5, accuracy) + snorthing.substr(snorthing.length - 5, accuracy);
}

/**
 * Get the two letter 100k designator for a given UTM easting,
 * northing and zone number value.
 *
 * @private
 * @param {number} easting
 * @param {number} northing
 * @param {number} zoneNumber
 * @return the two letter 100k designator for the given UTM location.
 */
function get100kID(easting, northing, zoneNumber) {
  var setParm = get100kSetForZone(zoneNumber);
  var setColumn = Math.floor(easting / 100000);
  var setRow = Math.floor(northing / 100000) % 20;
  return getLetter100kID(setColumn, setRow, setParm);
}

/**
 * Given a UTM zone number, figure out the MGRS 100K set it is in.
 *
 * @private
 * @param {number} i An UTM zone number.
 * @return {number} the 100k set the UTM zone is in.
 */
function get100kSetForZone(i) {
  var setParm = i % NUM_100K_SETS;
  if (setParm === 0) {
    setParm = NUM_100K_SETS;
  }

  return setParm;
}

/**
 * Get the two-letter MGRS 100k designator given information
 * translated from the UTM northing, easting and zone number.
 *
 * @private
 * @param {number} column the column index as it relates to the MGRS
 *        100k set spreadsheet, created from the UTM easting.
 *        Values are 1-8.
 * @param {number} row the row index as it relates to the MGRS 100k set
 *        spreadsheet, created from the UTM northing value. Values
 *        are from 0-19.
 * @param {number} parm the set block, as it relates to the MGRS 100k set
 *        spreadsheet, created from the UTM zone. Values are from
 *        1-60.
 * @return two letter MGRS 100k code.
 */
function getLetter100kID(column, row, parm) {
  // colOrigin and rowOrigin are the letters at the origin of the set
  var index = parm - 1;
  var colOrigin = SET_ORIGIN_COLUMN_LETTERS.charCodeAt(index);
  var rowOrigin = SET_ORIGIN_ROW_LETTERS.charCodeAt(index);

  // colInt and rowInt are the letters to build to return
  var colInt = colOrigin + column - 1;
  var rowInt = rowOrigin + row;
  var rollover = false;

  if (colInt > Z) {
    colInt = colInt - Z + A - 1;
    rollover = true;
  }

  if (colInt === I || (colOrigin < I && colInt > I) || ((colInt > I || colOrigin < I) && rollover)) {
    colInt++;
  }

  if (colInt === O || (colOrigin < O && colInt > O) || ((colInt > O || colOrigin < O) && rollover)) {
    colInt++;

    if (colInt === I) {
      colInt++;
    }
  }

  if (colInt > Z) {
    colInt = colInt - Z + A - 1;
  }

  if (rowInt > V) {
    rowInt = rowInt - V + A - 1;
    rollover = true;
  }
  else {
    rollover = false;
  }

  if (((rowInt === I) || ((rowOrigin < I) && (rowInt > I))) || (((rowInt > I) || (rowOrigin < I)) && rollover)) {
    rowInt++;
  }

  if (((rowInt === O) || ((rowOrigin < O) && (rowInt > O))) || (((rowInt > O) || (rowOrigin < O)) && rollover)) {
    rowInt++;

    if (rowInt === I) {
      rowInt++;
    }
  }

  if (rowInt > V) {
    rowInt = rowInt - V + A - 1;
  }

  var twoLetter = String.fromCharCode(colInt) + String.fromCharCode(rowInt);
  return twoLetter;
}

/**
 * Decode the UTM parameters from a MGRS string.
 *
 * @private
 * @param {string} mgrsString an UPPERCASE coordinate string is expected.
 * @return {object} An object literal with easting, northing, zoneLetter,
 *     zoneNumber and accuracy (in meters) properties.
 */
function decode(mgrsString) {

  if (mgrsString && mgrsString.length === 0) {
    throw ("MGRSPoint coverting from nothing");
  }

  var length = mgrsString.length;

  var hunK = null;
  var sb = "";
  var testChar;
  var i = 0;

  // get Zone number
  while (!(/[A-Z]/).test(testChar = mgrsString.charAt(i))) {
    if (i >= 2) {
      throw ("MGRSPoint bad conversion from: " + mgrsString);
    }
    sb += testChar;
    i++;
  }

  var zoneNumber = parseInt(sb, 10);

  if (i === 0 || i + 3 > length) {
    // A good MGRS string has to be 4-5 digits long,
    // ##AAA/#AAA at least.
    throw ("MGRSPoint bad conversion from: " + mgrsString);
  }

  var zoneLetter = mgrsString.charAt(i++);

  // Should we check the zone letter here? Why not.
  if (zoneLetter <= 'A' || zoneLetter === 'B' || zoneLetter === 'Y' || zoneLetter >= 'Z' || zoneLetter === 'I' || zoneLetter === 'O') {
    throw ("MGRSPoint zone letter " + zoneLetter + " not handled: " + mgrsString);
  }

  hunK = mgrsString.substring(i, i += 2);

  var set = get100kSetForZone(zoneNumber);

  var east100k = getEastingFromChar(hunK.charAt(0), set);
  var north100k = getNorthingFromChar(hunK.charAt(1), set);

  // We have a bug where the northing may be 2000000 too low.
  // How
  // do we know when to roll over?

  while (north100k < getMinNorthing(zoneLetter)) {
    north100k += 2000000;
  }

  // calculate the char index for easting/northing separator
  var remainder = length - i;

  if (remainder % 2 !== 0) {
    throw ("MGRSPoint has to have an even number \nof digits after the zone letter and two 100km letters - front \nhalf for easting meters, second half for \nnorthing meters" + mgrsString);
  }

  var sep = remainder / 2;

  var sepEasting = 0.0;
  var sepNorthing = 0.0;
  var accuracyBonus, sepEastingString, sepNorthingString, easting, northing;
  if (sep > 0) {
    accuracyBonus = 100000.0 / Math.pow(10, sep);
    sepEastingString = mgrsString.substring(i, i + sep);
    sepEasting = parseFloat(sepEastingString) * accuracyBonus;
    sepNorthingString = mgrsString.substring(i + sep);
    sepNorthing = parseFloat(sepNorthingString) * accuracyBonus;
  }

  easting = sepEasting + east100k;
  northing = sepNorthing + north100k;

  return {
    easting: easting,
    northing: northing,
    zoneLetter: zoneLetter,
    zoneNumber: zoneNumber,
    accuracy: accuracyBonus
  };
}

/**
 * Given the first letter from a two-letter MGRS 100k zone, and given the
 * MGRS table set for the zone number, figure out the easting value that
 * should be added to the other, secondary easting value.
 *
 * @private
 * @param {char} e The first letter from a two-letter MGRS 100´k zone.
 * @param {number} set The MGRS table set for the zone number.
 * @return {number} The easting value for the given letter and set.
 */
function getEastingFromChar(e, set) {
  // colOrigin is the letter at the origin of the set for the
  // column
  var curCol = SET_ORIGIN_COLUMN_LETTERS.charCodeAt(set - 1);
  var eastingValue = 100000.0;
  var rewindMarker = false;

  while (curCol !== e.charCodeAt(0)) {
    curCol++;
    if (curCol === I) {
      curCol++;
    }
    if (curCol === O) {
      curCol++;
    }
    if (curCol > Z) {
      if (rewindMarker) {
        throw ("Bad character: " + e);
      }
      curCol = A;
      rewindMarker = true;
    }
    eastingValue += 100000.0;
  }

  return eastingValue;
}

/**
 * Given the second letter from a two-letter MGRS 100k zone, and given the
 * MGRS table set for the zone number, figure out the northing value that
 * should be added to the other, secondary northing value. You have to
 * remember that Northings are determined from the equator, and the vertical
 * cycle of letters mean a 2000000 additional northing meters. This happens
 * approx. every 18 degrees of latitude. This method does *NOT* count any
 * additional northings. You have to figure out how many 2000000 meters need
 * to be added for the zone letter of the MGRS coordinate.
 *
 * @private
 * @param {char} n Second letter of the MGRS 100k zone
 * @param {number} set The MGRS table set number, which is dependent on the
 *     UTM zone number.
 * @return {number} The northing value for the given letter and set.
 */
function getNorthingFromChar(n, set) {

  if (n > 'V') {
    throw ("MGRSPoint given invalid Northing " + n);
  }

  // rowOrigin is the letter at the origin of the set for the
  // column
  var curRow = SET_ORIGIN_ROW_LETTERS.charCodeAt(set - 1);
  var northingValue = 0.0;
  var rewindMarker = false;

  while (curRow !== n.charCodeAt(0)) {
    curRow++;
    if (curRow === I) {
      curRow++;
    }
    if (curRow === O) {
      curRow++;
    }
    // fixing a bug making whole application hang in this loop
    // when 'n' is a wrong character
    if (curRow > V) {
      if (rewindMarker) { // making sure that this loop ends
        throw ("Bad character: " + n);
      }
      curRow = A;
      rewindMarker = true;
    }
    northingValue += 100000.0;
  }

  return northingValue;
}

/**
 * The function getMinNorthing returns the minimum northing value of a MGRS
 * zone.
 *
 * Ported from Geotrans' c Lattitude_Band_Value structure table.
 *
 * @private
 * @param {char} zoneLetter The MGRS zone to get the min northing for.
 * @return {number}
 */
function getMinNorthing(zoneLetter) {
  var northing;
  switch (zoneLetter) {
  case 'C':
    northing = 1100000.0;
    break;
  case 'D':
    northing = 2000000.0;
    break;
  case 'E':
    northing = 2800000.0;
    break;
  case 'F':
    northing = 3700000.0;
    break;
  case 'G':
    northing = 4600000.0;
    break;
  case 'H':
    northing = 5500000.0;
    break;
  case 'J':
    northing = 6400000.0;
    break;
  case 'K':
    northing = 7300000.0;
    break;
  case 'L':
    northing = 8200000.0;
    break;
  case 'M':
    northing = 9100000.0;
    break;
  case 'N':
    northing = 0.0;
    break;
  case 'P':
    northing = 800000.0;
    break;
  case 'Q':
    northing = 1700000.0;
    break;
  case 'R':
    northing = 2600000.0;
    break;
  case 'S':
    northing = 3500000.0;
    break;
  case 'T':
    northing = 4400000.0;
    break;
  case 'U':
    northing = 5300000.0;
    break;
  case 'V':
    northing = 6200000.0;
    break;
  case 'W':
    northing = 7000000.0;
    break;
  case 'X':
    northing = 7900000.0;
    break;
  default:
    northing = -1.0;
  }
  if (northing >= 0.0) {
    return northing;
  }
  else {
    throw ("Invalid zone letter: " + zoneLetter);
  }

}


/***/ }),

/***/ "./node_modules/ol/AssertionError.js":
/*!*******************************************!*\
  !*** ./node_modules/ol/AssertionError.js ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _util_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util.js */ "./node_modules/ol/util.js");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
/**
 * @module ol/AssertionError
 */

/**
 * Error object thrown when an assertion failed. This is an ECMA-262 Error,
 * extended with a `code` property.
 * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error.
 */
var AssertionError = /** @class */ (function (_super) {
    __extends(AssertionError, _super);
    /**
     * @param {number} code Error code.
     */
    function AssertionError(code) {
        var _this = this;
        var path = _util_js__WEBPACK_IMPORTED_MODULE_0__.VERSION === 'latest' ? _util_js__WEBPACK_IMPORTED_MODULE_0__.VERSION : 'v' + _util_js__WEBPACK_IMPORTED_MODULE_0__.VERSION.split('-')[0];
        var message = 'Assertion failed. See https://openlayers.org/en/' +
            path +
            '/doc/errors/#' +
            code +
            ' for details.';
        _this = _super.call(this, message) || this;
        /**
         * Error code. The meaning of the code can be found on
         * https://openlayers.org/en/latest/doc/errors/ (replace `latest` with
         * the version found in the OpenLayers script's header comment if a version
         * other than the latest is used).
         * @type {number}
         * @api
         */
        _this.code = code;
        /**
         * @type {string}
         */
        _this.name = 'AssertionError';
        // Re-assign message, see https://github.com/Rich-Harris/buble/issues/40
        _this.message = message;
        return _this;
    }
    return AssertionError;
}(Error));
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (AssertionError);
//# sourceMappingURL=AssertionError.js.map

/***/ }),

/***/ "./node_modules/ol/Collection.js":
/*!***************************************!*\
  !*** ./node_modules/ol/Collection.js ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "CollectionEvent": () => (/* binding */ CollectionEvent),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _AssertionError_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./AssertionError.js */ "./node_modules/ol/AssertionError.js");
/* harmony import */ var _Object_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Object.js */ "./node_modules/ol/Object.js");
/* harmony import */ var _CollectionEventType_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./CollectionEventType.js */ "./node_modules/ol/CollectionEventType.js");
/* harmony import */ var _events_Event_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./events/Event.js */ "./node_modules/ol/events/Event.js");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
/**
 * @module ol/Collection
 */




/**
 * @enum {string}
 * @private
 */
var Property = {
    LENGTH: 'length',
};
/**
 * @classdesc
 * Events emitted by {@link module:ol/Collection~Collection} instances are instances of this
 * type.
 */
var CollectionEvent = /** @class */ (function (_super) {
    __extends(CollectionEvent, _super);
    /**
     * @param {import("./CollectionEventType.js").default} type Type.
     * @param {*=} opt_element Element.
     * @param {number=} opt_index The index of the added or removed element.
     */
    function CollectionEvent(type, opt_element, opt_index) {
        var _this = _super.call(this, type) || this;
        /**
         * The element that is added to or removed from the collection.
         * @type {*}
         * @api
         */
        _this.element = opt_element;
        /**
         * The index of the added or removed element.
         * @type {number}
         * @api
         */
        _this.index = opt_index;
        return _this;
    }
    return CollectionEvent;
}(_events_Event_js__WEBPACK_IMPORTED_MODULE_0__.default));

/**
 * @typedef {Object} Options
 * @property {boolean} [unique=false] Disallow the same item from being added to
 * the collection twice.
 */
/**
 * @classdesc
 * An expanded version of standard JS Array, adding convenience methods for
 * manipulation. Add and remove changes to the Collection trigger a Collection
 * event. Note that this does not cover changes to the objects _within_ the
 * Collection; they trigger events on the appropriate object, not on the
 * Collection as a whole.
 *
 * @fires CollectionEvent
 *
 * @template T
 * @api
 */
var Collection = /** @class */ (function (_super) {
    __extends(Collection, _super);
    /**
     * @param {Array<T>=} opt_array Array.
     * @param {Options=} opt_options Collection options.
     */
    function Collection(opt_array, opt_options) {
        var _this = _super.call(this) || this;
        var options = opt_options || {};
        /**
         * @private
         * @type {boolean}
         */
        _this.unique_ = !!options.unique;
        /**
         * @private
         * @type {!Array<T>}
         */
        _this.array_ = opt_array ? opt_array : [];
        if (_this.unique_) {
            for (var i = 0, ii = _this.array_.length; i < ii; ++i) {
                _this.assertUnique_(_this.array_[i], i);
            }
        }
        _this.updateLength_();
        return _this;
    }
    /**
     * Remove all elements from the collection.
     * @api
     */
    Collection.prototype.clear = function () {
        while (this.getLength() > 0) {
            this.pop();
        }
    };
    /**
     * Add elements to the collection.  This pushes each item in the provided array
     * to the end of the collection.
     * @param {!Array<T>} arr Array.
     * @return {Collection<T>} This collection.
     * @api
     */
    Collection.prototype.extend = function (arr) {
        for (var i = 0, ii = arr.length; i < ii; ++i) {
            this.push(arr[i]);
        }
        return this;
    };
    /**
     * Iterate over each element, calling the provided callback.
     * @param {function(T, number, Array<T>): *} f The function to call
     *     for every element. This function takes 3 arguments (the element, the
     *     index and the array). The return value is ignored.
     * @api
     */
    Collection.prototype.forEach = function (f) {
        var array = this.array_;
        for (var i = 0, ii = array.length; i < ii; ++i) {
            f(array[i], i, array);
        }
    };
    /**
     * Get a reference to the underlying Array object. Warning: if the array
     * is mutated, no events will be dispatched by the collection, and the
     * collection's "length" property won't be in sync with the actual length
     * of the array.
     * @return {!Array<T>} Array.
     * @api
     */
    Collection.prototype.getArray = function () {
        return this.array_;
    };
    /**
     * Get the element at the provided index.
     * @param {number} index Index.
     * @return {T} Element.
     * @api
     */
    Collection.prototype.item = function (index) {
        return this.array_[index];
    };
    /**
     * Get the length of this collection.
     * @return {number} The length of the array.
     * @observable
     * @api
     */
    Collection.prototype.getLength = function () {
        return this.get(Property.LENGTH);
    };
    /**
     * Insert an element at the provided index.
     * @param {number} index Index.
     * @param {T} elem Element.
     * @api
     */
    Collection.prototype.insertAt = function (index, elem) {
        if (this.unique_) {
            this.assertUnique_(elem);
        }
        this.array_.splice(index, 0, elem);
        this.updateLength_();
        this.dispatchEvent(new CollectionEvent(_CollectionEventType_js__WEBPACK_IMPORTED_MODULE_1__.default.ADD, elem, index));
    };
    /**
     * Remove the last element of the collection and return it.
     * Return `undefined` if the collection is empty.
     * @return {T|undefined} Element.
     * @api
     */
    Collection.prototype.pop = function () {
        return this.removeAt(this.getLength() - 1);
    };
    /**
     * Insert the provided element at the end of the collection.
     * @param {T} elem Element.
     * @return {number} New length of the collection.
     * @api
     */
    Collection.prototype.push = function (elem) {
        if (this.unique_) {
            this.assertUnique_(elem);
        }
        var n = this.getLength();
        this.insertAt(n, elem);
        return this.getLength();
    };
    /**
     * Remove the first occurrence of an element from the collection.
     * @param {T} elem Element.
     * @return {T|undefined} The removed element or undefined if none found.
     * @api
     */
    Collection.prototype.remove = function (elem) {
        var arr = this.array_;
        for (var i = 0, ii = arr.length; i < ii; ++i) {
            if (arr[i] === elem) {
                return this.removeAt(i);
            }
        }
        return undefined;
    };
    /**
     * Remove the element at the provided index and return it.
     * Return `undefined` if the collection does not contain this index.
     * @param {number} index Index.
     * @return {T|undefined} Value.
     * @api
     */
    Collection.prototype.removeAt = function (index) {
        var prev = this.array_[index];
        this.array_.splice(index, 1);
        this.updateLength_();
        this.dispatchEvent(new CollectionEvent(_CollectionEventType_js__WEBPACK_IMPORTED_MODULE_1__.default.REMOVE, prev, index));
        return prev;
    };
    /**
     * Set the element at the provided index.
     * @param {number} index Index.
     * @param {T} elem Element.
     * @api
     */
    Collection.prototype.setAt = function (index, elem) {
        var n = this.getLength();
        if (index < n) {
            if (this.unique_) {
                this.assertUnique_(elem, index);
            }
            var prev = this.array_[index];
            this.array_[index] = elem;
            this.dispatchEvent(new CollectionEvent(_CollectionEventType_js__WEBPACK_IMPORTED_MODULE_1__.default.REMOVE, prev, index));
            this.dispatchEvent(new CollectionEvent(_CollectionEventType_js__WEBPACK_IMPORTED_MODULE_1__.default.ADD, elem, index));
        }
        else {
            for (var j = n; j < index; ++j) {
                this.insertAt(j, undefined);
            }
            this.insertAt(index, elem);
        }
    };
    /**
     * @private
     */
    Collection.prototype.updateLength_ = function () {
        this.set(Property.LENGTH, this.array_.length);
    };
    /**
     * @private
     * @param {T} elem Element.
     * @param {number=} opt_except Optional index to ignore.
     */
    Collection.prototype.assertUnique_ = function (elem, opt_except) {
        for (var i = 0, ii = this.array_.length; i < ii; ++i) {
            if (this.array_[i] === elem && i !== opt_except) {
                throw new _AssertionError_js__WEBPACK_IMPORTED_MODULE_2__.default(58);
            }
        }
    };
    return Collection;
}(_Object_js__WEBPACK_IMPORTED_MODULE_3__.default));
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Collection);
//# sourceMappingURL=Collection.js.map

/***/ }),

/***/ "./node_modules/ol/CollectionEventType.js":
/*!************************************************!*\
  !*** ./node_modules/ol/CollectionEventType.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/**
 * @module ol/CollectionEventType
 */
/**
 * @enum {string}
 */
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
    /**
     * Triggered when an item is added to the collection.
     * @event module:ol/Collection.CollectionEvent#add
     * @api
     */
    ADD: 'add',
    /**
     * Triggered when an item is removed from the collection.
     * @event module:ol/Collection.CollectionEvent#remove
     * @api
     */
    REMOVE: 'remove',
});
//# sourceMappingURL=CollectionEventType.js.map

/***/ }),

/***/ "./node_modules/ol/Disposable.js":
/*!***************************************!*\
  !*** ./node_modules/ol/Disposable.js ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/**
 * @module ol/Disposable
 */
/**
 * @classdesc
 * Objects that need to clean up after themselves.
 */
var Disposable = /** @class */ (function () {
    function Disposable() {
        /**
         * The object has already been disposed.
         * @type {boolean}
         * @protected
         */
        this.disposed = false;
    }
    /**
     * Clean up.
     */
    Disposable.prototype.dispose = function () {
        if (!this.disposed) {
            this.disposed = true;
            this.disposeInternal();
        }
    };
    /**
     * Extension point for disposable objects.
     * @protected
     */
    Disposable.prototype.disposeInternal = function () { };
    return Disposable;
}());
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Disposable);
//# sourceMappingURL=Disposable.js.map

/***/ }),

/***/ "./node_modules/ol/Feature.js":
/*!************************************!*\
  !*** ./node_modules/ol/Feature.js ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createStyleFunction": () => (/* binding */ createStyleFunction),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _Object_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Object.js */ "./node_modules/ol/Object.js");
/* harmony import */ var _events_EventType_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./events/EventType.js */ "./node_modules/ol/events/EventType.js");
/* harmony import */ var _asserts_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./asserts.js */ "./node_modules/ol/asserts.js");
/* harmony import */ var _events_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./events.js */ "./node_modules/ol/events.js");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
/**
 * @module ol/Feature
 */




/**
 * @typedef {typeof Feature|typeof import("./render/Feature.js").default} FeatureClass
 */
/**
 * @typedef {Feature|import("./render/Feature.js").default} FeatureLike
 */
/**
 * @classdesc
 * A vector object for geographic features with a geometry and other
 * attribute properties, similar to the features in vector file formats like
 * GeoJSON.
 *
 * Features can be styled individually with `setStyle`; otherwise they use the
 * style of their vector layer.
 *
 * Note that attribute properties are set as {@link module:ol/Object} properties on
 * the feature object, so they are observable, and have get/set accessors.
 *
 * Typically, a feature has a single geometry property. You can set the
 * geometry using the `setGeometry` method and get it with `getGeometry`.
 * It is possible to store more than one geometry on a feature using attribute
 * properties. By default, the geometry used for rendering is identified by
 * the property name `geometry`. If you want to use another geometry property
 * for rendering, use the `setGeometryName` method to change the attribute
 * property associated with the geometry for the feature.  For example:
 *
 * ```js
 *
 * import Feature from 'ol/Feature';
 * import Polygon from 'ol/geom/Polygon';
 * import Point from 'ol/geom/Point';
 *
 * var feature = new Feature({
 *   geometry: new Polygon(polyCoords),
 *   labelPoint: new Point(labelCoords),
 *   name: 'My Polygon'
 * });
 *
 * // get the polygon geometry
 * var poly = feature.getGeometry();
 *
 * // Render the feature as a point using the coordinates from labelPoint
 * feature.setGeometryName('labelPoint');
 *
 * // get the point geometry
 * var point = feature.getGeometry();
 * ```
 *
 * @api
 * @template {import("./geom/Geometry.js").default} Geometry
 */
var Feature = /** @class */ (function (_super) {
    __extends(Feature, _super);
    /**
     * @param {Geometry|Object<string, *>=} opt_geometryOrProperties
     *     You may pass a Geometry object directly, or an object literal containing
     *     properties. If you pass an object literal, you may include a Geometry
     *     associated with a `geometry` key.
     */
    function Feature(opt_geometryOrProperties) {
        var _this = _super.call(this) || this;
        /**
         * @private
         * @type {number|string|undefined}
         */
        _this.id_ = undefined;
        /**
         * @type {string}
         * @private
         */
        _this.geometryName_ = 'geometry';
        /**
         * User provided style.
         * @private
         * @type {import("./style/Style.js").StyleLike}
         */
        _this.style_ = null;
        /**
         * @private
         * @type {import("./style/Style.js").StyleFunction|undefined}
         */
        _this.styleFunction_ = undefined;
        /**
         * @private
         * @type {?import("./events.js").EventsKey}
         */
        _this.geometryChangeKey_ = null;
        _this.addEventListener((0,_Object_js__WEBPACK_IMPORTED_MODULE_0__.getChangeEventType)(_this.geometryName_), _this.handleGeometryChanged_);
        if (opt_geometryOrProperties) {
            if (typeof (
            /** @type {?} */ (opt_geometryOrProperties).getSimplifiedGeometry) === 'function') {
                var geometry = /** @type {Geometry} */ (opt_geometryOrProperties);
                _this.setGeometry(geometry);
            }
            else {
                /** @type {Object<string, *>} */
                var properties = opt_geometryOrProperties;
                _this.setProperties(properties);
            }
        }
        return _this;
    }
    /**
     * Clone this feature. If the original feature has a geometry it
     * is also cloned. The feature id is not set in the clone.
     * @return {Feature} The clone.
     * @api
     */
    Feature.prototype.clone = function () {
        var clone = new Feature(this.hasProperties() ? this.getProperties() : null);
        clone.setGeometryName(this.getGeometryName());
        var geometry = this.getGeometry();
        if (geometry) {
            clone.setGeometry(geometry.clone());
        }
        var style = this.getStyle();
        if (style) {
            clone.setStyle(style);
        }
        return clone;
    };
    /**
     * Get the feature's default geometry.  A feature may have any number of named
     * geometries.  The "default" geometry (the one that is rendered by default) is
     * set when calling {@link module:ol/Feature~Feature#setGeometry}.
     * @return {Geometry|undefined} The default geometry for the feature.
     * @api
     * @observable
     */
    Feature.prototype.getGeometry = function () {
        return /** @type {Geometry|undefined} */ (this.get(this.geometryName_));
    };
    /**
     * Get the feature identifier.  This is a stable identifier for the feature and
     * is either set when reading data from a remote source or set explicitly by
     * calling {@link module:ol/Feature~Feature#setId}.
     * @return {number|string|undefined} Id.
     * @api
     */
    Feature.prototype.getId = function () {
        return this.id_;
    };
    /**
     * Get the name of the feature's default geometry.  By default, the default
     * geometry is named `geometry`.
     * @return {string} Get the property name associated with the default geometry
     *     for this feature.
     * @api
     */
    Feature.prototype.getGeometryName = function () {
        return this.geometryName_;
    };
    /**
     * Get the feature's style. Will return what was provided to the
     * {@link module:ol/Feature~Feature#setStyle} method.
     * @return {import("./style/Style.js").StyleLike|undefined} The feature style.
     * @api
     */
    Feature.prototype.getStyle = function () {
        return this.style_;
    };
    /**
     * Get the feature's style function.
     * @return {import("./style/Style.js").StyleFunction|undefined} Return a function
     * representing the current style of this feature.
     * @api
     */
    Feature.prototype.getStyleFunction = function () {
        return this.styleFunction_;
    };
    /**
     * @private
     */
    Feature.prototype.handleGeometryChange_ = function () {
        this.changed();
    };
    /**
     * @private
     */
    Feature.prototype.handleGeometryChanged_ = function () {
        if (this.geometryChangeKey_) {
            (0,_events_js__WEBPACK_IMPORTED_MODULE_1__.unlistenByKey)(this.geometryChangeKey_);
            this.geometryChangeKey_ = null;
        }
        var geometry = this.getGeometry();
        if (geometry) {
            this.geometryChangeKey_ = (0,_events_js__WEBPACK_IMPORTED_MODULE_1__.listen)(geometry, _events_EventType_js__WEBPACK_IMPORTED_MODULE_2__.default.CHANGE, this.handleGeometryChange_, this);
        }
        this.changed();
    };
    /**
     * Set the default geometry for the feature.  This will update the property
     * with the name returned by {@link module:ol/Feature~Feature#getGeometryName}.
     * @param {Geometry|undefined} geometry The new geometry.
     * @api
     * @observable
     */
    Feature.prototype.setGeometry = function (geometry) {
        this.set(this.geometryName_, geometry);
    };
    /**
     * Set the style for the feature to override the layer style.  This can be a
     * single style object, an array of styles, or a function that takes a
     * resolution and returns an array of styles. To unset the feature style, call
     * `setStyle()` without arguments or a falsey value.
     * @param {import("./style/Style.js").StyleLike=} opt_style Style for this feature.
     * @api
     * @fires module:ol/events/Event~BaseEvent#event:change
     */
    Feature.prototype.setStyle = function (opt_style) {
        this.style_ = opt_style;
        this.styleFunction_ = !opt_style
            ? undefined
            : createStyleFunction(opt_style);
        this.changed();
    };
    /**
     * Set the feature id.  The feature id is considered stable and may be used when
     * requesting features or comparing identifiers returned from a remote source.
     * The feature id can be used with the
     * {@link module:ol/source/Vector~VectorSource#getFeatureById} method.
     * @param {number|string|undefined} id The feature id.
     * @api
     * @fires module:ol/events/Event~BaseEvent#event:change
     */
    Feature.prototype.setId = function (id) {
        this.id_ = id;
        this.changed();
    };
    /**
     * Set the property name to be used when getting the feature's default geometry.
     * When calling {@link module:ol/Feature~Feature#getGeometry}, the value of the property with
     * this name will be returned.
     * @param {string} name The property name of the default geometry.
     * @api
     */
    Feature.prototype.setGeometryName = function (name) {
        this.removeEventListener((0,_Object_js__WEBPACK_IMPORTED_MODULE_0__.getChangeEventType)(this.geometryName_), this.handleGeometryChanged_);
        this.geometryName_ = name;
        this.addEventListener((0,_Object_js__WEBPACK_IMPORTED_MODULE_0__.getChangeEventType)(this.geometryName_), this.handleGeometryChanged_);
        this.handleGeometryChanged_();
    };
    return Feature;
}(_Object_js__WEBPACK_IMPORTED_MODULE_0__.default));
/**
 * Convert the provided object into a feature style function.  Functions passed
 * through unchanged.  Arrays of Style or single style objects wrapped
 * in a new feature style function.
 * @param {!import("./style/Style.js").StyleFunction|!Array<import("./style/Style.js").default>|!import("./style/Style.js").default} obj
 *     A feature style function, a single style, or an array of styles.
 * @return {import("./style/Style.js").StyleFunction} A style function.
 */
function createStyleFunction(obj) {
    if (typeof obj === 'function') {
        return obj;
    }
    else {
        /**
         * @type {Array<import("./style/Style.js").default>}
         */
        var styles_1;
        if (Array.isArray(obj)) {
            styles_1 = obj;
        }
        else {
            (0,_asserts_js__WEBPACK_IMPORTED_MODULE_3__.assert)(typeof ( /** @type {?} */(obj).getZIndex) === 'function', 41); // Expected an `import("./style/Style.js").Style` or an array of `import("./style/Style.js").Style`
            var style = /** @type {import("./style/Style.js").default} */ (obj);
            styles_1 = [style];
        }
        return function () {
            return styles_1;
        };
    }
}
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Feature);
//# sourceMappingURL=Feature.js.map

/***/ }),

/***/ "./node_modules/ol/Image.js":
/*!**********************************!*\
  !*** ./node_modules/ol/Image.js ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "listenImage": () => (/* binding */ listenImage),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _events_EventType_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./events/EventType.js */ "./node_modules/ol/events/EventType.js");
/* harmony import */ var _ImageBase_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./ImageBase.js */ "./node_modules/ol/ImageBase.js");
/* harmony import */ var _ImageState_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ImageState.js */ "./node_modules/ol/ImageState.js");
/* harmony import */ var _has_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./has.js */ "./node_modules/ol/has.js");
/* harmony import */ var _extent_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./extent.js */ "./node_modules/ol/extent.js");
/* harmony import */ var _events_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./events.js */ "./node_modules/ol/events.js");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
/**
 * @module ol/Image
 */






/**
 * A function that takes an {@link module:ol/Image~Image} for the image and a
 * `{string}` for the src as arguments. It is supposed to make it so the
 * underlying image {@link module:ol/Image~Image#getImage} is assigned the
 * content specified by the src. If not specified, the default is
 *
 *     function(image, src) {
 *       image.getImage().src = src;
 *     }
 *
 * Providing a custom `imageLoadFunction` can be useful to load images with
 * post requests or - in general - through XHR requests, where the src of the
 * image element would be set to a data URI when the content is loaded.
 *
 * @typedef {function(ImageWrapper, string): void} LoadFunction
 * @api
 */
var ImageWrapper = /** @class */ (function (_super) {
    __extends(ImageWrapper, _super);
    /**
     * @param {import("./extent.js").Extent} extent Extent.
     * @param {number|undefined} resolution Resolution.
     * @param {number} pixelRatio Pixel ratio.
     * @param {string} src Image source URI.
     * @param {?string} crossOrigin Cross origin.
     * @param {LoadFunction} imageLoadFunction Image load function.
     */
    function ImageWrapper(extent, resolution, pixelRatio, src, crossOrigin, imageLoadFunction) {
        var _this = _super.call(this, extent, resolution, pixelRatio, _ImageState_js__WEBPACK_IMPORTED_MODULE_0__.default.IDLE) || this;
        /**
         * @private
         * @type {string}
         */
        _this.src_ = src;
        /**
         * @private
         * @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement}
         */
        _this.image_ = new Image();
        if (crossOrigin !== null) {
            _this.image_.crossOrigin = crossOrigin;
        }
        /**
         * @private
         * @type {?function():void}
         */
        _this.unlisten_ = null;
        /**
         * @protected
         * @type {import("./ImageState.js").default}
         */
        _this.state = _ImageState_js__WEBPACK_IMPORTED_MODULE_0__.default.IDLE;
        /**
         * @private
         * @type {LoadFunction}
         */
        _this.imageLoadFunction_ = imageLoadFunction;
        return _this;
    }
    /**
     * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.
     * @api
     */
    ImageWrapper.prototype.getImage = function () {
        return this.image_;
    };
    /**
     * Tracks loading or read errors.
     *
     * @private
     */
    ImageWrapper.prototype.handleImageError_ = function () {
        this.state = _ImageState_js__WEBPACK_IMPORTED_MODULE_0__.default.ERROR;
        this.unlistenImage_();
        this.changed();
    };
    /**
     * Tracks successful image load.
     *
     * @private
     */
    ImageWrapper.prototype.handleImageLoad_ = function () {
        if (this.resolution === undefined) {
            this.resolution = (0,_extent_js__WEBPACK_IMPORTED_MODULE_1__.getHeight)(this.extent) / this.image_.height;
        }
        this.state = _ImageState_js__WEBPACK_IMPORTED_MODULE_0__.default.LOADED;
        this.unlistenImage_();
        this.changed();
    };
    /**
     * Load the image or retry if loading previously failed.
     * Loading is taken care of by the tile queue, and calling this method is
     * only needed for preloading or for reloading in case of an error.
     * @api
     */
    ImageWrapper.prototype.load = function () {
        if (this.state == _ImageState_js__WEBPACK_IMPORTED_MODULE_0__.default.IDLE || this.state == _ImageState_js__WEBPACK_IMPORTED_MODULE_0__.default.ERROR) {
            this.state = _ImageState_js__WEBPACK_IMPORTED_MODULE_0__.default.LOADING;
            this.changed();
            this.imageLoadFunction_(this, this.src_);
            this.unlisten_ = listenImage(this.image_, this.handleImageLoad_.bind(this), this.handleImageError_.bind(this));
        }
    };
    /**
     * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.
     */
    ImageWrapper.prototype.setImage = function (image) {
        this.image_ = image;
    };
    /**
     * Discards event handlers which listen for load completion or errors.
     *
     * @private
     */
    ImageWrapper.prototype.unlistenImage_ = function () {
        if (this.unlisten_) {
            this.unlisten_();
            this.unlisten_ = null;
        }
    };
    return ImageWrapper;
}(_ImageBase_js__WEBPACK_IMPORTED_MODULE_2__.default));
/**
 * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image element.
 * @param {function():any} loadHandler Load callback function.
 * @param {function():any} errorHandler Error callback function.
 * @return {function():void} Callback to stop listening.
 */
function listenImage(image, loadHandler, errorHandler) {
    var img = /** @type {HTMLImageElement} */ (image);
    if (img.src && _has_js__WEBPACK_IMPORTED_MODULE_3__.IMAGE_DECODE) {
        var promise = img.decode();
        var listening_1 = true;
        var unlisten = function () {
            listening_1 = false;
        };
        promise
            .then(function () {
            if (listening_1) {
                loadHandler();
            }
        })
            .catch(function (error) {
            if (listening_1) {
                // FIXME: Unconditionally call errorHandler() when this bug is fixed upstream:
                //        https://bugs.webkit.org/show_bug.cgi?id=198527
                if (error.name === 'EncodingError' &&
                    error.message === 'Invalid image type.') {
                    loadHandler();
                }
                else {
                    errorHandler();
                }
            }
        });
        return unlisten;
    }
    var listenerKeys = [
        (0,_events_js__WEBPACK_IMPORTED_MODULE_4__.listenOnce)(img, _events_EventType_js__WEBPACK_IMPORTED_MODULE_5__.default.LOAD, loadHandler),
        (0,_events_js__WEBPACK_IMPORTED_MODULE_4__.listenOnce)(img, _events_EventType_js__WEBPACK_IMPORTED_MODULE_5__.default.ERROR, errorHandler),
    ];
    return function unlisten() {
        listenerKeys.forEach(_events_js__WEBPACK_IMPORTED_MODULE_4__.unlistenByKey);
    };
}
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (ImageWrapper);
//# sourceMappingURL=Image.js.map

/***/ }),

/***/ "./node_modules/ol/ImageBase.js":
/*!**************************************!*\
  !*** ./node_modules/ol/ImageBase.js ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _events_Target_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./events/Target.js */ "./node_modules/ol/events/Target.js");
/* harmony import */ var _events_EventType_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./events/EventType.js */ "./node_modules/ol/events/EventType.js");
/* harmony import */ var _util_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./util.js */ "./node_modules/ol/util.js");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
/**
 * @module ol/ImageBase
 */



/**
 * @abstract
 */
var ImageBase = /** @class */ (function (_super) {
    __extends(ImageBase, _super);
    /**
     * @param {import("./extent.js").Extent} extent Extent.
     * @param {number|undefined} resolution Resolution.
     * @param {number} pixelRatio Pixel ratio.
     * @param {import("./ImageState.js").default} state State.
     */
    function ImageBase(extent, resolution, pixelRatio, state) {
        var _this = _super.call(this) || this;
        /**
         * @protected
         * @type {import("./extent.js").Extent}
         */
        _this.extent = extent;
        /**
         * @private
         * @type {number}
         */
        _this.pixelRatio_ = pixelRatio;
        /**
         * @protected
         * @type {number|undefined}
         */
        _this.resolution = resolution;
        /**
         * @protected
         * @type {import("./ImageState.js").default}
         */
        _this.state = state;
        return _this;
    }
    /**
     * @protected
     */
    ImageBase.prototype.changed = function () {
        this.dispatchEvent(_events_EventType_js__WEBPACK_IMPORTED_MODULE_0__.default.CHANGE);
    };
    /**
     * @return {import("./extent.js").Extent} Extent.
     */
    ImageBase.prototype.getExtent = function () {
        return this.extent;
    };
    /**
     * @abstract
     * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.
     */
    ImageBase.prototype.getImage = function () {
        return (0,_util_js__WEBPACK_IMPORTED_MODULE_1__.abstract)();
    };
    /**
     * @return {number} PixelRatio.
     */
    ImageBase.prototype.getPixelRatio = function () {
        return this.pixelRatio_;
    };
    /**
     * @return {number} Resolution.
     */
    ImageBase.prototype.getResolution = function () {
        return /** @type {number} */ (this.resolution);
    };
    /**
     * @return {import("./ImageState.js").default} State.
     */
    ImageBase.prototype.getState = function () {
        return this.state;
    };
    /**
     * Load not yet loaded URI.
     * @abstract
     */
    ImageBase.prototype.load = function () {
        (0,_util_js__WEBPACK_IMPORTED_MODULE_1__.abstract)();
    };
    return ImageBase;
}(_events_Target_js__WEBPACK_IMPORTED_MODULE_2__.default));
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (ImageBase);
//# sourceMappingURL=ImageBase.js.map

/***/ }),

/***/ "./node_modules/ol/ImageState.js":
/*!***************************************!*\
  !*** ./node_modules/ol/ImageState.js ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/**
 * @module ol/ImageState
 */
/**
 * @enum {number}
 */
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
    IDLE: 0,
    LOADING: 1,
    LOADED: 2,
    ERROR: 3,
    EMPTY: 4,
});
//# sourceMappingURL=ImageState.js.map

/***/ }),

/***/ "./node_modules/ol/ImageTile.js":
/*!**************************************!*\
  !*** ./node_modules/ol/ImageTile.js ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _Tile_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Tile.js */ "./node_modules/ol/Tile.js");
/* harmony import */ var _TileState_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./TileState.js */ "./node_modules/ol/TileState.js");
/* harmony import */ var _dom_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./dom.js */ "./node_modules/ol/dom.js");
/* harmony import */ var _Image_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Image.js */ "./node_modules/ol/Image.js");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
/**
 * @module ol/ImageTile
 */




var ImageTile = /** @class */ (function (_super) {
    __extends(ImageTile, _super);
    /**
     * @param {import("./tilecoord.js").TileCoord} tileCoord Tile coordinate.
     * @param {import("./TileState.js").default} state State.
     * @param {string} src Image source URI.
     * @param {?string} crossOrigin Cross origin.
     * @param {import("./Tile.js").LoadFunction} tileLoadFunction Tile load function.
     * @param {import("./Tile.js").Options=} opt_options Tile options.
     */
    function ImageTile(tileCoord, state, src, crossOrigin, tileLoadFunction, opt_options) {
        var _this = _super.call(this, tileCoord, state, opt_options) || this;
        /**
         * @private
         * @type {?string}
         */
        _this.crossOrigin_ = crossOrigin;
        /**
         * Image URI
         *
         * @private
         * @type {string}
         */
        _this.src_ = src;
        _this.key = src;
        /**
         * @private
         * @type {HTMLImageElement|HTMLCanvasElement}
         */
        _this.image_ = new Image();
        if (crossOrigin !== null) {
            _this.image_.crossOrigin = crossOrigin;
        }
        /**
         * @private
         * @type {?function():void}
         */
        _this.unlisten_ = null;
        /**
         * @private
         * @type {import("./Tile.js").LoadFunction}
         */
        _this.tileLoadFunction_ = tileLoadFunction;
        return _this;
    }
    /**
     * Get the HTML image element for this tile (may be a Canvas, Image, or Video).
     * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.
     * @api
     */
    ImageTile.prototype.getImage = function () {
        return this.image_;
    };
    /**
     * Tracks loading or read errors.
     *
     * @private
     */
    ImageTile.prototype.handleImageError_ = function () {
        this.state = _TileState_js__WEBPACK_IMPORTED_MODULE_0__.default.ERROR;
        this.unlistenImage_();
        this.image_ = getBlankImage();
        this.changed();
    };
    /**
     * Tracks successful image load.
     *
     * @private
     */
    ImageTile.prototype.handleImageLoad_ = function () {
        var image = /** @type {HTMLImageElement} */ (this.image_);
        if (image.naturalWidth && image.naturalHeight) {
            this.state = _TileState_js__WEBPACK_IMPORTED_MODULE_0__.default.LOADED;
        }
        else {
            this.state = _TileState_js__WEBPACK_IMPORTED_MODULE_0__.default.EMPTY;
        }
        this.unlistenImage_();
        this.changed();
    };
    /**
     * Load not yet loaded URI.
     * @api
     */
    ImageTile.prototype.load = function () {
        if (this.state == _TileState_js__WEBPACK_IMPORTED_MODULE_0__.default.ERROR) {
            this.state = _TileState_js__WEBPACK_IMPORTED_MODULE_0__.default.IDLE;
            this.image_ = new Image();
            if (this.crossOrigin_ !== null) {
                this.image_.crossOrigin = this.crossOrigin_;
            }
        }
        if (this.state == _TileState_js__WEBPACK_IMPORTED_MODULE_0__.default.IDLE) {
            this.state = _TileState_js__WEBPACK_IMPORTED_MODULE_0__.default.LOADING;
            this.changed();
            this.tileLoadFunction_(this, this.src_);
            this.unlisten_ = (0,_Image_js__WEBPACK_IMPORTED_MODULE_1__.listenImage)(this.image_, this.handleImageLoad_.bind(this), this.handleImageError_.bind(this));
        }
    };
    /**
     * Discards event handlers which listen for load completion or errors.
     *
     * @private
     */
    ImageTile.prototype.unlistenImage_ = function () {
        if (this.unlisten_) {
            this.unlisten_();
            this.unlisten_ = null;
        }
    };
    return ImageTile;
}(_Tile_js__WEBPACK_IMPORTED_MODULE_2__.default));
/**
 * Get a 1-pixel blank image.
 * @return {HTMLCanvasElement} Blank image.
 */
function getBlankImage() {
    var ctx = (0,_dom_js__WEBPACK_IMPORTED_MODULE_3__.createCanvasContext2D)(1, 1);
    ctx.fillStyle = 'rgba(0,0,0,0)';
    ctx.fillRect(0, 0, 1, 1);
    return ctx.canvas;
}
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (ImageTile);
//# sourceMappingURL=ImageTile.js.map

/***/ }),

/***/ "./node_modules/ol/Kinetic.js":
/*!************************************!*\
  !*** ./node_modules/ol/Kinetic.js ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/**
 * @module ol/Kinetic
 */
/**
 * @classdesc
 * Implementation of inertial deceleration for map movement.
 *
 * @api
 */
var Kinetic = /** @class */ (function () {
    /**
     * @param {number} decay Rate of decay (must be negative).
     * @param {number} minVelocity Minimum velocity (pixels/millisecond).
     * @param {number} delay Delay to consider to calculate the kinetic
     *     initial values (milliseconds).
     */
    function Kinetic(decay, minVelocity, delay) {
        /**
         * @private
         * @type {number}
         */
        this.decay_ = decay;
        /**
         * @private
         * @type {number}
         */
        this.minVelocity_ = minVelocity;
        /**
         * @private
         * @type {number}
         */
        this.delay_ = delay;
        /**
         * @private
         * @type {Array<number>}
         */
        this.points_ = [];
        /**
         * @private
         * @type {number}
         */
        this.angle_ = 0;
        /**
         * @private
         * @type {number}
         */
        this.initialVelocity_ = 0;
    }
    /**
     * FIXME empty description for jsdoc
     */
    Kinetic.prototype.begin = function () {
        this.points_.length = 0;
        this.angle_ = 0;
        this.initialVelocity_ = 0;
    };
    /**
     * @param {number} x X.
     * @param {number} y Y.
     */
    Kinetic.prototype.update = function (x, y) {
        this.points_.push(x, y, Date.now());
    };
    /**
     * @return {boolean} Whether we should do kinetic animation.
     */
    Kinetic.prototype.end = function () {
        if (this.points_.length < 6) {
            // at least 2 points are required (i.e. there must be at least 6 elements
            // in the array)
            return false;
        }
        var delay = Date.now() - this.delay_;
        var lastIndex = this.points_.length - 3;
        if (this.points_[lastIndex + 2] < delay) {
            // the last tracked point is too old, which means that the user stopped
            // panning before releasing the map
            return false;
        }
        // get the first point which still falls into the delay time
        var firstIndex = lastIndex - 3;
        while (firstIndex > 0 && this.points_[firstIndex + 2] > delay) {
            firstIndex -= 3;
        }
        var duration = this.points_[lastIndex + 2] - this.points_[firstIndex + 2];
        // we don't want a duration of 0 (divide by zero)
        // we also make sure the user panned for a duration of at least one frame
        // (1/60s) to compute sane displacement values
        if (duration < 1000 / 60) {
            return false;
        }
        var dx = this.points_[lastIndex] - this.points_[firstIndex];
        var dy = this.points_[lastIndex + 1] - this.points_[firstIndex + 1];
        this.angle_ = Math.atan2(dy, dx);
        this.initialVelocity_ = Math.sqrt(dx * dx + dy * dy) / duration;
        return this.initialVelocity_ > this.minVelocity_;
    };
    /**
     * @return {number} Total distance travelled (pixels).
     */
    Kinetic.prototype.getDistance = function () {
        return (this.minVelocity_ - this.initialVelocity_) / this.decay_;
    };
    /**
     * @return {number} Angle of the kinetic panning animation (radians).
     */
    Kinetic.prototype.getAngle = function () {
        return this.angle_;
    };
    return Kinetic;
}());
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Kinetic);
//# sourceMappingURL=Kinetic.js.map

/***/ }),

/***/ "./node_modules/ol/Map.js":
/*!********************************!*\
  !*** ./node_modules/ol/Map.js ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _renderer_Composite_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./renderer/Composite.js */ "./node_modules/ol/renderer/Composite.js");
/* harmony import */ var _PluggableMap_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./PluggableMap.js */ "./node_modules/ol/PluggableMap.js");
/* harmony import */ var _obj_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./obj.js */ "./node_modules/ol/obj.js");
/* harmony import */ var _control_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./control.js */ "./node_modules/ol/control.js");
/* harmony import */ var _interaction_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./interaction.js */ "./node_modules/ol/interaction.js");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
/**
 * @module ol/Map
 */





/**
 * @classdesc
 * The map is the core component of OpenLayers. For a map to render, a view,
 * one or more layers, and a target container are needed:
 *
 *     import Map from 'ol/Map';
 *     import View from 'ol/View';
 *     import TileLayer from 'ol/layer/Tile';
 *     import OSM from 'ol/source/OSM';
 *
 *     var map = new Map({
 *       view: new View({
 *         center: [0, 0],
 *         zoom: 1
 *       }),
 *       layers: [
 *         new TileLayer({
 *           source: new OSM()
 *         })
 *       ],
 *       target: 'map'
 *     });
 *
 * The above snippet creates a map using a {@link module:ol/layer/Tile} to
 * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM
 * element with the id `map`.
 *
 * The constructor places a viewport container (with CSS class name
 * `ol-viewport`) in the target element (see `getViewport()`), and then two
 * further elements within the viewport: one with CSS class name
 * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with
 * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`
 * option of {@link module:ol/Overlay~Overlay} for the difference). The map
 * itself is placed in a further element within the viewport.
 *
 * Layers are stored as a {@link module:ol/Collection~Collection} in
 * layerGroups. A top-level group is provided by the library. This is what is
 * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the
 * options are added to this group, and `addLayer` and `removeLayer` change the
 * layer collection in the group. `getLayers` is a convenience function for
 * `getLayerGroup().getLayers()`. Note that {@link module:ol/layer/Group~Group}
 * is a subclass of {@link module:ol/layer/Base}, so layers entered in the
 * options or added with `addLayer` can be groups, which can contain further
 * groups, and so on.
 *
 * @api
 */
var Map = /** @class */ (function (_super) {
    __extends(Map, _super);
    /**
     * @param {import("./PluggableMap.js").MapOptions} options Map options.
     */
    function Map(options) {
        var _this = this;
        options = (0,_obj_js__WEBPACK_IMPORTED_MODULE_0__.assign)({}, options);
        if (!options.controls) {
            options.controls = (0,_control_js__WEBPACK_IMPORTED_MODULE_1__.defaults)();
        }
        if (!options.interactions) {
            options.interactions = (0,_interaction_js__WEBPACK_IMPORTED_MODULE_2__.defaults)({
                onFocusOnly: true,
            });
        }
        _this = _super.call(this, options) || this;
        return _this;
    }
    Map.prototype.createRenderer = function () {
        return new _renderer_Composite_js__WEBPACK_IMPORTED_MODULE_3__.default(this);
    };
    return Map;
}(_PluggableMap_js__WEBPACK_IMPORTED_MODULE_4__.default));
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Map);
//# sourceMappingURL=Map.js.map

/***/ }),

/***/ "./node_modules/ol/MapBrowserEvent.js":
/*!********************************************!*\
  !*** ./node_modules/ol/MapBrowserEvent.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _MapEvent_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./MapEvent.js */ "./node_modules/ol/MapEvent.js");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
/**
 * @module ol/MapBrowserEvent
 */

/**
 * @classdesc
 * Events emitted as map browser events are instances of this type.
 * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map browser event.
 * @template {UIEvent} EVENT
 */
var MapBrowserEvent = /** @class */ (function (_super) {
    __extends(MapBrowserEvent, _super);
    /**
     * @param {string} type Event type.
     * @param {import("./PluggableMap.js").default} map Map.
     * @param {EVENT} originalEvent Original event.
     * @param {boolean=} opt_dragging Is the map currently being dragged?
     * @param {?import("./PluggableMap.js").FrameState=} opt_frameState Frame state.
     */
    function MapBrowserEvent(type, map, originalEvent, opt_dragging, opt_frameState) {
        var _this = _super.call(this, type, map, opt_frameState) || this;
        /**
         * The original browser event.
         * @const
         * @type {EVENT}
         * @api
         */
        _this.originalEvent = originalEvent;
        /**
         * The map pixel relative to the viewport corresponding to the original browser event.
         * @type {?import("./pixel.js").Pixel}
         */
        _this.pixel_ = null;
        /**
         * The coordinate in the user projection corresponding to the original browser event.
         * @type {?import("./coordinate.js").Coordinate}
         */
        _this.coordinate_ = null;
        /**
         * Indicates if the map is currently being dragged. Only set for
         * `POINTERDRAG` and `POINTERMOVE` events. Default is `false`.
         *
         * @type {boolean}
         * @api
         */
        _this.dragging = opt_dragging !== undefined ? opt_dragging : false;
        return _this;
    }
    Object.defineProperty(MapBrowserEvent.prototype, "pixel", {
        /**
         * The map pixel relative to the viewport corresponding to the original event.
         * @type {import("./pixel.js").Pixel}
         * @api
         */
        get: function () {
            if (!this.pixel_) {
                this.pixel_ = this.map.getEventPixel(this.originalEvent);
            }
            return this.pixel_;
        },
        set: function (pixel) {
            this.pixel_ = pixel;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MapBrowserEvent.prototype, "coordinate", {
        /**
         * The coordinate corresponding to the original browser event.  This will be in the user
         * projection if one is set.  Otherwise it will be in the view projection.
         * @type {import("./coordinate.js").Coordinate}
         * @api
         */
        get: function () {
            if (!this.coordinate_) {
                this.coordinate_ = this.map.getCoordinateFromPixel(this.pixel);
            }
            return this.coordinate_;
        },
        set: function (coordinate) {
            this.coordinate_ = coordinate;
        },
        enumerable: false,
        configurable: true
    });
    /**
     * Prevents the default browser action.
     * See https://developer.mozilla.org/en-US/docs/Web/API/event.preventDefault.
     * @api
     */
    MapBrowserEvent.prototype.preventDefault = function () {
        _super.prototype.preventDefault.call(this);
        this.originalEvent.preventDefault();
    };
    /**
     * Prevents further propagation of the current event.
     * See https://developer.mozilla.org/en-US/docs/Web/API/event.stopPropagation.
     * @api
     */
    MapBrowserEvent.prototype.stopPropagation = function () {
        _super.prototype.stopPropagation.call(this);
        this.originalEvent.stopPropagation();
    };
    return MapBrowserEvent;
}(_MapEvent_js__WEBPACK_IMPORTED_MODULE_0__.default));
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (MapBrowserEvent);
//# sourceMappingURL=MapBrowserEvent.js.map

/***/ }),

/***/ "./node_modules/ol/MapBrowserEventHandler.js":
/*!***************************************************!*\
  !*** ./node_modules/ol/MapBrowserEventHandler.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _events_Target_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./events/Target.js */ "./node_modules/ol/events/Target.js");
/* harmony import */ var _events_EventType_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./events/EventType.js */ "./node_modules/ol/events/EventType.js");
/* harmony import */ var _MapBrowserEvent_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./MapBrowserEvent.js */ "./node_modules/ol/MapBrowserEvent.js");
/* harmony import */ var _MapBrowserEventType_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./MapBrowserEventType.js */ "./node_modules/ol/MapBrowserEventType.js");
/* harmony import */ var _pointer_EventType_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./pointer/EventType.js */ "./node_modules/ol/pointer/EventType.js");
/* harmony import */ var _has_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./has.js */ "./node_modules/ol/has.js");
/* harmony import */ var _events_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./events.js */ "./node_modules/ol/events.js");
/**
 * @module ol/MapBrowserEventHandler
 */
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();







var MapBrowserEventHandler = /** @class */ (function (_super) {
    __extends(MapBrowserEventHandler, _super);
    /**
     * @param {import("./PluggableMap.js").default} map The map with the viewport to listen to events on.
     * @param {number=} moveTolerance The minimal distance the pointer must travel to trigger a move.
     */
    function MapBrowserEventHandler(map, moveTolerance) {
        var _this = _super.call(this, map) || this;
        /**
         * This is the element that we will listen to the real events on.
         * @type {import("./PluggableMap.js").default}
         * @private
         */
        _this.map_ = map;
        /**
         * @type {any}
         * @private
         */
        _this.clickTimeoutId_;
        /**
         * Emulate dblclick and singleclick. Will be true when only one pointer is active.
         * @type {boolean}
         */
        _this.emulateClicks_ = false;
        /**
         * @type {boolean}
         * @private
         */
        _this.dragging_ = false;
        /**
         * @type {!Array<import("./events.js").EventsKey>}
         * @private
         */
        _this.dragListenerKeys_ = [];
        /**
         * @type {number}
         * @private
         */
        _this.moveTolerance_ = moveTolerance
            ? moveTolerance * _has_js__WEBPACK_IMPORTED_MODULE_0__.DEVICE_PIXEL_RATIO
            : _has_js__WEBPACK_IMPORTED_MODULE_0__.DEVICE_PIXEL_RATIO;
        /**
         * The most recent "down" type event (or null if none have occurred).
         * Set on pointerdown.
         * @type {PointerEvent}
         * @private
         */
        _this.down_ = null;
        var element = _this.map_.getViewport();
        /**
         * @type {number}
         * @private
         */
        _this.activePointers_ = 0;
        /**
         * @type {!Object<number, boolean>}
         * @private
         */
        _this.trackedTouches_ = {};
        _this.element_ = element;
        /**
         * @type {?import("./events.js").EventsKey}
         * @private
         */
        _this.pointerdownListenerKey_ = (0,_events_js__WEBPACK_IMPORTED_MODULE_1__.listen)(element, _pointer_EventType_js__WEBPACK_IMPORTED_MODULE_2__.default.POINTERDOWN, _this.handlePointerDown_, _this);
        /**
         * @type {PointerEvent}
         * @private
         */
        _this.originalPointerMoveEvent_;
        /**
         * @type {?import("./events.js").EventsKey}
         * @private
         */
        _this.relayedListenerKey_ = (0,_events_js__WEBPACK_IMPORTED_MODULE_1__.listen)(element, _pointer_EventType_js__WEBPACK_IMPORTED_MODULE_2__.default.POINTERMOVE, _this.relayEvent_, _this);
        /**
         * @private
         */
        _this.boundHandleTouchMove_ = _this.handleTouchMove_.bind(_this);
        _this.element_.addEventListener(_events_EventType_js__WEBPACK_IMPORTED_MODULE_3__.default.TOUCHMOVE, _this.boundHandleTouchMove_, _has_js__WEBPACK_IMPORTED_MODULE_0__.PASSIVE_EVENT_LISTENERS ? { passive: false } : false);
        return _this;
    }
    /**
     * @param {PointerEvent} pointerEvent Pointer
     * event.
     * @private
     */
    MapBrowserEventHandler.prototype.emulateClick_ = function (pointerEvent) {
        var newEvent = new _MapBrowserEvent_js__WEBPACK_IMPORTED_MODULE_4__.default(_MapBrowserEventType_js__WEBPACK_IMPORTED_MODULE_5__.default.CLICK, this.map_, pointerEvent);
        this.dispatchEvent(newEvent);
        if (this.clickTimeoutId_ !== undefined) {
            // double-click
            clearTimeout(this.clickTimeoutId_);
            this.clickTimeoutId_ = undefined;
            newEvent = new _MapBrowserEvent_js__WEBPACK_IMPORTED_MODULE_4__.default(_MapBrowserEventType_js__WEBPACK_IMPORTED_MODULE_5__.default.DBLCLICK, this.map_, pointerEvent);
            this.dispatchEvent(newEvent);
        }
        else {
            // click
            this.clickTimeoutId_ = setTimeout(
            /** @this {MapBrowserEventHandler} */
            function () {
                this.clickTimeoutId_ = undefined;
                var newEvent = new _MapBrowserEvent_js__WEBPACK_IMPORTED_MODULE_4__.default(_MapBrowserEventType_js__WEBPACK_IMPORTED_MODULE_5__.default.SINGLECLICK, this.map_, pointerEvent);
                this.dispatchEvent(newEvent);
            }.bind(this), 250);
        }
    };
    /**
     * Keeps track on how many pointers are currently active.
     *
     * @param {PointerEvent} pointerEvent Pointer
     * event.
     * @private
     */
    MapBrowserEventHandler.prototype.updateActivePointers_ = function (pointerEvent) {
        var event = pointerEvent;
        if (event.type == _MapBrowserEventType_js__WEBPACK_IMPORTED_MODULE_5__.default.POINTERUP ||
            event.type == _MapBrowserEventType_js__WEBPACK_IMPORTED_MODULE_5__.default.POINTERCANCEL) {
            delete this.trackedTouches_[event.pointerId];
        }
        else if (event.type == _MapBrowserEventType_js__WEBPACK_IMPORTED_MODULE_5__.default.POINTERDOWN) {
            this.trackedTouches_[event.pointerId] = true;
        }
        this.activePointers_ = Object.keys(this.trackedTouches_).length;
    };
    /**
     * @param {PointerEvent} pointerEvent Pointer
     * event.
     * @private
     */
    MapBrowserEventHandler.prototype.handlePointerUp_ = function (pointerEvent) {
        this.updateActivePointers_(pointerEvent);
        var newEvent = new _MapBrowserEvent_js__WEBPACK_IMPORTED_MODULE_4__.default(_MapBrowserEventType_js__WEBPACK_IMPORTED_MODULE_5__.default.POINTERUP, this.map_, pointerEvent);
        this.dispatchEvent(newEvent);
        // We emulate click events on left mouse button click, touch contact, and pen
        // contact. isMouseActionButton returns true in these cases (evt.button is set
        // to 0).
        // See http://www.w3.org/TR/pointerevents/#button-states
        // We only fire click, singleclick, and doubleclick if nobody has called
        // event.stopPropagation() or event.preventDefault().
        if (this.emulateClicks_ &&
            !newEvent.propagationStopped &&
            !this.dragging_ &&
            this.isMouseActionButton_(pointerEvent)) {
            this.emulateClick_(this.down_);
        }
        if (this.activePointers_ === 0) {
            this.dragListenerKeys_.forEach(_events_js__WEBPACK_IMPORTED_MODULE_1__.unlistenByKey);
            this.dragListenerKeys_.length = 0;
            this.dragging_ = false;
            this.down_ = null;
        }
    };
    /**
     * @param {PointerEvent} pointerEvent Pointer
     * event.
     * @return {boolean} If the left mouse button was pressed.
     * @private
     */
    MapBrowserEventHandler.prototype.isMouseActionButton_ = function (pointerEvent) {
        return pointerEvent.button === 0;
    };
    /**
     * @param {PointerEvent} pointerEvent Pointer
     * event.
     * @private
     */
    MapBrowserEventHandler.prototype.handlePointerDown_ = function (pointerEvent) {
        this.emulateClicks_ = this.activePointers_ === 0;
        this.updateActivePointers_(pointerEvent);
        var newEvent = new _MapBrowserEvent_js__WEBPACK_IMPORTED_MODULE_4__.default(_MapBrowserEventType_js__WEBPACK_IMPORTED_MODULE_5__.default.POINTERDOWN, this.map_, pointerEvent);
        this.dispatchEvent(newEvent);
        this.down_ = pointerEvent;
        if (this.dragListenerKeys_.length === 0) {
            var doc = this.map_.getOwnerDocument();
            this.dragListenerKeys_.push((0,_events_js__WEBPACK_IMPORTED_MODULE_1__.listen)(doc, _MapBrowserEventType_js__WEBPACK_IMPORTED_MODULE_5__.default.POINTERMOVE, this.handlePointerMove_, this), (0,_events_js__WEBPACK_IMPORTED_MODULE_1__.listen)(doc, _MapBrowserEventType_js__WEBPACK_IMPORTED_MODULE_5__.default.POINTERUP, this.handlePointerUp_, this), 
            /* Note that the listener for `pointercancel is set up on
             * `pointerEventHandler_` and not `documentPointerEventHandler_` like
             * the `pointerup` and `pointermove` listeners.
             *
             * The reason for this is the following: `TouchSource.vacuumTouches_()`
             * issues `pointercancel` events, when there was no `touchend` for a
             * `touchstart`. Now, let's say a first `touchstart` is registered on
             * `pointerEventHandler_`. The `documentPointerEventHandler_` is set up.
             * But `documentPointerEventHandler_` doesn't know about the first
             * `touchstart`. If there is no `touchend` for the `touchstart`, we can
             * only receive a `touchcancel` from `pointerEventHandler_`, because it is
             * only registered there.
             */
            (0,_events_js__WEBPACK_IMPORTED_MODULE_1__.listen)(this.element_, _MapBrowserEventType_js__WEBPACK_IMPORTED_MODULE_5__.default.POINTERCANCEL, this.handlePointerUp_, this));
            if (this.element_.getRootNode && this.element_.getRootNode() !== doc) {
                this.dragListenerKeys_.push((0,_events_js__WEBPACK_IMPORTED_MODULE_1__.listen)(this.element_.getRootNode(), _MapBrowserEventType_js__WEBPACK_IMPORTED_MODULE_5__.default.POINTERUP, this.handlePointerUp_, this));
            }
        }
    };
    /**
     * @param {PointerEvent} pointerEvent Pointer
     * event.
     * @private
     */
    MapBrowserEventHandler.prototype.handlePointerMove_ = function (pointerEvent) {
        // Between pointerdown and pointerup, pointermove events are triggered.
        // To avoid a 'false' touchmove event to be dispatched, we test if the pointer
        // moved a significant distance.
        if (this.isMoving_(pointerEvent)) {
            this.dragging_ = true;
            var newEvent = new _MapBrowserEvent_js__WEBPACK_IMPORTED_MODULE_4__.default(_MapBrowserEventType_js__WEBPACK_IMPORTED_MODULE_5__.default.POINTERDRAG, this.map_, pointerEvent, this.dragging_);
            this.dispatchEvent(newEvent);
        }
    };
    /**
     * Wrap and relay a pointer event.  Note that this requires that the type
     * string for the MapBrowserEvent matches the PointerEvent type.
     * @param {PointerEvent} pointerEvent Pointer
     * event.
     * @private
     */
    MapBrowserEventHandler.prototype.relayEvent_ = function (pointerEvent) {
        this.originalPointerMoveEvent_ = pointerEvent;
        var dragging = !!(this.down_ && this.isMoving_(pointerEvent));
        this.dispatchEvent(new _MapBrowserEvent_js__WEBPACK_IMPORTED_MODULE_4__.default(pointerEvent.type, this.map_, pointerEvent, dragging));
    };
    /**
     * Flexible handling of a `touch-action: none` css equivalent: because calling
     * `preventDefault()` on a `pointermove` event does not stop native page scrolling
     * and zooming, we also listen for `touchmove` and call `preventDefault()` on it
     * when an interaction (currently `DragPan` handles the event.
     * @param {TouchEvent} event Event.
     * @private
     */
    MapBrowserEventHandler.prototype.handleTouchMove_ = function (event) {
        // Due to https://github.com/mpizenberg/elm-pep/issues/2, `this.originalPointerMoveEvent_`
        // may not be initialized yet when we get here on a platform without native pointer events.
        if (!this.originalPointerMoveEvent_ ||
            this.originalPointerMoveEvent_.defaultPrevented) {
            event.preventDefault();
        }
    };
    /**
     * @param {PointerEvent} pointerEvent Pointer
     * event.
     * @return {boolean} Is moving.
     * @private
     */
    MapBrowserEventHandler.prototype.isMoving_ = function (pointerEvent) {
        return (this.dragging_ ||
            Math.abs(pointerEvent.clientX - this.down_.clientX) >
                this.moveTolerance_ ||
            Math.abs(pointerEvent.clientY - this.down_.clientY) > this.moveTolerance_);
    };
    /**
     * Clean up.
     */
    MapBrowserEventHandler.prototype.disposeInternal = function () {
        if (this.relayedListenerKey_) {
            (0,_events_js__WEBPACK_IMPORTED_MODULE_1__.unlistenByKey)(this.relayedListenerKey_);
            this.relayedListenerKey_ = null;
        }
        this.element_.removeEventListener(_events_EventType_js__WEBPACK_IMPORTED_MODULE_3__.default.TOUCHMOVE, this.boundHandleTouchMove_);
        if (this.pointerdownListenerKey_) {
            (0,_events_js__WEBPACK_IMPORTED_MODULE_1__.unlistenByKey)(this.pointerdownListenerKey_);
            this.pointerdownListenerKey_ = null;
        }
        this.dragListenerKeys_.forEach(_events_js__WEBPACK_IMPORTED_MODULE_1__.unlistenByKey);
        this.dragListenerKeys_.length = 0;
        this.element_ = null;
        _super.prototype.disposeInternal.call(this);
    };
    return MapBrowserEventHandler;
}(_events_Target_js__WEBPACK_IMPORTED_MODULE_6__.default));
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (MapBrowserEventHandler);
//# sourceMappingURL=MapBrowserEventHandler.js.map

/***/ }),

/***/ "./node_modules/ol/MapBrowserEventType.js":
/*!************************************************!*\
  !*** ./node_modules/ol/MapBrowserEventType.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _events_EventType_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./events/EventType.js */ "./node_modules/ol/events/EventType.js");
/**
 * @module ol/MapBrowserEventType
 */

/**
 * Constants for event names.
 * @enum {string}
 */
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
    /**
     * A true single click with no dragging and no double click. Note that this
     * event is delayed by 250 ms to ensure that it is not a double click.
     * @event module:ol/MapBrowserEvent~MapBrowserEvent#singleclick
     * @api
     */
    SINGLECLICK: 'singleclick',
    /**
     * A click with no dragging. A double click will fire two of this.
     * @event module:ol/MapBrowserEvent~MapBrowserEvent#click
     * @api
     */
    CLICK: _events_EventType_js__WEBPACK_IMPORTED_MODULE_0__.default.CLICK,
    /**
     * A true double click, with no dragging.
     * @event module:ol/MapBrowserEvent~MapBrowserEvent#dblclick
     * @api
     */
    DBLCLICK: _events_EventType_js__WEBPACK_IMPORTED_MODULE_0__.default.DBLCLICK,
    /**
     * Triggered when a pointer is dragged.
     * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointerdrag
     * @api
     */
    POINTERDRAG: 'pointerdrag',
    /**
     * Triggered when a pointer is moved. Note that on touch devices this is
     * triggered when the map is panned, so is not the same as mousemove.
     * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointermove
     * @api
     */
    POINTERMOVE: 'pointermove',
    POINTERDOWN: 'pointerdown',
    POINTERUP: 'pointerup',
    POINTEROVER: 'pointerover',
    POINTEROUT: 'pointerout',
    POINTERENTER: 'pointerenter',
    POINTERLEAVE: 'pointerleave',
    POINTERCANCEL: 'pointercancel',
});
//# sourceMappingURL=MapBrowserEventType.js.map

/***/ }),

/***/ "./node_modules/ol/MapEvent.js":
/*!*************************************!*\
  !*** ./node_modules/ol/MapEvent.js ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _events_Event_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./events/Event.js */ "./node_modules/ol/events/Event.js");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
/**
 * @module ol/MapEvent
 */

/**
 * @classdesc
 * Events emitted as map events are instances of this type.
 * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map event.
 */
var MapEvent = /** @class */ (function (_super) {
    __extends(MapEvent, _super);
    /**
     * @param {string} type Event type.
     * @param {import("./PluggableMap.js").default} map Map.
     * @param {?import("./PluggableMap.js").FrameState=} opt_frameState Frame state.
     */
    function MapEvent(type, map, opt_frameState) {
        var _this = _super.call(this, type) || this;
        /**
         * The map where the event occurred.
         * @type {import("./PluggableMap.js").default}
         * @api
         */
        _this.map = map;
        /**
         * The frame state at the time of the event.
         * @type {?import("./PluggableMap.js").FrameState}
         * @api
         */
        _this.frameState = opt_frameState !== undefined ? opt_frameState : null;
        return _this;
    }
    return MapEvent;
}(_events_Event_js__WEBPACK_IMPORTED_MODULE_0__.default));
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (MapEvent);
//# sourceMappingURL=MapEvent.js.map

/***/ }),

/***/ "./node_modules/ol/MapEventType.js":
/*!*****************************************!*\
  !*** ./node_modules/ol/MapEventType.js ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/**
 * @module ol/MapEventType
 */
/**
 * @enum {string}
 */
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
    /**
     * Triggered after a map frame is rendered.
     * @event module:ol/MapEvent~MapEvent#postrender
     * @api
     */
    POSTRENDER: 'postrender',
    /**
     * Triggered when the map starts moving.
     * @event module:ol/MapEvent~MapEvent#movestart
     * @api
     */
    MOVESTART: 'movestart',
    /**
     * Triggered after the map is moved.
     * @event module:ol/MapEvent~MapEvent#moveend
     * @api
     */
    MOVEEND: 'moveend',
});
//# sourceMappingURL=MapEventType.js.map

/***/ }),

/***/ "./node_modules/ol/MapProperty.js":
/*!****************************************!*\
  !*** ./node_modules/ol/MapProperty.js ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/**
 * @module ol/MapProperty
 */
/**
 * @enum {string}
 */
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
    LAYERGROUP: 'layergroup',
    SIZE: 'size',
    TARGET: 'target',
    VIEW: 'view',
});
//# sourceMappingURL=MapProperty.js.map

/***/ }),

/***/ "./node_modules/ol/Object.js":
/*!***********************************!*\
  !*** ./node_modules/ol/Object.js ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ObjectEvent": () => (/* binding */ ObjectEvent),
/* harmony export */   "getChangeEventType": () => (/* binding */ getChangeEventType),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _events_Event_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./events/Event.js */ "./node_modules/ol/events/Event.js");
/* harmony import */ var _ObjectEventType_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./ObjectEventType.js */ "./node_modules/ol/ObjectEventType.js");
/* harmony import */ var _Observable_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./Observable.js */ "./node_modules/ol/Observable.js");
/* harmony import */ var _obj_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./obj.js */ "./node_modules/ol/obj.js");
/* harmony import */ var _util_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./util.js */ "./node_modules/ol/util.js");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
/**
 * @module ol/Object
 */





/**
 * @classdesc
 * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.
 */
var ObjectEvent = /** @class */ (function (_super) {
    __extends(ObjectEvent, _super);
    /**
     * @param {string} type The event type.
     * @param {string} key The property name.
     * @param {*} oldValue The old value for `key`.
     */
    function ObjectEvent(type, key, oldValue) {
        var _this = _super.call(this, type) || this;
        /**
         * The name of the property whose value is changing.
         * @type {string}
         * @api
         */
        _this.key = key;
        /**
         * The old value. To get the new value use `e.target.get(e.key)` where
         * `e` is the event object.
         * @type {*}
         * @api
         */
        _this.oldValue = oldValue;
        return _this;
    }
    return ObjectEvent;
}(_events_Event_js__WEBPACK_IMPORTED_MODULE_0__.default));

/**
 * @classdesc
 * Abstract base class; normally only used for creating subclasses and not
 * instantiated in apps.
 * Most non-trivial classes inherit from this.
 *
 * This extends {@link module:ol/Observable} with observable
 * properties, where each property is observable as well as the object as a
 * whole.
 *
 * Classes that inherit from this have pre-defined properties, to which you can
 * add your owns. The pre-defined properties are listed in this documentation as
 * 'Observable Properties', and have their own accessors; for example,
 * {@link module:ol/Map~Map} has a `target` property, accessed with
 * `getTarget()` and changed with `setTarget()`. Not all properties are however
 * settable. There are also general-purpose accessors `get()` and `set()`. For
 * example, `get('target')` is equivalent to `getTarget()`.
 *
 * The `set` accessors trigger a change event, and you can monitor this by
 * registering a listener. For example, {@link module:ol/View~View} has a
 * `center` property, so `view.on('change:center', function(evt) {...});` would
 * call the function whenever the value of the center property changes. Within
 * the function, `evt.target` would be the view, so `evt.target.getCenter()`
 * would return the new center.
 *
 * You can add your own observable properties with
 * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.
 * You can listen for changes on that property value with
 * `object.on('change:prop', listener)`. You can get a list of all
 * properties with {@link module:ol/Object~BaseObject#getProperties}.
 *
 * Note that the observable properties are separate from standard JS properties.
 * You can, for example, give your map object a title with
 * `map.title='New title'` and with `map.set('title', 'Another title')`. The
 * first will be a `hasOwnProperty`; the second will appear in
 * `getProperties()`. Only the second is observable.
 *
 * Properties can be deleted by using the unset method. E.g.
 * object.unset('foo').
 *
 * @fires ObjectEvent
 * @api
 */
var BaseObject = /** @class */ (function (_super) {
    __extends(BaseObject, _super);
    /**
     * @param {Object<string, *>=} opt_values An object with key-value pairs.
     */
    function BaseObject(opt_values) {
        var _this = _super.call(this) || this;
        // Call {@link module:ol/util~getUid} to ensure that the order of objects' ids is
        // the same as the order in which they were created.  This also helps to
        // ensure that object properties are always added in the same order, which
        // helps many JavaScript engines generate faster code.
        (0,_util_js__WEBPACK_IMPORTED_MODULE_1__.getUid)(_this);
        /**
         * @private
         * @type {Object<string, *>}
         */
        _this.values_ = null;
        if (opt_values !== undefined) {
            _this.setProperties(opt_values);
        }
        return _this;
    }
    /**
     * Gets a value.
     * @param {string} key Key name.
     * @return {*} Value.
     * @api
     */
    BaseObject.prototype.get = function (key) {
        var value;
        if (this.values_ && this.values_.hasOwnProperty(key)) {
            value = this.values_[key];
        }
        return value;
    };
    /**
     * Get a list of object property names.
     * @return {Array<string>} List of property names.
     * @api
     */
    BaseObject.prototype.getKeys = function () {
        return (this.values_ && Object.keys(this.values_)) || [];
    };
    /**
     * Get an object of all property names and values.
     * @return {Object<string, *>} Object.
     * @api
     */
    BaseObject.prototype.getProperties = function () {
        return (this.values_ && (0,_obj_js__WEBPACK_IMPORTED_MODULE_2__.assign)({}, this.values_)) || {};
    };
    /**
     * @return {boolean} The object has properties.
     */
    BaseObject.prototype.hasProperties = function () {
        return !!this.values_;
    };
    /**
     * @param {string} key Key name.
     * @param {*} oldValue Old value.
     */
    BaseObject.prototype.notify = function (key, oldValue) {
        var eventType;
        eventType = getChangeEventType(key);
        this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));
        eventType = _ObjectEventType_js__WEBPACK_IMPORTED_MODULE_3__.default.PROPERTYCHANGE;
        this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));
    };
    /**
     * Sets a value.
     * @param {string} key Key name.
     * @param {*} value Value.
     * @param {boolean=} opt_silent Update without triggering an event.
     * @api
     */
    BaseObject.prototype.set = function (key, value, opt_silent) {
        var values = this.values_ || (this.values_ = {});
        if (opt_silent) {
            values[key] = value;
        }
        else {
            var oldValue = values[key];
            values[key] = value;
            if (oldValue !== value) {
                this.notify(key, oldValue);
            }
        }
    };
    /**
     * Sets a collection of key-value pairs.  Note that this changes any existing
     * properties and adds new ones (it does not remove any existing properties).
     * @param {Object<string, *>} values Values.
     * @param {boolean=} opt_silent Update without triggering an event.
     * @api
     */
    BaseObject.prototype.setProperties = function (values, opt_silent) {
        for (var key in values) {
            this.set(key, values[key], opt_silent);
        }
    };
    /**
     * Apply any properties from another object without triggering events.
     * @param {BaseObject} source The source object.
     * @protected
     */
    BaseObject.prototype.applyProperties = function (source) {
        if (!source.values_) {
            return;
        }
        (0,_obj_js__WEBPACK_IMPORTED_MODULE_2__.assign)(this.values_ || (this.values_ = {}), source.values_);
    };
    /**
     * Unsets a property.
     * @param {string} key Key name.
     * @param {boolean=} opt_silent Unset without triggering an event.
     * @api
     */
    BaseObject.prototype.unset = function (key, opt_silent) {
        if (this.values_ && key in this.values_) {
            var oldValue = this.values_[key];
            delete this.values_[key];
            if ((0,_obj_js__WEBPACK_IMPORTED_MODULE_2__.isEmpty)(this.values_)) {
                this.values_ = null;
            }
            if (!opt_silent) {
                this.notify(key, oldValue);
            }
        }
    };
    return BaseObject;
}(_Observable_js__WEBPACK_IMPORTED_MODULE_4__.default));
/**
 * @type {Object<string, string>}
 */
var changeEventTypeCache = {};
/**
 * @param {string} key Key name.
 * @return {string} Change name.
 */
function getChangeEventType(key) {
    return changeEventTypeCache.hasOwnProperty(key)
        ? changeEventTypeCache[key]
        : (changeEventTypeCache[key] = 'change:' + key);
}
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (BaseObject);
//# sourceMappingURL=Object.js.map

/***/ }),

/***/ "./node_modules/ol/ObjectEventType.js":
/*!********************************************!*\
  !*** ./node_modules/ol/ObjectEventType.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/**
 * @module ol/ObjectEventType
 */
/**
 * @enum {string}
 */
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
    /**
     * Triggered when a property is changed.
     * @event module:ol/Object.ObjectEvent#propertychange
     * @api
     */
    PROPERTYCHANGE: 'propertychange',
});
//# sourceMappingURL=ObjectEventType.js.map

/***/ }),

/***/ "./node_modules/ol/Observable.js":
/*!***************************************!*\
  !*** ./node_modules/ol/Observable.js ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "unByKey": () => (/* binding */ unByKey),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _events_Target_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./events/Target.js */ "./node_modules/ol/events/Target.js");
/* harmony import */ var _events_EventType_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./events/EventType.js */ "./node_modules/ol/events/EventType.js");
/* harmony import */ var _events_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./events.js */ "./node_modules/ol/events.js");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
/**
 * @module ol/Observable
 */



/**
 * @classdesc
 * Abstract base class; normally only used for creating subclasses and not
 * instantiated in apps.
 * An event target providing convenient methods for listener registration
 * and unregistration. A generic `change` event is always available through
 * {@link module:ol/Observable~Observable#changed}.
 *
 * @fires import("./events/Event.js").default
 * @api
 */
var Observable = /** @class */ (function (_super) {
    __extends(Observable, _super);
    function Observable() {
        var _this = _super.call(this) || this;
        /**
         * @private
         * @type {number}
         */
        _this.revision_ = 0;
        return _this;
    }
    /**
     * Increases the revision counter and dispatches a 'change' event.
     * @api
     */
    Observable.prototype.changed = function () {
        ++this.revision_;
        this.dispatchEvent(_events_EventType_js__WEBPACK_IMPORTED_MODULE_0__.default.CHANGE);
    };
    /**
     * Get the version number for this object.  Each time the object is modified,
     * its version number will be incremented.
     * @return {number} Revision.
     * @api
     */
    Observable.prototype.getRevision = function () {
        return this.revision_;
    };
    /**
     * Listen for a certain type of event.
     * @param {string|Array<string>} type The event type or array of event types.
     * @param {function(?): ?} listener The listener function.
     * @return {import("./events.js").EventsKey|Array<import("./events.js").EventsKey>} Unique key for the listener. If
     *     called with an array of event types as the first argument, the return
     *     will be an array of keys.
     * @api
     */
    Observable.prototype.on = function (type, listener) {
        if (Array.isArray(type)) {
            var len = type.length;
            var keys = new Array(len);
            for (var i = 0; i < len; ++i) {
                keys[i] = (0,_events_js__WEBPACK_IMPORTED_MODULE_1__.listen)(this, type[i], listener);
            }
            return keys;
        }
        else {
            return (0,_events_js__WEBPACK_IMPORTED_MODULE_1__.listen)(this, /** @type {string} */ (type), listener);
        }
    };
    /**
     * Listen once for a certain type of event.
     * @param {string|Array<string>} type The event type or array of event types.
     * @param {function(?): ?} listener The listener function.
     * @return {import("./events.js").EventsKey|Array<import("./events.js").EventsKey>} Unique key for the listener. If
     *     called with an array of event types as the first argument, the return
     *     will be an array of keys.
     * @api
     */
    Observable.prototype.once = function (type, listener) {
        var key;
        if (Array.isArray(type)) {
            var len = type.length;
            key = new Array(len);
            for (var i = 0; i < len; ++i) {
                key[i] = (0,_events_js__WEBPACK_IMPORTED_MODULE_1__.listenOnce)(this, type[i], listener);
            }
        }
        else {
            key = (0,_events_js__WEBPACK_IMPORTED_MODULE_1__.listenOnce)(this, /** @type {string} */ (type), listener);
        }
        /** @type {Object} */ (listener).ol_key = key;
        return key;
    };
    /**
     * Unlisten for a certain type of event.
     * @param {string|Array<string>} type The event type or array of event types.
     * @param {function(?): ?} listener The listener function.
     * @api
     */
    Observable.prototype.un = function (type, listener) {
        var key = /** @type {Object} */ (listener).ol_key;
        if (key) {
            unByKey(key);
        }
        else if (Array.isArray(type)) {
            for (var i = 0, ii = type.length; i < ii; ++i) {
                this.removeEventListener(type[i], listener);
            }
        }
        else {
            this.removeEventListener(type, listener);
        }
    };
    return Observable;
}(_events_Target_js__WEBPACK_IMPORTED_MODULE_2__.default));
/**
 * Removes an event listener using the key returned by `on()` or `once()`.
 * @param {import("./events.js").EventsKey|Array<import("./events.js").EventsKey>} key The key returned by `on()`
 *     or `once()` (or an array of keys).
 * @api
 */
function unByKey(key) {
    if (Array.isArray(key)) {
        for (var i = 0, ii = key.length; i < ii; ++i) {
            (0,_events_js__WEBPACK_IMPORTED_MODULE_1__.unlistenByKey)(key[i]);
        }
    }
    else {
        (0,_events_js__WEBPACK_IMPORTED_MODULE_1__.unlistenByKey)(/** @type {import("./events.js").EventsKey} */ (key));
    }
}
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Observable);
//# sourceMappingURL=Observable.js.map

/***/ }),

/***/ "./node_modules/ol/Overlay.js":
/*!************************************!*\
  !*** ./node_modules/ol/Overlay.js ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _Object_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Object.js */ "./node_modules/ol/Object.js");
/* harmony import */ var _MapEventType_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./MapEventType.js */ "./node_modules/ol/MapEventType.js");
/* harmony import */ var _OverlayPositioning_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./OverlayPositioning.js */ "./node_modules/ol/OverlayPositioning.js");
/* harmony import */ var _css_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./css.js */ "./node_modules/ol/css.js");
/* harmony import */ var _extent_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./extent.js */ "./node_modules/ol/extent.js");
/* harmony import */ var _events_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./events.js */ "./node_modules/ol/events.js");
/* harmony import */ var _dom_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./dom.js */ "./node_modules/ol/dom.js");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
/**
 * @module ol/Overlay
 */







/**
 * @typedef {Object} Options
 * @property {number|string} [id] Set the overlay id. The overlay id can be used
 * with the {@link module:ol/Map~Map#getOverlayById} method.
 * @property {HTMLElement} [element] The overlay element.
 * @property {Array<number>} [offset=[0, 0]] Offsets in pixels used when positioning
 * the overlay. The first element in the
 * array is the horizontal offset. A positive value shifts the overlay right.
 * The second element in the array is the vertical offset. A positive value
 * shifts the overlay down.
 * @property {import("./coordinate.js").Coordinate} [position] The overlay position
 * in map projection.
 * @property {import("./OverlayPositioning.js").default} [positioning='top-left'] Defines how
 * the overlay is actually positioned with respect to its `position` property.
 * Possible values are `'bottom-left'`, `'bottom-center'`, `'bottom-right'`,
 * `'center-left'`, `'center-center'`, `'center-right'`, `'top-left'`,
 * `'top-center'`, and `'top-right'`.
 * @property {boolean} [stopEvent=true] Whether event propagation to the map
 * viewport should be stopped. If `true` the overlay is placed in the same
 * container as that of the controls (CSS class name
 * `ol-overlaycontainer-stopevent`); if `false` it is placed in the container
 * with CSS class name specified by the `className` property.
 * @property {boolean} [insertFirst=true] Whether the overlay is inserted first
 * in the overlay container, or appended. If the overlay is placed in the same
 * container as that of the controls (see the `stopEvent` option) you will
 * probably set `insertFirst` to `true` so the overlay is displayed below the
 * controls.
 * @property {PanIntoViewOptions|boolean} [autoPan=false] Pan the map when calling
 * `setPosition`, so that the overlay is entirely visible in the current viewport?
 * If `true` (deprecated), then `autoPanAnimation` and `autoPanMargin` will be
 * used to determine the panning parameters; if an object is supplied then other
 * parameters are ignored.
 * @property {PanOptions} [autoPanAnimation] The animation options used to pan
 * the overlay into view. This animation is only used when `autoPan` is enabled.
 * A `duration` and `easing` may be provided to customize the animation.
 * Deprecated and ignored if `autoPan` is supplied as an object.
 * @property {number} [autoPanMargin=20] The margin (in pixels) between the
 * overlay and the borders of the map when autopanning. Deprecated and ignored
 * if `autoPan` is supplied as an object.
 * @property {PanIntoViewOptions} [autoPanOptions] The options to use for the
 * autoPan. This is only used when `autoPan` is enabled and has preference over
 * the individual `autoPanMargin` and `autoPanOptions`.
 * @property {string} [className='ol-overlay-container ol-selectable'] CSS class
 * name.
 */
/**
 * @typedef {Object} PanOptions
 * @property {number} [duration=1000] The duration of the animation in
 * milliseconds.
 * @property {function(number):number} [easing] The easing function to use. Can
 * be one from {@link module:ol/easing} or a custom function.
 * Default is {@link module:ol/easing~inAndOut}.
 */
/**
 * @typedef {Object} PanIntoViewOptions
 * @property {PanOptions} [animation={}] The animation parameters for the pan
 * @property {number} [margin=20] The margin (in pixels) between the
 * overlay and the borders of the map when panning into view.
 */
/**
 * @enum {string}
 * @protected
 */
var Property = {
    ELEMENT: 'element',
    MAP: 'map',
    OFFSET: 'offset',
    POSITION: 'position',
    POSITIONING: 'positioning',
};
/**
 * @classdesc
 * An element to be displayed over the map and attached to a single map
 * location.  Like {@link module:ol/control/Control~Control}, Overlays are
 * visible widgets. Unlike Controls, they are not in a fixed position on the
 * screen, but are tied to a geographical coordinate, so panning the map will
 * move an Overlay but not a Control.
 *
 * Example:
 *
 *     import Overlay from 'ol/Overlay';
 *
 *     var popup = new Overlay({
 *       element: document.getElementById('popup')
 *     });
 *     popup.setPosition(coordinate);
 *     map.addOverlay(popup);
 *
 * @api
 */
var Overlay = /** @class */ (function (_super) {
    __extends(Overlay, _super);
    /**
     * @param {Options} options Overlay options.
     */
    function Overlay(options) {
        var _this = _super.call(this) || this;
        /**
         * @protected
         * @type {Options}
         */
        _this.options = options;
        /**
         * @protected
         * @type {number|string|undefined}
         */
        _this.id = options.id;
        /**
         * @protected
         * @type {boolean}
         */
        _this.insertFirst =
            options.insertFirst !== undefined ? options.insertFirst : true;
        /**
         * @protected
         * @type {boolean}
         */
        _this.stopEvent = options.stopEvent !== undefined ? options.stopEvent : true;
        /**
         * @protected
         * @type {HTMLElement}
         */
        _this.element = document.createElement('div');
        _this.element.className =
            options.className !== undefined
                ? options.className
                : 'ol-overlay-container ' + _css_js__WEBPACK_IMPORTED_MODULE_0__.CLASS_SELECTABLE;
        _this.element.style.position = 'absolute';
        _this.element.style.pointerEvents = 'auto';
        var autoPan = options.autoPan;
        if (autoPan && 'object' !== typeof autoPan) {
            autoPan = {
                animation: options.autoPanAnimation,
                margin: options.autoPanMargin,
            };
        }
        /**
         * @protected
         * @type {PanIntoViewOptions|false}
         */
        _this.autoPan = /** @type {PanIntoViewOptions} */ (autoPan) || false;
        /**
         * @protected
         * @type {{transform_: string,
         *         visible: boolean}}
         */
        _this.rendered = {
            transform_: '',
            visible: true,
        };
        /**
         * @protected
         * @type {?import("./events.js").EventsKey}
         */
        _this.mapPostrenderListenerKey = null;
        _this.addEventListener((0,_Object_js__WEBPACK_IMPORTED_MODULE_1__.getChangeEventType)(Property.ELEMENT), _this.handleElementChanged);
        _this.addEventListener((0,_Object_js__WEBPACK_IMPORTED_MODULE_1__.getChangeEventType)(Property.MAP), _this.handleMapChanged);
        _this.addEventListener((0,_Object_js__WEBPACK_IMPORTED_MODULE_1__.getChangeEventType)(Property.OFFSET), _this.handleOffsetChanged);
        _this.addEventListener((0,_Object_js__WEBPACK_IMPORTED_MODULE_1__.getChangeEventType)(Property.POSITION), _this.handlePositionChanged);
        _this.addEventListener((0,_Object_js__WEBPACK_IMPORTED_MODULE_1__.getChangeEventType)(Property.POSITIONING), _this.handlePositioningChanged);
        if (options.element !== undefined) {
            _this.setElement(options.element);
        }
        _this.setOffset(options.offset !== undefined ? options.offset : [0, 0]);
        _this.setPositioning(options.positioning !== undefined
            ? /** @type {import("./OverlayPositioning.js").default} */ (options.positioning)
            : _OverlayPositioning_js__WEBPACK_IMPORTED_MODULE_2__.default.TOP_LEFT);
        if (options.position !== undefined) {
            _this.setPosition(options.position);
        }
        return _this;
    }
    /**
     * Get the DOM element of this overlay.
     * @return {HTMLElement|undefined} The Element containing the overlay.
     * @observable
     * @api
     */
    Overlay.prototype.getElement = function () {
        return /** @type {HTMLElement|undefined} */ (this.get(Property.ELEMENT));
    };
    /**
     * Get the overlay identifier which is set on constructor.
     * @return {number|string|undefined} Id.
     * @api
     */
    Overlay.prototype.getId = function () {
        return this.id;
    };
    /**
     * Get the map associated with this overlay.
     * @return {import("./PluggableMap.js").default|undefined} The map that the
     * overlay is part of.
     * @observable
     * @api
     */
    Overlay.prototype.getMap = function () {
        return /** @type {import("./PluggableMap.js").default|undefined} */ (this.get(Property.MAP));
    };
    /**
     * Get the offset of this overlay.
     * @return {Array<number>} The offset.
     * @observable
     * @api
     */
    Overlay.prototype.getOffset = function () {
        return /** @type {Array<number>} */ (this.get(Property.OFFSET));
    };
    /**
     * Get the current position of this overlay.
     * @return {import("./coordinate.js").Coordinate|undefined} The spatial point that the overlay is
     *     anchored at.
     * @observable
     * @api
     */
    Overlay.prototype.getPosition = function () {
        return /** @type {import("./coordinate.js").Coordinate|undefined} */ (this.get(Property.POSITION));
    };
    /**
     * Get the current positioning of this overlay.
     * @return {import("./OverlayPositioning.js").default} How the overlay is positioned
     *     relative to its point on the map.
     * @observable
     * @api
     */
    Overlay.prototype.getPositioning = function () {
        return /** @type {import("./OverlayPositioning.js").default} */ (this.get(Property.POSITIONING));
    };
    /**
     * @protected
     */
    Overlay.prototype.handleElementChanged = function () {
        (0,_dom_js__WEBPACK_IMPORTED_MODULE_3__.removeChildren)(this.element);
        var element = this.getElement();
        if (element) {
            this.element.appendChild(element);
        }
    };
    /**
     * @protected
     */
    Overlay.prototype.handleMapChanged = function () {
        if (this.mapPostrenderListenerKey) {
            (0,_dom_js__WEBPACK_IMPORTED_MODULE_3__.removeNode)(this.element);
            (0,_events_js__WEBPACK_IMPORTED_MODULE_4__.unlistenByKey)(this.mapPostrenderListenerKey);
            this.mapPostrenderListenerKey = null;
        }
        var map = this.getMap();
        if (map) {
            this.mapPostrenderListenerKey = (0,_events_js__WEBPACK_IMPORTED_MODULE_4__.listen)(map, _MapEventType_js__WEBPACK_IMPORTED_MODULE_5__.default.POSTRENDER, this.render, this);
            this.updatePixelPosition();
            var container = this.stopEvent
                ? map.getOverlayContainerStopEvent()
                : map.getOverlayContainer();
            if (this.insertFirst) {
                container.insertBefore(this.element, container.childNodes[0] || null);
            }
            else {
                container.appendChild(this.element);
            }
            this.performAutoPan();
        }
    };
    /**
     * @protected
     */
    Overlay.prototype.render = function () {
        this.updatePixelPosition();
    };
    /**
     * @protected
     */
    Overlay.prototype.handleOffsetChanged = function () {
        this.updatePixelPosition();
    };
    /**
     * @protected
     */
    Overlay.prototype.handlePositionChanged = function () {
        this.updatePixelPosition();
        this.performAutoPan();
    };
    /**
     * @protected
     */
    Overlay.prototype.handlePositioningChanged = function () {
        this.updatePixelPosition();
    };
    /**
     * Set the DOM element to be associated with this overlay.
     * @param {HTMLElement|undefined} element The Element containing the overlay.
     * @observable
     * @api
     */
    Overlay.prototype.setElement = function (element) {
        this.set(Property.ELEMENT, element);
    };
    /**
     * Set the map to be associated with this overlay.
     * @param {import("./PluggableMap.js").default|undefined} map The map that the
     * overlay is part of.
     * @observable
     * @api
     */
    Overlay.prototype.setMap = function (map) {
        this.set(Property.MAP, map);
    };
    /**
     * Set the offset for this overlay.
     * @param {Array<number>} offset Offset.
     * @observable
     * @api
     */
    Overlay.prototype.setOffset = function (offset) {
        this.set(Property.OFFSET, offset);
    };
    /**
     * Set the position for this overlay. If the position is `undefined` the
     * overlay is hidden.
     * @param {import("./coordinate.js").Coordinate|undefined} position The spatial point that the overlay
     *     is anchored at.
     * @observable
     * @api
     */
    Overlay.prototype.setPosition = function (position) {
        this.set(Property.POSITION, position);
    };
    /**
     * Pan the map so that the overlay is entirely visisble in the current viewport
     * (if necessary) using the configured autoPan parameters
     * @protected
     */
    Overlay.prototype.performAutoPan = function () {
        if (this.autoPan) {
            this.panIntoView(this.autoPan);
        }
    };
    /**
     * Pan the map so that the overlay is entirely visible in the current viewport
     * (if necessary).
     * @param {PanIntoViewOptions=} opt_panIntoViewOptions Options for the pan action
     * @api
     */
    Overlay.prototype.panIntoView = function (opt_panIntoViewOptions) {
        var map = this.getMap();
        if (!map || !map.getTargetElement() || !this.get(Property.POSITION)) {
            return;
        }
        var mapRect = this.getRect(map.getTargetElement(), map.getSize());
        var element = this.getElement();
        var overlayRect = this.getRect(element, [
            (0,_dom_js__WEBPACK_IMPORTED_MODULE_3__.outerWidth)(element),
            (0,_dom_js__WEBPACK_IMPORTED_MODULE_3__.outerHeight)(element),
        ]);
        var panIntoViewOptions = opt_panIntoViewOptions || {};
        var myMargin = panIntoViewOptions.margin === undefined ? 20 : panIntoViewOptions.margin;
        if (!(0,_extent_js__WEBPACK_IMPORTED_MODULE_6__.containsExtent)(mapRect, overlayRect)) {
            // the overlay is not completely inside the viewport, so pan the map
            var offsetLeft = overlayRect[0] - mapRect[0];
            var offsetRight = mapRect[2] - overlayRect[2];
            var offsetTop = overlayRect[1] - mapRect[1];
            var offsetBottom = mapRect[3] - overlayRect[3];
            var delta = [0, 0];
            if (offsetLeft < 0) {
                // move map to the left
                delta[0] = offsetLeft - myMargin;
            }
            else if (offsetRight < 0) {
                // move map to the right
                delta[0] = Math.abs(offsetRight) + myMargin;
            }
            if (offsetTop < 0) {
                // move map up
                delta[1] = offsetTop - myMargin;
            }
            else if (offsetBottom < 0) {
                // move map down
                delta[1] = Math.abs(offsetBottom) + myMargin;
            }
            if (delta[0] !== 0 || delta[1] !== 0) {
                var center = /** @type {import("./coordinate.js").Coordinate} */ (map
                    .getView()
                    .getCenterInternal());
                var centerPx = map.getPixelFromCoordinateInternal(center);
                if (!centerPx) {
                    return;
                }
                var newCenterPx = [centerPx[0] + delta[0], centerPx[1] + delta[1]];
                var panOptions = panIntoViewOptions.animation || {};
                map.getView().animateInternal({
                    center: map.getCoordinateFromPixelInternal(newCenterPx),
                    duration: panOptions.duration,
                    easing: panOptions.easing,
                });
            }
        }
    };
    /**
     * Get the extent of an element relative to the document
     * @param {HTMLElement} element The element.
     * @param {import("./size.js").Size} size The size of the element.
     * @return {import("./extent.js").Extent} The extent.
     * @protected
     */
    Overlay.prototype.getRect = function (element, size) {
        var box = element.getBoundingClientRect();
        var offsetX = box.left + window.pageXOffset;
        var offsetY = box.top + window.pageYOffset;
        return [offsetX, offsetY, offsetX + size[0], offsetY + size[1]];
    };
    /**
     * Set the positioning for this overlay.
     * @param {import("./OverlayPositioning.js").default} positioning how the overlay is
     *     positioned relative to its point on the map.
     * @observable
     * @api
     */
    Overlay.prototype.setPositioning = function (positioning) {
        this.set(Property.POSITIONING, positioning);
    };
    /**
     * Modify the visibility of the element.
     * @param {boolean} visible Element visibility.
     * @protected
     */
    Overlay.prototype.setVisible = function (visible) {
        if (this.rendered.visible !== visible) {
            this.element.style.display = visible ? '' : 'none';
            this.rendered.visible = visible;
        }
    };
    /**
     * Update pixel position.
     * @protected
     */
    Overlay.prototype.updatePixelPosition = function () {
        var map = this.getMap();
        var position = this.getPosition();
        if (!map || !map.isRendered() || !position) {
            this.setVisible(false);
            return;
        }
        var pixel = map.getPixelFromCoordinate(position);
        var mapSize = map.getSize();
        this.updateRenderedPosition(pixel, mapSize);
    };
    /**
     * @param {import("./pixel.js").Pixel} pixel The pixel location.
     * @param {import("./size.js").Size|undefined} mapSize The map size.
     * @protected
     */
    Overlay.prototype.updateRenderedPosition = function (pixel, mapSize) {
        var style = this.element.style;
        var offset = this.getOffset();
        var positioning = this.getPositioning();
        this.setVisible(true);
        var x = Math.round(pixel[0] + offset[0]) + 'px';
        var y = Math.round(pixel[1] + offset[1]) + 'px';
        var posX = '0%';
        var posY = '0%';
        if (positioning == _OverlayPositioning_js__WEBPACK_IMPORTED_MODULE_2__.default.BOTTOM_RIGHT ||
            positioning == _OverlayPositioning_js__WEBPACK_IMPORTED_MODULE_2__.default.CENTER_RIGHT ||
            positioning == _OverlayPositioning_js__WEBPACK_IMPORTED_MODULE_2__.default.TOP_RIGHT) {
            posX = '-100%';
        }
        else if (positioning == _OverlayPositioning_js__WEBPACK_IMPORTED_MODULE_2__.default.BOTTOM_CENTER ||
            positioning == _OverlayPositioning_js__WEBPACK_IMPORTED_MODULE_2__.default.CENTER_CENTER ||
            positioning == _OverlayPositioning_js__WEBPACK_IMPORTED_MODULE_2__.default.TOP_CENTER) {
            posX = '-50%';
        }
        if (positioning == _OverlayPositioning_js__WEBPACK_IMPORTED_MODULE_2__.default.BOTTOM_LEFT ||
            positioning == _OverlayPositioning_js__WEBPACK_IMPORTED_MODULE_2__.default.BOTTOM_CENTER ||
            positioning == _OverlayPositioning_js__WEBPACK_IMPORTED_MODULE_2__.default.BOTTOM_RIGHT) {
            posY = '-100%';
        }
        else if (positioning == _OverlayPositioning_js__WEBPACK_IMPORTED_MODULE_2__.default.CENTER_LEFT ||
            positioning == _OverlayPositioning_js__WEBPACK_IMPORTED_MODULE_2__.default.CENTER_CENTER ||
            positioning == _OverlayPositioning_js__WEBPACK_IMPORTED_MODULE_2__.default.CENTER_RIGHT) {
            posY = '-50%';
        }
        var transform = "translate(" + posX + ", " + posY + ") translate(" + x + ", " + y + ")";
        if (this.rendered.transform_ != transform) {
            this.rendered.transform_ = transform;
            style.transform = transform;
            // @ts-ignore IE9
            style.msTransform = transform;
        }
    };
    /**
     * returns the options this Overlay has been created with
     * @return {Options} overlay options
     */
    Overlay.prototype.getOptions = function () {
        return this.options;
    };
    return Overlay;
}(_Object_js__WEBPACK_IMPORTED_MODULE_1__.default));
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Overlay);
//# sourceMappingURL=Overlay.js.map

/***/ }),

/***/ "./node_modules/ol/OverlayPositioning.js":
/*!***********************************************!*\
  !*** ./node_modules/ol/OverlayPositioning.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/**
 * @module ol/OverlayPositioning
 */
/**
 * Overlay position: `'bottom-left'`, `'bottom-center'`,  `'bottom-right'`,
 * `'center-left'`, `'center-center'`, `'center-right'`, `'top-left'`,
 * `'top-center'`, `'top-right'`
 * @enum {string}
 */
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
    BOTTOM_LEFT: 'bottom-left',
    BOTTOM_CENTER: 'bottom-center',
    BOTTOM_RIGHT: 'bottom-right',
    CENTER_LEFT: 'center-left',
    CENTER_CENTER: 'center-center',
    CENTER_RIGHT: 'center-right',
    TOP_LEFT: 'top-left',
    TOP_CENTER: 'top-center',
    TOP_RIGHT: 'top-right',
});
//# sourceMappingURL=OverlayPositioning.js.map

/***/ }),

/***/ "./node_modules/ol/PluggableMap.js":
/*!*****************************************!*\
  !*** ./node_modules/ol/PluggableMap.js ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _Object_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./Object.js */ "./node_modules/ol/Object.js");
/* harmony import */ var _Collection_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Collection.js */ "./node_modules/ol/Collection.js");
/* harmony import */ var _CollectionEventType_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./CollectionEventType.js */ "./node_modules/ol/CollectionEventType.js");
/* harmony import */ var _events_EventType_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./events/EventType.js */ "./node_modules/ol/events/EventType.js");
/* harmony import */ var _layer_Group_js__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./layer/Group.js */ "./node_modules/ol/layer/Group.js");
/* harmony import */ var _MapBrowserEvent_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./MapBrowserEvent.js */ "./node_modules/ol/MapBrowserEvent.js");
/* harmony import */ var _MapBrowserEventHandler_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./MapBrowserEventHandler.js */ "./node_modules/ol/MapBrowserEventHandler.js");
/* harmony import */ var _MapBrowserEventType_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./MapBrowserEventType.js */ "./node_modules/ol/MapBrowserEventType.js");
/* harmony import */ var _MapEvent_js__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./MapEvent.js */ "./node_modules/ol/MapEvent.js");
/* harmony import */ var _MapEventType_js__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./MapEventType.js */ "./node_modules/ol/MapEventType.js");
/* harmony import */ var _MapProperty_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./MapProperty.js */ "./node_modules/ol/MapProperty.js");
/* harmony import */ var _ObjectEventType_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./ObjectEventType.js */ "./node_modules/ol/ObjectEventType.js");
/* harmony import */ var _pointer_EventType_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./pointer/EventType.js */ "./node_modules/ol/pointer/EventType.js");
/* harmony import */ var _render_EventType_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./render/EventType.js */ "./node_modules/ol/render/EventType.js");
/* harmony import */ var _TileQueue_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./TileQueue.js */ "./node_modules/ol/TileQueue.js");
/* harmony import */ var _View_js__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./View.js */ "./node_modules/ol/View.js");
/* harmony import */ var _ViewHint_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./ViewHint.js */ "./node_modules/ol/ViewHint.js");
/* harmony import */ var _has_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./has.js */ "./node_modules/ol/has.js");
/* harmony import */ var _functions_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./functions.js */ "./node_modules/ol/functions.js");
/* harmony import */ var _transform_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./transform.js */ "./node_modules/ol/transform.js");
/* harmony import */ var _asserts_js__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ./asserts.js */ "./node_modules/ol/asserts.js");
/* harmony import */ var _extent_js__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./extent.js */ "./node_modules/ol/extent.js");
/* harmony import */ var _proj_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./proj.js */ "./node_modules/ol/proj.js");
/* harmony import */ var _size_js__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./size.js */ "./node_modules/ol/size.js");
/* harmony import */ var _events_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./events.js */ "./node_modules/ol/events.js");
/* harmony import */ var _dom_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./dom.js */ "./node_modules/ol/dom.js");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
/**
 * @module ol/PluggableMap
 */


























/**
 * State of the current frame. Only `pixelRatio`, `time` and `viewState` should
 * be used in applications.
 * @typedef {Object} FrameState
 * @property {number} pixelRatio The pixel ratio of the frame.
 * @property {number} time The time when rendering of the frame was requested.
 * @property {import("./View.js").State} viewState The state of the current view.
 * @property {boolean} animate
 * @property {import("./transform.js").Transform} coordinateToPixelTransform
 * @property {import("rbush").default} declutterTree
 * @property {null|import("./extent.js").Extent} extent
 * @property {number} index
 * @property {Array<import("./layer/Layer.js").State>} layerStatesArray
 * @property {number} layerIndex
 * @property {import("./transform.js").Transform} pixelToCoordinateTransform
 * @property {Array<PostRenderFunction>} postRenderFunctions
 * @property {import("./size.js").Size} size
 * @property {TileQueue} tileQueue
 * @property {!Object<string, Object<string, boolean>>} usedTiles
 * @property {Array<number>} viewHints
 * @property {!Object<string, Object<string, boolean>>} wantedTiles
 */
/**
 * @typedef {function(PluggableMap, ?FrameState): any} PostRenderFunction
 */
/**
 * @typedef {Object} AtPixelOptions
 * @property {undefined|function(import("./layer/Layer.js").default): boolean} [layerFilter] Layer filter
 * function. The filter function will receive one argument, the
 * {@link module:ol/layer/Layer layer-candidate} and it should return a boolean value.
 * Only layers which are visible and for which this function returns `true`
 * will be tested for features. By default, all visible layers will be tested.
 * @property {number} [hitTolerance=0] Hit-detection tolerance in css pixels. Pixels
 * inside the radius around the given position will be checked for features.
 * @property {boolean} [checkWrapped=true] Check-Wrapped Will check for for wrapped geometries inside the range of
 *   +/- 1 world width. Works only if a projection is used that can be wrapped.
 */
/**
 * @typedef {Object} MapOptionsInternal
 * @property {Collection<import("./control/Control.js").default>} [controls]
 * @property {Collection<import("./interaction/Interaction.js").default>} [interactions]
 * @property {HTMLElement|Document} keyboardEventTarget
 * @property {Collection<import("./Overlay.js").default>} overlays
 * @property {Object<string, *>} values
 */
/**
 * Object literal with config options for the map.
 * @typedef {Object} MapOptions
 * @property {Collection<import("./control/Control.js").default>|Array<import("./control/Control.js").default>} [controls]
 * Controls initially added to the map. If not specified,
 * {@link module:ol/control~defaults} is used.
 * @property {number} [pixelRatio=window.devicePixelRatio] The ratio between
 * physical pixels and device-independent pixels (dips) on the device.
 * @property {Collection<import("./interaction/Interaction.js").default>|Array<import("./interaction/Interaction.js").default>} [interactions]
 * Interactions that are initially added to the map. If not specified,
 * {@link module:ol/interaction~defaults} is used.
 * @property {HTMLElement|Document|string} [keyboardEventTarget] The element to
 * listen to keyboard events on. This determines when the `KeyboardPan` and
 * `KeyboardZoom` interactions trigger. For example, if this option is set to
 * `document` the keyboard interactions will always trigger. If this option is
 * not specified, the element the library listens to keyboard events on is the
 * map target (i.e. the user-provided div for the map). If this is not
 * `document`, the target element needs to be focused for key events to be
 * emitted, requiring that the target element has a `tabindex` attribute.
 * @property {Array<import("./layer/Base.js").default>|Collection<import("./layer/Base.js").default>|LayerGroup} [layers]
 * Layers. If this is not defined, a map with no layers will be rendered. Note
 * that layers are rendered in the order supplied, so if you want, for example,
 * a vector layer to appear on top of a tile layer, it must come after the tile
 * layer.
 * @property {number} [maxTilesLoading=16] Maximum number tiles to load
 * simultaneously.
 * @property {number} [moveTolerance=1] The minimum distance in pixels the
 * cursor must move to be detected as a map move event instead of a click.
 * Increasing this value can make it easier to click on the map.
 * @property {Collection<import("./Overlay.js").default>|Array<import("./Overlay.js").default>} [overlays]
 * Overlays initially added to the map. By default, no overlays are added.
 * @property {HTMLElement|string} [target] The container for the map, either the
 * element itself or the `id` of the element. If not specified at construction
 * time, {@link module:ol/Map~Map#setTarget} must be called for the map to be
 * rendered. If passed by element, the container can be in a secondary document.
 * @property {View} [view] The map's view.  No layer sources will be
 * fetched unless this is specified at construction time or through
 * {@link module:ol/Map~Map#setView}.
 */
/**
 * @fires import("./MapBrowserEvent.js").MapBrowserEvent
 * @fires import("./MapEvent.js").MapEvent
 * @fires import("./render/Event.js").default#precompose
 * @fires import("./render/Event.js").default#postcompose
 * @fires import("./render/Event.js").default#rendercomplete
 * @api
 */
var PluggableMap = /** @class */ (function (_super) {
    __extends(PluggableMap, _super);
    /**
     * @param {MapOptions} options Map options.
     */
    function PluggableMap(options) {
        var _this = _super.call(this) || this;
        var optionsInternal = createOptionsInternal(options);
        /** @private */
        _this.boundHandleBrowserEvent_ = _this.handleBrowserEvent.bind(_this);
        /**
         * @type {number}
         * @private
         */
        _this.maxTilesLoading_ =
            options.maxTilesLoading !== undefined ? options.maxTilesLoading : 16;
        /**
         * @private
         * @type {number}
         */
        _this.pixelRatio_ =
            options.pixelRatio !== undefined
                ? options.pixelRatio
                : _has_js__WEBPACK_IMPORTED_MODULE_1__.DEVICE_PIXEL_RATIO;
        /**
         * @private
         * @type {*}
         */
        _this.postRenderTimeoutHandle_;
        /**
         * @private
         * @type {number|undefined}
         */
        _this.animationDelayKey_;
        /**
         * @private
         */
        _this.animationDelay_ = /** @this {PluggableMap} */ function () {
            this.animationDelayKey_ = undefined;
            this.renderFrame_(Date.now());
        }.bind(_this);
        /**
         * @private
         * @type {import("./transform.js").Transform}
         */
        _this.coordinateToPixelTransform_ = (0,_transform_js__WEBPACK_IMPORTED_MODULE_2__.create)();
        /**
         * @private
         * @type {import("./transform.js").Transform}
         */
        _this.pixelToCoordinateTransform_ = (0,_transform_js__WEBPACK_IMPORTED_MODULE_2__.create)();
        /**
         * @private
         * @type {number}
         */
        _this.frameIndex_ = 0;
        /**
         * @private
         * @type {?FrameState}
         */
        _this.frameState_ = null;
        /**
         * The extent at the previous 'moveend' event.
         * @private
         * @type {import("./extent.js").Extent}
         */
        _this.previousExtent_ = null;
        /**
         * @private
         * @type {?import("./events.js").EventsKey}
         */
        _this.viewPropertyListenerKey_ = null;
        /**
         * @private
         * @type {?import("./events.js").EventsKey}
         */
        _this.viewChangeListenerKey_ = null;
        /**
         * @private
         * @type {?Array<import("./events.js").EventsKey>}
         */
        _this.layerGroupPropertyListenerKeys_ = null;
        /**
         * @private
         * @type {!HTMLElement}
         */
        _this.viewport_ = document.createElement('div');
        _this.viewport_.className =
            'ol-viewport' + ('ontouchstart' in window ? ' ol-touch' : '');
        _this.viewport_.style.position = 'relative';
        _this.viewport_.style.overflow = 'hidden';
        _this.viewport_.style.width = '100%';
        _this.viewport_.style.height = '100%';
        /**
         * @private
         * @type {!HTMLElement}
         */
        _this.overlayContainer_ = document.createElement('div');
        _this.overlayContainer_.style.position = 'absolute';
        _this.overlayContainer_.style.zIndex = '0';
        _this.overlayContainer_.style.width = '100%';
        _this.overlayContainer_.style.height = '100%';
        _this.overlayContainer_.style.pointerEvents = 'none';
        _this.overlayContainer_.className = 'ol-overlaycontainer';
        _this.viewport_.appendChild(_this.overlayContainer_);
        /**
         * @private
         * @type {!HTMLElement}
         */
        _this.overlayContainerStopEvent_ = document.createElement('div');
        _this.overlayContainerStopEvent_.style.position = 'absolute';
        _this.overlayContainerStopEvent_.style.zIndex = '0';
        _this.overlayContainerStopEvent_.style.width = '100%';
        _this.overlayContainerStopEvent_.style.height = '100%';
        _this.overlayContainerStopEvent_.style.pointerEvents = 'none';
        _this.overlayContainerStopEvent_.className = 'ol-overlaycontainer-stopevent';
        _this.viewport_.appendChild(_this.overlayContainerStopEvent_);
        /**
         * @private
         * @type {MapBrowserEventHandler}
         */
        _this.mapBrowserEventHandler_ = null;
        /**
         * @private
         * @type {number}
         */
        _this.moveTolerance_ = options.moveTolerance;
        /**
         * @private
         * @type {HTMLElement|Document}
         */
        _this.keyboardEventTarget_ = optionsInternal.keyboardEventTarget;
        /**
         * @private
         * @type {?Array<import("./events.js").EventsKey>}
         */
        _this.keyHandlerKeys_ = null;
        /**
         * @type {Collection<import("./control/Control.js").default>}
         * @protected
         */
        _this.controls = optionsInternal.controls || new _Collection_js__WEBPACK_IMPORTED_MODULE_3__.default();
        /**
         * @type {Collection<import("./interaction/Interaction.js").default>}
         * @protected
         */
        _this.interactions = optionsInternal.interactions || new _Collection_js__WEBPACK_IMPORTED_MODULE_3__.default();
        /**
         * @type {Collection<import("./Overlay.js").default>}
         * @private
         */
        _this.overlays_ = optionsInternal.overlays;
        /**
         * A lookup of overlays by id.
         * @private
         * @type {Object<string, import("./Overlay.js").default>}
         */
        _this.overlayIdIndex_ = {};
        /**
         * @type {import("./renderer/Map.js").default}
         * @private
         */
        _this.renderer_ = null;
        /**
         * @type {undefined|function(Event): void}
         * @private
         */
        _this.handleResize_;
        /**
         * @private
         * @type {!Array<PostRenderFunction>}
         */
        _this.postRenderFunctions_ = [];
        /**
         * @private
         * @type {TileQueue}
         */
        _this.tileQueue_ = new _TileQueue_js__WEBPACK_IMPORTED_MODULE_4__.default(_this.getTilePriority.bind(_this), _this.handleTileChange_.bind(_this));
        _this.addEventListener((0,_Object_js__WEBPACK_IMPORTED_MODULE_5__.getChangeEventType)(_MapProperty_js__WEBPACK_IMPORTED_MODULE_6__.default.LAYERGROUP), _this.handleLayerGroupChanged_);
        _this.addEventListener((0,_Object_js__WEBPACK_IMPORTED_MODULE_5__.getChangeEventType)(_MapProperty_js__WEBPACK_IMPORTED_MODULE_6__.default.VIEW), _this.handleViewChanged_);
        _this.addEventListener((0,_Object_js__WEBPACK_IMPORTED_MODULE_5__.getChangeEventType)(_MapProperty_js__WEBPACK_IMPORTED_MODULE_6__.default.SIZE), _this.handleSizeChanged_);
        _this.addEventListener((0,_Object_js__WEBPACK_IMPORTED_MODULE_5__.getChangeEventType)(_MapProperty_js__WEBPACK_IMPORTED_MODULE_6__.default.TARGET), _this.handleTargetChanged_);
        // setProperties will trigger the rendering of the map if the map
        // is "defined" already.
        _this.setProperties(optionsInternal.values);
        _this.controls.forEach(
        /**
         * @param {import("./control/Control.js").default} control Control.
         * @this {PluggableMap}
         */
        function (control) {
            control.setMap(this);
        }.bind(_this));
        _this.controls.addEventListener(_CollectionEventType_js__WEBPACK_IMPORTED_MODULE_7__.default.ADD, 
        /**
         * @param {import("./Collection.js").CollectionEvent} event CollectionEvent.
         */
        function (event) {
            event.element.setMap(this);
        }.bind(_this));
        _this.controls.addEventListener(_CollectionEventType_js__WEBPACK_IMPORTED_MODULE_7__.default.REMOVE, 
        /**
         * @param {import("./Collection.js").CollectionEvent} event CollectionEvent.
         */
        function (event) {
            event.element.setMap(null);
        }.bind(_this));
        _this.interactions.forEach(
        /**
         * @param {import("./interaction/Interaction.js").default} interaction Interaction.
         * @this {PluggableMap}
         */
        function (interaction) {
            interaction.setMap(this);
        }.bind(_this));
        _this.interactions.addEventListener(_CollectionEventType_js__WEBPACK_IMPORTED_MODULE_7__.default.ADD, 
        /**
         * @param {import("./Collection.js").CollectionEvent} event CollectionEvent.
         */
        function (event) {
            event.element.setMap(this);
        }.bind(_this));
        _this.interactions.addEventListener(_CollectionEventType_js__WEBPACK_IMPORTED_MODULE_7__.default.REMOVE, 
        /**
         * @param {import("./Collection.js").CollectionEvent} event CollectionEvent.
         */
        function (event) {
            event.element.setMap(null);
        }.bind(_this));
        _this.overlays_.forEach(_this.addOverlayInternal_.bind(_this));
        _this.overlays_.addEventListener(_CollectionEventType_js__WEBPACK_IMPORTED_MODULE_7__.default.ADD, 
        /**
         * @param {import("./Collection.js").CollectionEvent} event CollectionEvent.
         */
        function (event) {
            this.addOverlayInternal_(
            /** @type {import("./Overlay.js").default} */ (event.element));
        }.bind(_this));
        _this.overlays_.addEventListener(_CollectionEventType_js__WEBPACK_IMPORTED_MODULE_7__.default.REMOVE, 
        /**
         * @param {import("./Collection.js").CollectionEvent} event CollectionEvent.
         */
        function (event) {
            var overlay = /** @type {import("./Overlay.js").default} */ (event.element);
            var id = overlay.getId();
            if (id !== undefined) {
                delete this.overlayIdIndex_[id.toString()];
            }
            event.element.setMap(null);
        }.bind(_this));
        return _this;
    }
    /**
     * @abstract
     * @return {import("./renderer/Map.js").default} The map renderer
     */
    PluggableMap.prototype.createRenderer = function () {
        throw new Error('Use a map type that has a createRenderer method');
    };
    /**
     * Add the given control to the map.
     * @param {import("./control/Control.js").default} control Control.
     * @api
     */
    PluggableMap.prototype.addControl = function (control) {
        this.getControls().push(control);
    };
    /**
     * Add the given interaction to the map. If you want to add an interaction
     * at another point of the collection use `getInteraction()` and the methods
     * available on {@link module:ol/Collection~Collection}. This can be used to
     * stop the event propagation from the handleEvent function. The interactions
     * get to handle the events in the reverse order of this collection.
     * @param {import("./interaction/Interaction.js").default} interaction Interaction to add.
     * @api
     */
    PluggableMap.prototype.addInteraction = function (interaction) {
        this.getInteractions().push(interaction);
    };
    /**
     * Adds the given layer to the top of this map. If you want to add a layer
     * elsewhere in the stack, use `getLayers()` and the methods available on
     * {@link module:ol/Collection~Collection}.
     * @param {import("./layer/Base.js").default} layer Layer.
     * @api
     */
    PluggableMap.prototype.addLayer = function (layer) {
        var layers = this.getLayerGroup().getLayers();
        layers.push(layer);
    };
    /**
     * Add the given overlay to the map.
     * @param {import("./Overlay.js").default} overlay Overlay.
     * @api
     */
    PluggableMap.prototype.addOverlay = function (overlay) {
        this.getOverlays().push(overlay);
    };
    /**
     * This deals with map's overlay collection changes.
     * @param {import("./Overlay.js").default} overlay Overlay.
     * @private
     */
    PluggableMap.prototype.addOverlayInternal_ = function (overlay) {
        var id = overlay.getId();
        if (id !== undefined) {
            this.overlayIdIndex_[id.toString()] = overlay;
        }
        overlay.setMap(this);
    };
    /**
     *
     * Clean up.
     */
    PluggableMap.prototype.disposeInternal = function () {
        this.setTarget(null);
        _super.prototype.disposeInternal.call(this);
    };
    /**
     * Detect features that intersect a pixel on the viewport, and execute a
     * callback with each intersecting feature. Layers included in the detection can
     * be configured through the `layerFilter` option in `opt_options`.
     * @param {import("./pixel.js").Pixel} pixel Pixel.
     * @param {function(import("./Feature.js").FeatureLike, import("./layer/Layer.js").default, import("./geom/SimpleGeometry.js").default): T} callback Feature callback. The callback will be
     *     called with two arguments. The first argument is one
     *     {@link module:ol/Feature feature} or
     *     {@link module:ol/render/Feature render feature} at the pixel, the second is
     *     the {@link module:ol/layer/Layer layer} of the feature and will be null for
     *     unmanaged layers. To stop detection, callback functions can return a
     *     truthy value.
     * @param {AtPixelOptions=} opt_options Optional options.
     * @return {T|undefined} Callback result, i.e. the return value of last
     * callback execution, or the first truthy callback return value.
     * @template S,T
     * @api
     */
    PluggableMap.prototype.forEachFeatureAtPixel = function (pixel, callback, opt_options) {
        if (!this.frameState_) {
            return;
        }
        var coordinate = this.getCoordinateFromPixelInternal(pixel);
        opt_options = opt_options !== undefined ? opt_options : {};
        var hitTolerance = opt_options.hitTolerance !== undefined ? opt_options.hitTolerance : 0;
        var layerFilter = opt_options.layerFilter !== undefined ? opt_options.layerFilter : _functions_js__WEBPACK_IMPORTED_MODULE_8__.TRUE;
        var checkWrapped = opt_options.checkWrapped !== false;
        return this.renderer_.forEachFeatureAtCoordinate(coordinate, this.frameState_, hitTolerance, checkWrapped, callback, null, layerFilter, null);
    };
    /**
     * Get all features that intersect a pixel on the viewport.
     * @param {import("./pixel.js").Pixel} pixel Pixel.
     * @param {AtPixelOptions=} opt_options Optional options.
     * @return {Array<import("./Feature.js").FeatureLike>} The detected features or
     * an empty array if none were found.
     * @api
     */
    PluggableMap.prototype.getFeaturesAtPixel = function (pixel, opt_options) {
        var features = [];
        this.forEachFeatureAtPixel(pixel, function (feature) {
            features.push(feature);
        }, opt_options);
        return features;
    };
    /**
     * Detect layers that have a color value at a pixel on the viewport, and
     * execute a callback with each matching layer. Layers included in the
     * detection can be configured through `opt_layerFilter`.
     *
     * Note: this may give false positives unless the map layers have had different `className`
     * properties assigned to them.
     *
     * @param {import("./pixel.js").Pixel} pixel Pixel.
     * @param {function(this: S, import("./layer/Layer.js").default, (Uint8ClampedArray|Uint8Array)): T} callback
     *     Layer callback. This callback will receive two arguments: first is the
     *     {@link module:ol/layer/Layer layer}, second argument is an array representing
     *     [R, G, B, A] pixel values (0 - 255) and will be `null` for layer types
     *     that do not currently support this argument. To stop detection, callback
     *     functions can return a truthy value.
     * @param {AtPixelOptions=} opt_options Configuration options.
     * @return {T|undefined} Callback result, i.e. the return value of last
     * callback execution, or the first truthy callback return value.
     * @template S,T
     * @api
     */
    PluggableMap.prototype.forEachLayerAtPixel = function (pixel, callback, opt_options) {
        if (!this.frameState_) {
            return;
        }
        var options = opt_options || {};
        var hitTolerance = options.hitTolerance !== undefined ? options.hitTolerance : 0;
        var layerFilter = options.layerFilter || _functions_js__WEBPACK_IMPORTED_MODULE_8__.TRUE;
        return this.renderer_.forEachLayerAtPixel(pixel, this.frameState_, hitTolerance, callback, layerFilter);
    };
    /**
     * Detect if features intersect a pixel on the viewport. Layers included in the
     * detection can be configured through `opt_layerFilter`.
     * @param {import("./pixel.js").Pixel} pixel Pixel.
     * @param {AtPixelOptions=} opt_options Optional options.
     * @return {boolean} Is there a feature at the given pixel?
     * @api
     */
    PluggableMap.prototype.hasFeatureAtPixel = function (pixel, opt_options) {
        if (!this.frameState_) {
            return false;
        }
        var coordinate = this.getCoordinateFromPixelInternal(pixel);
        opt_options = opt_options !== undefined ? opt_options : {};
        var layerFilter = opt_options.layerFilter !== undefined ? opt_options.layerFilter : _functions_js__WEBPACK_IMPORTED_MODULE_8__.TRUE;
        var hitTolerance = opt_options.hitTolerance !== undefined ? opt_options.hitTolerance : 0;
        var checkWrapped = opt_options.checkWrapped !== false;
        return this.renderer_.hasFeatureAtCoordinate(coordinate, this.frameState_, hitTolerance, checkWrapped, layerFilter, null);
    };
    /**
     * Returns the coordinate in user projection for a browser event.
     * @param {MouseEvent} event Event.
     * @return {import("./coordinate.js").Coordinate} Coordinate.
     * @api
     */
    PluggableMap.prototype.getEventCoordinate = function (event) {
        return this.getCoordinateFromPixel(this.getEventPixel(event));
    };
    /**
     * Returns the coordinate in view projection for a browser event.
     * @param {MouseEvent} event Event.
     * @return {import("./coordinate.js").Coordinate} Coordinate.
     */
    PluggableMap.prototype.getEventCoordinateInternal = function (event) {
        return this.getCoordinateFromPixelInternal(this.getEventPixel(event));
    };
    /**
     * Returns the map pixel position for a browser event relative to the viewport.
     * @param {UIEvent} event Event.
     * @return {import("./pixel.js").Pixel} Pixel.
     * @api
     */
    PluggableMap.prototype.getEventPixel = function (event) {
        var viewportPosition = this.viewport_.getBoundingClientRect();
        var eventPosition = 
        //FIXME Are we really calling this with a TouchEvent anywhere?
        'changedTouches' in event
            ? /** @type {TouchEvent} */ (event).changedTouches[0]
            : /** @type {MouseEvent} */ (event);
        return [
            eventPosition.clientX - viewportPosition.left,
            eventPosition.clientY - viewportPosition.top,
        ];
    };
    /**
     * Get the target in which this map is rendered.
     * Note that this returns what is entered as an option or in setTarget:
     * if that was an element, it returns an element; if a string, it returns that.
     * @return {HTMLElement|string|undefined} The Element or id of the Element that the
     *     map is rendered in.
     * @observable
     * @api
     */
    PluggableMap.prototype.getTarget = function () {
        return /** @type {HTMLElement|string|undefined} */ (this.get(_MapProperty_js__WEBPACK_IMPORTED_MODULE_6__.default.TARGET));
    };
    /**
     * Get the DOM element into which this map is rendered. In contrast to
     * `getTarget` this method always return an `Element`, or `null` if the
     * map has no target.
     * @return {HTMLElement} The element that the map is rendered in.
     * @api
     */
    PluggableMap.prototype.getTargetElement = function () {
        var target = this.getTarget();
        if (target !== undefined) {
            return typeof target === 'string'
                ? document.getElementById(target)
                : target;
        }
        else {
            return null;
        }
    };
    /**
     * Get the coordinate for a given pixel.  This returns a coordinate in the
     * user projection.
     * @param {import("./pixel.js").Pixel} pixel Pixel position in the map viewport.
     * @return {import("./coordinate.js").Coordinate} The coordinate for the pixel position.
     * @api
     */
    PluggableMap.prototype.getCoordinateFromPixel = function (pixel) {
        return (0,_proj_js__WEBPACK_IMPORTED_MODULE_0__.toUserCoordinate)(this.getCoordinateFromPixelInternal(pixel), this.getView().getProjection());
    };
    /**
     * Get the coordinate for a given pixel.  This returns a coordinate in the
     * map view projection.
     * @param {import("./pixel.js").Pixel} pixel Pixel position in the map viewport.
     * @return {import("./coordinate.js").Coordinate} The coordinate for the pixel position.
     */
    PluggableMap.prototype.getCoordinateFromPixelInternal = function (pixel) {
        var frameState = this.frameState_;
        if (!frameState) {
            return null;
        }
        else {
            return (0,_transform_js__WEBPACK_IMPORTED_MODULE_2__.apply)(frameState.pixelToCoordinateTransform, pixel.slice());
        }
    };
    /**
     * Get the map controls. Modifying this collection changes the controls
     * associated with the map.
     * @return {Collection<import("./control/Control.js").default>} Controls.
     * @api
     */
    PluggableMap.prototype.getControls = function () {
        return this.controls;
    };
    /**
     * Get the map overlays. Modifying this collection changes the overlays
     * associated with the map.
     * @return {Collection<import("./Overlay.js").default>} Overlays.
     * @api
     */
    PluggableMap.prototype.getOverlays = function () {
        return this.overlays_;
    };
    /**
     * Get an overlay by its identifier (the value returned by overlay.getId()).
     * Note that the index treats string and numeric identifiers as the same. So
     * `map.getOverlayById(2)` will return an overlay with id `'2'` or `2`.
     * @param {string|number} id Overlay identifier.
     * @return {import("./Overlay.js").default} Overlay.
     * @api
     */
    PluggableMap.prototype.getOverlayById = function (id) {
        var overlay = this.overlayIdIndex_[id.toString()];
        return overlay !== undefined ? overlay : null;
    };
    /**
     * Get the map interactions. Modifying this collection changes the interactions
     * associated with the map.
     *
     * Interactions are used for e.g. pan, zoom and rotate.
     * @return {Collection<import("./interaction/Interaction.js").default>} Interactions.
     * @api
     */
    PluggableMap.prototype.getInteractions = function () {
        return this.interactions;
    };
    /**
     * Get the layergroup associated with this map.
     * @return {LayerGroup} A layer group containing the layers in this map.
     * @observable
     * @api
     */
    PluggableMap.prototype.getLayerGroup = function () {
        return /** @type {LayerGroup} */ (this.get(_MapProperty_js__WEBPACK_IMPORTED_MODULE_6__.default.LAYERGROUP));
    };
    /**
     * Get the collection of layers associated with this map.
     * @return {!Collection<import("./layer/Base.js").default>} Layers.
     * @api
     */
    PluggableMap.prototype.getLayers = function () {
        var layers = this.getLayerGroup().getLayers();
        return layers;
    };
    /**
     * @return {boolean} Layers have sources that are still loading.
     */
    PluggableMap.prototype.getLoading = function () {
        var layerStatesArray = this.getLayerGroup().getLayerStatesArray();
        for (var i = 0, ii = layerStatesArray.length; i < ii; ++i) {
            var layer = layerStatesArray[i].layer;
            var source = /** @type {import("./layer/Layer.js").default} */ (layer).getSource();
            if (source && source.loading) {
                return true;
            }
        }
        return false;
    };
    /**
     * Get the pixel for a coordinate.  This takes a coordinate in the user
     * projection and returns the corresponding pixel.
     * @param {import("./coordinate.js").Coordinate} coordinate A map coordinate.
     * @return {import("./pixel.js").Pixel} A pixel position in the map viewport.
     * @api
     */
    PluggableMap.prototype.getPixelFromCoordinate = function (coordinate) {
        var viewCoordinate = (0,_proj_js__WEBPACK_IMPORTED_MODULE_0__.fromUserCoordinate)(coordinate, this.getView().getProjection());
        return this.getPixelFromCoordinateInternal(viewCoordinate);
    };
    /**
     * Get the pixel for a coordinate.  This takes a coordinate in the map view
     * projection and returns the corresponding pixel.
     * @param {import("./coordinate.js").Coordinate} coordinate A map coordinate.
     * @return {import("./pixel.js").Pixel} A pixel position in the map viewport.
     */
    PluggableMap.prototype.getPixelFromCoordinateInternal = function (coordinate) {
        var frameState = this.frameState_;
        if (!frameState) {
            return null;
        }
        else {
            return (0,_transform_js__WEBPACK_IMPORTED_MODULE_2__.apply)(frameState.coordinateToPixelTransform, coordinate.slice(0, 2));
        }
    };
    /**
     * Get the map renderer.
     * @return {import("./renderer/Map.js").default} Renderer
     */
    PluggableMap.prototype.getRenderer = function () {
        return this.renderer_;
    };
    /**
     * Get the size of this map.
     * @return {import("./size.js").Size|undefined} The size in pixels of the map in the DOM.
     * @observable
     * @api
     */
    PluggableMap.prototype.getSize = function () {
        return /** @type {import("./size.js").Size|undefined} */ (this.get(_MapProperty_js__WEBPACK_IMPORTED_MODULE_6__.default.SIZE));
    };
    /**
     * Get the view associated with this map. A view manages properties such as
     * center and resolution.
     * @return {View} The view that controls this map.
     * @observable
     * @api
     */
    PluggableMap.prototype.getView = function () {
        return /** @type {View} */ (this.get(_MapProperty_js__WEBPACK_IMPORTED_MODULE_6__.default.VIEW));
    };
    /**
     * Get the element that serves as the map viewport.
     * @return {HTMLElement} Viewport.
     * @api
     */
    PluggableMap.prototype.getViewport = function () {
        return this.viewport_;
    };
    /**
     * Get the element that serves as the container for overlays.  Elements added to
     * this container will let mousedown and touchstart events through to the map,
     * so clicks and gestures on an overlay will trigger {@link module:ol/MapBrowserEvent~MapBrowserEvent}
     * events.
     * @return {!HTMLElement} The map's overlay container.
     */
    PluggableMap.prototype.getOverlayContainer = function () {
        return this.overlayContainer_;
    };
    /**
     * Get the element that serves as a container for overlays that don't allow
     * event propagation. Elements added to this container won't let mousedown and
     * touchstart events through to the map, so clicks and gestures on an overlay
     * don't trigger any {@link module:ol/MapBrowserEvent~MapBrowserEvent}.
     * @return {!HTMLElement} The map's overlay container that stops events.
     */
    PluggableMap.prototype.getOverlayContainerStopEvent = function () {
        return this.overlayContainerStopEvent_;
    };
    /**
     * @return {!Document} The document where the map is displayed.
     */
    PluggableMap.prototype.getOwnerDocument = function () {
        return this.getTargetElement()
            ? this.getTargetElement().ownerDocument
            : document;
    };
    /**
     * @param {import("./Tile.js").default} tile Tile.
     * @param {string} tileSourceKey Tile source key.
     * @param {import("./coordinate.js").Coordinate} tileCenter Tile center.
     * @param {number} tileResolution Tile resolution.
     * @return {number} Tile priority.
     */
    PluggableMap.prototype.getTilePriority = function (tile, tileSourceKey, tileCenter, tileResolution) {
        return (0,_TileQueue_js__WEBPACK_IMPORTED_MODULE_4__.getTilePriority)(this.frameState_, tile, tileSourceKey, tileCenter, tileResolution);
    };
    /**
     * @param {UIEvent} browserEvent Browser event.
     * @param {string=} opt_type Type.
     */
    PluggableMap.prototype.handleBrowserEvent = function (browserEvent, opt_type) {
        var type = opt_type || browserEvent.type;
        var mapBrowserEvent = new _MapBrowserEvent_js__WEBPACK_IMPORTED_MODULE_9__.default(type, this, browserEvent);
        this.handleMapBrowserEvent(mapBrowserEvent);
    };
    /**
     * @param {MapBrowserEvent} mapBrowserEvent The event to handle.
     */
    PluggableMap.prototype.handleMapBrowserEvent = function (mapBrowserEvent) {
        if (!this.frameState_) {
            // With no view defined, we cannot translate pixels into geographical
            // coordinates so interactions cannot be used.
            return;
        }
        var originalEvent = /** @type {PointerEvent} */ (mapBrowserEvent.originalEvent);
        var eventType = originalEvent.type;
        if (eventType === _pointer_EventType_js__WEBPACK_IMPORTED_MODULE_10__.default.POINTERDOWN ||
            eventType === _events_EventType_js__WEBPACK_IMPORTED_MODULE_11__.default.WHEEL ||
            eventType === _events_EventType_js__WEBPACK_IMPORTED_MODULE_11__.default.KEYDOWN) {
            var doc = this.getOwnerDocument();
            var rootNode = this.viewport_.getRootNode
                ? this.viewport_.getRootNode()
                : doc;
            var target = 'host' in rootNode // ShadowRoot
                ? /** @type {ShadowRoot} */ (rootNode).elementFromPoint(originalEvent.clientX, originalEvent.clientY)
                : /** @type {Node} */ (originalEvent.target);
            if (
            // Abort if the target is a child of the container for elements whose events are not meant
            // to be handled by map interactions.
            this.overlayContainerStopEvent_.contains(target) ||
                // Abort if the event target is a child of the container that is no longer in the page.
                // It's possible for the target to no longer be in the page if it has been removed in an
                // event listener, this might happen in a Control that recreates it's content based on
                // user interaction either manually or via a render in something like https://reactjs.org/
                !(rootNode === doc ? doc.documentElement : rootNode).contains(target)) {
                return;
            }
        }
        mapBrowserEvent.frameState = this.frameState_;
        if (this.dispatchEvent(mapBrowserEvent) !== false) {
            var interactionsArray = this.getInteractions().getArray().slice();
            for (var i = interactionsArray.length - 1; i >= 0; i--) {
                var interaction = interactionsArray[i];
                if (interaction.getMap() !== this ||
                    !interaction.getActive() ||
                    !this.getTargetElement()) {
                    continue;
                }
                var cont = interaction.handleEvent(mapBrowserEvent);
                if (!cont || mapBrowserEvent.propagationStopped) {
                    break;
                }
            }
        }
    };
    /**
     * @protected
     */
    PluggableMap.prototype.handlePostRender = function () {
        var frameState = this.frameState_;
        // Manage the tile queue
        // Image loads are expensive and a limited resource, so try to use them
        // efficiently:
        // * When the view is static we allow a large number of parallel tile loads
        //   to complete the frame as quickly as possible.
        // * When animating or interacting, image loads can cause janks, so we reduce
        //   the maximum number of loads per frame and limit the number of parallel
        //   tile loads to remain reactive to view changes and to reduce the chance of
        //   loading tiles that will quickly disappear from view.
        var tileQueue = this.tileQueue_;
        if (!tileQueue.isEmpty()) {
            var maxTotalLoading = this.maxTilesLoading_;
            var maxNewLoads = maxTotalLoading;
            if (frameState) {
                var hints = frameState.viewHints;
                if (hints[_ViewHint_js__WEBPACK_IMPORTED_MODULE_12__.default.ANIMATING] || hints[_ViewHint_js__WEBPACK_IMPORTED_MODULE_12__.default.INTERACTING]) {
                    var lowOnFrameBudget = !_has_js__WEBPACK_IMPORTED_MODULE_1__.IMAGE_DECODE && Date.now() - frameState.time > 8;
                    maxTotalLoading = lowOnFrameBudget ? 0 : 8;
                    maxNewLoads = lowOnFrameBudget ? 0 : 2;
                }
            }
            if (tileQueue.getTilesLoading() < maxTotalLoading) {
                tileQueue.reprioritize(); // FIXME only call if view has changed
                tileQueue.loadMoreTiles(maxTotalLoading, maxNewLoads);
            }
        }
        if (frameState &&
            this.hasListener(_render_EventType_js__WEBPACK_IMPORTED_MODULE_13__.default.RENDERCOMPLETE) &&
            !frameState.animate &&
            !this.tileQueue_.getTilesLoading() &&
            !this.getLoading()) {
            this.renderer_.dispatchRenderEvent(_render_EventType_js__WEBPACK_IMPORTED_MODULE_13__.default.RENDERCOMPLETE, frameState);
        }
        var postRenderFunctions = this.postRenderFunctions_;
        for (var i = 0, ii = postRenderFunctions.length; i < ii; ++i) {
            postRenderFunctions[i](this, frameState);
        }
        postRenderFunctions.length = 0;
    };
    /**
     * @private
     */
    PluggableMap.prototype.handleSizeChanged_ = function () {
        if (this.getView() && !this.getView().getAnimating()) {
            this.getView().resolveConstraints(0);
        }
        this.render();
    };
    /**
     * @private
     */
    PluggableMap.prototype.handleTargetChanged_ = function () {
        // target may be undefined, null, a string or an Element.
        // If it's a string we convert it to an Element before proceeding.
        // If it's not now an Element we remove the viewport from the DOM.
        // If it's an Element we append the viewport element to it.
        var targetElement;
        if (this.getTarget()) {
            targetElement = this.getTargetElement();
        }
        if (this.mapBrowserEventHandler_) {
            for (var i = 0, ii = this.keyHandlerKeys_.length; i < ii; ++i) {
                (0,_events_js__WEBPACK_IMPORTED_MODULE_14__.unlistenByKey)(this.keyHandlerKeys_[i]);
            }
            this.keyHandlerKeys_ = null;
            this.viewport_.removeEventListener(_events_EventType_js__WEBPACK_IMPORTED_MODULE_11__.default.CONTEXTMENU, this.boundHandleBrowserEvent_);
            this.viewport_.removeEventListener(_events_EventType_js__WEBPACK_IMPORTED_MODULE_11__.default.WHEEL, this.boundHandleBrowserEvent_);
            if (this.handleResize_ !== undefined) {
                removeEventListener(_events_EventType_js__WEBPACK_IMPORTED_MODULE_11__.default.RESIZE, this.handleResize_, false);
                this.handleResize_ = undefined;
            }
            this.mapBrowserEventHandler_.dispose();
            this.mapBrowserEventHandler_ = null;
            (0,_dom_js__WEBPACK_IMPORTED_MODULE_15__.removeNode)(this.viewport_);
        }
        if (!targetElement) {
            if (this.renderer_) {
                clearTimeout(this.postRenderTimeoutHandle_);
                this.postRenderTimeoutHandle_ = undefined;
                this.postRenderFunctions_.length = 0;
                this.renderer_.dispose();
                this.renderer_ = null;
            }
            if (this.animationDelayKey_) {
                cancelAnimationFrame(this.animationDelayKey_);
                this.animationDelayKey_ = undefined;
            }
        }
        else {
            targetElement.appendChild(this.viewport_);
            if (!this.renderer_) {
                this.renderer_ = this.createRenderer();
            }
            this.mapBrowserEventHandler_ = new _MapBrowserEventHandler_js__WEBPACK_IMPORTED_MODULE_16__.default(this, this.moveTolerance_);
            for (var key in _MapBrowserEventType_js__WEBPACK_IMPORTED_MODULE_17__.default) {
                this.mapBrowserEventHandler_.addEventListener(_MapBrowserEventType_js__WEBPACK_IMPORTED_MODULE_17__.default[key], this.handleMapBrowserEvent.bind(this));
            }
            this.viewport_.addEventListener(_events_EventType_js__WEBPACK_IMPORTED_MODULE_11__.default.CONTEXTMENU, this.boundHandleBrowserEvent_, false);
            this.viewport_.addEventListener(_events_EventType_js__WEBPACK_IMPORTED_MODULE_11__.default.WHEEL, this.boundHandleBrowserEvent_, _has_js__WEBPACK_IMPORTED_MODULE_1__.PASSIVE_EVENT_LISTENERS ? { passive: false } : false);
            var keyboardEventTarget = !this.keyboardEventTarget_
                ? targetElement
                : this.keyboardEventTarget_;
            this.keyHandlerKeys_ = [
                (0,_events_js__WEBPACK_IMPORTED_MODULE_14__.listen)(keyboardEventTarget, _events_EventType_js__WEBPACK_IMPORTED_MODULE_11__.default.KEYDOWN, this.handleBrowserEvent, this),
                (0,_events_js__WEBPACK_IMPORTED_MODULE_14__.listen)(keyboardEventTarget, _events_EventType_js__WEBPACK_IMPORTED_MODULE_11__.default.KEYPRESS, this.handleBrowserEvent, this),
            ];
            if (!this.handleResize_) {
                this.handleResize_ = this.updateSize.bind(this);
                window.addEventListener(_events_EventType_js__WEBPACK_IMPORTED_MODULE_11__.default.RESIZE, this.handleResize_, false);
            }
        }
        this.updateSize();
        // updateSize calls setSize, so no need to call this.render
        // ourselves here.
    };
    /**
     * @private
     */
    PluggableMap.prototype.handleTileChange_ = function () {
        this.render();
    };
    /**
     * @private
     */
    PluggableMap.prototype.handleViewPropertyChanged_ = function () {
        this.render();
    };
    /**
     * @private
     */
    PluggableMap.prototype.handleViewChanged_ = function () {
        if (this.viewPropertyListenerKey_) {
            (0,_events_js__WEBPACK_IMPORTED_MODULE_14__.unlistenByKey)(this.viewPropertyListenerKey_);
            this.viewPropertyListenerKey_ = null;
        }
        if (this.viewChangeListenerKey_) {
            (0,_events_js__WEBPACK_IMPORTED_MODULE_14__.unlistenByKey)(this.viewChangeListenerKey_);
            this.viewChangeListenerKey_ = null;
        }
        var view = this.getView();
        if (view) {
            this.updateViewportSize_();
            this.viewPropertyListenerKey_ = (0,_events_js__WEBPACK_IMPORTED_MODULE_14__.listen)(view, _ObjectEventType_js__WEBPACK_IMPORTED_MODULE_18__.default.PROPERTYCHANGE, this.handleViewPropertyChanged_, this);
            this.viewChangeListenerKey_ = (0,_events_js__WEBPACK_IMPORTED_MODULE_14__.listen)(view, _events_EventType_js__WEBPACK_IMPORTED_MODULE_11__.default.CHANGE, this.handleViewPropertyChanged_, this);
            view.resolveConstraints(0);
        }
        this.render();
    };
    /**
     * @private
     */
    PluggableMap.prototype.handleLayerGroupChanged_ = function () {
        if (this.layerGroupPropertyListenerKeys_) {
            this.layerGroupPropertyListenerKeys_.forEach(_events_js__WEBPACK_IMPORTED_MODULE_14__.unlistenByKey);
            this.layerGroupPropertyListenerKeys_ = null;
        }
        var layerGroup = this.getLayerGroup();
        if (layerGroup) {
            this.layerGroupPropertyListenerKeys_ = [
                (0,_events_js__WEBPACK_IMPORTED_MODULE_14__.listen)(layerGroup, _ObjectEventType_js__WEBPACK_IMPORTED_MODULE_18__.default.PROPERTYCHANGE, this.render, this),
                (0,_events_js__WEBPACK_IMPORTED_MODULE_14__.listen)(layerGroup, _events_EventType_js__WEBPACK_IMPORTED_MODULE_11__.default.CHANGE, this.render, this),
            ];
        }
        this.render();
    };
    /**
     * @return {boolean} Is rendered.
     */
    PluggableMap.prototype.isRendered = function () {
        return !!this.frameState_;
    };
    /**
     * Requests an immediate render in a synchronous manner.
     * @api
     */
    PluggableMap.prototype.renderSync = function () {
        if (this.animationDelayKey_) {
            cancelAnimationFrame(this.animationDelayKey_);
        }
        this.animationDelay_();
    };
    /**
     * Redraws all text after new fonts have loaded
     */
    PluggableMap.prototype.redrawText = function () {
        var layerStates = this.getLayerGroup().getLayerStatesArray();
        for (var i = 0, ii = layerStates.length; i < ii; ++i) {
            var layer = layerStates[i].layer;
            if (layer.hasRenderer()) {
                layer.getRenderer().handleFontsChanged();
            }
        }
    };
    /**
     * Request a map rendering (at the next animation frame).
     * @api
     */
    PluggableMap.prototype.render = function () {
        if (this.renderer_ && this.animationDelayKey_ === undefined) {
            this.animationDelayKey_ = requestAnimationFrame(this.animationDelay_);
        }
    };
    /**
     * Remove the given control from the map.
     * @param {import("./control/Control.js").default} control Control.
     * @return {import("./control/Control.js").default|undefined} The removed control (or undefined
     *     if the control was not found).
     * @api
     */
    PluggableMap.prototype.removeControl = function (control) {
        return this.getControls().remove(control);
    };
    /**
     * Remove the given interaction from the map.
     * @param {import("./interaction/Interaction.js").default} interaction Interaction to remove.
     * @return {import("./interaction/Interaction.js").default|undefined} The removed interaction (or
     *     undefined if the interaction was not found).
     * @api
     */
    PluggableMap.prototype.removeInteraction = function (interaction) {
        return this.getInteractions().remove(interaction);
    };
    /**
     * Removes the given layer from the map.
     * @param {import("./layer/Base.js").default} layer Layer.
     * @return {import("./layer/Base.js").default|undefined} The removed layer (or undefined if the
     *     layer was not found).
     * @api
     */
    PluggableMap.prototype.removeLayer = function (layer) {
        var layers = this.getLayerGroup().getLayers();
        return layers.remove(layer);
    };
    /**
     * Remove the given overlay from the map.
     * @param {import("./Overlay.js").default} overlay Overlay.
     * @return {import("./Overlay.js").default|undefined} The removed overlay (or undefined
     *     if the overlay was not found).
     * @api
     */
    PluggableMap.prototype.removeOverlay = function (overlay) {
        return this.getOverlays().remove(overlay);
    };
    /**
     * @param {number} time Time.
     * @private
     */
    PluggableMap.prototype.renderFrame_ = function (time) {
        var _this = this;
        var size = this.getSize();
        var view = this.getView();
        var previousFrameState = this.frameState_;
        /** @type {?FrameState} */
        var frameState = null;
        if (size !== undefined && (0,_size_js__WEBPACK_IMPORTED_MODULE_19__.hasArea)(size) && view && view.isDef()) {
            var viewHints = view.getHints(this.frameState_ ? this.frameState_.viewHints : undefined);
            var viewState = view.getState();
            frameState = {
                animate: false,
                coordinateToPixelTransform: this.coordinateToPixelTransform_,
                declutterTree: null,
                extent: (0,_extent_js__WEBPACK_IMPORTED_MODULE_20__.getForViewAndSize)(viewState.center, viewState.resolution, viewState.rotation, size),
                index: this.frameIndex_++,
                layerIndex: 0,
                layerStatesArray: this.getLayerGroup().getLayerStatesArray(),
                pixelRatio: this.pixelRatio_,
                pixelToCoordinateTransform: this.pixelToCoordinateTransform_,
                postRenderFunctions: [],
                size: size,
                tileQueue: this.tileQueue_,
                time: time,
                usedTiles: {},
                viewState: viewState,
                viewHints: viewHints,
                wantedTiles: {},
            };
        }
        this.frameState_ = frameState;
        this.renderer_.renderFrame(frameState);
        if (frameState) {
            if (frameState.animate) {
                this.render();
            }
            Array.prototype.push.apply(this.postRenderFunctions_, frameState.postRenderFunctions);
            if (previousFrameState) {
                var moveStart = !this.previousExtent_ ||
                    (!(0,_extent_js__WEBPACK_IMPORTED_MODULE_20__.isEmpty)(this.previousExtent_) &&
                        !(0,_extent_js__WEBPACK_IMPORTED_MODULE_20__.equals)(frameState.extent, this.previousExtent_));
                if (moveStart) {
                    this.dispatchEvent(new _MapEvent_js__WEBPACK_IMPORTED_MODULE_21__.default(_MapEventType_js__WEBPACK_IMPORTED_MODULE_22__.default.MOVESTART, this, previousFrameState));
                    this.previousExtent_ = (0,_extent_js__WEBPACK_IMPORTED_MODULE_20__.createOrUpdateEmpty)(this.previousExtent_);
                }
            }
            var idle = this.previousExtent_ &&
                !frameState.viewHints[_ViewHint_js__WEBPACK_IMPORTED_MODULE_12__.default.ANIMATING] &&
                !frameState.viewHints[_ViewHint_js__WEBPACK_IMPORTED_MODULE_12__.default.INTERACTING] &&
                !(0,_extent_js__WEBPACK_IMPORTED_MODULE_20__.equals)(frameState.extent, this.previousExtent_);
            if (idle) {
                this.dispatchEvent(new _MapEvent_js__WEBPACK_IMPORTED_MODULE_21__.default(_MapEventType_js__WEBPACK_IMPORTED_MODULE_22__.default.MOVEEND, this, frameState));
                (0,_extent_js__WEBPACK_IMPORTED_MODULE_20__.clone)(frameState.extent, this.previousExtent_);
            }
        }
        this.dispatchEvent(new _MapEvent_js__WEBPACK_IMPORTED_MODULE_21__.default(_MapEventType_js__WEBPACK_IMPORTED_MODULE_22__.default.POSTRENDER, this, frameState));
        if (!this.postRenderTimeoutHandle_) {
            this.postRenderTimeoutHandle_ = setTimeout(function () {
                _this.postRenderTimeoutHandle_ = undefined;
                _this.handlePostRender();
            }, 0);
        }
    };
    /**
     * Sets the layergroup of this map.
     * @param {LayerGroup} layerGroup A layer group containing the layers in this map.
     * @observable
     * @api
     */
    PluggableMap.prototype.setLayerGroup = function (layerGroup) {
        this.set(_MapProperty_js__WEBPACK_IMPORTED_MODULE_6__.default.LAYERGROUP, layerGroup);
    };
    /**
     * Set the size of this map.
     * @param {import("./size.js").Size|undefined} size The size in pixels of the map in the DOM.
     * @observable
     * @api
     */
    PluggableMap.prototype.setSize = function (size) {
        this.set(_MapProperty_js__WEBPACK_IMPORTED_MODULE_6__.default.SIZE, size);
    };
    /**
     * Set the target element to render this map into.
     * @param {HTMLElement|string|undefined} target The Element or id of the Element
     *     that the map is rendered in.
     * @observable
     * @api
     */
    PluggableMap.prototype.setTarget = function (target) {
        this.set(_MapProperty_js__WEBPACK_IMPORTED_MODULE_6__.default.TARGET, target);
    };
    /**
     * Set the view for this map.
     * @param {View} view The view that controls this map.
     * @observable
     * @api
     */
    PluggableMap.prototype.setView = function (view) {
        this.set(_MapProperty_js__WEBPACK_IMPORTED_MODULE_6__.default.VIEW, view);
    };
    /**
     * Force a recalculation of the map viewport size.  This should be called when
     * third-party code changes the size of the map viewport.
     * @api
     */
    PluggableMap.prototype.updateSize = function () {
        var targetElement = this.getTargetElement();
        if (!targetElement) {
            this.setSize(undefined);
        }
        else {
            var computedStyle = getComputedStyle(targetElement);
            this.setSize([
                targetElement.offsetWidth -
                    parseFloat(computedStyle['borderLeftWidth']) -
                    parseFloat(computedStyle['paddingLeft']) -
                    parseFloat(computedStyle['paddingRight']) -
                    parseFloat(computedStyle['borderRightWidth']),
                targetElement.offsetHeight -
                    parseFloat(computedStyle['borderTopWidth']) -
                    parseFloat(computedStyle['paddingTop']) -
                    parseFloat(computedStyle['paddingBottom']) -
                    parseFloat(computedStyle['borderBottomWidth']),
            ]);
        }
        this.updateViewportSize_();
    };
    /**
     * Recomputes the viewport size and save it on the view object (if any)
     * @private
     */
    PluggableMap.prototype.updateViewportSize_ = function () {
        var view = this.getView();
        if (view) {
            var size = undefined;
            var computedStyle = getComputedStyle(this.viewport_);
            if (computedStyle.width && computedStyle.height) {
                size = [
                    parseInt(computedStyle.width, 10),
                    parseInt(computedStyle.height, 10),
                ];
            }
            view.setViewportSize(size);
        }
    };
    return PluggableMap;
}(_Object_js__WEBPACK_IMPORTED_MODULE_5__.default));
/**
 * @param {MapOptions} options Map options.
 * @return {MapOptionsInternal} Internal map options.
 */
function createOptionsInternal(options) {
    /**
     * @type {HTMLElement|Document}
     */
    var keyboardEventTarget = null;
    if (options.keyboardEventTarget !== undefined) {
        keyboardEventTarget =
            typeof options.keyboardEventTarget === 'string'
                ? document.getElementById(options.keyboardEventTarget)
                : options.keyboardEventTarget;
    }
    /**
     * @type {Object<string, *>}
     */
    var values = {};
    var layerGroup = options.layers &&
        typeof ( /** @type {?} */(options.layers).getLayers) === 'function'
        ? /** @type {LayerGroup} */ (options.layers)
        : new _layer_Group_js__WEBPACK_IMPORTED_MODULE_23__.default({ layers: /** @type {Collection} */ (options.layers) });
    values[_MapProperty_js__WEBPACK_IMPORTED_MODULE_6__.default.LAYERGROUP] = layerGroup;
    values[_MapProperty_js__WEBPACK_IMPORTED_MODULE_6__.default.TARGET] = options.target;
    values[_MapProperty_js__WEBPACK_IMPORTED_MODULE_6__.default.VIEW] =
        options.view !== undefined ? options.view : new _View_js__WEBPACK_IMPORTED_MODULE_24__.default();
    var controls;
    if (options.controls !== undefined) {
        if (Array.isArray(options.controls)) {
            controls = new _Collection_js__WEBPACK_IMPORTED_MODULE_3__.default(options.controls.slice());
        }
        else {
            (0,_asserts_js__WEBPACK_IMPORTED_MODULE_25__.assert)(typeof ( /** @type {?} */(options.controls).getArray) === 'function', 47); // Expected `controls` to be an array or an `import("./Collection.js").Collection`
            controls = /** @type {Collection} */ (options.controls);
        }
    }
    var interactions;
    if (options.interactions !== undefined) {
        if (Array.isArray(options.interactions)) {
            interactions = new _Collection_js__WEBPACK_IMPORTED_MODULE_3__.default(options.interactions.slice());
        }
        else {
            (0,_asserts_js__WEBPACK_IMPORTED_MODULE_25__.assert)(typeof ( /** @type {?} */(options.interactions).getArray) ===
                'function', 48); // Expected `interactions` to be an array or an `import("./Collection.js").Collection`
            interactions = /** @type {Collection} */ (options.interactions);
        }
    }
    var overlays;
    if (options.overlays !== undefined) {
        if (Array.isArray(options.overlays)) {
            overlays = new _Collection_js__WEBPACK_IMPORTED_MODULE_3__.default(options.overlays.slice());
        }
        else {
            (0,_asserts_js__WEBPACK_IMPORTED_MODULE_25__.assert)(typeof ( /** @type {?} */(options.overlays).getArray) === 'function', 49); // Expected `overlays` to be an array or an `import("./Collection.js").Collection`
            overlays = options.overlays;
        }
    }
    else {
        overlays = new _Collection_js__WEBPACK_IMPORTED_MODULE_3__.default();
    }
    return {
        controls: controls,
        interactions: interactions,
        keyboardEventTarget: keyboardEventTarget,
        overlays: overlays,
        values: values,
    };
}
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (PluggableMap);
//# sourceMappingURL=PluggableMap.js.map

/***/ }),

/***/ "./node_modules/ol/Tile.js":
/*!*********************************!*\
  !*** ./node_modules/ol/Tile.js ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _events_Target_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./events/Target.js */ "./node_modules/ol/events/Target.js");
/* harmony import */ var _events_EventType_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./events/EventType.js */ "./node_modules/ol/events/EventType.js");
/* harmony import */ var _TileState_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./TileState.js */ "./node_modules/ol/TileState.js");
/* harmony import */ var _util_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./util.js */ "./node_modules/ol/util.js");
/* harmony import */ var _easing_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./easing.js */ "./node_modules/ol/easing.js");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
/**
 * @module ol/Tile
 */





/**
 * A function that takes an {@link module:ol/Tile} for the tile and a
 * `{string}` for the url as arguments. The default is
 * ```js
 * source.setTileLoadFunction(function(tile, src) {
 *   tile.getImage().src = src;
 * });
 * ```
 * For more fine grained control, the load function can use fetch or XMLHttpRequest and involve
 * error handling:
 *
 * ```js
 * import TileState from 'ol/TileState';
 *
 * source.setTileLoadFunction(function(tile, src) {
 *   var xhr = new XMLHttpRequest();
 *   xhr.responseType = 'blob';
 *   xhr.addEventListener('loadend', function (evt) {
 *     var data = this.response;
 *     if (data !== undefined) {
 *       tile.getImage().src = URL.createObjectURL(data);
 *     } else {
 *       tile.setState(TileState.ERROR);
 *     }
 *   });
 *   xhr.addEventListener('error', function () {
 *     tile.setState(TileState.ERROR);
 *   });
 *   xhr.open('GET', src);
 *   xhr.send();
 * });
 * ```
 *
 * @typedef {function(Tile, string): void} LoadFunction
 * @api
 */
/**
 * {@link module:ol/source/Tile~Tile} sources use a function of this type to get
 * the url that provides a tile for a given tile coordinate.
 *
 * This function takes an {@link module:ol/tilecoord~TileCoord} for the tile
 * coordinate, a `{number}` representing the pixel ratio and a
 * {@link module:ol/proj/Projection} for the projection  as arguments
 * and returns a `{string}` representing the tile URL, or undefined if no tile
 * should be requested for the passed tile coordinate.
 *
 * @typedef {function(import("./tilecoord.js").TileCoord, number,
 *           import("./proj/Projection.js").default): (string|undefined)} UrlFunction
 * @api
 */
/**
 * @typedef {Object} Options
 * @property {number} [transition=250] A duration for tile opacity
 * transitions in milliseconds. A duration of 0 disables the opacity transition.
 * @api
 */
/**
 * @classdesc
 * Base class for tiles.
 *
 * @abstract
 */
var Tile = /** @class */ (function (_super) {
    __extends(Tile, _super);
    /**
     * @param {import("./tilecoord.js").TileCoord} tileCoord Tile coordinate.
     * @param {import("./TileState.js").default} state State.
     * @param {Options=} opt_options Tile options.
     */
    function Tile(tileCoord, state, opt_options) {
        var _this = _super.call(this) || this;
        var options = opt_options ? opt_options : {};
        /**
         * @type {import("./tilecoord.js").TileCoord}
         */
        _this.tileCoord = tileCoord;
        /**
         * @protected
         * @type {import("./TileState.js").default}
         */
        _this.state = state;
        /**
         * An "interim" tile for this tile. The interim tile may be used while this
         * one is loading, for "smooth" transitions when changing params/dimensions
         * on the source.
         * @type {Tile}
         */
        _this.interimTile = null;
        /**
         * The tile is available at the highest possible resolution. Subclasses can
         * set this to `false` initially. Tile load listeners will not be
         * unregistered before this is set to `true` and a `#changed()` is called.
         * @type {boolean}
         */
        _this.hifi = true;
        /**
         * A key assigned to the tile. This is used by the tile source to determine
         * if this tile can effectively be used, or if a new tile should be created
         * and this one be used as an interim tile for this new tile.
         * @type {string}
         */
        _this.key = '';
        /**
         * The duration for the opacity transition.
         * @type {number}
         */
        _this.transition_ =
            options.transition === undefined ? 250 : options.transition;
        /**
         * Lookup of start times for rendering transitions.  If the start time is
         * equal to -1, the transition is complete.
         * @type {Object<string, number>}
         */
        _this.transitionStarts_ = {};
        return _this;
    }
    /**
     * @protected
     */
    Tile.prototype.changed = function () {
        this.dispatchEvent(_events_EventType_js__WEBPACK_IMPORTED_MODULE_0__.default.CHANGE);
    };
    /**
     * Called by the tile cache when the tile is removed from the cache due to expiry
     */
    Tile.prototype.release = function () { };
    /**
     * @return {string} Key.
     */
    Tile.prototype.getKey = function () {
        return this.key + '/' + this.tileCoord;
    };
    /**
     * Get the interim tile most suitable for rendering using the chain of interim
     * tiles. This corresponds to the  most recent tile that has been loaded, if no
     * such tile exists, the original tile is returned.
     * @return {!Tile} Best tile for rendering.
     */
    Tile.prototype.getInterimTile = function () {
        if (!this.interimTile) {
            //empty chain
            return this;
        }
        var tile = this.interimTile;
        // find the first loaded tile and return it. Since the chain is sorted in
        // decreasing order of creation time, there is no need to search the remainder
        // of the list (all those tiles correspond to older requests and will be
        // cleaned up by refreshInterimChain)
        do {
            if (tile.getState() == _TileState_js__WEBPACK_IMPORTED_MODULE_1__.default.LOADED) {
                // Show tile immediately instead of fading it in after loading, because
                // the interim tile is in place already
                this.transition_ = 0;
                return tile;
            }
            tile = tile.interimTile;
        } while (tile);
        // we can not find a better tile
        return this;
    };
    /**
     * Goes through the chain of interim tiles and discards sections of the chain
     * that are no longer relevant.
     */
    Tile.prototype.refreshInterimChain = function () {
        if (!this.interimTile) {
            return;
        }
        var tile = this.interimTile;
        var prev = /** @type {Tile} */ (this);
        do {
            if (tile.getState() == _TileState_js__WEBPACK_IMPORTED_MODULE_1__.default.LOADED) {
                //we have a loaded tile, we can discard the rest of the list
                //we would could abort any LOADING tile request
                //older than this tile (i.e. any LOADING tile following this entry in the chain)
                tile.interimTile = null;
                break;
            }
            else if (tile.getState() == _TileState_js__WEBPACK_IMPORTED_MODULE_1__.default.LOADING) {
                //keep this LOADING tile any loaded tiles later in the chain are
                //older than this tile, so we're still interested in the request
                prev = tile;
            }
            else if (tile.getState() == _TileState_js__WEBPACK_IMPORTED_MODULE_1__.default.IDLE) {
                //the head of the list is the most current tile, we don't need
                //to start any other requests for this chain
                prev.interimTile = tile.interimTile;
            }
            else {
                prev = tile;
            }
            tile = prev.interimTile;
        } while (tile);
    };
    /**
     * Get the tile coordinate for this tile.
     * @return {import("./tilecoord.js").TileCoord} The tile coordinate.
     * @api
     */
    Tile.prototype.getTileCoord = function () {
        return this.tileCoord;
    };
    /**
     * @return {import("./TileState.js").default} State.
     */
    Tile.prototype.getState = function () {
        return this.state;
    };
    /**
     * Sets the state of this tile. If you write your own {@link module:ol/Tile~LoadFunction tileLoadFunction} ,
     * it is important to set the state correctly to {@link module:ol/TileState~ERROR}
     * when the tile cannot be loaded. Otherwise the tile cannot be removed from
     * the tile queue and will block other requests.
     * @param {import("./TileState.js").default} state State.
     * @api
     */
    Tile.prototype.setState = function (state) {
        if (this.state !== _TileState_js__WEBPACK_IMPORTED_MODULE_1__.default.ERROR && this.state > state) {
            throw new Error('Tile load sequence violation');
        }
        this.state = state;
        this.changed();
    };
    /**
     * Load the image or retry if loading previously failed.
     * Loading is taken care of by the tile queue, and calling this method is
     * only needed for preloading or for reloading in case of an error.
     * @abstract
     * @api
     */
    Tile.prototype.load = function () {
        (0,_util_js__WEBPACK_IMPORTED_MODULE_2__.abstract)();
    };
    /**
     * Get the alpha value for rendering.
     * @param {string} id An id for the renderer.
     * @param {number} time The render frame time.
     * @return {number} A number between 0 and 1.
     */
    Tile.prototype.getAlpha = function (id, time) {
        if (!this.transition_) {
            return 1;
        }
        var start = this.transitionStarts_[id];
        if (!start) {
            start = time;
            this.transitionStarts_[id] = start;
        }
        else if (start === -1) {
            return 1;
        }
        var delta = time - start + 1000 / 60; // avoid rendering at 0
        if (delta >= this.transition_) {
            return 1;
        }
        return (0,_easing_js__WEBPACK_IMPORTED_MODULE_3__.easeIn)(delta / this.transition_);
    };
    /**
     * Determine if a tile is in an alpha transition.  A tile is considered in
     * transition if tile.getAlpha() has not yet been called or has been called
     * and returned 1.
     * @param {string} id An id for the renderer.
     * @return {boolean} The tile is in transition.
     */
    Tile.prototype.inTransition = function (id) {
        if (!this.transition_) {
            return false;
        }
        return this.transitionStarts_[id] !== -1;
    };
    /**
     * Mark a transition as complete.
     * @param {string} id An id for the renderer.
     */
    Tile.prototype.endTransition = function (id) {
        if (this.transition_) {
            this.transitionStarts_[id] = -1;
        }
    };
    return Tile;
}(_events_Target_js__WEBPACK_IMPORTED_MODULE_4__.default));
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Tile);
//# sourceMappingURL=Tile.js.map

/***/ }),

/***/ "./node_modules/ol/TileCache.js":
/*!**************************************!*\
  !*** ./node_modules/ol/TileCache.js ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _structs_LRUCache_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./structs/LRUCache.js */ "./node_modules/ol/structs/LRUCache.js");
/* harmony import */ var _tilecoord_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./tilecoord.js */ "./node_modules/ol/tilecoord.js");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
/**
 * @module ol/TileCache
 */


var TileCache = /** @class */ (function (_super) {
    __extends(TileCache, _super);
    function TileCache() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /**
     * @param {!Object<string, boolean>} usedTiles Used tiles.
     */
    TileCache.prototype.expireCache = function (usedTiles) {
        while (this.canExpireCache()) {
            var tile = this.peekLast();
            if (tile.getKey() in usedTiles) {
                break;
            }
            else {
                this.pop().release();
            }
        }
    };
    /**
     * Prune all tiles from the cache that don't have the same z as the newest tile.
     */
    TileCache.prototype.pruneExceptNewestZ = function () {
        if (this.getCount() === 0) {
            return;
        }
        var key = this.peekFirstKey();
        var tileCoord = (0,_tilecoord_js__WEBPACK_IMPORTED_MODULE_0__.fromKey)(key);
        var z = tileCoord[0];
        this.forEach(function (tile) {
            if (tile.tileCoord[0] !== z) {
                this.remove((0,_tilecoord_js__WEBPACK_IMPORTED_MODULE_0__.getKey)(tile.tileCoord));
                tile.release();
            }
        }.bind(this));
    };
    return TileCache;
}(_structs_LRUCache_js__WEBPACK_IMPORTED_MODULE_1__.default));
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (TileCache);
//# sourceMappingURL=TileCache.js.map

/***/ }),

/***/ "./node_modules/ol/TileQueue.js":
/*!**************************************!*\
  !*** ./node_modules/ol/TileQueue.js ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__),
/* harmony export */   "getTilePriority": () => (/* binding */ getTilePriority)
/* harmony export */ });
/* harmony import */ var _events_EventType_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./events/EventType.js */ "./node_modules/ol/events/EventType.js");
/* harmony import */ var _structs_PriorityQueue_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./structs/PriorityQueue.js */ "./node_modules/ol/structs/PriorityQueue.js");
/* harmony import */ var _TileState_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./TileState.js */ "./node_modules/ol/TileState.js");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
/**
 * @module ol/TileQueue
 */



/**
 * @typedef {function(import("./Tile.js").default, string, import("./coordinate.js").Coordinate, number): number} PriorityFunction
 */
var TileQueue = /** @class */ (function (_super) {
    __extends(TileQueue, _super);
    /**
     * @param {PriorityFunction} tilePriorityFunction Tile priority function.
     * @param {function(): ?} tileChangeCallback Function called on each tile change event.
     */
    function TileQueue(tilePriorityFunction, tileChangeCallback) {
        var _this = _super.call(this, 
        /**
         * @param {Array} element Element.
         * @return {number} Priority.
         */
        function (element) {
            return tilePriorityFunction.apply(null, element);
        }, 
        /**
         * @param {Array} element Element.
         * @return {string} Key.
         */
        function (element) {
            return /** @type {import("./Tile.js").default} */ (element[0]).getKey();
        }) || this;
        /** @private */
        _this.boundHandleTileChange_ = _this.handleTileChange.bind(_this);
        /**
         * @private
         * @type {function(): ?}
         */
        _this.tileChangeCallback_ = tileChangeCallback;
        /**
         * @private
         * @type {number}
         */
        _this.tilesLoading_ = 0;
        /**
         * @private
         * @type {!Object<string,boolean>}
         */
        _this.tilesLoadingKeys_ = {};
        return _this;
    }
    /**
     * @param {Array} element Element.
     * @return {boolean} The element was added to the queue.
     */
    TileQueue.prototype.enqueue = function (element) {
        var added = _super.prototype.enqueue.call(this, element);
        if (added) {
            var tile = element[0];
            tile.addEventListener(_events_EventType_js__WEBPACK_IMPORTED_MODULE_0__.default.CHANGE, this.boundHandleTileChange_);
        }
        return added;
    };
    /**
     * @return {number} Number of tiles loading.
     */
    TileQueue.prototype.getTilesLoading = function () {
        return this.tilesLoading_;
    };
    /**
     * @param {import("./events/Event.js").default} event Event.
     * @protected
     */
    TileQueue.prototype.handleTileChange = function (event) {
        var tile = /** @type {import("./Tile.js").default} */ (event.target);
        var state = tile.getState();
        if ((tile.hifi && state === _TileState_js__WEBPACK_IMPORTED_MODULE_1__.default.LOADED) ||
            state === _TileState_js__WEBPACK_IMPORTED_MODULE_1__.default.ERROR ||
            state === _TileState_js__WEBPACK_IMPORTED_MODULE_1__.default.EMPTY) {
            tile.removeEventListener(_events_EventType_js__WEBPACK_IMPORTED_MODULE_0__.default.CHANGE, this.boundHandleTileChange_);
            var tileKey = tile.getKey();
            if (tileKey in this.tilesLoadingKeys_) {
                delete this.tilesLoadingKeys_[tileKey];
                --this.tilesLoading_;
            }
            this.tileChangeCallback_();
        }
    };
    /**
     * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.
     * @param {number} maxNewLoads Maximum number of new tiles to load.
     */
    TileQueue.prototype.loadMoreTiles = function (maxTotalLoading, maxNewLoads) {
        var newLoads = 0;
        var state, tile, tileKey;
        while (this.tilesLoading_ < maxTotalLoading &&
            newLoads < maxNewLoads &&
            this.getCount() > 0) {
            tile = /** @type {import("./Tile.js").default} */ (this.dequeue()[0]);
            tileKey = tile.getKey();
            state = tile.getState();
            if (state === _TileState_js__WEBPACK_IMPORTED_MODULE_1__.default.IDLE && !(tileKey in this.tilesLoadingKeys_)) {
                this.tilesLoadingKeys_[tileKey] = true;
                ++this.tilesLoading_;
                ++newLoads;
                tile.load();
            }
        }
    };
    return TileQueue;
}(_structs_PriorityQueue_js__WEBPACK_IMPORTED_MODULE_2__.default));
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (TileQueue);
/**
 * @param {import('./PluggableMap.js').FrameState} frameState Frame state.
 * @param {import("./Tile.js").default} tile Tile.
 * @param {string} tileSourceKey Tile source key.
 * @param {import("./coordinate.js").Coordinate} tileCenter Tile center.
 * @param {number} tileResolution Tile resolution.
 * @return {number} Tile priority.
 */
function getTilePriority(frameState, tile, tileSourceKey, tileCenter, tileResolution) {
    // Filter out tiles at higher zoom levels than the current zoom level, or that
    // are outside the visible extent.
    if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {
        return _structs_PriorityQueue_js__WEBPACK_IMPORTED_MODULE_2__.DROP;
    }
    if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {
        return _structs_PriorityQueue_js__WEBPACK_IMPORTED_MODULE_2__.DROP;
    }
    // Prioritize the highest zoom level tiles closest to the focus.
    // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).
    // Within a zoom level, tiles are prioritized by the distance in pixels between
    // the center of the tile and the center of the viewport.  The factor of 65536
    // means that the prioritization should behave as desired for tiles up to
    // 65536 * Math.log(2) = 45426 pixels from the focus.
    var center = frameState.viewState.center;
    var deltaX = tileCenter[0] - center[0];
    var deltaY = tileCenter[1] - center[1];
    return (65536 * Math.log(tileResolution) +
        Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution);
}
//# sourceMappingURL=TileQueue.js.map

/***/ }),

/***/ "./node_modules/ol/TileRange.js":
/*!**************************************!*\
  !*** ./node_modules/ol/TileRange.js ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createOrUpdate": () => (/* binding */ createOrUpdate),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/**
 * @module ol/TileRange
 */
/**
 * A representation of a contiguous block of tiles.  A tile range is specified
 * by its min/max tile coordinates and is inclusive of coordinates.
 */
var TileRange = /** @class */ (function () {
    /**
     * @param {number} minX Minimum X.
     * @param {number} maxX Maximum X.
     * @param {number} minY Minimum Y.
     * @param {number} maxY Maximum Y.
     */
    function TileRange(minX, maxX, minY, maxY) {
        /**
         * @type {number}
         */
        this.minX = minX;
        /**
         * @type {number}
         */
        this.maxX = maxX;
        /**
         * @type {number}
         */
        this.minY = minY;
        /**
         * @type {number}
         */
        this.maxY = maxY;
    }
    /**
     * @param {import("./tilecoord.js").TileCoord} tileCoord Tile coordinate.
     * @return {boolean} Contains tile coordinate.
     */
    TileRange.prototype.contains = function (tileCoord) {
        return this.containsXY(tileCoord[1], tileCoord[2]);
    };
    /**
     * @param {TileRange} tileRange Tile range.
     * @return {boolean} Contains.
     */
    TileRange.prototype.containsTileRange = function (tileRange) {
        return (this.minX <= tileRange.minX &&
            tileRange.maxX <= this.maxX &&
            this.minY <= tileRange.minY &&
            tileRange.maxY <= this.maxY);
    };
    /**
     * @param {number} x Tile coordinate x.
     * @param {number} y Tile coordinate y.
     * @return {boolean} Contains coordinate.
     */
    TileRange.prototype.containsXY = function (x, y) {
        return this.minX <= x && x <= this.maxX && this.minY <= y && y <= this.maxY;
    };
    /**
     * @param {TileRange} tileRange Tile range.
     * @return {boolean} Equals.
     */
    TileRange.prototype.equals = function (tileRange) {
        return (this.minX == tileRange.minX &&
            this.minY == tileRange.minY &&
            this.maxX == tileRange.maxX &&
            this.maxY == tileRange.maxY);
    };
    /**
     * @param {TileRange} tileRange Tile range.
     */
    TileRange.prototype.extend = function (tileRange) {
        if (tileRange.minX < this.minX) {
            this.minX = tileRange.minX;
        }
        if (tileRange.maxX > this.maxX) {
            this.maxX = tileRange.maxX;
        }
        if (tileRange.minY < this.minY) {
            this.minY = tileRange.minY;
        }
        if (tileRange.maxY > this.maxY) {
            this.maxY = tileRange.maxY;
        }
    };
    /**
     * @return {number} Height.
     */
    TileRange.prototype.getHeight = function () {
        return this.maxY - this.minY + 1;
    };
    /**
     * @return {import("./size.js").Size} Size.
     */
    TileRange.prototype.getSize = function () {
        return [this.getWidth(), this.getHeight()];
    };
    /**
     * @return {number} Width.
     */
    TileRange.prototype.getWidth = function () {
        return this.maxX - this.minX + 1;
    };
    /**
     * @param {TileRange} tileRange Tile range.
     * @return {boolean} Intersects.
     */
    TileRange.prototype.intersects = function (tileRange) {
        return (this.minX <= tileRange.maxX &&
            this.maxX >= tileRange.minX &&
            this.minY <= tileRange.maxY &&
            this.maxY >= tileRange.minY);
    };
    return TileRange;
}());
/**
 * @param {number} minX Minimum X.
 * @param {number} maxX Maximum X.
 * @param {number} minY Minimum Y.
 * @param {number} maxY Maximum Y.
 * @param {TileRange=} tileRange TileRange.
 * @return {TileRange} Tile range.
 */
function createOrUpdate(minX, maxX, minY, maxY, tileRange) {
    if (tileRange !== undefined) {
        tileRange.minX = minX;
        tileRange.maxX = maxX;
        tileRange.minY = minY;
        tileRange.maxY = maxY;
        return tileRange;
    }
    else {
        return new TileRange(minX, maxX, minY, maxY);
    }
}
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (TileRange);
//# sourceMappingURL=TileRange.js.map

/***/ }),

/***/ "./node_modules/ol/TileState.js":
/*!**************************************!*\
  !*** ./node_modules/ol/TileState.js ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/**
 * @module ol/TileState
 */
/**
 * @enum {number}
 */
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
    IDLE: 0,
    LOADING: 1,
    LOADED: 2,
    /**
     * Indicates that tile loading failed
     * @type {number}
     */
    ERROR: 3,
    EMPTY: 4,
});
//# sourceMappingURL=TileState.js.map

/***/ }),

/***/ "./node_modules/ol/View.js":
/*!*********************************!*\
  !*** ./node_modules/ol/View.js ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createCenterConstraint": () => (/* binding */ createCenterConstraint),
/* harmony export */   "createResolutionConstraint": () => (/* binding */ createResolutionConstraint),
/* harmony export */   "createRotationConstraint": () => (/* binding */ createRotationConstraint),
/* harmony export */   "isNoopAnimation": () => (/* binding */ isNoopAnimation),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _Object_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./Object.js */ "./node_modules/ol/Object.js");
/* harmony import */ var _geom_GeometryType_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./geom/GeometryType.js */ "./node_modules/ol/geom/GeometryType.js");
/* harmony import */ var _proj_Units_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./proj/Units.js */ "./node_modules/ol/proj/Units.js");
/* harmony import */ var _ViewHint_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./ViewHint.js */ "./node_modules/ol/ViewHint.js");
/* harmony import */ var _ViewProperty_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./ViewProperty.js */ "./node_modules/ol/ViewProperty.js");
/* harmony import */ var _tilegrid_common_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./tilegrid/common.js */ "./node_modules/ol/tilegrid/common.js");
/* harmony import */ var _proj_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./proj.js */ "./node_modules/ol/proj.js");
/* harmony import */ var _functions_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./functions.js */ "./node_modules/ol/functions.js");
/* harmony import */ var _coordinate_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./coordinate.js */ "./node_modules/ol/coordinate.js");
/* harmony import */ var _asserts_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./asserts.js */ "./node_modules/ol/asserts.js");
/* harmony import */ var _obj_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./obj.js */ "./node_modules/ol/obj.js");
/* harmony import */ var _centerconstraint_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./centerconstraint.js */ "./node_modules/ol/centerconstraint.js");
/* harmony import */ var _math_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./math.js */ "./node_modules/ol/math.js");
/* harmony import */ var _resolutionconstraint_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./resolutionconstraint.js */ "./node_modules/ol/resolutionconstraint.js");
/* harmony import */ var _rotationconstraint_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./rotationconstraint.js */ "./node_modules/ol/rotationconstraint.js");
/* harmony import */ var _easing_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./easing.js */ "./node_modules/ol/easing.js");
/* harmony import */ var _extent_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./extent.js */ "./node_modules/ol/extent.js");
/* harmony import */ var _array_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./array.js */ "./node_modules/ol/array.js");
/* harmony import */ var _geom_Polygon_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./geom/Polygon.js */ "./node_modules/ol/geom/Polygon.js");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
/**
 * @module ol/View
 */






















/**
 * An animation configuration
 *
 * @typedef {Object} Animation
 * @property {import("./coordinate.js").Coordinate} [sourceCenter]
 * @property {import("./coordinate.js").Coordinate} [targetCenter]
 * @property {number} [sourceResolution]
 * @property {number} [targetResolution]
 * @property {number} [sourceRotation]
 * @property {number} [targetRotation]
 * @property {import("./coordinate.js").Coordinate} [anchor]
 * @property {number} start
 * @property {number} duration
 * @property {boolean} complete
 * @property {function(number):number} easing
 * @property {function(boolean):void} callback
 */
/**
 * @typedef {Object} Constraints
 * @property {import("./centerconstraint.js").Type} center
 * @property {import("./resolutionconstraint.js").Type} resolution
 * @property {import("./rotationconstraint.js").Type} rotation
 */
/**
 * @typedef {Object} FitOptions
 * @property {import("./size.js").Size} [size] The size in pixels of the box to fit
 * the extent into. Default is the current size of the first map in the DOM that
 * uses this view, or `[100, 100]` if no such map is found.
 * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in pixels) to be
 * cleared inside the view. Values in the array are top, right, bottom and left
 * padding.
 * @property {boolean} [nearest=false] If the view `constrainResolution` option is `true`,
 * get the nearest extent instead of the closest that actually fits the view.
 * @property {number} [minResolution=0] Minimum resolution that we zoom to.
 * @property {number} [maxZoom] Maximum zoom level that we zoom to. If
 * `minResolution` is given, this property is ignored.
 * @property {number} [duration] The duration of the animation in milliseconds.
 * By default, there is no animation to the target extent.
 * @property {function(number):number} [easing] The easing function used during
 * the animation (defaults to {@link module:ol/easing~inAndOut}).
 * The function will be called for each frame with a number representing a
 * fraction of the animation's duration.  The function should return a number
 * between 0 and 1 representing the progress toward the destination state.
 * @property {function(boolean):void} [callback] Function called when the view is in
 * its final position. The callback will be called with `true` if the animation
 * series completed on its own or `false` if it was cancelled.
 */
/**
 * @typedef {Object} ViewOptions
 * @property {import("./coordinate.js").Coordinate} [center] The initial center for
 * the view. If a user projection is not set, the coordinate system for the center is
 * specified with the `projection` option. Layer sources will not be fetched if this
 * is not set, but the center can be set later with {@link #setCenter}.
 * @property {boolean|number} [constrainRotation=true] Rotation constraint.
 * `false` means no constraint. `true` means no constraint, but snap to zero
 * near zero. A number constrains the rotation to that number of values. For
 * example, `4` will constrain the rotation to 0, 90, 180, and 270 degrees.
 * @property {boolean} [enableRotation=true] Enable rotation.
 * If `false`, a rotation constraint that always sets the rotation to zero is
 * used. The `constrainRotation` option has no effect if `enableRotation` is
 * `false`.
 * @property {import("./extent.js").Extent} [extent] The extent that constrains the
 * view, in other words, nothing outside of this extent can be visible on the map.
 * @property {boolean} [constrainOnlyCenter=false] If true, the extent
 * constraint will only apply to the view center and not the whole extent.
 * @property {boolean} [smoothExtentConstraint=true] If true, the extent
 * constraint will be applied smoothly, i.e. allow the view to go slightly outside
 * of the given `extent`.
 * @property {number} [maxResolution] The maximum resolution used to determine
 * the resolution constraint. It is used together with `minResolution` (or
 * `maxZoom`) and `zoomFactor`. If unspecified it is calculated in such a way
 * that the projection's validity extent fits in a 256x256 px tile. If the
 * projection is Spherical Mercator (the default) then `maxResolution` defaults
 * to `40075016.68557849 / 256 = 156543.03392804097`.
 * @property {number} [minResolution] The minimum resolution used to determine
 * the resolution constraint.  It is used together with `maxResolution` (or
 * `minZoom`) and `zoomFactor`.  If unspecified it is calculated assuming 29
 * zoom levels (with a factor of 2). If the projection is Spherical Mercator
 * (the default) then `minResolution` defaults to
 * `40075016.68557849 / 256 / Math.pow(2, 28) = 0.0005831682455839253`.
 * @property {number} [maxZoom=28] The maximum zoom level used to determine the
 * resolution constraint. It is used together with `minZoom` (or
 * `maxResolution`) and `zoomFactor`.  Note that if `minResolution` is also
 * provided, it is given precedence over `maxZoom`.
 * @property {number} [minZoom=0] The minimum zoom level used to determine the
 * resolution constraint. It is used together with `maxZoom` (or
 * `minResolution`) and `zoomFactor`.  Note that if `maxResolution` is also
 * provided, it is given precedence over `minZoom`.
 * @property {boolean} [multiWorld=false] If `false` the view is constrained so
 * only one world is visible, and you cannot pan off the edge.  If `true` the map
 * may show multiple worlds at low zoom levels.  Only used if the `projection` is
 * global.  Note that if `extent` is also provided it is given precedence.
 * @property {boolean} [constrainResolution=false] If true, the view will always
 * animate to the closest zoom level after an interaction; false means
 * intermediary zoom levels are allowed.
 * @property {boolean} [smoothResolutionConstraint=true] If true, the resolution
 * min/max values will be applied smoothly, i. e. allow the view to exceed slightly
 * the given resolution or zoom bounds.
 * @property {boolean} [showFullExtent=false] Allow the view to be zoomed out to
 * show the full configured extent. By default, when a view is configured with an
 * extent, users will not be able to zoom out so the viewport exceeds the extent in
 * either dimension. This means the full extent may not be visible if the viewport
 * is taller or wider than the aspect ratio of the configured extent. If
 * showFullExtent is true, the user will be able to zoom out so that the viewport
 * exceeds the height or width of the configured extent, but not both, allowing the
 * full extent to be shown.
 * @property {import("./proj.js").ProjectionLike} [projection='EPSG:3857'] The
 * projection. The default is Spherical Mercator.
 * @property {number} [resolution] The initial resolution for the view. The
 * units are `projection` units per pixel (e.g. meters per pixel). An
 * alternative to setting this is to set `zoom`. Layer sources will not be
 * fetched if neither this nor `zoom` are defined, but they can be set later
 * with {@link #setZoom} or {@link #setResolution}.
 * @property {Array<number>} [resolutions] Resolutions to determine the
 * resolution constraint. If set the `maxResolution`, `minResolution`,
 * `minZoom`, `maxZoom`, and `zoomFactor` options are ignored.
 * @property {number} [rotation=0] The initial rotation for the view in radians
 * (positive rotation clockwise, 0 means North).
 * @property {number} [zoom] Only used if `resolution` is not defined. Zoom
 * level used to calculate the initial resolution for the view.
 * @property {number} [zoomFactor=2] The zoom factor used to compute the
 * corresponding resolution.
 * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in css pixels).
 * If the map viewport is partially covered with other content (overlays) along
 * its edges, this setting allows to shift the center of the viewport away from
 * that content. The order of the values is top, right, bottom, left.
 */
/**
 * @typedef {Object} AnimationOptions
 * @property {import("./coordinate.js").Coordinate} [center] The center of the view at the end of
 * the animation.
 * @property {number} [zoom] The zoom level of the view at the end of the
 * animation. This takes precedence over `resolution`.
 * @property {number} [resolution] The resolution of the view at the end
 * of the animation.  If `zoom` is also provided, this option will be ignored.
 * @property {number} [rotation] The rotation of the view at the end of
 * the animation.
 * @property {import("./coordinate.js").Coordinate} [anchor] Optional anchor to remain fixed
 * during a rotation or resolution animation.
 * @property {number} [duration=1000] The duration of the animation in milliseconds.
 * @property {function(number):number} [easing] The easing function used
 * during the animation (defaults to {@link module:ol/easing~inAndOut}).
 * The function will be called for each frame with a number representing a
 * fraction of the animation's duration.  The function should return a number
 * between 0 and 1 representing the progress toward the destination state.
 */
/**
 * @typedef {Object} State
 * @property {import("./coordinate.js").Coordinate} center
 * @property {import("./proj/Projection.js").default} projection
 * @property {number} resolution
 * @property {number} rotation
 * @property {number} zoom
 */
/**
 * Default min zoom level for the map view.
 * @type {number}
 */
var DEFAULT_MIN_ZOOM = 0;
/**
 * @classdesc
 * A View object represents a simple 2D view of the map.
 *
 * This is the object to act upon to change the center, resolution,
 * and rotation of the map.
 *
 * A View has a `projection`. The projection determines the
 * coordinate system of the center, and its units determine the units of the
 * resolution (projection units per pixel). The default projection is
 * Spherical Mercator (EPSG:3857).
 *
 * ### The view states
 *
 * A View is determined by three states: `center`, `resolution`,
 * and `rotation`. Each state has a corresponding getter and setter, e.g.
 * `getCenter` and `setCenter` for the `center` state.
 *
 * The `zoom` state is actually not saved on the view: all computations
 * internally use the `resolution` state. Still, the `setZoom` and `getZoom`
 * methods are available, as well as `getResolutionForZoom` and
 * `getZoomForResolution` to switch from one system to the other.
 *
 * ### The constraints
 *
 * `setCenter`, `setResolution` and `setRotation` can be used to change the
 * states of the view, but any constraint defined in the constructor will
 * be applied along the way.
 *
 * A View object can have a *resolution constraint*, a *rotation constraint*
 * and a *center constraint*.
 *
 * The *resolution constraint* typically restricts min/max values and
 * snaps to specific resolutions. It is determined by the following
 * options: `resolutions`, `maxResolution`, `maxZoom` and `zoomFactor`.
 * If `resolutions` is set, the other three options are ignored. See
 * documentation for each option for more information. By default, the view
 * only has a min/max restriction and allow intermediary zoom levels when
 * pinch-zooming for example.
 *
 * The *rotation constraint* snaps to specific angles. It is determined
 * by the following options: `enableRotation` and `constrainRotation`.
 * By default rotation is allowed and its value is snapped to zero when approaching the
 * horizontal.
 *
 * The *center constraint* is determined by the `extent` option. By
 * default the view center is not constrained at all.
 *
 * ### Changing the view state
 *
 * It is important to note that `setZoom`, `setResolution`, `setCenter` and
 * `setRotation` are subject to the above mentioned constraints. As such, it
 * may sometimes not be possible to know in advance the resulting state of the
 * View. For example, calling `setResolution(10)` does not guarantee that
 * `getResolution()` will return `10`.
 *
 * A consequence of this is that, when applying a delta on the view state, one
 * should use `adjustCenter`, `adjustRotation`, `adjustZoom` and `adjustResolution`
 * rather than the corresponding setters. This will let view do its internal
 * computations. Besides, the `adjust*` methods also take an `opt_anchor`
 * argument which allows specifying an origin for the transformation.
 *
 * ### Interacting with the view
 *
 * View constraints are usually only applied when the view is *at rest*, meaning that
 * no interaction or animation is ongoing. As such, if the user puts the view in a
 * state that is not equivalent to a constrained one (e.g. rotating the view when
 * the snap angle is 0), an animation will be triggered at the interaction end to
 * put back the view to a stable state;
 *
 * @api
 */
var View = /** @class */ (function (_super) {
    __extends(View, _super);
    /**
     * @param {ViewOptions=} opt_options View options.
     */
    function View(opt_options) {
        var _this = _super.call(this) || this;
        var options = (0,_obj_js__WEBPACK_IMPORTED_MODULE_1__.assign)({}, opt_options);
        /**
         * @private
         * @type {Array<number>}
         */
        _this.hints_ = [0, 0];
        /**
         * @private
         * @type {Array<Array<Animation>>}
         */
        _this.animations_ = [];
        /**
         * @private
         * @type {number|undefined}
         */
        _this.updateAnimationKey_;
        /**
         * @private
         * @const
         * @type {import("./proj/Projection.js").default}
         */
        _this.projection_ = (0,_proj_js__WEBPACK_IMPORTED_MODULE_0__.createProjection)(options.projection, 'EPSG:3857');
        /**
         * @private
         * @type {import("./size.js").Size}
         */
        _this.viewportSize_ = [100, 100];
        /**
         * @private
         * @type {import("./coordinate.js").Coordinate|undefined}
         */
        _this.targetCenter_ = null;
        /**
         * @private
         * @type {number|undefined}
         */
        _this.targetResolution_;
        /**
         * @private
         * @type {number|undefined}
         */
        _this.targetRotation_;
        /**
         * @private
         * @type {import("./coordinate.js").Coordinate|undefined}
         */
        _this.cancelAnchor_ = undefined;
        if (options.center) {
            options.center = (0,_proj_js__WEBPACK_IMPORTED_MODULE_0__.fromUserCoordinate)(options.center, _this.projection_);
        }
        if (options.extent) {
            options.extent = (0,_proj_js__WEBPACK_IMPORTED_MODULE_0__.fromUserExtent)(options.extent, _this.projection_);
        }
        _this.applyOptions_(options);
        return _this;
    }
    /**
     * Set up the view with the given options.
     * @param {ViewOptions} options View options.
     */
    View.prototype.applyOptions_ = function (options) {
        /**
         * @type {Object<string, *>}
         */
        var properties = {};
        var resolutionConstraintInfo = createResolutionConstraint(options);
        /**
         * @private
         * @type {number}
         */
        this.maxResolution_ = resolutionConstraintInfo.maxResolution;
        /**
         * @private
         * @type {number}
         */
        this.minResolution_ = resolutionConstraintInfo.minResolution;
        /**
         * @private
         * @type {number}
         */
        this.zoomFactor_ = resolutionConstraintInfo.zoomFactor;
        /**
         * @private
         * @type {Array<number>|undefined}
         */
        this.resolutions_ = options.resolutions;
        /**
         * Padding (in css pixels).
         * If the map viewport is partially covered with other content (overlays) along
         * its edges, this setting allows to shift the center of the viewport away from that
         * content. The order of the values in the array is top, right, bottom, left.
         * The default is no padding, which is equivalent to `[0, 0, 0, 0]`.
         * @type {Array<number>|undefined}
         * @api
         */
        this.padding = options.padding;
        /**
         * @private
         * @type {number}
         */
        this.minZoom_ = resolutionConstraintInfo.minZoom;
        var centerConstraint = createCenterConstraint(options);
        var resolutionConstraint = resolutionConstraintInfo.constraint;
        var rotationConstraint = createRotationConstraint(options);
        /**
         * @private
         * @type {Constraints}
         */
        this.constraints_ = {
            center: centerConstraint,
            resolution: resolutionConstraint,
            rotation: rotationConstraint,
        };
        this.setRotation(options.rotation !== undefined ? options.rotation : 0);
        this.setCenterInternal(options.center !== undefined ? options.center : null);
        if (options.resolution !== undefined) {
            this.setResolution(options.resolution);
        }
        else if (options.zoom !== undefined) {
            this.setZoom(options.zoom);
        }
        this.setProperties(properties);
        /**
         * @private
         * @type {ViewOptions}
         */
        this.options_ = options;
    };
    /**
     * Get an updated version of the view options used to construct the view.  The
     * current resolution (or zoom), center, and rotation are applied to any stored
     * options.  The provided options can be used to apply new min/max zoom or
     * resolution limits.
     * @param {ViewOptions} newOptions New options to be applied.
     * @return {ViewOptions} New options updated with the current view state.
     */
    View.prototype.getUpdatedOptions_ = function (newOptions) {
        var options = (0,_obj_js__WEBPACK_IMPORTED_MODULE_1__.assign)({}, this.options_);
        // preserve resolution (or zoom)
        if (options.resolution !== undefined) {
            options.resolution = this.getResolution();
        }
        else {
            options.zoom = this.getZoom();
        }
        // preserve center
        options.center = this.getCenterInternal();
        // preserve rotation
        options.rotation = this.getRotation();
        return (0,_obj_js__WEBPACK_IMPORTED_MODULE_1__.assign)({}, options, newOptions);
    };
    /**
     * Animate the view.  The view's center, zoom (or resolution), and rotation
     * can be animated for smooth transitions between view states.  For example,
     * to animate the view to a new zoom level:
     *
     *     view.animate({zoom: view.getZoom() + 1});
     *
     * By default, the animation lasts one second and uses in-and-out easing.  You
     * can customize this behavior by including `duration` (in milliseconds) and
     * `easing` options (see {@link module:ol/easing}).
     *
     * To chain together multiple animations, call the method with multiple
     * animation objects.  For example, to first zoom and then pan:
     *
     *     view.animate({zoom: 10}, {center: [0, 0]});
     *
     * If you provide a function as the last argument to the animate method, it
     * will get called at the end of an animation series.  The callback will be
     * called with `true` if the animation series completed on its own or `false`
     * if it was cancelled.
     *
     * Animations are cancelled by user interactions (e.g. dragging the map) or by
     * calling `view.setCenter()`, `view.setResolution()`, or `view.setRotation()`
     * (or another method that calls one of these).
     *
     * @param {...(AnimationOptions|function(boolean): void)} var_args Animation
     *     options.  Multiple animations can be run in series by passing multiple
     *     options objects.  To run multiple animations in parallel, call the method
     *     multiple times.  An optional callback can be provided as a final
     *     argument.  The callback will be called with a boolean indicating whether
     *     the animation completed without being cancelled.
     * @api
     */
    View.prototype.animate = function (var_args) {
        if (this.isDef() && !this.getAnimating()) {
            this.resolveConstraints(0);
        }
        var args = new Array(arguments.length);
        for (var i = 0; i < args.length; ++i) {
            var options = arguments[i];
            if (options.center) {
                options = (0,_obj_js__WEBPACK_IMPORTED_MODULE_1__.assign)({}, options);
                options.center = (0,_proj_js__WEBPACK_IMPORTED_MODULE_0__.fromUserCoordinate)(options.center, this.getProjection());
            }
            if (options.anchor) {
                options = (0,_obj_js__WEBPACK_IMPORTED_MODULE_1__.assign)({}, options);
                options.anchor = (0,_proj_js__WEBPACK_IMPORTED_MODULE_0__.fromUserCoordinate)(options.anchor, this.getProjection());
            }
            args[i] = options;
        }
        this.animateInternal.apply(this, args);
    };
    /**
     * @param {...(AnimationOptions|function(boolean): void)} var_args Animation options.
     */
    View.prototype.animateInternal = function (var_args) {
        var animationCount = arguments.length;
        var callback;
        if (animationCount > 1 &&
            typeof arguments[animationCount - 1] === 'function') {
            callback = arguments[animationCount - 1];
            --animationCount;
        }
        if (!this.isDef()) {
            // if view properties are not yet set, shortcut to the final state
            var state = arguments[animationCount - 1];
            if (state.center) {
                this.setCenterInternal(state.center);
            }
            if (state.zoom !== undefined) {
                this.setZoom(state.zoom);
            }
            if (state.rotation !== undefined) {
                this.setRotation(state.rotation);
            }
            if (callback) {
                animationCallback(callback, true);
            }
            return;
        }
        var start = Date.now();
        var center = this.targetCenter_.slice();
        var resolution = this.targetResolution_;
        var rotation = this.targetRotation_;
        var series = [];
        for (var i = 0; i < animationCount; ++i) {
            var options = /** @type {AnimationOptions} */ (arguments[i]);
            var animation = {
                start: start,
                complete: false,
                anchor: options.anchor,
                duration: options.duration !== undefined ? options.duration : 1000,
                easing: options.easing || _easing_js__WEBPACK_IMPORTED_MODULE_2__.inAndOut,
                callback: callback,
            };
            if (options.center) {
                animation.sourceCenter = center;
                animation.targetCenter = options.center.slice();
                center = animation.targetCenter;
            }
            if (options.zoom !== undefined) {
                animation.sourceResolution = resolution;
                animation.targetResolution = this.getResolutionForZoom(options.zoom);
                resolution = animation.targetResolution;
            }
            else if (options.resolution) {
                animation.sourceResolution = resolution;
                animation.targetResolution = options.resolution;
                resolution = animation.targetResolution;
            }
            if (options.rotation !== undefined) {
                animation.sourceRotation = rotation;
                var delta = (0,_math_js__WEBPACK_IMPORTED_MODULE_3__.modulo)(options.rotation - rotation + Math.PI, 2 * Math.PI) - Math.PI;
                animation.targetRotation = rotation + delta;
                rotation = animation.targetRotation;
            }
            // check if animation is a no-op
            if (isNoopAnimation(animation)) {
                animation.complete = true;
                // we still push it onto the series for callback handling
            }
            else {
                start += animation.duration;
            }
            series.push(animation);
        }
        this.animations_.push(series);
        this.setHint(_ViewHint_js__WEBPACK_IMPORTED_MODULE_4__.default.ANIMATING, 1);
        this.updateAnimations_();
    };
    /**
     * Determine if the view is being animated.
     * @return {boolean} The view is being animated.
     * @api
     */
    View.prototype.getAnimating = function () {
        return this.hints_[_ViewHint_js__WEBPACK_IMPORTED_MODULE_4__.default.ANIMATING] > 0;
    };
    /**
     * Determine if the user is interacting with the view, such as panning or zooming.
     * @return {boolean} The view is being interacted with.
     * @api
     */
    View.prototype.getInteracting = function () {
        return this.hints_[_ViewHint_js__WEBPACK_IMPORTED_MODULE_4__.default.INTERACTING] > 0;
    };
    /**
     * Cancel any ongoing animations.
     * @api
     */
    View.prototype.cancelAnimations = function () {
        this.setHint(_ViewHint_js__WEBPACK_IMPORTED_MODULE_4__.default.ANIMATING, -this.hints_[_ViewHint_js__WEBPACK_IMPORTED_MODULE_4__.default.ANIMATING]);
        var anchor;
        for (var i = 0, ii = this.animations_.length; i < ii; ++i) {
            var series = this.animations_[i];
            if (series[0].callback) {
                animationCallback(series[0].callback, false);
            }
            if (!anchor) {
                for (var j = 0, jj = series.length; j < jj; ++j) {
                    var animation = series[j];
                    if (!animation.complete) {
                        anchor = animation.anchor;
                        break;
                    }
                }
            }
        }
        this.animations_.length = 0;
        this.cancelAnchor_ = anchor;
    };
    /**
     * Update all animations.
     */
    View.prototype.updateAnimations_ = function () {
        if (this.updateAnimationKey_ !== undefined) {
            cancelAnimationFrame(this.updateAnimationKey_);
            this.updateAnimationKey_ = undefined;
        }
        if (!this.getAnimating()) {
            return;
        }
        var now = Date.now();
        var more = false;
        for (var i = this.animations_.length - 1; i >= 0; --i) {
            var series = this.animations_[i];
            var seriesComplete = true;
            for (var j = 0, jj = series.length; j < jj; ++j) {
                var animation = series[j];
                if (animation.complete) {
                    continue;
                }
                var elapsed = now - animation.start;
                var fraction = animation.duration > 0 ? elapsed / animation.duration : 1;
                if (fraction >= 1) {
                    animation.complete = true;
                    fraction = 1;
                }
                else {
                    seriesComplete = false;
                }
                var progress = animation.easing(fraction);
                if (animation.sourceCenter) {
                    var x0 = animation.sourceCenter[0];
                    var y0 = animation.sourceCenter[1];
                    var x1 = animation.targetCenter[0];
                    var y1 = animation.targetCenter[1];
                    var x = x0 + progress * (x1 - x0);
                    var y = y0 + progress * (y1 - y0);
                    this.targetCenter_ = [x, y];
                }
                if (animation.sourceResolution && animation.targetResolution) {
                    var resolution = progress === 1
                        ? animation.targetResolution
                        : animation.sourceResolution +
                            progress *
                                (animation.targetResolution - animation.sourceResolution);
                    if (animation.anchor) {
                        var size = this.getViewportSize_(this.getRotation());
                        var constrainedResolution = this.constraints_.resolution(resolution, 0, size, true);
                        this.targetCenter_ = this.calculateCenterZoom(constrainedResolution, animation.anchor);
                    }
                    this.targetResolution_ = resolution;
                    this.applyTargetState_(true);
                }
                if (animation.sourceRotation !== undefined &&
                    animation.targetRotation !== undefined) {
                    var rotation = progress === 1
                        ? (0,_math_js__WEBPACK_IMPORTED_MODULE_3__.modulo)(animation.targetRotation + Math.PI, 2 * Math.PI) -
                            Math.PI
                        : animation.sourceRotation +
                            progress *
                                (animation.targetRotation - animation.sourceRotation);
                    if (animation.anchor) {
                        var constrainedRotation = this.constraints_.rotation(rotation, true);
                        this.targetCenter_ = this.calculateCenterRotate(constrainedRotation, animation.anchor);
                    }
                    this.targetRotation_ = rotation;
                }
                this.applyTargetState_(true);
                more = true;
                if (!animation.complete) {
                    break;
                }
            }
            if (seriesComplete) {
                this.animations_[i] = null;
                this.setHint(_ViewHint_js__WEBPACK_IMPORTED_MODULE_4__.default.ANIMATING, -1);
                var callback = series[0].callback;
                if (callback) {
                    animationCallback(callback, true);
                }
            }
        }
        // prune completed series
        this.animations_ = this.animations_.filter(Boolean);
        if (more && this.updateAnimationKey_ === undefined) {
            this.updateAnimationKey_ = requestAnimationFrame(this.updateAnimations_.bind(this));
        }
    };
    /**
     * @param {number} rotation Target rotation.
     * @param {import("./coordinate.js").Coordinate} anchor Rotation anchor.
     * @return {import("./coordinate.js").Coordinate|undefined} Center for rotation and anchor.
     */
    View.prototype.calculateCenterRotate = function (rotation, anchor) {
        var center;
        var currentCenter = this.getCenterInternal();
        if (currentCenter !== undefined) {
            center = [currentCenter[0] - anchor[0], currentCenter[1] - anchor[1]];
            (0,_coordinate_js__WEBPACK_IMPORTED_MODULE_5__.rotate)(center, rotation - this.getRotation());
            (0,_coordinate_js__WEBPACK_IMPORTED_MODULE_5__.add)(center, anchor);
        }
        return center;
    };
    /**
     * @param {number} resolution Target resolution.
     * @param {import("./coordinate.js").Coordinate} anchor Zoom anchor.
     * @return {import("./coordinate.js").Coordinate|undefined} Center for resolution and anchor.
     */
    View.prototype.calculateCenterZoom = function (resolution, anchor) {
        var center;
        var currentCenter = this.getCenterInternal();
        var currentResolution = this.getResolution();
        if (currentCenter !== undefined && currentResolution !== undefined) {
            var x = anchor[0] -
                (resolution * (anchor[0] - currentCenter[0])) / currentResolution;
            var y = anchor[1] -
                (resolution * (anchor[1] - currentCenter[1])) / currentResolution;
            center = [x, y];
        }
        return center;
    };
    /**
     * Returns the current viewport size.
     * @private
     * @param {number=} opt_rotation Take into account the rotation of the viewport when giving the size
     * @return {import("./size.js").Size} Viewport size or `[100, 100]` when no viewport is found.
     */
    View.prototype.getViewportSize_ = function (opt_rotation) {
        var size = this.viewportSize_;
        if (opt_rotation) {
            var w = size[0];
            var h = size[1];
            return [
                Math.abs(w * Math.cos(opt_rotation)) +
                    Math.abs(h * Math.sin(opt_rotation)),
                Math.abs(w * Math.sin(opt_rotation)) +
                    Math.abs(h * Math.cos(opt_rotation)),
            ];
        }
        else {
            return size;
        }
    };
    /**
     * Stores the viewport size on the view. The viewport size is not read every time from the DOM
     * to avoid performance hit and layout reflow.
     * This should be done on map size change.
     * Note: the constraints are not resolved during an animation to avoid stopping it
     * @param {import("./size.js").Size=} opt_size Viewport size; if undefined, [100, 100] is assumed
     */
    View.prototype.setViewportSize = function (opt_size) {
        this.viewportSize_ = Array.isArray(opt_size)
            ? opt_size.slice()
            : [100, 100];
        if (!this.getAnimating()) {
            this.resolveConstraints(0);
        }
    };
    /**
     * Get the view center.
     * @return {import("./coordinate.js").Coordinate|undefined} The center of the view.
     * @observable
     * @api
     */
    View.prototype.getCenter = function () {
        var center = this.getCenterInternal();
        if (!center) {
            return center;
        }
        return (0,_proj_js__WEBPACK_IMPORTED_MODULE_0__.toUserCoordinate)(center, this.getProjection());
    };
    /**
     * Get the view center without transforming to user projection.
     * @return {import("./coordinate.js").Coordinate|undefined} The center of the view.
     */
    View.prototype.getCenterInternal = function () {
        return /** @type {import("./coordinate.js").Coordinate|undefined} */ (this.get(_ViewProperty_js__WEBPACK_IMPORTED_MODULE_6__.default.CENTER));
    };
    /**
     * @return {Constraints} Constraints.
     */
    View.prototype.getConstraints = function () {
        return this.constraints_;
    };
    /**
     * @return {boolean} Resolution constraint is set
     */
    View.prototype.getConstrainResolution = function () {
        return this.options_.constrainResolution;
    };
    /**
     * @param {Array<number>=} opt_hints Destination array.
     * @return {Array<number>} Hint.
     */
    View.prototype.getHints = function (opt_hints) {
        if (opt_hints !== undefined) {
            opt_hints[0] = this.hints_[0];
            opt_hints[1] = this.hints_[1];
            return opt_hints;
        }
        else {
            return this.hints_.slice();
        }
    };
    /**
     * Calculate the extent for the current view state and the passed size.
     * The size is the pixel dimensions of the box into which the calculated extent
     * should fit. In most cases you want to get the extent of the entire map,
     * that is `map.getSize()`.
     * @param {import("./size.js").Size=} opt_size Box pixel size. If not provided, the size
     * of the map that uses this view will be used.
     * @return {import("./extent.js").Extent} Extent.
     * @api
     */
    View.prototype.calculateExtent = function (opt_size) {
        var extent = this.calculateExtentInternal(opt_size);
        return (0,_proj_js__WEBPACK_IMPORTED_MODULE_0__.toUserExtent)(extent, this.getProjection());
    };
    /**
     * @param {import("./size.js").Size=} opt_size Box pixel size. If not provided,
     * the map's last known viewport size will be used.
     * @return {import("./extent.js").Extent} Extent.
     */
    View.prototype.calculateExtentInternal = function (opt_size) {
        var size = opt_size || this.getViewportSize_();
        var center = /** @type {!import("./coordinate.js").Coordinate} */ (this.getCenterInternal());
        (0,_asserts_js__WEBPACK_IMPORTED_MODULE_7__.assert)(center, 1); // The view center is not defined
        var resolution = /** @type {!number} */ (this.getResolution());
        (0,_asserts_js__WEBPACK_IMPORTED_MODULE_7__.assert)(resolution !== undefined, 2); // The view resolution is not defined
        var rotation = /** @type {!number} */ (this.getRotation());
        (0,_asserts_js__WEBPACK_IMPORTED_MODULE_7__.assert)(rotation !== undefined, 3); // The view rotation is not defined
        return (0,_extent_js__WEBPACK_IMPORTED_MODULE_8__.getForViewAndSize)(center, resolution, rotation, size);
    };
    /**
     * Get the maximum resolution of the view.
     * @return {number} The maximum resolution of the view.
     * @api
     */
    View.prototype.getMaxResolution = function () {
        return this.maxResolution_;
    };
    /**
     * Get the minimum resolution of the view.
     * @return {number} The minimum resolution of the view.
     * @api
     */
    View.prototype.getMinResolution = function () {
        return this.minResolution_;
    };
    /**
     * Get the maximum zoom level for the view.
     * @return {number} The maximum zoom level.
     * @api
     */
    View.prototype.getMaxZoom = function () {
        return /** @type {number} */ (this.getZoomForResolution(this.minResolution_));
    };
    /**
     * Set a new maximum zoom level for the view.
     * @param {number} zoom The maximum zoom level.
     * @api
     */
    View.prototype.setMaxZoom = function (zoom) {
        this.applyOptions_(this.getUpdatedOptions_({ maxZoom: zoom }));
    };
    /**
     * Get the minimum zoom level for the view.
     * @return {number} The minimum zoom level.
     * @api
     */
    View.prototype.getMinZoom = function () {
        return /** @type {number} */ (this.getZoomForResolution(this.maxResolution_));
    };
    /**
     * Set a new minimum zoom level for the view.
     * @param {number} zoom The minimum zoom level.
     * @api
     */
    View.prototype.setMinZoom = function (zoom) {
        this.applyOptions_(this.getUpdatedOptions_({ minZoom: zoom }));
    };
    /**
     * Set whether the view shoud allow intermediary zoom levels.
     * @param {boolean} enabled Whether the resolution is constrained.
     * @api
     */
    View.prototype.setConstrainResolution = function (enabled) {
        this.applyOptions_(this.getUpdatedOptions_({ constrainResolution: enabled }));
    };
    /**
     * Get the view projection.
     * @return {import("./proj/Projection.js").default} The projection of the view.
     * @api
     */
    View.prototype.getProjection = function () {
        return this.projection_;
    };
    /**
     * Get the view resolution.
     * @return {number|undefined} The resolution of the view.
     * @observable
     * @api
     */
    View.prototype.getResolution = function () {
        return /** @type {number|undefined} */ (this.get(_ViewProperty_js__WEBPACK_IMPORTED_MODULE_6__.default.RESOLUTION));
    };
    /**
     * Get the resolutions for the view. This returns the array of resolutions
     * passed to the constructor of the View, or undefined if none were given.
     * @return {Array<number>|undefined} The resolutions of the view.
     * @api
     */
    View.prototype.getResolutions = function () {
        return this.resolutions_;
    };
    /**
     * Get the resolution for a provided extent (in map units) and size (in pixels).
     * @param {import("./extent.js").Extent} extent Extent.
     * @param {import("./size.js").Size=} opt_size Box pixel size.
     * @return {number} The resolution at which the provided extent will render at
     *     the given size.
     * @api
     */
    View.prototype.getResolutionForExtent = function (extent, opt_size) {
        return this.getResolutionForExtentInternal((0,_proj_js__WEBPACK_IMPORTED_MODULE_0__.fromUserExtent)(extent, this.getProjection()), opt_size);
    };
    /**
     * Get the resolution for a provided extent (in map units) and size (in pixels).
     * @param {import("./extent.js").Extent} extent Extent.
     * @param {import("./size.js").Size=} opt_size Box pixel size.
     * @return {number} The resolution at which the provided extent will render at
     *     the given size.
     */
    View.prototype.getResolutionForExtentInternal = function (extent, opt_size) {
        var size = opt_size || this.getViewportSize_();
        var xResolution = (0,_extent_js__WEBPACK_IMPORTED_MODULE_8__.getWidth)(extent) / size[0];
        var yResolution = (0,_extent_js__WEBPACK_IMPORTED_MODULE_8__.getHeight)(extent) / size[1];
        return Math.max(xResolution, yResolution);
    };
    /**
     * Return a function that returns a value between 0 and 1 for a
     * resolution. Exponential scaling is assumed.
     * @param {number=} opt_power Power.
     * @return {function(number): number} Resolution for value function.
     */
    View.prototype.getResolutionForValueFunction = function (opt_power) {
        var power = opt_power || 2;
        var maxResolution = this.getConstrainedResolution(this.maxResolution_);
        var minResolution = this.minResolution_;
        var max = Math.log(maxResolution / minResolution) / Math.log(power);
        return (
        /**
         * @param {number} value Value.
         * @return {number} Resolution.
         */
        function (value) {
            var resolution = maxResolution / Math.pow(power, value * max);
            return resolution;
        });
    };
    /**
     * Get the view rotation.
     * @return {number} The rotation of the view in radians.
     * @observable
     * @api
     */
    View.prototype.getRotation = function () {
        return /** @type {number} */ (this.get(_ViewProperty_js__WEBPACK_IMPORTED_MODULE_6__.default.ROTATION));
    };
    /**
     * Return a function that returns a resolution for a value between
     * 0 and 1. Exponential scaling is assumed.
     * @param {number=} opt_power Power.
     * @return {function(number): number} Value for resolution function.
     */
    View.prototype.getValueForResolutionFunction = function (opt_power) {
        var logPower = Math.log(opt_power || 2);
        var maxResolution = this.getConstrainedResolution(this.maxResolution_);
        var minResolution = this.minResolution_;
        var max = Math.log(maxResolution / minResolution) / logPower;
        return (
        /**
         * @param {number} resolution Resolution.
         * @return {number} Value.
         */
        function (resolution) {
            var value = Math.log(maxResolution / resolution) / logPower / max;
            return value;
        });
    };
    /**
     * Returns the size of the viewport minus padding.
     * @private
     * @param {number=} opt_rotation Take into account the rotation of the viewport when giving the size
     * @return {import("./size.js").Size} Viewport size reduced by the padding.
     */
    View.prototype.getViewportSizeMinusPadding_ = function (opt_rotation) {
        var size = this.getViewportSize_(opt_rotation);
        var padding = this.padding;
        if (padding) {
            size = [
                size[0] - padding[1] - padding[3],
                size[1] - padding[0] - padding[2],
            ];
        }
        return size;
    };
    /**
     * @return {State} View state.
     */
    View.prototype.getState = function () {
        var projection = this.getProjection();
        var resolution = /** @type {number} */ (this.getResolution());
        var rotation = this.getRotation();
        var center = /** @type {import("./coordinate.js").Coordinate} */ (this.getCenterInternal());
        var padding = this.padding;
        if (padding) {
            var reducedSize = this.getViewportSizeMinusPadding_();
            center = calculateCenterOn(center, this.getViewportSize_(), [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]], resolution, rotation);
        }
        return {
            center: center.slice(0),
            projection: projection !== undefined ? projection : null,
            resolution: resolution,
            rotation: rotation,
            zoom: this.getZoom(),
        };
    };
    /**
     * Get the current zoom level. This method may return non-integer zoom levels
     * if the view does not constrain the resolution, or if an interaction or
     * animation is underway.
     * @return {number|undefined} Zoom.
     * @api
     */
    View.prototype.getZoom = function () {
        var zoom;
        var resolution = this.getResolution();
        if (resolution !== undefined) {
            zoom = this.getZoomForResolution(resolution);
        }
        return zoom;
    };
    /**
     * Get the zoom level for a resolution.
     * @param {number} resolution The resolution.
     * @return {number|undefined} The zoom level for the provided resolution.
     * @api
     */
    View.prototype.getZoomForResolution = function (resolution) {
        var offset = this.minZoom_ || 0;
        var max, zoomFactor;
        if (this.resolutions_) {
            var nearest = (0,_array_js__WEBPACK_IMPORTED_MODULE_9__.linearFindNearest)(this.resolutions_, resolution, 1);
            offset = nearest;
            max = this.resolutions_[nearest];
            if (nearest == this.resolutions_.length - 1) {
                zoomFactor = 2;
            }
            else {
                zoomFactor = max / this.resolutions_[nearest + 1];
            }
        }
        else {
            max = this.maxResolution_;
            zoomFactor = this.zoomFactor_;
        }
        return offset + Math.log(max / resolution) / Math.log(zoomFactor);
    };
    /**
     * Get the resolution for a zoom level.
     * @param {number} zoom Zoom level.
     * @return {number} The view resolution for the provided zoom level.
     * @api
     */
    View.prototype.getResolutionForZoom = function (zoom) {
        if (this.resolutions_) {
            if (this.resolutions_.length <= 1) {
                return 0;
            }
            var baseLevel = (0,_math_js__WEBPACK_IMPORTED_MODULE_3__.clamp)(Math.floor(zoom), 0, this.resolutions_.length - 2);
            var zoomFactor = this.resolutions_[baseLevel] / this.resolutions_[baseLevel + 1];
            return (this.resolutions_[baseLevel] /
                Math.pow(zoomFactor, (0,_math_js__WEBPACK_IMPORTED_MODULE_3__.clamp)(zoom - baseLevel, 0, 1)));
        }
        else {
            return (this.maxResolution_ / Math.pow(this.zoomFactor_, zoom - this.minZoom_));
        }
    };
    /**
     * Fit the given geometry or extent based on the given map size and border.
     * The size is pixel dimensions of the box to fit the extent into.
     * In most cases you will want to use the map size, that is `map.getSize()`.
     * Takes care of the map angle.
     * @param {import("./geom/SimpleGeometry.js").default|import("./extent.js").Extent} geometryOrExtent The geometry or
     *     extent to fit the view to.
     * @param {FitOptions=} opt_options Options.
     * @api
     */
    View.prototype.fit = function (geometryOrExtent, opt_options) {
        /** @type {import("./geom/SimpleGeometry.js").default} */
        var geometry;
        (0,_asserts_js__WEBPACK_IMPORTED_MODULE_7__.assert)(Array.isArray(geometryOrExtent) ||
            typeof ( /** @type {?} */(geometryOrExtent).getSimplifiedGeometry) ===
                'function', 24); // Invalid extent or geometry provided as `geometry`
        if (Array.isArray(geometryOrExtent)) {
            (0,_asserts_js__WEBPACK_IMPORTED_MODULE_7__.assert)(!(0,_extent_js__WEBPACK_IMPORTED_MODULE_8__.isEmpty)(geometryOrExtent), 25); // Cannot fit empty extent provided as `geometry`
            var extent = (0,_proj_js__WEBPACK_IMPORTED_MODULE_0__.fromUserExtent)(geometryOrExtent, this.getProjection());
            geometry = (0,_geom_Polygon_js__WEBPACK_IMPORTED_MODULE_10__.fromExtent)(extent);
        }
        else if (geometryOrExtent.getType() === _geom_GeometryType_js__WEBPACK_IMPORTED_MODULE_11__.default.CIRCLE) {
            var extent = (0,_proj_js__WEBPACK_IMPORTED_MODULE_0__.fromUserExtent)(geometryOrExtent.getExtent(), this.getProjection());
            geometry = (0,_geom_Polygon_js__WEBPACK_IMPORTED_MODULE_10__.fromExtent)(extent);
            geometry.rotate(this.getRotation(), (0,_extent_js__WEBPACK_IMPORTED_MODULE_8__.getCenter)(extent));
        }
        else {
            var userProjection = (0,_proj_js__WEBPACK_IMPORTED_MODULE_0__.getUserProjection)();
            if (userProjection) {
                geometry = /** @type {import("./geom/SimpleGeometry.js").default} */ (geometryOrExtent
                    .clone()
                    .transform(userProjection, this.getProjection()));
            }
            else {
                geometry = geometryOrExtent;
            }
        }
        this.fitInternal(geometry, opt_options);
    };
    /**
     * @param {import("./geom/SimpleGeometry.js").default} geometry The geometry.
     * @param {FitOptions=} opt_options Options.
     */
    View.prototype.fitInternal = function (geometry, opt_options) {
        var options = opt_options || {};
        var size = options.size;
        if (!size) {
            size = this.getViewportSizeMinusPadding_();
        }
        var padding = options.padding !== undefined ? options.padding : [0, 0, 0, 0];
        var nearest = options.nearest !== undefined ? options.nearest : false;
        var minResolution;
        if (options.minResolution !== undefined) {
            minResolution = options.minResolution;
        }
        else if (options.maxZoom !== undefined) {
            minResolution = this.getResolutionForZoom(options.maxZoom);
        }
        else {
            minResolution = 0;
        }
        var coords = geometry.getFlatCoordinates();
        // calculate rotated extent
        var rotation = this.getRotation();
        var cosAngle = Math.cos(-rotation);
        var sinAngle = Math.sin(-rotation);
        var minRotX = +Infinity;
        var minRotY = +Infinity;
        var maxRotX = -Infinity;
        var maxRotY = -Infinity;
        var stride = geometry.getStride();
        for (var i = 0, ii = coords.length; i < ii; i += stride) {
            var rotX = coords[i] * cosAngle - coords[i + 1] * sinAngle;
            var rotY = coords[i] * sinAngle + coords[i + 1] * cosAngle;
            minRotX = Math.min(minRotX, rotX);
            minRotY = Math.min(minRotY, rotY);
            maxRotX = Math.max(maxRotX, rotX);
            maxRotY = Math.max(maxRotY, rotY);
        }
        // calculate resolution
        var resolution = this.getResolutionForExtentInternal([minRotX, minRotY, maxRotX, maxRotY], [size[0] - padding[1] - padding[3], size[1] - padding[0] - padding[2]]);
        resolution = isNaN(resolution)
            ? minResolution
            : Math.max(resolution, minResolution);
        resolution = this.getConstrainedResolution(resolution, nearest ? 0 : 1);
        // calculate center
        sinAngle = -sinAngle; // go back to original rotation
        var centerRotX = (minRotX + maxRotX) / 2;
        var centerRotY = (minRotY + maxRotY) / 2;
        centerRotX += ((padding[1] - padding[3]) / 2) * resolution;
        centerRotY += ((padding[0] - padding[2]) / 2) * resolution;
        var centerX = centerRotX * cosAngle - centerRotY * sinAngle;
        var centerY = centerRotY * cosAngle + centerRotX * sinAngle;
        var center = this.getConstrainedCenter([centerX, centerY], resolution);
        var callback = options.callback ? options.callback : _functions_js__WEBPACK_IMPORTED_MODULE_12__.VOID;
        if (options.duration !== undefined) {
            this.animateInternal({
                resolution: resolution,
                center: center,
                duration: options.duration,
                easing: options.easing,
            }, callback);
        }
        else {
            this.targetResolution_ = resolution;
            this.targetCenter_ = center;
            this.applyTargetState_(false, true);
            animationCallback(callback, true);
        }
    };
    /**
     * Center on coordinate and view position.
     * @param {import("./coordinate.js").Coordinate} coordinate Coordinate.
     * @param {import("./size.js").Size} size Box pixel size.
     * @param {import("./pixel.js").Pixel} position Position on the view to center on.
     * @api
     */
    View.prototype.centerOn = function (coordinate, size, position) {
        this.centerOnInternal((0,_proj_js__WEBPACK_IMPORTED_MODULE_0__.fromUserCoordinate)(coordinate, this.getProjection()), size, position);
    };
    /**
     * @param {import("./coordinate.js").Coordinate} coordinate Coordinate.
     * @param {import("./size.js").Size} size Box pixel size.
     * @param {import("./pixel.js").Pixel} position Position on the view to center on.
     */
    View.prototype.centerOnInternal = function (coordinate, size, position) {
        this.setCenterInternal(calculateCenterOn(coordinate, size, position, this.getResolution(), this.getRotation()));
    };
    /**
     * Calculates the shift between map and viewport center.
     * @param {import("./coordinate.js").Coordinate} center Center.
     * @param {number} resolution Resolution.
     * @param {number} rotation Rotation.
     * @param {import("./size.js").Size} size Size.
     * @return {Array<number>|undefined} Center shift.
     */
    View.prototype.calculateCenterShift = function (center, resolution, rotation, size) {
        var centerShift;
        var padding = this.padding;
        if (padding && center) {
            var reducedSize = this.getViewportSizeMinusPadding_(-rotation);
            var shiftedCenter = calculateCenterOn(center, size, [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]], resolution, rotation);
            centerShift = [
                center[0] - shiftedCenter[0],
                center[1] - shiftedCenter[1],
            ];
        }
        return centerShift;
    };
    /**
     * @return {boolean} Is defined.
     */
    View.prototype.isDef = function () {
        return !!this.getCenterInternal() && this.getResolution() !== undefined;
    };
    /**
     * Adds relative coordinates to the center of the view. Any extent constraint will apply.
     * @param {import("./coordinate.js").Coordinate} deltaCoordinates Relative value to add.
     * @api
     */
    View.prototype.adjustCenter = function (deltaCoordinates) {
        var center = (0,_proj_js__WEBPACK_IMPORTED_MODULE_0__.toUserCoordinate)(this.targetCenter_, this.getProjection());
        this.setCenter([
            center[0] + deltaCoordinates[0],
            center[1] + deltaCoordinates[1],
        ]);
    };
    /**
     * Adds relative coordinates to the center of the view. Any extent constraint will apply.
     * @param {import("./coordinate.js").Coordinate} deltaCoordinates Relative value to add.
     */
    View.prototype.adjustCenterInternal = function (deltaCoordinates) {
        var center = this.targetCenter_;
        this.setCenterInternal([
            center[0] + deltaCoordinates[0],
            center[1] + deltaCoordinates[1],
        ]);
    };
    /**
     * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution
     * constraint will apply.
     * @param {number} ratio The ratio to apply on the view resolution.
     * @param {import("./coordinate.js").Coordinate=} opt_anchor The origin of the transformation.
     * @api
     */
    View.prototype.adjustResolution = function (ratio, opt_anchor) {
        var anchor = opt_anchor && (0,_proj_js__WEBPACK_IMPORTED_MODULE_0__.fromUserCoordinate)(opt_anchor, this.getProjection());
        this.adjustResolutionInternal(ratio, anchor);
    };
    /**
     * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution
     * constraint will apply.
     * @param {number} ratio The ratio to apply on the view resolution.
     * @param {import("./coordinate.js").Coordinate=} opt_anchor The origin of the transformation.
     */
    View.prototype.adjustResolutionInternal = function (ratio, opt_anchor) {
        var isMoving = this.getAnimating() || this.getInteracting();
        var size = this.getViewportSize_(this.getRotation());
        var newResolution = this.constraints_.resolution(this.targetResolution_ * ratio, 0, size, isMoving);
        if (opt_anchor) {
            this.targetCenter_ = this.calculateCenterZoom(newResolution, opt_anchor);
        }
        this.targetResolution_ *= ratio;
        this.applyTargetState_();
    };
    /**
     * Adds a value to the view zoom level, optionally using an anchor. Any resolution
     * constraint will apply.
     * @param {number} delta Relative value to add to the zoom level.
     * @param {import("./coordinate.js").Coordinate=} opt_anchor The origin of the transformation.
     * @api
     */
    View.prototype.adjustZoom = function (delta, opt_anchor) {
        this.adjustResolution(Math.pow(this.zoomFactor_, -delta), opt_anchor);
    };
    /**
     * Adds a value to the view rotation, optionally using an anchor. Any rotation
     * constraint will apply.
     * @param {number} delta Relative value to add to the zoom rotation, in radians.
     * @param {import("./coordinate.js").Coordinate=} opt_anchor The rotation center.
     * @api
     */
    View.prototype.adjustRotation = function (delta, opt_anchor) {
        if (opt_anchor) {
            opt_anchor = (0,_proj_js__WEBPACK_IMPORTED_MODULE_0__.fromUserCoordinate)(opt_anchor, this.getProjection());
        }
        this.adjustRotationInternal(delta, opt_anchor);
    };
    /**
     * @param {number} delta Relative value to add to the zoom rotation, in radians.
     * @param {import("./coordinate.js").Coordinate=} opt_anchor The rotation center.
     */
    View.prototype.adjustRotationInternal = function (delta, opt_anchor) {
        var isMoving = this.getAnimating() || this.getInteracting();
        var newRotation = this.constraints_.rotation(this.targetRotation_ + delta, isMoving);
        if (opt_anchor) {
            this.targetCenter_ = this.calculateCenterRotate(newRotation, opt_anchor);
        }
        this.targetRotation_ += delta;
        this.applyTargetState_();
    };
    /**
     * Set the center of the current view. Any extent constraint will apply.
     * @param {import("./coordinate.js").Coordinate|undefined} center The center of the view.
     * @observable
     * @api
     */
    View.prototype.setCenter = function (center) {
        this.setCenterInternal((0,_proj_js__WEBPACK_IMPORTED_MODULE_0__.fromUserCoordinate)(center, this.getProjection()));
    };
    /**
     * Set the center using the view projection (not the user projection).
     * @param {import("./coordinate.js").Coordinate|undefined} center The center of the view.
     */
    View.prototype.setCenterInternal = function (center) {
        this.targetCenter_ = center;
        this.applyTargetState_();
    };
    /**
     * @param {import("./ViewHint.js").default} hint Hint.
     * @param {number} delta Delta.
     * @return {number} New value.
     */
    View.prototype.setHint = function (hint, delta) {
        this.hints_[hint] += delta;
        this.changed();
        return this.hints_[hint];
    };
    /**
     * Set the resolution for this view. Any resolution constraint will apply.
     * @param {number|undefined} resolution The resolution of the view.
     * @observable
     * @api
     */
    View.prototype.setResolution = function (resolution) {
        this.targetResolution_ = resolution;
        this.applyTargetState_();
    };
    /**
     * Set the rotation for this view. Any rotation constraint will apply.
     * @param {number} rotation The rotation of the view in radians.
     * @observable
     * @api
     */
    View.prototype.setRotation = function (rotation) {
        this.targetRotation_ = rotation;
        this.applyTargetState_();
    };
    /**
     * Zoom to a specific zoom level. Any resolution constrain will apply.
     * @param {number} zoom Zoom level.
     * @api
     */
    View.prototype.setZoom = function (zoom) {
        this.setResolution(this.getResolutionForZoom(zoom));
    };
    /**
     * Recompute rotation/resolution/center based on target values.
     * Note: we have to compute rotation first, then resolution and center considering that
     * parameters can influence one another in case a view extent constraint is present.
     * @param {boolean=} opt_doNotCancelAnims Do not cancel animations.
     * @param {boolean=} opt_forceMoving Apply constraints as if the view is moving.
     * @private
     */
    View.prototype.applyTargetState_ = function (opt_doNotCancelAnims, opt_forceMoving) {
        var isMoving = this.getAnimating() || this.getInteracting() || opt_forceMoving;
        // compute rotation
        var newRotation = this.constraints_.rotation(this.targetRotation_, isMoving);
        var size = this.getViewportSize_(newRotation);
        var newResolution = this.constraints_.resolution(this.targetResolution_, 0, size, isMoving);
        var newCenter = this.constraints_.center(this.targetCenter_, newResolution, size, isMoving, this.calculateCenterShift(this.targetCenter_, newResolution, newRotation, size));
        if (this.get(_ViewProperty_js__WEBPACK_IMPORTED_MODULE_6__.default.ROTATION) !== newRotation) {
            this.set(_ViewProperty_js__WEBPACK_IMPORTED_MODULE_6__.default.ROTATION, newRotation);
        }
        if (this.get(_ViewProperty_js__WEBPACK_IMPORTED_MODULE_6__.default.RESOLUTION) !== newResolution) {
            this.set(_ViewProperty_js__WEBPACK_IMPORTED_MODULE_6__.default.RESOLUTION, newResolution);
        }
        if (!this.get(_ViewProperty_js__WEBPACK_IMPORTED_MODULE_6__.default.CENTER) ||
            !(0,_coordinate_js__WEBPACK_IMPORTED_MODULE_5__.equals)(this.get(_ViewProperty_js__WEBPACK_IMPORTED_MODULE_6__.default.CENTER), newCenter)) {
            this.set(_ViewProperty_js__WEBPACK_IMPORTED_MODULE_6__.default.CENTER, newCenter);
        }
        if (this.getAnimating() && !opt_doNotCancelAnims) {
            this.cancelAnimations();
        }
        this.cancelAnchor_ = undefined;
    };
    /**
     * If any constraints need to be applied, an animation will be triggered.
     * This is typically done on interaction end.
     * Note: calling this with a duration of 0 will apply the constrained values straight away,
     * without animation.
     * @param {number=} opt_duration The animation duration in ms.
     * @param {number=} opt_resolutionDirection Which direction to zoom.
     * @param {import("./coordinate.js").Coordinate=} opt_anchor The origin of the transformation.
     */
    View.prototype.resolveConstraints = function (opt_duration, opt_resolutionDirection, opt_anchor) {
        var duration = opt_duration !== undefined ? opt_duration : 200;
        var direction = opt_resolutionDirection || 0;
        var newRotation = this.constraints_.rotation(this.targetRotation_);
        var size = this.getViewportSize_(newRotation);
        var newResolution = this.constraints_.resolution(this.targetResolution_, direction, size);
        var newCenter = this.constraints_.center(this.targetCenter_, newResolution, size, false, this.calculateCenterShift(this.targetCenter_, newResolution, newRotation, size));
        if (duration === 0 && !this.cancelAnchor_) {
            this.targetResolution_ = newResolution;
            this.targetRotation_ = newRotation;
            this.targetCenter_ = newCenter;
            this.applyTargetState_();
            return;
        }
        var anchor = opt_anchor || (duration === 0 ? this.cancelAnchor_ : undefined);
        this.cancelAnchor_ = undefined;
        if (this.getResolution() !== newResolution ||
            this.getRotation() !== newRotation ||
            !this.getCenterInternal() ||
            !(0,_coordinate_js__WEBPACK_IMPORTED_MODULE_5__.equals)(this.getCenterInternal(), newCenter)) {
            if (this.getAnimating()) {
                this.cancelAnimations();
            }
            this.animateInternal({
                rotation: newRotation,
                center: newCenter,
                resolution: newResolution,
                duration: duration,
                easing: _easing_js__WEBPACK_IMPORTED_MODULE_2__.easeOut,
                anchor: anchor,
            });
        }
    };
    /**
     * Notify the View that an interaction has started.
     * The view state will be resolved to a stable one if needed
     * (depending on its constraints).
     * @api
     */
    View.prototype.beginInteraction = function () {
        this.resolveConstraints(0);
        this.setHint(_ViewHint_js__WEBPACK_IMPORTED_MODULE_4__.default.INTERACTING, 1);
    };
    /**
     * Notify the View that an interaction has ended. The view state will be resolved
     * to a stable one if needed (depending on its constraints).
     * @param {number=} opt_duration Animation duration in ms.
     * @param {number=} opt_resolutionDirection Which direction to zoom.
     * @param {import("./coordinate.js").Coordinate=} opt_anchor The origin of the transformation.
     * @api
     */
    View.prototype.endInteraction = function (opt_duration, opt_resolutionDirection, opt_anchor) {
        var anchor = opt_anchor && (0,_proj_js__WEBPACK_IMPORTED_MODULE_0__.fromUserCoordinate)(opt_anchor, this.getProjection());
        this.endInteractionInternal(opt_duration, opt_resolutionDirection, anchor);
    };
    /**
     * Notify the View that an interaction has ended. The view state will be resolved
     * to a stable one if needed (depending on its constraints).
     * @param {number=} opt_duration Animation duration in ms.
     * @param {number=} opt_resolutionDirection Which direction to zoom.
     * @param {import("./coordinate.js").Coordinate=} opt_anchor The origin of the transformation.
     */
    View.prototype.endInteractionInternal = function (opt_duration, opt_resolutionDirection, opt_anchor) {
        this.setHint(_ViewHint_js__WEBPACK_IMPORTED_MODULE_4__.default.INTERACTING, -1);
        this.resolveConstraints(opt_duration, opt_resolutionDirection, opt_anchor);
    };
    /**
     * Get a valid position for the view center according to the current constraints.
     * @param {import("./coordinate.js").Coordinate|undefined} targetCenter Target center position.
     * @param {number=} opt_targetResolution Target resolution. If not supplied, the current one will be used.
     * This is useful to guess a valid center position at a different zoom level.
     * @return {import("./coordinate.js").Coordinate|undefined} Valid center position.
     */
    View.prototype.getConstrainedCenter = function (targetCenter, opt_targetResolution) {
        var size = this.getViewportSize_(this.getRotation());
        return this.constraints_.center(targetCenter, opt_targetResolution || this.getResolution(), size);
    };
    /**
     * Get a valid zoom level according to the current view constraints.
     * @param {number|undefined} targetZoom Target zoom.
     * @param {number=} [opt_direction=0] Indicate which resolution should be used
     * by a renderer if the view resolution does not match any resolution of the tile source.
     * If 0, the nearest resolution will be used. If 1, the nearest lower resolution
     * will be used. If -1, the nearest higher resolution will be used.
     * @return {number|undefined} Valid zoom level.
     */
    View.prototype.getConstrainedZoom = function (targetZoom, opt_direction) {
        var targetRes = this.getResolutionForZoom(targetZoom);
        return this.getZoomForResolution(this.getConstrainedResolution(targetRes, opt_direction));
    };
    /**
     * Get a valid resolution according to the current view constraints.
     * @param {number|undefined} targetResolution Target resolution.
     * @param {number=} [opt_direction=0] Indicate which resolution should be used
     * by a renderer if the view resolution does not match any resolution of the tile source.
     * If 0, the nearest resolution will be used. If 1, the nearest lower resolution
     * will be used. If -1, the nearest higher resolution will be used.
     * @return {number|undefined} Valid resolution.
     */
    View.prototype.getConstrainedResolution = function (targetResolution, opt_direction) {
        var direction = opt_direction || 0;
        var size = this.getViewportSize_(this.getRotation());
        return this.constraints_.resolution(targetResolution, direction, size);
    };
    return View;
}(_Object_js__WEBPACK_IMPORTED_MODULE_13__.default));
/**
 * @param {Function} callback Callback.
 * @param {*} returnValue Return value.
 */
function animationCallback(callback, returnValue) {
    setTimeout(function () {
        callback(returnValue);
    }, 0);
}
/**
 * @param {ViewOptions} options View options.
 * @return {import("./centerconstraint.js").Type} The constraint.
 */
function createCenterConstraint(options) {
    if (options.extent !== undefined) {
        var smooth = options.smoothExtentConstraint !== undefined
            ? options.smoothExtentConstraint
            : true;
        return (0,_centerconstraint_js__WEBPACK_IMPORTED_MODULE_14__.createExtent)(options.extent, options.constrainOnlyCenter, smooth);
    }
    var projection = (0,_proj_js__WEBPACK_IMPORTED_MODULE_0__.createProjection)(options.projection, 'EPSG:3857');
    if (options.multiWorld !== true && projection.isGlobal()) {
        var extent = projection.getExtent().slice();
        extent[0] = -Infinity;
        extent[2] = Infinity;
        return (0,_centerconstraint_js__WEBPACK_IMPORTED_MODULE_14__.createExtent)(extent, false, false);
    }
    return _centerconstraint_js__WEBPACK_IMPORTED_MODULE_14__.none;
}
/**
 * @param {ViewOptions} options View options.
 * @return {{constraint: import("./resolutionconstraint.js").Type, maxResolution: number,
 *     minResolution: number, minZoom: number, zoomFactor: number}} The constraint.
 */
function createResolutionConstraint(options) {
    var resolutionConstraint;
    var maxResolution;
    var minResolution;
    // TODO: move these to be ol constants
    // see https://github.com/openlayers/openlayers/issues/2076
    var defaultMaxZoom = 28;
    var defaultZoomFactor = 2;
    var minZoom = options.minZoom !== undefined ? options.minZoom : DEFAULT_MIN_ZOOM;
    var maxZoom = options.maxZoom !== undefined ? options.maxZoom : defaultMaxZoom;
    var zoomFactor = options.zoomFactor !== undefined ? options.zoomFactor : defaultZoomFactor;
    var multiWorld = options.multiWorld !== undefined ? options.multiWorld : false;
    var smooth = options.smoothResolutionConstraint !== undefined
        ? options.smoothResolutionConstraint
        : true;
    var showFullExtent = options.showFullExtent !== undefined ? options.showFullExtent : false;
    var projection = (0,_proj_js__WEBPACK_IMPORTED_MODULE_0__.createProjection)(options.projection, 'EPSG:3857');
    var projExtent = projection.getExtent();
    var constrainOnlyCenter = options.constrainOnlyCenter;
    var extent = options.extent;
    if (!multiWorld && !extent && projection.isGlobal()) {
        constrainOnlyCenter = false;
        extent = projExtent;
    }
    if (options.resolutions !== undefined) {
        var resolutions = options.resolutions;
        maxResolution = resolutions[minZoom];
        minResolution =
            resolutions[maxZoom] !== undefined
                ? resolutions[maxZoom]
                : resolutions[resolutions.length - 1];
        if (options.constrainResolution) {
            resolutionConstraint = (0,_resolutionconstraint_js__WEBPACK_IMPORTED_MODULE_15__.createSnapToResolutions)(resolutions, smooth, !constrainOnlyCenter && extent, showFullExtent);
        }
        else {
            resolutionConstraint = (0,_resolutionconstraint_js__WEBPACK_IMPORTED_MODULE_15__.createMinMaxResolution)(maxResolution, minResolution, smooth, !constrainOnlyCenter && extent, showFullExtent);
        }
    }
    else {
        // calculate the default min and max resolution
        var size = !projExtent
            ? // use an extent that can fit the whole world if need be
                (360 * _proj_js__WEBPACK_IMPORTED_MODULE_0__.METERS_PER_UNIT[_proj_Units_js__WEBPACK_IMPORTED_MODULE_16__.default.DEGREES]) / projection.getMetersPerUnit()
            : Math.max((0,_extent_js__WEBPACK_IMPORTED_MODULE_8__.getWidth)(projExtent), (0,_extent_js__WEBPACK_IMPORTED_MODULE_8__.getHeight)(projExtent));
        var defaultMaxResolution = size / _tilegrid_common_js__WEBPACK_IMPORTED_MODULE_17__.DEFAULT_TILE_SIZE / Math.pow(defaultZoomFactor, DEFAULT_MIN_ZOOM);
        var defaultMinResolution = defaultMaxResolution /
            Math.pow(defaultZoomFactor, defaultMaxZoom - DEFAULT_MIN_ZOOM);
        // user provided maxResolution takes precedence
        maxResolution = options.maxResolution;
        if (maxResolution !== undefined) {
            minZoom = 0;
        }
        else {
            maxResolution = defaultMaxResolution / Math.pow(zoomFactor, minZoom);
        }
        // user provided minResolution takes precedence
        minResolution = options.minResolution;
        if (minResolution === undefined) {
            if (options.maxZoom !== undefined) {
                if (options.maxResolution !== undefined) {
                    minResolution = maxResolution / Math.pow(zoomFactor, maxZoom);
                }
                else {
                    minResolution = defaultMaxResolution / Math.pow(zoomFactor, maxZoom);
                }
            }
            else {
                minResolution = defaultMinResolution;
            }
        }
        // given discrete zoom levels, minResolution may be different than provided
        maxZoom =
            minZoom +
                Math.floor(Math.log(maxResolution / minResolution) / Math.log(zoomFactor));
        minResolution = maxResolution / Math.pow(zoomFactor, maxZoom - minZoom);
        if (options.constrainResolution) {
            resolutionConstraint = (0,_resolutionconstraint_js__WEBPACK_IMPORTED_MODULE_15__.createSnapToPower)(zoomFactor, maxResolution, minResolution, smooth, !constrainOnlyCenter && extent, showFullExtent);
        }
        else {
            resolutionConstraint = (0,_resolutionconstraint_js__WEBPACK_IMPORTED_MODULE_15__.createMinMaxResolution)(maxResolution, minResolution, smooth, !constrainOnlyCenter && extent, showFullExtent);
        }
    }
    return {
        constraint: resolutionConstraint,
        maxResolution: maxResolution,
        minResolution: minResolution,
        minZoom: minZoom,
        zoomFactor: zoomFactor,
    };
}
/**
 * @param {ViewOptions} options View options.
 * @return {import("./rotationconstraint.js").Type} Rotation constraint.
 */
function createRotationConstraint(options) {
    var enableRotation = options.enableRotation !== undefined ? options.enableRotation : true;
    if (enableRotation) {
        var constrainRotation = options.constrainRotation;
        if (constrainRotation === undefined || constrainRotation === true) {
            return (0,_rotationconstraint_js__WEBPACK_IMPORTED_MODULE_18__.createSnapToZero)();
        }
        else if (constrainRotation === false) {
            return _rotationconstraint_js__WEBPACK_IMPORTED_MODULE_18__.none;
        }
        else if (typeof constrainRotation === 'number') {
            return (0,_rotationconstraint_js__WEBPACK_IMPORTED_MODULE_18__.createSnapToN)(constrainRotation);
        }
        else {
            return _rotationconstraint_js__WEBPACK_IMPORTED_MODULE_18__.none;
        }
    }
    else {
        return _rotationconstraint_js__WEBPACK_IMPORTED_MODULE_18__.disable;
    }
}
/**
 * Determine if an animation involves no view change.
 * @param {Animation} animation The animation.
 * @return {boolean} The animation involves no view change.
 */
function isNoopAnimation(animation) {
    if (animation.sourceCenter && animation.targetCenter) {
        if (!(0,_coordinate_js__WEBPACK_IMPORTED_MODULE_5__.equals)(animation.sourceCenter, animation.targetCenter)) {
            return false;
        }
    }
    if (animation.sourceResolution !== animation.targetResolution) {
        return false;
    }
    if (animation.sourceRotation !== animation.targetRotation) {
        return false;
    }
    return true;
}
/**
 * @param {import("./coordinate.js").Coordinate} coordinate Coordinate.
 * @param {import("./size.js").Size} size Box pixel size.
 * @param {import("./pixel.js").Pixel} position Position on the view to center on.
 * @param {number} resolution Resolution.
 * @param {number} rotation Rotation.
 * @return {import("./coordinate.js").Coordinate} Shifted center.
 */
function calculateCenterOn(coordinate, size, position, resolution, rotation) {
    // calculate rotated position
    var cosAngle = Math.cos(-rotation);
    var sinAngle = Math.sin(-rotation);
    var rotX = coordinate[0] * cosAngle - coordinate[1] * sinAngle;
    var rotY = coordinate[1] * cosAngle + coordinate[0] * sinAngle;
    rotX += (size[0] / 2 - position[0]) * resolution;
    rotY += (position[1] - size[1] / 2) * resolution;
    // go back to original angle
    sinAngle = -sinAngle; // go back to original rotation
    var centerX = rotX * cosAngle - rotY * sinAngle;
    var centerY = rotY * cosAngle + rotX * sinAngle;
    return [centerX, centerY];
}
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (View);
//# sourceMappingURL=View.js.map

/***/ }),

/***/ "./node_modules/ol/ViewHint.js":
/*!*************************************!*\
  !*** ./node_modules/ol/ViewHint.js ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/**
 * @module ol/ViewHint
 */
/**
 * @enum {number}
 */
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
    ANIMATING: 0,
    INTERACTING: 1,
});
//# sourceMappingURL=ViewHint.js.map

/***/ }),

/***/ "./node_modules/ol/ViewProperty.js":
/*!*****************************************!*\
  !*** ./node_modules/ol/ViewProperty.js ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/**
 * @module ol/ViewProperty
 */
/**
 * @enum {string}
 */
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
    CENTER: 'center',
    RESOLUTION: 'resolution',
    ROTATION: 'rotation',
});
//# sourceMappingURL=ViewProperty.js.map

/***/ }),

/***/ "./node_modules/ol/array.js":
/*!**********************************!*\
  !*** ./node_modules/ol/array.js ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "binarySearch": () => (/* binding */ binarySearch),
/* harmony export */   "numberSafeCompareFunction": () => (/* binding */ numberSafeCompareFunction),
/* harmony export */   "includes": () => (/* binding */ includes),
/* harmony export */   "linearFindNearest": () => (/* binding */ linearFindNearest),
/* harmony export */   "reverseSubArray": () => (/* binding */ reverseSubArray),
/* harmony export */   "extend": () => (/* binding */ extend),
/* harmony export */   "remove": () => (/* binding */ remove),
/* harmony export */   "find": () => (/* binding */ find),
/* harmony export */   "equals": () => (/* binding */ equals),
/* harmony export */   "stableSort": () => (/* binding */ stableSort),
/* harmony export */   "findIndex": () => (/* binding */ findIndex),
/* harmony export */   "isSorted": () => (/* binding */ isSorted)
/* harmony export */ });
/**
 * @module ol/array
 */
/**
 * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.
 * https://github.com/darkskyapp/binary-search
 *
 * @param {Array<*>} haystack Items to search through.
 * @param {*} needle The item to look for.
 * @param {Function=} opt_comparator Comparator function.
 * @return {number} The index of the item if found, -1 if not.
 */
function binarySearch(haystack, needle, opt_comparator) {
    var mid, cmp;
    var comparator = opt_comparator || numberSafeCompareFunction;
    var low = 0;
    var high = haystack.length;
    var found = false;
    while (low < high) {
        /* Note that "(low + high) >>> 1" may overflow, and results in a typecast
         * to double (which gives the wrong results). */
        mid = low + ((high - low) >> 1);
        cmp = +comparator(haystack[mid], needle);
        if (cmp < 0.0) {
            /* Too low. */
            low = mid + 1;
        }
        else {
            /* Key found or too high */
            high = mid;
            found = !cmp;
        }
    }
    /* Key not found. */
    return found ? low : ~low;
}
/**
 * Compare function for array sort that is safe for numbers.
 * @param {*} a The first object to be compared.
 * @param {*} b The second object to be compared.
 * @return {number} A negative number, zero, or a positive number as the first
 *     argument is less than, equal to, or greater than the second.
 */
function numberSafeCompareFunction(a, b) {
    return a > b ? 1 : a < b ? -1 : 0;
}
/**
 * Whether the array contains the given object.
 * @param {Array<*>} arr The array to test for the presence of the element.
 * @param {*} obj The object for which to test.
 * @return {boolean} The object is in the array.
 */
function includes(arr, obj) {
    return arr.indexOf(obj) >= 0;
}
/**
 * @param {Array<number>} arr Array.
 * @param {number} target Target.
 * @param {number} direction 0 means return the nearest, > 0
 *    means return the largest nearest, < 0 means return the
 *    smallest nearest.
 * @return {number} Index.
 */
function linearFindNearest(arr, target, direction) {
    var n = arr.length;
    if (arr[0] <= target) {
        return 0;
    }
    else if (target <= arr[n - 1]) {
        return n - 1;
    }
    else {
        var i = void 0;
        if (direction > 0) {
            for (i = 1; i < n; ++i) {
                if (arr[i] < target) {
                    return i - 1;
                }
            }
        }
        else if (direction < 0) {
            for (i = 1; i < n; ++i) {
                if (arr[i] <= target) {
                    return i;
                }
            }
        }
        else {
            for (i = 1; i < n; ++i) {
                if (arr[i] == target) {
                    return i;
                }
                else if (arr[i] < target) {
                    if (arr[i - 1] - target < target - arr[i]) {
                        return i - 1;
                    }
                    else {
                        return i;
                    }
                }
            }
        }
        return n - 1;
    }
}
/**
 * @param {Array<*>} arr Array.
 * @param {number} begin Begin index.
 * @param {number} end End index.
 */
function reverseSubArray(arr, begin, end) {
    while (begin < end) {
        var tmp = arr[begin];
        arr[begin] = arr[end];
        arr[end] = tmp;
        ++begin;
        --end;
    }
}
/**
 * @param {Array<VALUE>} arr The array to modify.
 * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.
 * @template VALUE
 */
function extend(arr, data) {
    var extension = Array.isArray(data) ? data : [data];
    var length = extension.length;
    for (var i = 0; i < length; i++) {
        arr[arr.length] = extension[i];
    }
}
/**
 * @param {Array<VALUE>} arr The array to modify.
 * @param {VALUE} obj The element to remove.
 * @template VALUE
 * @return {boolean} If the element was removed.
 */
function remove(arr, obj) {
    var i = arr.indexOf(obj);
    var found = i > -1;
    if (found) {
        arr.splice(i, 1);
    }
    return found;
}
/**
 * @param {Array<VALUE>} arr The array to search in.
 * @param {function(VALUE, number, ?) : boolean} func The function to compare.
 * @template VALUE
 * @return {VALUE|null} The element found or null.
 */
function find(arr, func) {
    var length = arr.length >>> 0;
    var value;
    for (var i = 0; i < length; i++) {
        value = arr[i];
        if (func(value, i, arr)) {
            return value;
        }
    }
    return null;
}
/**
 * @param {Array|Uint8ClampedArray} arr1 The first array to compare.
 * @param {Array|Uint8ClampedArray} arr2 The second array to compare.
 * @return {boolean} Whether the two arrays are equal.
 */
function equals(arr1, arr2) {
    var len1 = arr1.length;
    if (len1 !== arr2.length) {
        return false;
    }
    for (var i = 0; i < len1; i++) {
        if (arr1[i] !== arr2[i]) {
            return false;
        }
    }
    return true;
}
/**
 * Sort the passed array such that the relative order of equal elements is preverved.
 * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.
 * @param {Array<*>} arr The array to sort (modifies original).
 * @param {!function(*, *): number} compareFnc Comparison function.
 * @api
 */
function stableSort(arr, compareFnc) {
    var length = arr.length;
    var tmp = Array(arr.length);
    var i;
    for (i = 0; i < length; i++) {
        tmp[i] = { index: i, value: arr[i] };
    }
    tmp.sort(function (a, b) {
        return compareFnc(a.value, b.value) || a.index - b.index;
    });
    for (i = 0; i < arr.length; i++) {
        arr[i] = tmp[i].value;
    }
}
/**
 * @param {Array<*>} arr The array to search in.
 * @param {Function} func Comparison function.
 * @return {number} Return index.
 */
function findIndex(arr, func) {
    var index;
    var found = !arr.every(function (el, idx) {
        index = idx;
        return !func(el, idx, arr);
    });
    return found ? index : -1;
}
/**
 * @param {Array<*>} arr The array to test.
 * @param {Function=} opt_func Comparison function.
 * @param {boolean=} opt_strict Strictly sorted (default false).
 * @return {boolean} Return index.
 */
function isSorted(arr, opt_func, opt_strict) {
    var compare = opt_func || numberSafeCompareFunction;
    return arr.every(function (currentVal, index) {
        if (index === 0) {
            return true;
        }
        var res = compare(arr[index - 1], currentVal);
        return !(res > 0 || (opt_strict && res === 0));
    });
}
//# sourceMappingURL=array.js.map

/***/ }),

/***/ "./node_modules/ol/asserts.js":
/*!************************************!*\
  !*** ./node_modules/ol/asserts.js ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "assert": () => (/* binding */ assert)
/* harmony export */ });
/* harmony import */ var _AssertionError_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./AssertionError.js */ "./node_modules/ol/AssertionError.js");
/**
 * @module ol/asserts
 */

/**
 * @param {*} assertion Assertion we expected to be truthy.
 * @param {number} errorCode Error code.
 */
function assert(assertion, errorCode) {
    if (!assertion) {
        throw new _AssertionError_js__WEBPACK_IMPORTED_MODULE_0__.default(errorCode);
    }
}
//# sourceMappingURL=asserts.js.map

/***/ }),

/***/ "./node_modules/ol/centerconstraint.js":
/*!*********************************************!*\
  !*** ./node_modules/ol/centerconstraint.js ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createExtent": () => (/* binding */ createExtent),
/* harmony export */   "none": () => (/* binding */ none)
/* harmony export */ });
/* harmony import */ var _math_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./math.js */ "./node_modules/ol/math.js");
/**
 * @module ol/centerconstraint
 */

/**
 * @typedef {function((import("./coordinate.js").Coordinate|undefined), number, import("./size.js").Size, boolean=, Array<number>=): (import("./coordinate.js").Coordinate|undefined)} Type
 */
/**
 * @param {import("./extent.js").Extent} extent Extent.
 * @param {boolean} onlyCenter If true, the constraint will only apply to the view center.
 * @param {boolean} smooth If true, the view will be able to go slightly out of the given extent
 * (only during interaction and animation).
 * @return {Type} The constraint.
 */
function createExtent(extent, onlyCenter, smooth) {
    return (
    /**
     * @param {import("./coordinate.js").Coordinate|undefined} center Center.
     * @param {number} resolution Resolution.
     * @param {import("./size.js").Size} size Viewport size; unused if `onlyCenter` was specified.
     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.
     * @param {Array<number>=} opt_centerShift Shift between map center and viewport center.
     * @return {import("./coordinate.js").Coordinate|undefined} Center.
     */
    function (center, resolution, size, opt_isMoving, opt_centerShift) {
        if (center) {
            var viewWidth = onlyCenter ? 0 : size[0] * resolution;
            var viewHeight = onlyCenter ? 0 : size[1] * resolution;
            var shiftX = opt_centerShift ? opt_centerShift[0] : 0;
            var shiftY = opt_centerShift ? opt_centerShift[1] : 0;
            var minX = extent[0] + viewWidth / 2 + shiftX;
            var maxX = extent[2] - viewWidth / 2 + shiftX;
            var minY = extent[1] + viewHeight / 2 + shiftY;
            var maxY = extent[3] - viewHeight / 2 + shiftY;
            // note: when zooming out of bounds, min and max values for x and y may
            // end up inverted (min > max); this has to be accounted for
            if (minX > maxX) {
                minX = (maxX + minX) / 2;
                maxX = minX;
            }
            if (minY > maxY) {
                minY = (maxY + minY) / 2;
                maxY = minY;
            }
            var x = (0,_math_js__WEBPACK_IMPORTED_MODULE_0__.clamp)(center[0], minX, maxX);
            var y = (0,_math_js__WEBPACK_IMPORTED_MODULE_0__.clamp)(center[1], minY, maxY);
            var ratio = 30 * resolution;
            // during an interaction, allow some overscroll
            if (opt_isMoving && smooth) {
                x +=
                    -ratio * Math.log(1 + Math.max(0, minX - center[0]) / ratio) +
                        ratio * Math.log(1 + Math.max(0, center[0] - maxX) / ratio);
                y +=
                    -ratio * Math.log(1 + Math.max(0, minY - center[1]) / ratio) +
                        ratio * Math.log(1 + Math.max(0, center[1] - maxY) / ratio);
            }
            return [x, y];
        }
        else {
            return undefined;
        }
    });
}
/**
 * @param {import("./coordinate.js").Coordinate=} center Center.
 * @return {import("./coordinate.js").Coordinate|undefined} Center.
 */
function none(center) {
    return center;
}
//# sourceMappingURL=centerconstraint.js.map

/***/ }),

/***/ "./node_modules/ol/color.js":
/*!**********************************!*\
  !*** ./node_modules/ol/color.js ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "asString": () => (/* binding */ asString),
/* harmony export */   "fromString": () => (/* binding */ fromString),
/* harmony export */   "asArray": () => (/* binding */ asArray),
/* harmony export */   "normalize": () => (/* binding */ normalize),
/* harmony export */   "toString": () => (/* binding */ toString),
/* harmony export */   "isStringColor": () => (/* binding */ isStringColor)
/* harmony export */ });
/* harmony import */ var _asserts_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./asserts.js */ "./node_modules/ol/asserts.js");
/* harmony import */ var _math_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./math.js */ "./node_modules/ol/math.js");
/**
 * @module ol/color
 */


/**
 * A color represented as a short array [red, green, blue, alpha].
 * red, green, and blue should be integers in the range 0..255 inclusive.
 * alpha should be a float in the range 0..1 inclusive. If no alpha value is
 * given then `1` will be used.
 * @typedef {Array<number>} Color
 * @api
 */
/**
 * This RegExp matches # followed by 3, 4, 6, or 8 hex digits.
 * @const
 * @type {RegExp}
 * @private
 */
var HEX_COLOR_RE_ = /^#([a-f0-9]{3}|[a-f0-9]{4}(?:[a-f0-9]{2}){0,2})$/i;
/**
 * Regular expression for matching potential named color style strings.
 * @const
 * @type {RegExp}
 * @private
 */
var NAMED_COLOR_RE_ = /^([a-z]*)$|^hsla?\(.*\)$/i;
/**
 * Return the color as an rgba string.
 * @param {Color|string} color Color.
 * @return {string} Rgba string.
 * @api
 */
function asString(color) {
    if (typeof color === 'string') {
        return color;
    }
    else {
        return toString(color);
    }
}
/**
 * Return named color as an rgba string.
 * @param {string} color Named color.
 * @return {string} Rgb string.
 */
function fromNamed(color) {
    var el = document.createElement('div');
    el.style.color = color;
    if (el.style.color !== '') {
        document.body.appendChild(el);
        var rgb = getComputedStyle(el).color;
        document.body.removeChild(el);
        return rgb;
    }
    else {
        return '';
    }
}
/**
 * @param {string} s String.
 * @return {Color} Color.
 */
var fromString = (function () {
    // We maintain a small cache of parsed strings.  To provide cheap LRU-like
    // semantics, whenever the cache grows too large we simply delete an
    // arbitrary 25% of the entries.
    /**
     * @const
     * @type {number}
     */
    var MAX_CACHE_SIZE = 1024;
    /**
     * @type {Object<string, Color>}
     */
    var cache = {};
    /**
     * @type {number}
     */
    var cacheSize = 0;
    return (
    /**
     * @param {string} s String.
     * @return {Color} Color.
     */
    function (s) {
        var color;
        if (cache.hasOwnProperty(s)) {
            color = cache[s];
        }
        else {
            if (cacheSize >= MAX_CACHE_SIZE) {
                var i = 0;
                for (var key in cache) {
                    if ((i++ & 3) === 0) {
                        delete cache[key];
                        --cacheSize;
                    }
                }
            }
            color = fromStringInternal_(s);
            cache[s] = color;
            ++cacheSize;
        }
        return color;
    });
})();
/**
 * Return the color as an array. This function maintains a cache of calculated
 * arrays which means the result should not be modified.
 * @param {Color|string} color Color.
 * @return {Color} Color.
 * @api
 */
function asArray(color) {
    if (Array.isArray(color)) {
        return color;
    }
    else {
        return fromString(color);
    }
}
/**
 * @param {string} s String.
 * @private
 * @return {Color} Color.
 */
function fromStringInternal_(s) {
    var r, g, b, a, color;
    if (NAMED_COLOR_RE_.exec(s)) {
        s = fromNamed(s);
    }
    if (HEX_COLOR_RE_.exec(s)) {
        // hex
        var n = s.length - 1; // number of hex digits
        var d = // number of digits per channel
         void 0; // number of digits per channel
        if (n <= 4) {
            d = 1;
        }
        else {
            d = 2;
        }
        var hasAlpha = n === 4 || n === 8;
        r = parseInt(s.substr(1 + 0 * d, d), 16);
        g = parseInt(s.substr(1 + 1 * d, d), 16);
        b = parseInt(s.substr(1 + 2 * d, d), 16);
        if (hasAlpha) {
            a = parseInt(s.substr(1 + 3 * d, d), 16);
        }
        else {
            a = 255;
        }
        if (d == 1) {
            r = (r << 4) + r;
            g = (g << 4) + g;
            b = (b << 4) + b;
            if (hasAlpha) {
                a = (a << 4) + a;
            }
        }
        color = [r, g, b, a / 255];
    }
    else if (s.indexOf('rgba(') == 0) {
        // rgba()
        color = s.slice(5, -1).split(',').map(Number);
        normalize(color);
    }
    else if (s.indexOf('rgb(') == 0) {
        // rgb()
        color = s.slice(4, -1).split(',').map(Number);
        color.push(1);
        normalize(color);
    }
    else {
        (0,_asserts_js__WEBPACK_IMPORTED_MODULE_0__.assert)(false, 14); // Invalid color
    }
    return color;
}
/**
 * TODO this function is only used in the test, we probably shouldn't export it
 * @param {Color} color Color.
 * @return {Color} Clamped color.
 */
function normalize(color) {
    color[0] = (0,_math_js__WEBPACK_IMPORTED_MODULE_1__.clamp)((color[0] + 0.5) | 0, 0, 255);
    color[1] = (0,_math_js__WEBPACK_IMPORTED_MODULE_1__.clamp)((color[1] + 0.5) | 0, 0, 255);
    color[2] = (0,_math_js__WEBPACK_IMPORTED_MODULE_1__.clamp)((color[2] + 0.5) | 0, 0, 255);
    color[3] = (0,_math_js__WEBPACK_IMPORTED_MODULE_1__.clamp)(color[3], 0, 1);
    return color;
}
/**
 * @param {Color} color Color.
 * @return {string} String.
 */
function toString(color) {
    var r = color[0];
    if (r != (r | 0)) {
        r = (r + 0.5) | 0;
    }
    var g = color[1];
    if (g != (g | 0)) {
        g = (g + 0.5) | 0;
    }
    var b = color[2];
    if (b != (b | 0)) {
        b = (b + 0.5) | 0;
    }
    var a = color[3] === undefined ? 1 : color[3];
    return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';
}
/**
 * @param {string} s String.
 * @return {boolean} Whether the string is actually a valid color
 */
function isStringColor(s) {
    if (NAMED_COLOR_RE_.test(s)) {
        s = fromNamed(s);
    }
    return (HEX_COLOR_RE_.test(s) || s.indexOf('rgba(') === 0 || s.indexOf('rgb(') === 0);
}
//# sourceMappingURL=color.js.map

/***/ }),

/***/ "./node_modules/ol/colorlike.js":
/*!**************************************!*\
  !*** ./node_modules/ol/colorlike.js ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "asColorLike": () => (/* binding */ asColorLike)
/* harmony export */ });
/* harmony import */ var _color_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./color.js */ "./node_modules/ol/color.js");
/**
 * @module ol/colorlike
 */

/**
 * A type accepted by CanvasRenderingContext2D.fillStyle
 * or CanvasRenderingContext2D.strokeStyle.
 * Represents a color, pattern, or gradient. The origin for patterns and
 * gradients as fill style is an increment of 512 css pixels from map coordinate
 * `[0, 0]`. For seamless repeat patterns, width and height of the pattern image
 * must be a factor of two (2, 4, 8, ..., 512).
 *
 * @typedef {string|CanvasPattern|CanvasGradient} ColorLike
 * @api
 */
/**
 * @param {import("./color.js").Color|ColorLike} color Color.
 * @return {ColorLike} The color as an {@link ol/colorlike~ColorLike}.
 * @api
 */
function asColorLike(color) {
    if (Array.isArray(color)) {
        return (0,_color_js__WEBPACK_IMPORTED_MODULE_0__.toString)(color);
    }
    else {
        return color;
    }
}
//# sourceMappingURL=colorlike.js.map

/***/ }),

/***/ "./node_modules/ol/control.js":
/*!************************************!*\
  !*** ./node_modules/ol/control.js ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Attribution": () => (/* reexport safe */ _control_Attribution_js__WEBPACK_IMPORTED_MODULE_0__.default),
/* harmony export */   "Control": () => (/* reexport safe */ _control_Control_js__WEBPACK_IMPORTED_MODULE_1__.default),
/* harmony export */   "FullScreen": () => (/* reexport safe */ _control_FullScreen_js__WEBPACK_IMPORTED_MODULE_2__.default),
/* harmony export */   "MousePosition": () => (/* reexport safe */ _control_MousePosition_js__WEBPACK_IMPORTED_MODULE_3__.default),
/* harmony export */   "OverviewMap": () => (/* reexport safe */ _control_OverviewMap_js__WEBPACK_IMPORTED_MODULE_4__.default),
/* harmony export */   "Rotate": () => (/* reexport safe */ _control_Rotate_js__WEBPACK_IMPORTED_MODULE_5__.default),
/* harmony export */   "ScaleLine": () => (/* reexport safe */ _control_ScaleLine_js__WEBPACK_IMPORTED_MODULE_6__.default),
/* harmony export */   "Zoom": () => (/* reexport safe */ _control_Zoom_js__WEBPACK_IMPORTED_MODULE_7__.default),
/* harmony export */   "ZoomSlider": () => (/* reexport safe */ _control_ZoomSlider_js__WEBPACK_IMPORTED_MODULE_8__.default),
/* harmony export */   "ZoomToExtent": () => (/* reexport safe */ _control_ZoomToExtent_js__WEBPACK_IMPORTED_MODULE_9__.default),
/* harmony export */   "defaults": () => (/* binding */ defaults)
/* harmony export */ });
/* harmony import */ var _control_Attribution_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./control/Attribution.js */ "./node_modules/ol/control/Attribution.js");
/* harmony import */ var _Collection_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./Collection.js */ "./node_modules/ol/Collection.js");
/* harmony import */ var _control_Rotate_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./control/Rotate.js */ "./node_modules/ol/control/Rotate.js");
/* harmony import */ var _control_Zoom_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./control/Zoom.js */ "./node_modules/ol/control/Zoom.js");
/* harmony import */ var _control_Control_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./control/Control.js */ "./node_modules/ol/control/Control.js");
/* harmony import */ var _control_FullScreen_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./control/FullScreen.js */ "./node_modules/ol/control/FullScreen.js");
/* harmony import */ var _control_MousePosition_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./control/MousePosition.js */ "./node_modules/ol/control/MousePosition.js");
/* harmony import */ var _control_OverviewMap_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./control/OverviewMap.js */ "./node_modules/ol/control/OverviewMap.js");
/* harmony import */ var _control_ScaleLine_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./control/ScaleLine.js */ "./node_modules/ol/control/ScaleLine.js");
/* harmony import */ var _control_ZoomSlider_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./control/ZoomSlider.js */ "./node_modules/ol/control/ZoomSlider.js");
/* harmony import */ var _control_ZoomToExtent_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./control/ZoomToExtent.js */ "./node_modules/ol/control/ZoomToExtent.js");
/**
 * @module ol/control
 */














/**
 * @typedef {Object} DefaultsOptions
 * @property {boolean} [attribution=true] Include
 * {@link module:ol/control/Attribution~Attribution}.
 * @property {import("./control/Attribution.js").Options} [attributionOptions]
 * Options for {@link module:ol/control/Attribution~Attribution}.
 * @property {boolean} [rotate=true] Include
 * {@link module:ol/control/Rotate~Rotate}.
 * @property {import("./control/Rotate.js").Options} [rotateOptions] Options
 * for {@link module:ol/control/Rotate~Rotate}.
 * @property {boolean} [zoom] Include {@link module:ol/control/Zoom~Zoom}.
 * @property {import("./control/Zoom.js").Options} [zoomOptions] Options for
 * {@link module:ol/control/Zoom~Zoom}.
 * @api
 */
/**
 * Set of controls included in maps by default. Unless configured otherwise,
 * this returns a collection containing an instance of each of the following
 * controls:
 * * {@link module:ol/control/Zoom~Zoom}
 * * {@link module:ol/control/Rotate~Rotate}
 * * {@link module:ol/control/Attribution~Attribution}
 *
 * @param {DefaultsOptions=} opt_options
 * Defaults options.
 * @return {Collection<import("./control/Control.js").default>}
 * Controls.
 * @api
 */
function defaults(opt_options) {
    var options = opt_options ? opt_options : {};
    var controls = new _Collection_js__WEBPACK_IMPORTED_MODULE_10__.default();
    var zoomControl = options.zoom !== undefined ? options.zoom : true;
    if (zoomControl) {
        controls.push(new _control_Zoom_js__WEBPACK_IMPORTED_MODULE_7__.default(options.zoomOptions));
    }
    var rotateControl = options.rotate !== undefined ? options.rotate : true;
    if (rotateControl) {
        controls.push(new _control_Rotate_js__WEBPACK_IMPORTED_MODULE_5__.default(options.rotateOptions));
    }
    var attributionControl = options.attribution !== undefined ? options.attribution : true;
    if (attributionControl) {
        controls.push(new _control_Attribution_js__WEBPACK_IMPORTED_MODULE_0__.default(options.attributionOptions));
    }
    return controls;
}
//# sourceMappingURL=control.js.map

/***/ }),

/***/ "./node_modules/ol/control/Attribution.js":
/*!************************************************!*\
  !*** ./node_modules/ol/control/Attribution.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _Control_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./Control.js */ "./node_modules/ol/control/Control.js");
/* harmony import */ var _events_EventType_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../events/EventType.js */ "./node_modules/ol/events/EventType.js");
/* harmony import */ var _css_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../css.js */ "./node_modules/ol/css.js");
/* harmony import */ var _array_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../array.js */ "./node_modules/ol/array.js");
/* harmony import */ var _layer_Layer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../layer/Layer.js */ "./node_modules/ol/layer/Layer.js");
/* harmony import */ var _dom_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../dom.js */ "./node_modules/ol/dom.js");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
/**
 * @module ol/control/Attribution
 */






/**
 * @typedef {Object} Options
 * @property {string} [className='ol-attribution'] CSS class name.
 * @property {HTMLElement|string} [target] Specify a target if you
 * want the control to be rendered outside of the map's
 * viewport.
 * @property {boolean} [collapsible] Specify if attributions can
 * be collapsed. If not specified, sources control this behavior with their
 * `attributionsCollapsible` setting.
 * @property {boolean} [collapsed=true] Specify if attributions should
 * be collapsed at startup.
 * @property {string} [tipLabel='Attributions'] Text label to use for the button tip.
 * @property {string} [label='i'] Text label to use for the
 * collapsed attributions button.
 * Instead of text, also an element (e.g. a `span` element) can be used.
 * @property {string} [expandClassName=className + '-expand'] CSS class name for the
 * collapsed attributions button.
 * @property {string|HTMLElement} [collapseLabel='»'] Text label to use
 * for the expanded attributions button.
 * Instead of text, also an element (e.g. a `span` element) can be used.
 * @property {string} [collapseClassName=className + '-collapse'] CSS class name for the
 * expanded attributions button.
 * @property {function(import("../MapEvent.js").default):void} [render] Function called when
 * the control should be re-rendered. This is called in a `requestAnimationFrame`
 * callback.
 */
/**
 * @classdesc
 * Control to show all the attributions associated with the layer sources
 * in the map. This control is one of the default controls included in maps.
 * By default it will show in the bottom right portion of the map, but this can
 * be changed by using a css selector for `.ol-attribution`.
 *
 * @api
 */
var Attribution = /** @class */ (function (_super) {
    __extends(Attribution, _super);
    /**
     * @param {Options=} opt_options Attribution options.
     */
    function Attribution(opt_options) {
        var _this = this;
        var options = opt_options ? opt_options : {};
        _this = _super.call(this, {
            element: document.createElement('div'),
            render: options.render,
            target: options.target,
        }) || this;
        /**
         * @private
         * @type {HTMLElement}
         */
        _this.ulElement_ = document.createElement('ul');
        /**
         * @private
         * @type {boolean}
         */
        _this.collapsed_ =
            options.collapsed !== undefined ? options.collapsed : true;
        /**
         * @private
         * @type {boolean}
         */
        _this.userCollapsed_ = _this.collapsed_;
        /**
         * @private
         * @type {boolean}
         */
        _this.overrideCollapsible_ = options.collapsible !== undefined;
        /**
         * @private
         * @type {boolean}
         */
        _this.collapsible_ =
            options.collapsible !== undefined ? options.collapsible : true;
        if (!_this.collapsible_) {
            _this.collapsed_ = false;
        }
        var className = options.className !== undefined ? options.className : 'ol-attribution';
        var tipLabel = options.tipLabel !== undefined ? options.tipLabel : 'Attributions';
        var expandClassName = options.expandClassName !== undefined
            ? options.expandClassName
            : className + '-expand';
        var collapseLabel = options.collapseLabel !== undefined ? options.collapseLabel : '\u00BB';
        var collapseClassName = options.collapseClassName !== undefined
            ? options.collapseClassName
            : className + '-collpase';
        if (typeof collapseLabel === 'string') {
            /**
             * @private
             * @type {HTMLElement}
             */
            _this.collapseLabel_ = document.createElement('span');
            _this.collapseLabel_.textContent = collapseLabel;
            _this.collapseLabel_.className = collapseClassName;
        }
        else {
            _this.collapseLabel_ = collapseLabel;
        }
        var label = options.label !== undefined ? options.label : 'i';
        if (typeof label === 'string') {
            /**
             * @private
             * @type {HTMLElement}
             */
            _this.label_ = document.createElement('span');
            _this.label_.textContent = label;
            _this.label_.className = expandClassName;
        }
        else {
            _this.label_ = label;
        }
        var activeLabel = _this.collapsible_ && !_this.collapsed_ ? _this.collapseLabel_ : _this.label_;
        var button = document.createElement('button');
        button.setAttribute('type', 'button');
        button.title = tipLabel;
        button.appendChild(activeLabel);
        button.addEventListener(_events_EventType_js__WEBPACK_IMPORTED_MODULE_0__.default.CLICK, _this.handleClick_.bind(_this), false);
        var cssClasses = className +
            ' ' +
            _css_js__WEBPACK_IMPORTED_MODULE_1__.CLASS_UNSELECTABLE +
            ' ' +
            _css_js__WEBPACK_IMPORTED_MODULE_1__.CLASS_CONTROL +
            (_this.collapsed_ && _this.collapsible_ ? ' ' + _css_js__WEBPACK_IMPORTED_MODULE_1__.CLASS_COLLAPSED : '') +
            (_this.collapsible_ ? '' : ' ol-uncollapsible');
        var element = _this.element;
        element.className = cssClasses;
        element.appendChild(_this.ulElement_);
        element.appendChild(button);
        /**
         * A list of currently rendered resolutions.
         * @type {Array<string>}
         * @private
         */
        _this.renderedAttributions_ = [];
        /**
         * @private
         * @type {boolean}
         */
        _this.renderedVisible_ = true;
        return _this;
    }
    /**
     * Collect a list of visible attributions and set the collapsible state.
     * @param {import("../PluggableMap.js").FrameState} frameState Frame state.
     * @return {Array<string>} Attributions.
     * @private
     */
    Attribution.prototype.collectSourceAttributions_ = function (frameState) {
        /**
         * Used to determine if an attribution already exists.
         * @type {!Object<string, boolean>}
         */
        var lookup = {};
        /**
         * A list of visible attributions.
         * @type {Array<string>}
         */
        var visibleAttributions = [];
        var collapsible = true;
        var layerStatesArray = frameState.layerStatesArray;
        for (var i = 0, ii = layerStatesArray.length; i < ii; ++i) {
            var layerState = layerStatesArray[i];
            if (!(0,_layer_Layer_js__WEBPACK_IMPORTED_MODULE_2__.inView)(layerState, frameState.viewState)) {
                continue;
            }
            var source = /** @type {import("../layer/Layer.js").default} */ (layerState.layer).getSource();
            if (!source) {
                continue;
            }
            var attributionGetter = source.getAttributions();
            if (!attributionGetter) {
                continue;
            }
            var attributions = attributionGetter(frameState);
            if (!attributions) {
                continue;
            }
            collapsible =
                collapsible && source.getAttributionsCollapsible() !== false;
            if (Array.isArray(attributions)) {
                for (var j = 0, jj = attributions.length; j < jj; ++j) {
                    if (!(attributions[j] in lookup)) {
                        visibleAttributions.push(attributions[j]);
                        lookup[attributions[j]] = true;
                    }
                }
            }
            else {
                if (!(attributions in lookup)) {
                    visibleAttributions.push(attributions);
                    lookup[attributions] = true;
                }
            }
        }
        if (!this.overrideCollapsible_) {
            this.setCollapsible(collapsible);
        }
        return visibleAttributions;
    };
    /**
     * @private
     * @param {?import("../PluggableMap.js").FrameState} frameState Frame state.
     */
    Attribution.prototype.updateElement_ = function (frameState) {
        if (!frameState) {
            if (this.renderedVisible_) {
                this.element.style.display = 'none';
                this.renderedVisible_ = false;
            }
            return;
        }
        var attributions = this.collectSourceAttributions_(frameState);
        var visible = attributions.length > 0;
        if (this.renderedVisible_ != visible) {
            this.element.style.display = visible ? '' : 'none';
            this.renderedVisible_ = visible;
        }
        if ((0,_array_js__WEBPACK_IMPORTED_MODULE_3__.equals)(attributions, this.renderedAttributions_)) {
            return;
        }
        (0,_dom_js__WEBPACK_IMPORTED_MODULE_4__.removeChildren)(this.ulElement_);
        // append the attributions
        for (var i = 0, ii = attributions.length; i < ii; ++i) {
            var element = document.createElement('li');
            element.innerHTML = attributions[i];
            this.ulElement_.appendChild(element);
        }
        this.renderedAttributions_ = attributions;
    };
    /**
     * @param {MouseEvent} event The event to handle
     * @private
     */
    Attribution.prototype.handleClick_ = function (event) {
        event.preventDefault();
        this.handleToggle_();
        this.userCollapsed_ = this.collapsed_;
    };
    /**
     * @private
     */
    Attribution.prototype.handleToggle_ = function () {
        this.element.classList.toggle(_css_js__WEBPACK_IMPORTED_MODULE_1__.CLASS_COLLAPSED);
        if (this.collapsed_) {
            (0,_dom_js__WEBPACK_IMPORTED_MODULE_4__.replaceNode)(this.collapseLabel_, this.label_);
        }
        else {
            (0,_dom_js__WEBPACK_IMPORTED_MODULE_4__.replaceNode)(this.label_, this.collapseLabel_);
        }
        this.collapsed_ = !this.collapsed_;
    };
    /**
     * Return `true` if the attribution is collapsible, `false` otherwise.
     * @return {boolean} True if the widget is collapsible.
     * @api
     */
    Attribution.prototype.getCollapsible = function () {
        return this.collapsible_;
    };
    /**
     * Set whether the attribution should be collapsible.
     * @param {boolean} collapsible True if the widget is collapsible.
     * @api
     */
    Attribution.prototype.setCollapsible = function (collapsible) {
        if (this.collapsible_ === collapsible) {
            return;
        }
        this.collapsible_ = collapsible;
        this.element.classList.toggle('ol-uncollapsible');
        if (this.userCollapsed_) {
            this.handleToggle_();
        }
    };
    /**
     * Collapse or expand the attribution according to the passed parameter. Will
     * not do anything if the attribution isn't collapsible or if the current
     * collapsed state is already the one requested.
     * @param {boolean} collapsed True if the widget is collapsed.
     * @api
     */
    Attribution.prototype.setCollapsed = function (collapsed) {
        this.userCollapsed_ = collapsed;
        if (!this.collapsible_ || this.collapsed_ === collapsed) {
            return;
        }
        this.handleToggle_();
    };
    /**
     * Return `true` when the attribution is currently collapsed or `false`
     * otherwise.
     * @return {boolean} True if the widget is collapsed.
     * @api
     */
    Attribution.prototype.getCollapsed = function () {
        return this.collapsed_;
    };
    /**
     * Update the attribution element.
     * @param {import("../MapEvent.js").default} mapEvent Map event.
     * @override
     */
    Attribution.prototype.render = function (mapEvent) {
        this.updateElement_(mapEvent.frameState);
    };
    return Attribution;
}(_Control_js__WEBPACK_IMPORTED_MODULE_5__.default));
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Attribution);
//# sourceMappingURL=Attribution.js.map

/***/ }),

/***/ "./node_modules/ol/control/Control.js":
/*!********************************************!*\
  !*** ./node_modules/ol/control/Control.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _Object_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../Object.js */ "./node_modules/ol/Object.js");
/* harmony import */ var _MapEventType_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../MapEventType.js */ "./node_modules/ol/MapEventType.js");
/* harmony import */ var _functions_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../functions.js */ "./node_modules/ol/functions.js");
/* harmony import */ var _events_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../events.js */ "./node_modules/ol/events.js");
/* harmony import */ var _dom_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../dom.js */ "./node_modules/ol/dom.js");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
/**
 * @module ol/control/Control
 */





/**
 * @typedef {Object} Options
 * @property {HTMLElement} [element] The element is the control's
 * container element. This only needs to be specified if you're developing
 * a custom control.
 * @property {function(import("../MapEvent.js").default):void} [render] Function called when
 * the control should be re-rendered. This is called in a `requestAnimationFrame`
 * callback.
 * @property {HTMLElement|string} [target] Specify a target if you want
 * the control to be rendered outside of the map's viewport.
 */
/**
 * @classdesc
 * A control is a visible widget with a DOM element in a fixed position on the
 * screen. They can involve user input (buttons), or be informational only;
 * the position is determined using CSS. By default these are placed in the
 * container with CSS class name `ol-overlaycontainer-stopevent`, but can use
 * any outside DOM element.
 *
 * This is the base class for controls. You can use it for simple custom
 * controls by creating the element with listeners, creating an instance:
 * ```js
 * var myControl = new Control({element: myElement});
 * ```
 * and then adding this to the map.
 *
 * The main advantage of having this as a control rather than a simple separate
 * DOM element is that preventing propagation is handled for you. Controls
 * will also be objects in a {@link module:ol/Collection~Collection}, so you can use their methods.
 *
 * You can also extend this base for your own control class. See
 * examples/custom-controls for an example of how to do this.
 *
 * @api
 */
var Control = /** @class */ (function (_super) {
    __extends(Control, _super);
    /**
     * @param {Options} options Control options.
     */
    function Control(options) {
        var _this = _super.call(this) || this;
        var element = options.element;
        if (element && !options.target && !element.style.pointerEvents) {
            element.style.pointerEvents = 'auto';
        }
        /**
         * @protected
         * @type {HTMLElement}
         */
        _this.element = element ? element : null;
        /**
         * @private
         * @type {HTMLElement}
         */
        _this.target_ = null;
        /**
         * @private
         * @type {import("../PluggableMap.js").default}
         */
        _this.map_ = null;
        /**
         * @protected
         * @type {!Array<import("../events.js").EventsKey>}
         */
        _this.listenerKeys = [];
        if (options.render) {
            _this.render = options.render;
        }
        if (options.target) {
            _this.setTarget(options.target);
        }
        return _this;
    }
    /**
     * Clean up.
     */
    Control.prototype.disposeInternal = function () {
        (0,_dom_js__WEBPACK_IMPORTED_MODULE_0__.removeNode)(this.element);
        _super.prototype.disposeInternal.call(this);
    };
    /**
     * Get the map associated with this control.
     * @return {import("../PluggableMap.js").default} Map.
     * @api
     */
    Control.prototype.getMap = function () {
        return this.map_;
    };
    /**
     * Remove the control from its current map and attach it to the new map.
     * Subclasses may set up event handlers to get notified about changes to
     * the map here.
     * @param {import("../PluggableMap.js").default} map Map.
     * @api
     */
    Control.prototype.setMap = function (map) {
        if (this.map_) {
            (0,_dom_js__WEBPACK_IMPORTED_MODULE_0__.removeNode)(this.element);
        }
        for (var i = 0, ii = this.listenerKeys.length; i < ii; ++i) {
            (0,_events_js__WEBPACK_IMPORTED_MODULE_1__.unlistenByKey)(this.listenerKeys[i]);
        }
        this.listenerKeys.length = 0;
        this.map_ = map;
        if (this.map_) {
            var target = this.target_
                ? this.target_
                : map.getOverlayContainerStopEvent();
            target.appendChild(this.element);
            if (this.render !== _functions_js__WEBPACK_IMPORTED_MODULE_2__.VOID) {
                this.listenerKeys.push((0,_events_js__WEBPACK_IMPORTED_MODULE_1__.listen)(map, _MapEventType_js__WEBPACK_IMPORTED_MODULE_3__.default.POSTRENDER, this.render, this));
            }
            map.render();
        }
    };
    /**
     * Renders the control.
     * @param {import("../MapEvent.js").default} mapEvent Map event.
     * @api
     */
    Control.prototype.render = function (mapEvent) { };
    /**
     * This function is used to set a target element for the control. It has no
     * effect if it is called after the control has been added to the map (i.e.
     * after `setMap` is called on the control). If no `target` is set in the
     * options passed to the control constructor and if `setTarget` is not called
     * then the control is added to the map's overlay container.
     * @param {HTMLElement|string} target Target.
     * @api
     */
    Control.prototype.setTarget = function (target) {
        this.target_ =
            typeof target === 'string' ? document.getElementById(target) : target;
    };
    return Control;
}(_Object_js__WEBPACK_IMPORTED_MODULE_4__.default));
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Control);
//# sourceMappingURL=Control.js.map

/***/ }),

/***/ "./node_modules/ol/control/FullScreen.js":
/*!***********************************************!*\
  !*** ./node_modules/ol/control/FullScreen.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _Control_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./Control.js */ "./node_modules/ol/control/Control.js");
/* harmony import */ var _events_EventType_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../events/EventType.js */ "./node_modules/ol/events/EventType.js");
/* harmony import */ var _css_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../css.js */ "./node_modules/ol/css.js");
/* harmony import */ var _events_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../events.js */ "./node_modules/ol/events.js");
/* harmony import */ var _dom_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../dom.js */ "./node_modules/ol/dom.js");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
/**
 * @module ol/control/FullScreen
 */





var events = [
    'fullscreenchange',
    'webkitfullscreenchange',
    'MSFullscreenChange',
];
/**
 * @enum {string}
 */
var FullScreenEventType = {
    /**
     * Triggered after the map entered fullscreen.
     * @event FullScreenEventType#enterfullscreen
     * @api
     */
    ENTERFULLSCREEN: 'enterfullscreen',
    /**
     * Triggered after the map leave fullscreen.
     * @event FullScreenEventType#leavefullscreen
     * @api
     */
    LEAVEFULLSCREEN: 'leavefullscreen',
};
/**
 * @typedef {Object} Options
 * @property {string} [className='ol-full-screen'] CSS class name.
 * @property {string|Text} [label='\u2922'] Text label to use for the button.
 * Instead of text, also an element (e.g. a `span` element) can be used.
 * @property {string|Text} [labelActive='\u00d7'] Text label to use for the
 * button when full-screen is active.
 * @property {string} [activeClassName=className + '-true'] CSS class name for the button
 * when full-screen is active.
 * @property {string} [inactiveClassName=className + '-false'] CSS class name for the button
 * when full-screen is inactive.
 * Instead of text, also an element (e.g. a `span` element) can be used.
 * @property {string} [tipLabel='Toggle full-screen'] Text label to use for the button tip.
 * @property {boolean} [keys=false] Full keyboard access.
 * @property {HTMLElement|string} [target] Specify a target if you want the
 * control to be rendered outside of the map's viewport.
 * @property {HTMLElement|string} [source] The element to be displayed
 * fullscreen. When not provided, the element containing the map viewport will
 * be displayed fullscreen.
 */
/**
 * @classdesc
 * Provides a button that when clicked fills up the full screen with the map.
 * The full screen source element is by default the element containing the map viewport unless
 * overridden by providing the `source` option. In which case, the dom
 * element introduced using this parameter will be displayed in full screen.
 *
 * When in full screen mode, a close button is shown to exit full screen mode.
 * The [Fullscreen API](http://www.w3.org/TR/fullscreen/) is used to
 * toggle the map in full screen mode.
 *
 * @fires FullScreenEventType#enterfullscreen
 * @fires FullScreenEventType#leavefullscreen
 * @api
 */
var FullScreen = /** @class */ (function (_super) {
    __extends(FullScreen, _super);
    /**
     * @param {Options=} opt_options Options.
     */
    function FullScreen(opt_options) {
        var _this = this;
        var options = opt_options ? opt_options : {};
        _this = _super.call(this, {
            element: document.createElement('div'),
            target: options.target,
        }) || this;
        /**
         * @private
         * @type {string}
         */
        _this.cssClassName_ =
            options.className !== undefined ? options.className : 'ol-full-screen';
        /**
         * @private
         * @type {Array<string>}
         */
        _this.activeClassName_ =
            options.activeClassName !== undefined
                ? options.activeClassName.split(' ')
                : [_this.cssClassName_ + '-true'];
        /**
         * @private
         * @type {Array<string>}
         */
        _this.inactiveClassName_ =
            options.inactiveClassName !== undefined
                ? options.inactiveClassName.split(' ')
                : [_this.cssClassName_ + '-false'];
        var label = options.label !== undefined ? options.label : '\u2922';
        /**
         * @private
         * @type {Text}
         */
        _this.labelNode_ =
            typeof label === 'string' ? document.createTextNode(label) : label;
        var labelActive = options.labelActive !== undefined ? options.labelActive : '\u00d7';
        /**
         * @private
         * @type {Text}
         */
        _this.labelActiveNode_ =
            typeof labelActive === 'string'
                ? document.createTextNode(labelActive)
                : labelActive;
        /**
         * @private
         * @type {HTMLElement}
         */
        _this.button_ = document.createElement('button');
        var tipLabel = options.tipLabel ? options.tipLabel : 'Toggle full-screen';
        _this.setClassName_(_this.button_, isFullScreen());
        _this.button_.setAttribute('type', 'button');
        _this.button_.title = tipLabel;
        _this.button_.appendChild(_this.labelNode_);
        _this.button_.addEventListener(_events_EventType_js__WEBPACK_IMPORTED_MODULE_0__.default.CLICK, _this.handleClick_.bind(_this), false);
        var cssClasses = _this.cssClassName_ +
            ' ' +
            _css_js__WEBPACK_IMPORTED_MODULE_1__.CLASS_UNSELECTABLE +
            ' ' +
            _css_js__WEBPACK_IMPORTED_MODULE_1__.CLASS_CONTROL +
            ' ' +
            (!isFullScreenSupported() ? _css_js__WEBPACK_IMPORTED_MODULE_1__.CLASS_UNSUPPORTED : '');
        var element = _this.element;
        element.className = cssClasses;
        element.appendChild(_this.button_);
        /**
         * @private
         * @type {boolean}
         */
        _this.keys_ = options.keys !== undefined ? options.keys : false;
        /**
         * @private
         * @type {HTMLElement|string|undefined}
         */
        _this.source_ = options.source;
        return _this;
    }
    /**
     * @param {MouseEvent} event The event to handle
     * @private
     */
    FullScreen.prototype.handleClick_ = function (event) {
        event.preventDefault();
        this.handleFullScreen_();
    };
    /**
     * @private
     */
    FullScreen.prototype.handleFullScreen_ = function () {
        if (!isFullScreenSupported()) {
            return;
        }
        var map = this.getMap();
        if (!map) {
            return;
        }
        if (isFullScreen()) {
            exitFullScreen();
        }
        else {
            var element = void 0;
            if (this.source_) {
                element =
                    typeof this.source_ === 'string'
                        ? document.getElementById(this.source_)
                        : this.source_;
            }
            else {
                element = map.getTargetElement();
            }
            if (this.keys_) {
                requestFullScreenWithKeys(element);
            }
            else {
                requestFullScreen(element);
            }
        }
    };
    /**
     * @private
     */
    FullScreen.prototype.handleFullScreenChange_ = function () {
        var map = this.getMap();
        if (isFullScreen()) {
            this.setClassName_(this.button_, true);
            (0,_dom_js__WEBPACK_IMPORTED_MODULE_2__.replaceNode)(this.labelActiveNode_, this.labelNode_);
            this.dispatchEvent(FullScreenEventType.ENTERFULLSCREEN);
        }
        else {
            this.setClassName_(this.button_, false);
            (0,_dom_js__WEBPACK_IMPORTED_MODULE_2__.replaceNode)(this.labelNode_, this.labelActiveNode_);
            this.dispatchEvent(FullScreenEventType.LEAVEFULLSCREEN);
        }
        if (map) {
            map.updateSize();
        }
    };
    /**
     * @param {HTMLElement} element Target element
     * @param {boolean} fullscreen True if fullscreen class name should be active
     * @private
     */
    FullScreen.prototype.setClassName_ = function (element, fullscreen) {
        var _a, _b, _c;
        var activeClassName = this.activeClassName_;
        var inactiveClassName = this.inactiveClassName_;
        var nextClassName = fullscreen ? activeClassName : inactiveClassName;
        (_a = element.classList).remove.apply(_a, activeClassName);
        (_b = element.classList).remove.apply(_b, inactiveClassName);
        (_c = element.classList).add.apply(_c, nextClassName);
    };
    /**
     * Remove the control from its current map and attach it to the new map.
     * Subclasses may set up event handlers to get notified about changes to
     * the map here.
     * @param {import("../PluggableMap.js").default} map Map.
     * @api
     */
    FullScreen.prototype.setMap = function (map) {
        _super.prototype.setMap.call(this, map);
        if (map) {
            for (var i = 0, ii = events.length; i < ii; ++i) {
                this.listenerKeys.push((0,_events_js__WEBPACK_IMPORTED_MODULE_3__.listen)(document, events[i], this.handleFullScreenChange_, this));
            }
        }
    };
    return FullScreen;
}(_Control_js__WEBPACK_IMPORTED_MODULE_4__.default));
/**
 * @return {boolean} Fullscreen is supported by the current platform.
 */
function isFullScreenSupported() {
    var body = document.body;
    return !!(body['webkitRequestFullscreen'] ||
        (body['msRequestFullscreen'] && document['msFullscreenEnabled']) ||
        (body.requestFullscreen && document.fullscreenEnabled));
}
/**
 * @return {boolean} Element is currently in fullscreen.
 */
function isFullScreen() {
    return !!(document['webkitIsFullScreen'] ||
        document['msFullscreenElement'] ||
        document.fullscreenElement);
}
/**
 * Request to fullscreen an element.
 * @param {HTMLElement} element Element to request fullscreen
 */
function requestFullScreen(element) {
    if (element.requestFullscreen) {
        element.requestFullscreen();
    }
    else if (element['msRequestFullscreen']) {
        element['msRequestFullscreen']();
    }
    else if (element['webkitRequestFullscreen']) {
        element['webkitRequestFullscreen']();
    }
}
/**
 * Request to fullscreen an element with keyboard input.
 * @param {HTMLElement} element Element to request fullscreen
 */
function requestFullScreenWithKeys(element) {
    if (element['webkitRequestFullscreen']) {
        element['webkitRequestFullscreen']();
    }
    else {
        requestFullScreen(element);
    }
}
/**
 * Exit fullscreen.
 */
function exitFullScreen() {
    if (document.exitFullscreen) {
        document.exitFullscreen();
    }
    else if (document['msExitFullscreen']) {
        document['msExitFullscreen']();
    }
    else if (document['webkitExitFullscreen']) {
        document['webkitExitFullscreen']();
    }
}
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (FullScreen);
//# sourceMappingURL=FullScreen.js.map

/***/ }),

/***/ "./node_modules/ol/control/MousePosition.js":
/*!**************************************************!*\
  !*** ./node_modules/ol/control/MousePosition.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _Control_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./Control.js */ "./node_modules/ol/control/Control.js");
/* harmony import */ var _pointer_EventType_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../pointer/EventType.js */ "./node_modules/ol/pointer/EventType.js");
/* harmony import */ var _Object_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Object.js */ "./node_modules/ol/Object.js");
/* harmony import */ var _proj_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../proj.js */ "./node_modules/ol/proj.js");
/* harmony import */ var _events_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../events.js */ "./node_modules/ol/events.js");
/**
 * @module ol/control/MousePosition
 */
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();





/**
 * @type {string}
 */
var PROJECTION = 'projection';
/**
 * @type {string}
 */
var COORDINATE_FORMAT = 'coordinateFormat';
/**
 * @typedef {Object} Options
 * @property {string} [className='ol-mouse-position'] CSS class name.
 * @property {import("../coordinate.js").CoordinateFormat} [coordinateFormat] Coordinate format.
 * @property {import("../proj.js").ProjectionLike} [projection] Projection. Default is the view projection.
 * @property {function(import("../MapEvent.js").default):void} [render] Function called when the
 * control should be re-rendered. This is called in a `requestAnimationFrame`
 * callback.
 * @property {HTMLElement|string} [target] Specify a target if you want the
 * control to be rendered outside of the map's viewport.
 * @property {string} [undefinedHTML='&#160;'] Markup to show when coordinates are not
 * available (e.g. when the pointer leaves the map viewport).  By default, the last position
 * will be replaced with `'&#160;'` (`&nbsp;`) when the pointer leaves the viewport.  To
 * retain the last rendered position, set this option to something falsey (like an empty
 * string `''`).
 */
/**
 * @classdesc
 * A control to show the 2D coordinates of the mouse cursor. By default, these
 * are in the view projection, but can be in any supported projection.
 * By default the control is shown in the top right corner of the map, but this
 * can be changed by using the css selector `.ol-mouse-position`.
 *
 * On touch devices, which usually do not have a mouse cursor, the coordinates
 * of the currently touched position are shown.
 *
 * @api
 */
var MousePosition = /** @class */ (function (_super) {
    __extends(MousePosition, _super);
    /**
     * @param {Options=} opt_options Mouse position options.
     */
    function MousePosition(opt_options) {
        var _this = this;
        var options = opt_options ? opt_options : {};
        var element = document.createElement('div');
        element.className =
            options.className !== undefined ? options.className : 'ol-mouse-position';
        _this = _super.call(this, {
            element: element,
            render: options.render,
            target: options.target,
        }) || this;
        _this.addEventListener((0,_Object_js__WEBPACK_IMPORTED_MODULE_1__.getChangeEventType)(PROJECTION), _this.handleProjectionChanged_);
        if (options.coordinateFormat) {
            _this.setCoordinateFormat(options.coordinateFormat);
        }
        if (options.projection) {
            _this.setProjection(options.projection);
        }
        /**
         * @private
         * @type {string}
         */
        _this.undefinedHTML_ =
            options.undefinedHTML !== undefined ? options.undefinedHTML : '&#160;';
        /**
         * @private
         * @type {boolean}
         */
        _this.renderOnMouseOut_ = !!_this.undefinedHTML_;
        /**
         * @private
         * @type {string}
         */
        _this.renderedHTML_ = element.innerHTML;
        /**
         * @private
         * @type {?import("../proj/Projection.js").default}
         */
        _this.mapProjection_ = null;
        /**
         * @private
         * @type {?import("../proj.js").TransformFunction}
         */
        _this.transform_ = null;
        return _this;
    }
    /**
     * @private
     */
    MousePosition.prototype.handleProjectionChanged_ = function () {
        this.transform_ = null;
    };
    /**
     * Return the coordinate format type used to render the current position or
     * undefined.
     * @return {import("../coordinate.js").CoordinateFormat|undefined} The format to render the current
     *     position in.
     * @observable
     * @api
     */
    MousePosition.prototype.getCoordinateFormat = function () {
        return /** @type {import("../coordinate.js").CoordinateFormat|undefined} */ (this.get(COORDINATE_FORMAT));
    };
    /**
     * Return the projection that is used to report the mouse position.
     * @return {import("../proj/Projection.js").default|undefined} The projection to report mouse
     *     position in.
     * @observable
     * @api
     */
    MousePosition.prototype.getProjection = function () {
        return /** @type {import("../proj/Projection.js").default|undefined} */ (this.get(PROJECTION));
    };
    /**
     * @param {MouseEvent} event Browser event.
     * @protected
     */
    MousePosition.prototype.handleMouseMove = function (event) {
        var map = this.getMap();
        this.updateHTML_(map.getEventPixel(event));
    };
    /**
     * @param {Event} event Browser event.
     * @protected
     */
    MousePosition.prototype.handleMouseOut = function (event) {
        this.updateHTML_(null);
    };
    /**
     * Remove the control from its current map and attach it to the new map.
     * Subclasses may set up event handlers to get notified about changes to
     * the map here.
     * @param {import("../PluggableMap.js").default} map Map.
     * @api
     */
    MousePosition.prototype.setMap = function (map) {
        _super.prototype.setMap.call(this, map);
        if (map) {
            var viewport = map.getViewport();
            this.listenerKeys.push((0,_events_js__WEBPACK_IMPORTED_MODULE_2__.listen)(viewport, _pointer_EventType_js__WEBPACK_IMPORTED_MODULE_3__.default.POINTERMOVE, this.handleMouseMove, this));
            if (this.renderOnMouseOut_) {
                this.listenerKeys.push((0,_events_js__WEBPACK_IMPORTED_MODULE_2__.listen)(viewport, _pointer_EventType_js__WEBPACK_IMPORTED_MODULE_3__.default.POINTEROUT, this.handleMouseOut, this));
            }
        }
    };
    /**
     * Set the coordinate format type used to render the current position.
     * @param {import("../coordinate.js").CoordinateFormat} format The format to render the current
     *     position in.
     * @observable
     * @api
     */
    MousePosition.prototype.setCoordinateFormat = function (format) {
        this.set(COORDINATE_FORMAT, format);
    };
    /**
     * Set the projection that is used to report the mouse position.
     * @param {import("../proj.js").ProjectionLike} projection The projection to report mouse
     *     position in.
     * @observable
     * @api
     */
    MousePosition.prototype.setProjection = function (projection) {
        this.set(PROJECTION, (0,_proj_js__WEBPACK_IMPORTED_MODULE_0__.get)(projection));
    };
    /**
     * @param {?import("../pixel.js").Pixel} pixel Pixel.
     * @private
     */
    MousePosition.prototype.updateHTML_ = function (pixel) {
        var html = this.undefinedHTML_;
        if (pixel && this.mapProjection_) {
            if (!this.transform_) {
                var projection = this.getProjection();
                if (projection) {
                    this.transform_ = (0,_proj_js__WEBPACK_IMPORTED_MODULE_0__.getTransformFromProjections)(this.mapProjection_, projection);
                }
                else {
                    this.transform_ = _proj_js__WEBPACK_IMPORTED_MODULE_0__.identityTransform;
                }
            }
            var map = this.getMap();
            var coordinate = map.getCoordinateFromPixelInternal(pixel);
            if (coordinate) {
                var userProjection = (0,_proj_js__WEBPACK_IMPORTED_MODULE_0__.getUserProjection)();
                if (userProjection) {
                    this.transform_ = (0,_proj_js__WEBPACK_IMPORTED_MODULE_0__.getTransformFromProjections)(this.mapProjection_, userProjection);
                }
                this.transform_(coordinate, coordinate);
                var coordinateFormat = this.getCoordinateFormat();
                if (coordinateFormat) {
                    html = coordinateFormat(coordinate);
                }
                else {
                    html = coordinate.toString();
                }
            }
        }
        if (!this.renderedHTML_ || html !== this.renderedHTML_) {
            this.element.innerHTML = html;
            this.renderedHTML_ = html;
        }
    };
    /**
     * Update the projection. Rendering of the coordinates is done in
     * `handleMouseMove` and `handleMouseUp`.
     * @param {import("../MapEvent.js").default} mapEvent Map event.
     * @override
     */
    MousePosition.prototype.render = function (mapEvent) {
        var frameState = mapEvent.frameState;
        if (!frameState) {
            this.mapProjection_ = null;
        }
        else {
            if (this.mapProjection_ != frameState.viewState.projection) {
                this.mapProjection_ = frameState.viewState.projection;
                this.transform_ = null;
            }
        }
    };
    return MousePosition;
}(_Control_js__WEBPACK_IMPORTED_MODULE_4__.default));
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (MousePosition);
//# sourceMappingURL=MousePosition.js.map

/***/ }),

/***/ "./node_modules/ol/control/OverviewMap.js":
/*!************************************************!*\
  !*** ./node_modules/ol/control/OverviewMap.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _renderer_Composite_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../renderer/Composite.js */ "./node_modules/ol/renderer/Composite.js");
/* harmony import */ var _Control_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./Control.js */ "./node_modules/ol/control/Control.js");
/* harmony import */ var _events_EventType_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../events/EventType.js */ "./node_modules/ol/events/EventType.js");
/* harmony import */ var _MapEventType_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../MapEventType.js */ "./node_modules/ol/MapEventType.js");
/* harmony import */ var _MapProperty_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../MapProperty.js */ "./node_modules/ol/MapProperty.js");
/* harmony import */ var _ObjectEventType_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../ObjectEventType.js */ "./node_modules/ol/ObjectEventType.js");
/* harmony import */ var _Overlay_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../Overlay.js */ "./node_modules/ol/Overlay.js");
/* harmony import */ var _OverlayPositioning_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../OverlayPositioning.js */ "./node_modules/ol/OverlayPositioning.js");
/* harmony import */ var _PluggableMap_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../PluggableMap.js */ "./node_modules/ol/PluggableMap.js");
/* harmony import */ var _View_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../View.js */ "./node_modules/ol/View.js");
/* harmony import */ var _ViewProperty_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../ViewProperty.js */ "./node_modules/ol/ViewProperty.js");
/* harmony import */ var _css_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../css.js */ "./node_modules/ol/css.js");
/* harmony import */ var _extent_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../extent.js */ "./node_modules/ol/extent.js");
/* harmony import */ var _Object_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../Object.js */ "./node_modules/ol/Object.js");
/* harmony import */ var _events_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../events.js */ "./node_modules/ol/events.js");
/* harmony import */ var _geom_Polygon_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../geom/Polygon.js */ "./node_modules/ol/geom/Polygon.js");
/* harmony import */ var _dom_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../dom.js */ "./node_modules/ol/dom.js");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
/**
 * @module ol/control/OverviewMap
 */

















/**
 * Maximum width and/or height extent ratio that determines when the overview
 * map should be zoomed out.
 * @type {number}
 */
var MAX_RATIO = 0.75;
/**
 * Minimum width and/or height extent ratio that determines when the overview
 * map should be zoomed in.
 * @type {number}
 */
var MIN_RATIO = 0.1;
var ControlledMap = /** @class */ (function (_super) {
    __extends(ControlledMap, _super);
    function ControlledMap() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    ControlledMap.prototype.createRenderer = function () {
        return new _renderer_Composite_js__WEBPACK_IMPORTED_MODULE_0__.default(this);
    };
    return ControlledMap;
}(_PluggableMap_js__WEBPACK_IMPORTED_MODULE_1__.default));
/**
 * @typedef {Object} Options
 * @property {string} [className='ol-overviewmap'] CSS class name.
 * @property {boolean} [collapsed=true] Whether the control should start collapsed or not (expanded).
 * @property {string|HTMLElement} [collapseLabel='«'] Text label to use for the
 * expanded overviewmap button. Instead of text, also an element (e.g. a `span` element) can be used.
 * @property {boolean} [collapsible=true] Whether the control can be collapsed or not.
 * @property {string|HTMLElement} [label='»'] Text label to use for the collapsed
 * overviewmap button. Instead of text, also an element (e.g. a `span` element) can be used.
 * @property {Array<import("../layer/Layer.js").default>|import("../Collection.js").default<import("../layer/Layer.js").default>} [layers]
 * Layers for the overview map.
 * @property {function(import("../MapEvent.js").default):void} [render] Function called when the control
 * should be re-rendered. This is called in a `requestAnimationFrame` callback.
 * @property {boolean} [rotateWithView=false] Whether the control view should rotate with the main map view.
 * @property {HTMLElement|string} [target] Specify a target if you want the control
 * to be rendered outside of the map's viewport.
 * @property {string} [tipLabel='Overview map'] Text label to use for the button tip.
 * @property {View} [view] Custom view for the overview map (should use same projection as main map). If not provided,
 * a default view with the same projection as the main map will be used.
 */
/**
 * Create a new control with a map acting as an overview map for another
 * defined map.
 *
 * @api
 */
var OverviewMap = /** @class */ (function (_super) {
    __extends(OverviewMap, _super);
    /**
     * @param {Options=} opt_options OverviewMap options.
     */
    function OverviewMap(opt_options) {
        var _this = this;
        var options = opt_options ? opt_options : {};
        _this = _super.call(this, {
            element: document.createElement('div'),
            render: options.render,
            target: options.target,
        }) || this;
        /**
         * @private
         */
        _this.boundHandleRotationChanged_ = _this.handleRotationChanged_.bind(_this);
        /**
         * @type {boolean}
         * @private
         */
        _this.collapsed_ =
            options.collapsed !== undefined ? options.collapsed : true;
        /**
         * @private
         * @type {boolean}
         */
        _this.collapsible_ =
            options.collapsible !== undefined ? options.collapsible : true;
        if (!_this.collapsible_) {
            _this.collapsed_ = false;
        }
        /**
         * @private
         * @type {boolean}
         */
        _this.rotateWithView_ =
            options.rotateWithView !== undefined ? options.rotateWithView : false;
        /**
         * @private
         * @type {import("../extent.js").Extent|undefined}
         */
        _this.viewExtent_ = undefined;
        var className = options.className !== undefined ? options.className : 'ol-overviewmap';
        var tipLabel = options.tipLabel !== undefined ? options.tipLabel : 'Overview map';
        var collapseLabel = options.collapseLabel !== undefined ? options.collapseLabel : '\u00AB';
        if (typeof collapseLabel === 'string') {
            /**
             * @private
             * @type {HTMLElement}
             */
            _this.collapseLabel_ = document.createElement('span');
            _this.collapseLabel_.textContent = collapseLabel;
        }
        else {
            _this.collapseLabel_ = collapseLabel;
        }
        var label = options.label !== undefined ? options.label : '\u00BB';
        if (typeof label === 'string') {
            /**
             * @private
             * @type {HTMLElement}
             */
            _this.label_ = document.createElement('span');
            _this.label_.textContent = label;
        }
        else {
            _this.label_ = label;
        }
        var activeLabel = _this.collapsible_ && !_this.collapsed_ ? _this.collapseLabel_ : _this.label_;
        var button = document.createElement('button');
        button.setAttribute('type', 'button');
        button.title = tipLabel;
        button.appendChild(activeLabel);
        button.addEventListener(_events_EventType_js__WEBPACK_IMPORTED_MODULE_2__.default.CLICK, _this.handleClick_.bind(_this), false);
        /**
         * @type {HTMLElement}
         * @private
         */
        _this.ovmapDiv_ = document.createElement('div');
        _this.ovmapDiv_.className = 'ol-overviewmap-map';
        /**
         * Explicitly given view to be used instead of a view derived from the main map.
         * @type {View}
         * @private
         */
        _this.view_ = options.view;
        /**
         * @type {ControlledMap}
         * @private
         */
        _this.ovmap_ = new ControlledMap({
            view: options.view,
        });
        var ovmap = _this.ovmap_;
        if (options.layers) {
            options.layers.forEach(function (layer) {
                ovmap.addLayer(layer);
            });
        }
        var box = document.createElement('div');
        box.className = 'ol-overviewmap-box';
        box.style.boxSizing = 'border-box';
        /**
         * @type {import("../Overlay.js").default}
         * @private
         */
        _this.boxOverlay_ = new _Overlay_js__WEBPACK_IMPORTED_MODULE_3__.default({
            position: [0, 0],
            positioning: _OverlayPositioning_js__WEBPACK_IMPORTED_MODULE_4__.default.CENTER_CENTER,
            element: box,
        });
        _this.ovmap_.addOverlay(_this.boxOverlay_);
        var cssClasses = className +
            ' ' +
            _css_js__WEBPACK_IMPORTED_MODULE_5__.CLASS_UNSELECTABLE +
            ' ' +
            _css_js__WEBPACK_IMPORTED_MODULE_5__.CLASS_CONTROL +
            (_this.collapsed_ && _this.collapsible_ ? ' ' + _css_js__WEBPACK_IMPORTED_MODULE_5__.CLASS_COLLAPSED : '') +
            (_this.collapsible_ ? '' : ' ol-uncollapsible');
        var element = _this.element;
        element.className = cssClasses;
        element.appendChild(_this.ovmapDiv_);
        element.appendChild(button);
        /* Interactive map */
        var scope = _this;
        var overlay = _this.boxOverlay_;
        var overlayBox = _this.boxOverlay_.getElement();
        /* Functions definition */
        var computeDesiredMousePosition = function (mousePosition) {
            return {
                clientX: mousePosition.clientX,
                clientY: mousePosition.clientY,
            };
        };
        var move = function (event) {
            var position = /** @type {?} */ (computeDesiredMousePosition(event));
            var coordinates = ovmap.getEventCoordinateInternal(
            /** @type {MouseEvent} */ (position));
            overlay.setPosition(coordinates);
        };
        var endMoving = function (event) {
            var coordinates = ovmap.getEventCoordinateInternal(event);
            scope.getMap().getView().setCenterInternal(coordinates);
            window.removeEventListener('mousemove', move);
            window.removeEventListener('mouseup', endMoving);
        };
        /* Binding */
        overlayBox.addEventListener('mousedown', function () {
            window.addEventListener('mousemove', move);
            window.addEventListener('mouseup', endMoving);
        });
        return _this;
    }
    /**
     * Remove the control from its current map and attach it to the new map.
     * Subclasses may set up event handlers to get notified about changes to
     * the map here.
     * @param {import("../PluggableMap.js").default} map Map.
     * @api
     */
    OverviewMap.prototype.setMap = function (map) {
        var oldMap = this.getMap();
        if (map === oldMap) {
            return;
        }
        if (oldMap) {
            var oldView = oldMap.getView();
            if (oldView) {
                this.unbindView_(oldView);
            }
            this.ovmap_.setTarget(null);
        }
        _super.prototype.setMap.call(this, map);
        if (map) {
            this.ovmap_.setTarget(this.ovmapDiv_);
            this.listenerKeys.push((0,_events_js__WEBPACK_IMPORTED_MODULE_6__.listen)(map, _ObjectEventType_js__WEBPACK_IMPORTED_MODULE_7__.default.PROPERTYCHANGE, this.handleMapPropertyChange_, this));
            var view = map.getView();
            if (view) {
                this.bindView_(view);
                if (view.isDef()) {
                    this.ovmap_.updateSize();
                    this.resetExtent_();
                }
            }
        }
    };
    /**
     * Handle map property changes.  This only deals with changes to the map's view.
     * @param {import("../Object.js").ObjectEvent} event The propertychange event.
     * @private
     */
    OverviewMap.prototype.handleMapPropertyChange_ = function (event) {
        if (event.key === _MapProperty_js__WEBPACK_IMPORTED_MODULE_8__.default.VIEW) {
            var oldView = /** @type {import("../View.js").default} */ (event.oldValue);
            if (oldView) {
                this.unbindView_(oldView);
            }
            var newView = this.getMap().getView();
            this.bindView_(newView);
        }
    };
    /**
     * Register listeners for view property changes.
     * @param {import("../View.js").default} view The view.
     * @private
     */
    OverviewMap.prototype.bindView_ = function (view) {
        if (!this.view_) {
            // Unless an explicit view definition was given, derive default from whatever main map uses.
            var newView = new _View_js__WEBPACK_IMPORTED_MODULE_9__.default({
                projection: view.getProjection(),
            });
            this.ovmap_.setView(newView);
        }
        view.addEventListener((0,_Object_js__WEBPACK_IMPORTED_MODULE_10__.getChangeEventType)(_ViewProperty_js__WEBPACK_IMPORTED_MODULE_11__.default.ROTATION), this.boundHandleRotationChanged_);
        // Sync once with the new view
        this.handleRotationChanged_();
    };
    /**
     * Unregister listeners for view property changes.
     * @param {import("../View.js").default} view The view.
     * @private
     */
    OverviewMap.prototype.unbindView_ = function (view) {
        view.removeEventListener((0,_Object_js__WEBPACK_IMPORTED_MODULE_10__.getChangeEventType)(_ViewProperty_js__WEBPACK_IMPORTED_MODULE_11__.default.ROTATION), this.boundHandleRotationChanged_);
    };
    /**
     * Handle rotation changes to the main map.
     * @private
     */
    OverviewMap.prototype.handleRotationChanged_ = function () {
        if (this.rotateWithView_) {
            this.ovmap_.getView().setRotation(this.getMap().getView().getRotation());
        }
    };
    /**
     * Reset the overview map extent if the box size (width or
     * height) is less than the size of the overview map size times minRatio
     * or is greater than the size of the overview size times maxRatio.
     *
     * If the map extent was not reset, the box size can fits in the defined
     * ratio sizes. This method then checks if is contained inside the overview
     * map current extent. If not, recenter the overview map to the current
     * main map center location.
     * @private
     */
    OverviewMap.prototype.validateExtent_ = function () {
        var map = this.getMap();
        var ovmap = this.ovmap_;
        if (!map.isRendered() || !ovmap.isRendered()) {
            return;
        }
        var mapSize = /** @type {import("../size.js").Size} */ (map.getSize());
        var view = map.getView();
        var extent = view.calculateExtentInternal(mapSize);
        if (this.viewExtent_ && (0,_extent_js__WEBPACK_IMPORTED_MODULE_12__.equals)(extent, this.viewExtent_)) {
            // repeats of the same extent may indicate constraint conflicts leading to an endless cycle
            return;
        }
        this.viewExtent_ = extent;
        var ovmapSize = /** @type {import("../size.js").Size} */ (ovmap.getSize());
        var ovview = ovmap.getView();
        var ovextent = ovview.calculateExtentInternal(ovmapSize);
        var topLeftPixel = ovmap.getPixelFromCoordinateInternal((0,_extent_js__WEBPACK_IMPORTED_MODULE_12__.getTopLeft)(extent));
        var bottomRightPixel = ovmap.getPixelFromCoordinateInternal((0,_extent_js__WEBPACK_IMPORTED_MODULE_12__.getBottomRight)(extent));
        var boxWidth = Math.abs(topLeftPixel[0] - bottomRightPixel[0]);
        var boxHeight = Math.abs(topLeftPixel[1] - bottomRightPixel[1]);
        var ovmapWidth = ovmapSize[0];
        var ovmapHeight = ovmapSize[1];
        if (boxWidth < ovmapWidth * MIN_RATIO ||
            boxHeight < ovmapHeight * MIN_RATIO ||
            boxWidth > ovmapWidth * MAX_RATIO ||
            boxHeight > ovmapHeight * MAX_RATIO) {
            this.resetExtent_();
        }
        else if (!(0,_extent_js__WEBPACK_IMPORTED_MODULE_12__.containsExtent)(ovextent, extent)) {
            this.recenter_();
        }
    };
    /**
     * Reset the overview map extent to half calculated min and max ratio times
     * the extent of the main map.
     * @private
     */
    OverviewMap.prototype.resetExtent_ = function () {
        if (MAX_RATIO === 0 || MIN_RATIO === 0) {
            return;
        }
        var map = this.getMap();
        var ovmap = this.ovmap_;
        var mapSize = /** @type {import("../size.js").Size} */ (map.getSize());
        var view = map.getView();
        var extent = view.calculateExtentInternal(mapSize);
        var ovview = ovmap.getView();
        // get how many times the current map overview could hold different
        // box sizes using the min and max ratio, pick the step in the middle used
        // to calculate the extent from the main map to set it to the overview map,
        var steps = Math.log(MAX_RATIO / MIN_RATIO) / Math.LN2;
        var ratio = 1 / (Math.pow(2, steps / 2) * MIN_RATIO);
        (0,_extent_js__WEBPACK_IMPORTED_MODULE_12__.scaleFromCenter)(extent, ratio);
        ovview.fitInternal((0,_geom_Polygon_js__WEBPACK_IMPORTED_MODULE_13__.fromExtent)(extent));
    };
    /**
     * Set the center of the overview map to the map center without changing its
     * resolution.
     * @private
     */
    OverviewMap.prototype.recenter_ = function () {
        var map = this.getMap();
        var ovmap = this.ovmap_;
        var view = map.getView();
        var ovview = ovmap.getView();
        ovview.setCenterInternal(view.getCenterInternal());
    };
    /**
     * Update the box using the main map extent
     * @private
     */
    OverviewMap.prototype.updateBox_ = function () {
        var map = this.getMap();
        var ovmap = this.ovmap_;
        if (!map.isRendered() || !ovmap.isRendered()) {
            return;
        }
        var mapSize = /** @type {import("../size.js").Size} */ (map.getSize());
        var view = map.getView();
        var ovview = ovmap.getView();
        var rotation = this.rotateWithView_ ? 0 : -view.getRotation();
        var overlay = this.boxOverlay_;
        var box = this.boxOverlay_.getElement();
        var center = view.getCenterInternal();
        var resolution = view.getResolution();
        var ovresolution = ovview.getResolution();
        var width = (mapSize[0] * resolution) / ovresolution;
        var height = (mapSize[1] * resolution) / ovresolution;
        // set position using center coordinates
        overlay.setPosition(center);
        // set box size calculated from map extent size and overview map resolution
        if (box) {
            box.style.width = width + 'px';
            box.style.height = height + 'px';
            var transform = 'rotate(' + rotation + 'rad)';
            box.style.transform = transform;
        }
    };
    /**
     * @param {MouseEvent} event The event to handle
     * @private
     */
    OverviewMap.prototype.handleClick_ = function (event) {
        event.preventDefault();
        this.handleToggle_();
    };
    /**
     * @private
     */
    OverviewMap.prototype.handleToggle_ = function () {
        this.element.classList.toggle(_css_js__WEBPACK_IMPORTED_MODULE_5__.CLASS_COLLAPSED);
        if (this.collapsed_) {
            (0,_dom_js__WEBPACK_IMPORTED_MODULE_14__.replaceNode)(this.collapseLabel_, this.label_);
        }
        else {
            (0,_dom_js__WEBPACK_IMPORTED_MODULE_14__.replaceNode)(this.label_, this.collapseLabel_);
        }
        this.collapsed_ = !this.collapsed_;
        // manage overview map if it had not been rendered before and control
        // is expanded
        var ovmap = this.ovmap_;
        if (!this.collapsed_) {
            if (ovmap.isRendered()) {
                this.viewExtent_ = undefined;
                ovmap.render();
                return;
            }
            ovmap.updateSize();
            this.resetExtent_();
            (0,_events_js__WEBPACK_IMPORTED_MODULE_6__.listenOnce)(ovmap, _MapEventType_js__WEBPACK_IMPORTED_MODULE_15__.default.POSTRENDER, function (event) {
                this.updateBox_();
            }, this);
        }
    };
    /**
     * Return `true` if the overview map is collapsible, `false` otherwise.
     * @return {boolean} True if the widget is collapsible.
     * @api
     */
    OverviewMap.prototype.getCollapsible = function () {
        return this.collapsible_;
    };
    /**
     * Set whether the overview map should be collapsible.
     * @param {boolean} collapsible True if the widget is collapsible.
     * @api
     */
    OverviewMap.prototype.setCollapsible = function (collapsible) {
        if (this.collapsible_ === collapsible) {
            return;
        }
        this.collapsible_ = collapsible;
        this.element.classList.toggle('ol-uncollapsible');
        if (!collapsible && this.collapsed_) {
            this.handleToggle_();
        }
    };
    /**
     * Collapse or expand the overview map according to the passed parameter. Will
     * not do anything if the overview map isn't collapsible or if the current
     * collapsed state is already the one requested.
     * @param {boolean} collapsed True if the widget is collapsed.
     * @api
     */
    OverviewMap.prototype.setCollapsed = function (collapsed) {
        if (!this.collapsible_ || this.collapsed_ === collapsed) {
            return;
        }
        this.handleToggle_();
    };
    /**
     * Determine if the overview map is collapsed.
     * @return {boolean} The overview map is collapsed.
     * @api
     */
    OverviewMap.prototype.getCollapsed = function () {
        return this.collapsed_;
    };
    /**
     * Return `true` if the overview map view can rotate, `false` otherwise.
     * @return {boolean} True if the control view can rotate.
     * @api
     */
    OverviewMap.prototype.getRotateWithView = function () {
        return this.rotateWithView_;
    };
    /**
     * Set whether the overview map view should rotate with the main map view.
     * @param {boolean} rotateWithView True if the control view should rotate.
     * @api
     */
    OverviewMap.prototype.setRotateWithView = function (rotateWithView) {
        if (this.rotateWithView_ === rotateWithView) {
            return;
        }
        this.rotateWithView_ = rotateWithView;
        if (this.getMap().getView().getRotation() !== 0) {
            if (this.rotateWithView_) {
                this.handleRotationChanged_();
            }
            else {
                this.ovmap_.getView().setRotation(0);
            }
            this.viewExtent_ = undefined;
            this.validateExtent_();
            this.updateBox_();
        }
    };
    /**
     * Return the overview map.
     * @return {import("../PluggableMap.js").default} Overview map.
     * @api
     */
    OverviewMap.prototype.getOverviewMap = function () {
        return this.ovmap_;
    };
    /**
     * Update the overview map element.
     * @param {import("../MapEvent.js").default} mapEvent Map event.
     * @override
     */
    OverviewMap.prototype.render = function (mapEvent) {
        this.validateExtent_();
        this.updateBox_();
    };
    return OverviewMap;
}(_Control_js__WEBPACK_IMPORTED_MODULE_16__.default));
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (OverviewMap);
//# sourceMappingURL=OverviewMap.js.map

/***/ }),

/***/ "./node_modules/ol/control/Rotate.js":
/*!*******************************************!*\
  !*** ./node_modules/ol/control/Rotate.js ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _Control_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Control.js */ "./node_modules/ol/control/Control.js");
/* harmony import */ var _events_EventType_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../events/EventType.js */ "./node_modules/ol/events/EventType.js");
/* harmony import */ var _css_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../css.js */ "./node_modules/ol/css.js");
/* harmony import */ var _easing_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../easing.js */ "./node_modules/ol/easing.js");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
/**
 * @module ol/control/Rotate
 */




/**
 * @typedef {Object} Options
 * @property {string} [className='ol-rotate'] CSS class name.
 * @property {string|HTMLElement} [label='⇧'] Text label to use for the rotate button.
 * Instead of text, also an element (e.g. a `span` element) can be used.
 * @property {string} [tipLabel='Reset rotation'] Text label to use for the rotate tip.
 * @property {string} [compassClassName='ol-compass'] CSS class name for the compass.
 * @property {number} [duration=250] Animation duration in milliseconds.
 * @property {boolean} [autoHide=true] Hide the control when rotation is 0.
 * @property {function(import("../MapEvent.js").default):void} [render] Function called when the control should
 * be re-rendered. This is called in a `requestAnimationFrame` callback.
 * @property {function():void} [resetNorth] Function called when the control is clicked.
 * This will override the default `resetNorth`.
 * @property {HTMLElement|string} [target] Specify a target if you want the control to be
 * rendered outside of the map's viewport.
 */
/**
 * @classdesc
 * A button control to reset rotation to 0.
 * To style this control use css selector `.ol-rotate`. A `.ol-hidden` css
 * selector is added to the button when the rotation is 0.
 *
 * @api
 */
var Rotate = /** @class */ (function (_super) {
    __extends(Rotate, _super);
    /**
     * @param {Options=} opt_options Rotate options.
     */
    function Rotate(opt_options) {
        var _this = this;
        var options = opt_options ? opt_options : {};
        _this = _super.call(this, {
            element: document.createElement('div'),
            render: options.render,
            target: options.target,
        }) || this;
        var className = options.className !== undefined ? options.className : 'ol-rotate';
        var label = options.label !== undefined ? options.label : '\u21E7';
        var compassClassName = options.compassClassName !== undefined
            ? options.compassClassName
            : 'ol-compass';
        /**
         * @type {HTMLElement}
         * @private
         */
        _this.label_ = null;
        if (typeof label === 'string') {
            _this.label_ = document.createElement('span');
            _this.label_.className = compassClassName;
            _this.label_.textContent = label;
        }
        else {
            _this.label_ = label;
            _this.label_.classList.add(compassClassName);
        }
        var tipLabel = options.tipLabel ? options.tipLabel : 'Reset rotation';
        var button = document.createElement('button');
        button.className = className + '-reset';
        button.setAttribute('type', 'button');
        button.title = tipLabel;
        button.appendChild(_this.label_);
        button.addEventListener(_events_EventType_js__WEBPACK_IMPORTED_MODULE_0__.default.CLICK, _this.handleClick_.bind(_this), false);
        var cssClasses = className + ' ' + _css_js__WEBPACK_IMPORTED_MODULE_1__.CLASS_UNSELECTABLE + ' ' + _css_js__WEBPACK_IMPORTED_MODULE_1__.CLASS_CONTROL;
        var element = _this.element;
        element.className = cssClasses;
        element.appendChild(button);
        _this.callResetNorth_ = options.resetNorth ? options.resetNorth : undefined;
        /**
         * @type {number}
         * @private
         */
        _this.duration_ = options.duration !== undefined ? options.duration : 250;
        /**
         * @type {boolean}
         * @private
         */
        _this.autoHide_ = options.autoHide !== undefined ? options.autoHide : true;
        /**
         * @private
         * @type {number|undefined}
         */
        _this.rotation_ = undefined;
        if (_this.autoHide_) {
            _this.element.classList.add(_css_js__WEBPACK_IMPORTED_MODULE_1__.CLASS_HIDDEN);
        }
        return _this;
    }
    /**
     * @param {MouseEvent} event The event to handle
     * @private
     */
    Rotate.prototype.handleClick_ = function (event) {
        event.preventDefault();
        if (this.callResetNorth_ !== undefined) {
            this.callResetNorth_();
        }
        else {
            this.resetNorth_();
        }
    };
    /**
     * @private
     */
    Rotate.prototype.resetNorth_ = function () {
        var map = this.getMap();
        var view = map.getView();
        if (!view) {
            // the map does not have a view, so we can't act
            // upon it
            return;
        }
        var rotation = view.getRotation();
        if (rotation !== undefined) {
            if (this.duration_ > 0 && rotation % (2 * Math.PI) !== 0) {
                view.animate({
                    rotation: 0,
                    duration: this.duration_,
                    easing: _easing_js__WEBPACK_IMPORTED_MODULE_2__.easeOut,
                });
            }
            else {
                view.setRotation(0);
            }
        }
    };
    /**
     * Update the rotate control element.
     * @param {import("../MapEvent.js").default} mapEvent Map event.
     * @override
     */
    Rotate.prototype.render = function (mapEvent) {
        var frameState = mapEvent.frameState;
        if (!frameState) {
            return;
        }
        var rotation = frameState.viewState.rotation;
        if (rotation != this.rotation_) {
            var transform = 'rotate(' + rotation + 'rad)';
            if (this.autoHide_) {
                var contains = this.element.classList.contains(_css_js__WEBPACK_IMPORTED_MODULE_1__.CLASS_HIDDEN);
                if (!contains && rotation === 0) {
                    this.element.classList.add(_css_js__WEBPACK_IMPORTED_MODULE_1__.CLASS_HIDDEN);
                }
                else if (contains && rotation !== 0) {
                    this.element.classList.remove(_css_js__WEBPACK_IMPORTED_MODULE_1__.CLASS_HIDDEN);
                }
            }
            this.label_.style.transform = transform;
        }
        this.rotation_ = rotation;
    };
    return Rotate;
}(_Control_js__WEBPACK_IMPORTED_MODULE_3__.default));
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Rotate);
//# sourceMappingURL=Rotate.js.map

/***/ }),

/***/ "./node_modules/ol/control/ScaleLine.js":
/*!**********************************************!*\
  !*** ./node_modules/ol/control/ScaleLine.js ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Units": () => (/* binding */ Units),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _Control_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./Control.js */ "./node_modules/ol/control/Control.js");
/* harmony import */ var _proj_Units_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../proj/Units.js */ "./node_modules/ol/proj/Units.js");
/* harmony import */ var _css_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../css.js */ "./node_modules/ol/css.js");
/* harmony import */ var _proj_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../proj.js */ "./node_modules/ol/proj.js");
/* harmony import */ var _asserts_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../asserts.js */ "./node_modules/ol/asserts.js");
/* harmony import */ var _Object_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Object.js */ "./node_modules/ol/Object.js");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
/**
 * @module ol/control/ScaleLine
 */






/**
 * @type {string}
 */
var UNITS_PROP = 'units';
/**
 * Units for the scale line. Supported values are `'degrees'`, `'imperial'`,
 * `'nautical'`, `'metric'`, `'us'`.
 * @enum {string}
 */
var Units = {
    DEGREES: 'degrees',
    IMPERIAL: 'imperial',
    NAUTICAL: 'nautical',
    METRIC: 'metric',
    US: 'us',
};
/**
 * @const
 * @type {Array<number>}
 */
var LEADING_DIGITS = [1, 2, 5];
/**
 * @const
 * @type {number}
 */
var DEFAULT_DPI = 25.4 / 0.28;
/**
 * @typedef {Object} Options
 * @property {string} [className='ol-scale-line'] CSS Class name.
 * @property {number} [minWidth=64] Minimum width in pixels at the OGC default dpi. The width will be
 * adjusted to match the dpi used.
 * @property {function(import("../MapEvent.js").default):void} [render] Function called when the control
 * should be re-rendered. This is called in a `requestAnimationFrame` callback.
 * @property {HTMLElement|string} [target] Specify a target if you want the control
 * to be rendered outside of the map's viewport.
 * @property {import("./ScaleLine.js").Units|string} [units='metric'] Units.
 * @property {boolean} [bar=false] Render scalebars instead of a line.
 * @property {number} [steps=4] Number of steps the scalebar should use. Use even numbers
 * for best results. Only applies when `bar` is `true`.
 * @property {boolean} [text=false] Render the text scale above of the scalebar. Only applies
 * when `bar` is `true`.
 * @property {number|undefined} [dpi=undefined] dpi of output device such as printer. Only applies
 * when `bar` is `true`. If undefined the OGC default screen pixel size of 0.28mm will be assumed.
 */
/**
 * @classdesc
 * A control displaying rough y-axis distances, calculated for the center of the
 * viewport. For conformal projections (e.g. EPSG:3857, the default view
 * projection in OpenLayers), the scale is valid for all directions.
 * No scale line will be shown when the y-axis distance of a pixel at the
 * viewport center cannot be calculated in the view projection.
 * By default the scale line will show in the bottom left portion of the map,
 * but this can be changed by using the css selector `.ol-scale-line`.
 * When specifying `bar` as `true`, a scalebar will be rendered instead
 * of a scaleline.
 *
 * @api
 */
var ScaleLine = /** @class */ (function (_super) {
    __extends(ScaleLine, _super);
    /**
     * @param {Options=} opt_options Scale line options.
     */
    function ScaleLine(opt_options) {
        var _this = this;
        var options = opt_options ? opt_options : {};
        var className = options.className !== undefined
            ? options.className
            : options.bar
                ? 'ol-scale-bar'
                : 'ol-scale-line';
        _this = _super.call(this, {
            element: document.createElement('div'),
            render: options.render,
            target: options.target,
        }) || this;
        /**
         * @private
         * @type {HTMLElement}
         */
        _this.innerElement_ = document.createElement('div');
        _this.innerElement_.className = className + '-inner';
        _this.element.className = className + ' ' + _css_js__WEBPACK_IMPORTED_MODULE_1__.CLASS_UNSELECTABLE;
        _this.element.appendChild(_this.innerElement_);
        /**
         * @private
         * @type {?import("../View.js").State}
         */
        _this.viewState_ = null;
        /**
         * @private
         * @type {number}
         */
        _this.minWidth_ = options.minWidth !== undefined ? options.minWidth : 64;
        /**
         * @private
         * @type {boolean}
         */
        _this.renderedVisible_ = false;
        /**
         * @private
         * @type {number|undefined}
         */
        _this.renderedWidth_ = undefined;
        /**
         * @private
         * @type {string}
         */
        _this.renderedHTML_ = '';
        _this.addEventListener((0,_Object_js__WEBPACK_IMPORTED_MODULE_2__.getChangeEventType)(UNITS_PROP), _this.handleUnitsChanged_);
        _this.setUnits(options.units || Units.METRIC);
        /**
         * @private
         * @type {boolean}
         */
        _this.scaleBar_ = options.bar || false;
        /**
         * @private
         * @type {number}
         */
        _this.scaleBarSteps_ = options.steps || 4;
        /**
         * @private
         * @type {boolean}
         */
        _this.scaleBarText_ = options.text || false;
        /**
         * @private
         * @type {number|undefined}
         */
        _this.dpi_ = options.dpi || undefined;
        return _this;
    }
    /**
     * Return the units to use in the scale line.
     * @return {import("./ScaleLine.js").Units} The units
     * to use in the scale line.
     * @observable
     * @api
     */
    ScaleLine.prototype.getUnits = function () {
        return this.get(UNITS_PROP);
    };
    /**
     * @private
     */
    ScaleLine.prototype.handleUnitsChanged_ = function () {
        this.updateElement_();
    };
    /**
     * Set the units to use in the scale line.
     * @param {import("./ScaleLine.js").Units} units The units to use in the scale line.
     * @observable
     * @api
     */
    ScaleLine.prototype.setUnits = function (units) {
        this.set(UNITS_PROP, units);
    };
    /**
     * Specify the dpi of output device such as printer.
     * @param {number|undefined} dpi The dpi of output device.
     * @api
     */
    ScaleLine.prototype.setDpi = function (dpi) {
        this.dpi_ = dpi;
    };
    /**
     * @private
     */
    ScaleLine.prototype.updateElement_ = function () {
        var viewState = this.viewState_;
        if (!viewState) {
            if (this.renderedVisible_) {
                this.element.style.display = 'none';
                this.renderedVisible_ = false;
            }
            return;
        }
        var center = viewState.center;
        var projection = viewState.projection;
        var units = this.getUnits();
        var pointResolutionUnits = units == Units.DEGREES ? _proj_Units_js__WEBPACK_IMPORTED_MODULE_3__.default.DEGREES : _proj_Units_js__WEBPACK_IMPORTED_MODULE_3__.default.METERS;
        var pointResolution = (0,_proj_js__WEBPACK_IMPORTED_MODULE_0__.getPointResolution)(projection, viewState.resolution, center, pointResolutionUnits);
        var minWidth = (this.minWidth_ * (this.dpi_ || DEFAULT_DPI)) / DEFAULT_DPI;
        var nominalCount = minWidth * pointResolution;
        var suffix = '';
        if (units == Units.DEGREES) {
            var metersPerDegree = _proj_js__WEBPACK_IMPORTED_MODULE_0__.METERS_PER_UNIT[_proj_Units_js__WEBPACK_IMPORTED_MODULE_3__.default.DEGREES];
            nominalCount *= metersPerDegree;
            if (nominalCount < metersPerDegree / 60) {
                suffix = '\u2033'; // seconds
                pointResolution *= 3600;
            }
            else if (nominalCount < metersPerDegree) {
                suffix = '\u2032'; // minutes
                pointResolution *= 60;
            }
            else {
                suffix = '\u00b0'; // degrees
            }
        }
        else if (units == Units.IMPERIAL) {
            if (nominalCount < 0.9144) {
                suffix = 'in';
                pointResolution /= 0.0254;
            }
            else if (nominalCount < 1609.344) {
                suffix = 'ft';
                pointResolution /= 0.3048;
            }
            else {
                suffix = 'mi';
                pointResolution /= 1609.344;
            }
        }
        else if (units == Units.NAUTICAL) {
            pointResolution /= 1852;
            suffix = 'nm';
        }
        else if (units == Units.METRIC) {
            if (nominalCount < 0.001) {
                suffix = 'μm';
                pointResolution *= 1000000;
            }
            else if (nominalCount < 1) {
                suffix = 'mm';
                pointResolution *= 1000;
            }
            else if (nominalCount < 1000) {
                suffix = 'm';
            }
            else {
                suffix = 'km';
                pointResolution /= 1000;
            }
        }
        else if (units == Units.US) {
            if (nominalCount < 0.9144) {
                suffix = 'in';
                pointResolution *= 39.37;
            }
            else if (nominalCount < 1609.344) {
                suffix = 'ft';
                pointResolution /= 0.30480061;
            }
            else {
                suffix = 'mi';
                pointResolution /= 1609.3472;
            }
        }
        else {
            (0,_asserts_js__WEBPACK_IMPORTED_MODULE_4__.assert)(false, 33); // Invalid units
        }
        var i = 3 * Math.floor(Math.log(minWidth * pointResolution) / Math.log(10));
        var count, width, decimalCount;
        while (true) {
            decimalCount = Math.floor(i / 3);
            var decimal = Math.pow(10, decimalCount);
            count = LEADING_DIGITS[((i % 3) + 3) % 3] * decimal;
            width = Math.round(count / pointResolution);
            if (isNaN(width)) {
                this.element.style.display = 'none';
                this.renderedVisible_ = false;
                return;
            }
            else if (width >= minWidth) {
                break;
            }
            ++i;
        }
        var html;
        if (this.scaleBar_) {
            html = this.createScaleBar(width, count, suffix);
        }
        else {
            html = count.toFixed(decimalCount < 0 ? -decimalCount : 0) + ' ' + suffix;
        }
        if (this.renderedHTML_ != html) {
            this.innerElement_.innerHTML = html;
            this.renderedHTML_ = html;
        }
        if (this.renderedWidth_ != width) {
            this.innerElement_.style.width = width + 'px';
            this.renderedWidth_ = width;
        }
        if (!this.renderedVisible_) {
            this.element.style.display = '';
            this.renderedVisible_ = true;
        }
    };
    /**
     * @private
     * @param {number} width The current width of the scalebar.
     * @param {number} scale The current scale.
     * @param {string} suffix The suffix to append to the scale text.
     * @returns {string} The stringified HTML of the scalebar.
     */
    ScaleLine.prototype.createScaleBar = function (width, scale, suffix) {
        var mapScale = '1 : ' + Math.round(this.getScaleForResolution()).toLocaleString();
        var scaleSteps = [];
        var stepWidth = width / this.scaleBarSteps_;
        var backgroundColor = '#ffffff';
        for (var i = 0; i < this.scaleBarSteps_; i++) {
            if (i === 0) {
                // create the first marker at position 0
                scaleSteps.push(this.createMarker('absolute', i));
            }
            scaleSteps.push('<div>' +
                '<div ' +
                'class="ol-scale-singlebar" ' +
                'style=' +
                '"width: ' +
                stepWidth +
                'px;' +
                'background-color: ' +
                backgroundColor +
                ';"' +
                '>' +
                '</div>' +
                this.createMarker('relative', i) +
                /*render text every second step, except when only 2 steps */
                (i % 2 === 0 || this.scaleBarSteps_ === 2
                    ? this.createStepText(i, width, false, scale, suffix)
                    : '') +
                '</div>');
            if (i === this.scaleBarSteps_ - 1) {
                {
                    /*render text at the end */
                }
                scaleSteps.push(this.createStepText(i + 1, width, true, scale, suffix));
            }
            // switch colors of steps between black and white
            if (backgroundColor === '#ffffff') {
                backgroundColor = '#000000';
            }
            else {
                backgroundColor = '#ffffff';
            }
        }
        var scaleBarText;
        if (this.scaleBarText_) {
            scaleBarText =
                '<div ' +
                    'class="ol-scale-text" ' +
                    'style="width: ' +
                    width +
                    'px;">' +
                    mapScale +
                    '</div>';
        }
        else {
            scaleBarText = '';
        }
        var container = '<div ' +
            'style="display: flex;">' +
            scaleBarText +
            scaleSteps.join('') +
            '</div>';
        return container;
    };
    /**
     * Creates a marker at given position
     * @param {string} position - The position, absolute or relative
     * @param {number} i - The iterator
     * @returns {string} The stringified div containing the marker
     */
    ScaleLine.prototype.createMarker = function (position, i) {
        var top = position === 'absolute' ? 3 : -10;
        return ('<div ' +
            'class="ol-scale-step-marker" ' +
            'style="position: ' +
            position +
            ';' +
            'top: ' +
            top +
            'px;"' +
            '></div>');
    };
    /**
     * Creates the label for a marker marker at given position
     * @param {number} i - The iterator
     * @param {number} width - The width the scalebar will currently use
     * @param {boolean} isLast - Flag indicating if we add the last step text
     * @param {number} scale - The current scale for the whole scalebar
     * @param {string} suffix - The suffix for the scale
     * @returns {string} The stringified div containing the step text
     */
    ScaleLine.prototype.createStepText = function (i, width, isLast, scale, suffix) {
        var length = i === 0 ? 0 : Math.round((scale / this.scaleBarSteps_) * i * 100) / 100;
        var lengthString = length + (i === 0 ? '' : ' ' + suffix);
        var margin = i === 0 ? -3 : (width / this.scaleBarSteps_) * -1;
        var minWidth = i === 0 ? 0 : (width / this.scaleBarSteps_) * 2;
        return ('<div ' +
            'class="ol-scale-step-text" ' +
            'style="' +
            'margin-left: ' +
            margin +
            'px;' +
            'text-align: ' +
            (i === 0 ? 'left' : 'center') +
            '; ' +
            'min-width: ' +
            minWidth +
            'px;' +
            'left: ' +
            (isLast ? width + 'px' : 'unset') +
            ';"' +
            '>' +
            lengthString +
            '</div>');
    };
    /**
     * Returns the appropriate scale for the given resolution and units.
     * @return {number} The appropriate scale.
     */
    ScaleLine.prototype.getScaleForResolution = function () {
        var resolution = (0,_proj_js__WEBPACK_IMPORTED_MODULE_0__.getPointResolution)(this.viewState_.projection, this.viewState_.resolution, this.viewState_.center);
        var dpi = this.dpi_ || DEFAULT_DPI;
        var mpu = this.viewState_.projection.getMetersPerUnit();
        var inchesPerMeter = 1000 / 25.4;
        return parseFloat(resolution.toString()) * mpu * inchesPerMeter * dpi;
    };
    /**
     * Update the scale line element.
     * @param {import("../MapEvent.js").default} mapEvent Map event.
     * @override
     */
    ScaleLine.prototype.render = function (mapEvent) {
        var frameState = mapEvent.frameState;
        if (!frameState) {
            this.viewState_ = null;
        }
        else {
            this.viewState_ = frameState.viewState;
        }
        this.updateElement_();
    };
    return ScaleLine;
}(_Control_js__WEBPACK_IMPORTED_MODULE_5__.default));
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (ScaleLine);
//# sourceMappingURL=ScaleLine.js.map

/***/ }),

/***/ "./node_modules/ol/control/Zoom.js":
/*!*****************************************!*\
  !*** ./node_modules/ol/control/Zoom.js ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _Control_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Control.js */ "./node_modules/ol/control/Control.js");
/* harmony import */ var _events_EventType_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../events/EventType.js */ "./node_modules/ol/events/EventType.js");
/* harmony import */ var _css_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../css.js */ "./node_modules/ol/css.js");
/* harmony import */ var _easing_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../easing.js */ "./node_modules/ol/easing.js");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
/**
 * @module ol/control/Zoom
 */




/**
 * @typedef {Object} Options
 * @property {number} [duration=250] Animation duration in milliseconds.
 * @property {string} [className='ol-zoom'] CSS class name.
 * @property {string} [zoomInClassName=className + '-in'] CSS class name for the zoom-in button.
 * @property {string} [zoomOutClassName=className + '-out'] CSS class name for the zoom-out button.
 * @property {string|HTMLElement} [zoomInLabel='+'] Text label to use for the zoom-in
 * button. Instead of text, also an element (e.g. a `span` element) can be used.
 * @property {string|HTMLElement} [zoomOutLabel='-'] Text label to use for the zoom-out button.
 * Instead of text, also an element (e.g. a `span` element) can be used.
 * @property {string} [zoomInTipLabel='Zoom in'] Text label to use for the button tip.
 * @property {string} [zoomOutTipLabel='Zoom out'] Text label to use for the button tip.
 * @property {number} [delta=1] The zoom delta applied on each click.
 * @property {HTMLElement|string} [target] Specify a target if you want the control to be
 * rendered outside of the map's viewport.
 */
/**
 * @classdesc
 * A control with 2 buttons, one for zoom in and one for zoom out.
 * This control is one of the default controls of a map. To style this control
 * use css selectors `.ol-zoom-in` and `.ol-zoom-out`.
 *
 * @api
 */
var Zoom = /** @class */ (function (_super) {
    __extends(Zoom, _super);
    /**
     * @param {Options=} opt_options Zoom options.
     */
    function Zoom(opt_options) {
        var _this = this;
        var options = opt_options ? opt_options : {};
        _this = _super.call(this, {
            element: document.createElement('div'),
            target: options.target,
        }) || this;
        var className = options.className !== undefined ? options.className : 'ol-zoom';
        var delta = options.delta !== undefined ? options.delta : 1;
        var zoomInClassName = options.zoomInClassName !== undefined
            ? options.zoomInClassName
            : className + '-in';
        var zoomOutClassName = options.zoomOutClassName !== undefined
            ? options.zoomOutClassName
            : className + '-out';
        var zoomInLabel = options.zoomInLabel !== undefined ? options.zoomInLabel : '+';
        var zoomOutLabel = options.zoomOutLabel !== undefined ? options.zoomOutLabel : '\u2212';
        var zoomInTipLabel = options.zoomInTipLabel !== undefined ? options.zoomInTipLabel : 'Zoom in';
        var zoomOutTipLabel = options.zoomOutTipLabel !== undefined
            ? options.zoomOutTipLabel
            : 'Zoom out';
        var inElement = document.createElement('button');
        inElement.className = zoomInClassName;
        inElement.setAttribute('type', 'button');
        inElement.title = zoomInTipLabel;
        inElement.appendChild(typeof zoomInLabel === 'string'
            ? document.createTextNode(zoomInLabel)
            : zoomInLabel);
        inElement.addEventListener(_events_EventType_js__WEBPACK_IMPORTED_MODULE_0__.default.CLICK, _this.handleClick_.bind(_this, delta), false);
        var outElement = document.createElement('button');
        outElement.className = zoomOutClassName;
        outElement.setAttribute('type', 'button');
        outElement.title = zoomOutTipLabel;
        outElement.appendChild(typeof zoomOutLabel === 'string'
            ? document.createTextNode(zoomOutLabel)
            : zoomOutLabel);
        outElement.addEventListener(_events_EventType_js__WEBPACK_IMPORTED_MODULE_0__.default.CLICK, _this.handleClick_.bind(_this, -delta), false);
        var cssClasses = className + ' ' + _css_js__WEBPACK_IMPORTED_MODULE_1__.CLASS_UNSELECTABLE + ' ' + _css_js__WEBPACK_IMPORTED_MODULE_1__.CLASS_CONTROL;
        var element = _this.element;
        element.className = cssClasses;
        element.appendChild(inElement);
        element.appendChild(outElement);
        /**
         * @type {number}
         * @private
         */
        _this.duration_ = options.duration !== undefined ? options.duration : 250;
        return _this;
    }
    /**
     * @param {number} delta Zoom delta.
     * @param {MouseEvent} event The event to handle
     * @private
     */
    Zoom.prototype.handleClick_ = function (delta, event) {
        event.preventDefault();
        this.zoomByDelta_(delta);
    };
    /**
     * @param {number} delta Zoom delta.
     * @private
     */
    Zoom.prototype.zoomByDelta_ = function (delta) {
        var map = this.getMap();
        var view = map.getView();
        if (!view) {
            // the map does not have a view, so we can't act
            // upon it
            return;
        }
        var currentZoom = view.getZoom();
        if (currentZoom !== undefined) {
            var newZoom = view.getConstrainedZoom(currentZoom + delta);
            if (this.duration_ > 0) {
                if (view.getAnimating()) {
                    view.cancelAnimations();
                }
                view.animate({
                    zoom: newZoom,
                    duration: this.duration_,
                    easing: _easing_js__WEBPACK_IMPORTED_MODULE_2__.easeOut,
                });
            }
            else {
                view.setZoom(newZoom);
            }
        }
    };
    return Zoom;
}(_Control_js__WEBPACK_IMPORTED_MODULE_3__.default));
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Zoom);
//# sourceMappingURL=Zoom.js.map

/***/ }),

/***/ "./node_modules/ol/control/ZoomSlider.js":
/*!***********************************************!*\
  !*** ./node_modules/ol/control/ZoomSlider.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _Control_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./Control.js */ "./node_modules/ol/control/Control.js");
/* harmony import */ var _events_EventType_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../events/EventType.js */ "./node_modules/ol/events/EventType.js");
/* harmony import */ var _pointer_EventType_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../pointer/EventType.js */ "./node_modules/ol/pointer/EventType.js");
/* harmony import */ var _css_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../css.js */ "./node_modules/ol/css.js");
/* harmony import */ var _math_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../math.js */ "./node_modules/ol/math.js");
/* harmony import */ var _easing_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../easing.js */ "./node_modules/ol/easing.js");
/* harmony import */ var _events_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../events.js */ "./node_modules/ol/events.js");
/* harmony import */ var _events_Event_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../events/Event.js */ "./node_modules/ol/events/Event.js");
/**
 * @module ol/control/ZoomSlider
 */
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();








/**
 * The enum for available directions.
 *
 * @enum {number}
 */
var Direction = {
    VERTICAL: 0,
    HORIZONTAL: 1,
};
/**
 * @typedef {Object} Options
 * @property {string} [className='ol-zoomslider'] CSS class name.
 * @property {number} [duration=200] Animation duration in milliseconds.
 * @property {function(import("../MapEvent.js").default):void} [render] Function called when the control
 * should be re-rendered. This is called in a `requestAnimationFrame` callback.
 */
/**
 * @classdesc
 * A slider type of control for zooming.
 *
 * Example:
 *
 *     map.addControl(new ZoomSlider());
 *
 * @api
 */
var ZoomSlider = /** @class */ (function (_super) {
    __extends(ZoomSlider, _super);
    /**
     * @param {Options=} opt_options Zoom slider options.
     */
    function ZoomSlider(opt_options) {
        var _this = this;
        var options = opt_options ? opt_options : {};
        _this = _super.call(this, {
            element: document.createElement('div'),
            render: options.render,
        }) || this;
        /**
         * @type {!Array.<import("../events.js").EventsKey>}
         * @private
         */
        _this.dragListenerKeys_ = [];
        /**
         * Will hold the current resolution of the view.
         *
         * @type {number|undefined}
         * @private
         */
        _this.currentResolution_ = undefined;
        /**
         * The direction of the slider. Will be determined from actual display of the
         * container and defaults to Direction.VERTICAL.
         *
         * @type {Direction}
         * @private
         */
        _this.direction_ = Direction.VERTICAL;
        /**
         * @type {boolean}
         * @private
         */
        _this.dragging_;
        /**
         * @type {number}
         * @private
         */
        _this.heightLimit_ = 0;
        /**
         * @type {number}
         * @private
         */
        _this.widthLimit_ = 0;
        /**
         * @type {number|undefined}
         * @private
         */
        _this.startX_;
        /**
         * @type {number|undefined}
         * @private
         */
        _this.startY_;
        /**
         * The calculated thumb size (border box plus margins).  Set when initSlider_
         * is called.
         * @type {import("../size.js").Size}
         * @private
         */
        _this.thumbSize_ = null;
        /**
         * Whether the slider is initialized.
         * @type {boolean}
         * @private
         */
        _this.sliderInitialized_ = false;
        /**
         * @type {number}
         * @private
         */
        _this.duration_ = options.duration !== undefined ? options.duration : 200;
        var className = options.className !== undefined ? options.className : 'ol-zoomslider';
        var thumbElement = document.createElement('button');
        thumbElement.setAttribute('type', 'button');
        thumbElement.className = className + '-thumb ' + _css_js__WEBPACK_IMPORTED_MODULE_0__.CLASS_UNSELECTABLE;
        var containerElement = _this.element;
        containerElement.className =
            className + ' ' + _css_js__WEBPACK_IMPORTED_MODULE_0__.CLASS_UNSELECTABLE + ' ' + _css_js__WEBPACK_IMPORTED_MODULE_0__.CLASS_CONTROL;
        containerElement.appendChild(thumbElement);
        containerElement.addEventListener(_pointer_EventType_js__WEBPACK_IMPORTED_MODULE_1__.default.POINTERDOWN, _this.handleDraggerStart_.bind(_this), false);
        containerElement.addEventListener(_pointer_EventType_js__WEBPACK_IMPORTED_MODULE_1__.default.POINTERMOVE, _this.handleDraggerDrag_.bind(_this), false);
        containerElement.addEventListener(_pointer_EventType_js__WEBPACK_IMPORTED_MODULE_1__.default.POINTERUP, _this.handleDraggerEnd_.bind(_this), false);
        containerElement.addEventListener(_events_EventType_js__WEBPACK_IMPORTED_MODULE_2__.default.CLICK, _this.handleContainerClick_.bind(_this), false);
        thumbElement.addEventListener(_events_EventType_js__WEBPACK_IMPORTED_MODULE_2__.default.CLICK, _events_Event_js__WEBPACK_IMPORTED_MODULE_3__.stopPropagation, false);
        return _this;
    }
    /**
     * Remove the control from its current map and attach it to the new map.
     * Subclasses may set up event handlers to get notified about changes to
     * the map here.
     * @param {import("../PluggableMap.js").default} map Map.
     * @api
     */
    ZoomSlider.prototype.setMap = function (map) {
        _super.prototype.setMap.call(this, map);
        if (map) {
            map.render();
        }
    };
    /**
     * Initializes the slider element. This will determine and set this controls
     * direction_ and also constrain the dragging of the thumb to always be within
     * the bounds of the container.
     *
     * @return {boolean} Initialization successful
     * @private
     */
    ZoomSlider.prototype.initSlider_ = function () {
        var container = this.element;
        var containerWidth = container.offsetWidth;
        var containerHeight = container.offsetHeight;
        if (containerWidth === 0 && containerHeight === 0) {
            return (this.sliderInitialized_ = false);
        }
        var thumb = /** @type {HTMLElement} */ (container.firstElementChild);
        var computedStyle = getComputedStyle(thumb);
        var thumbWidth = thumb.offsetWidth +
            parseFloat(computedStyle['marginRight']) +
            parseFloat(computedStyle['marginLeft']);
        var thumbHeight = thumb.offsetHeight +
            parseFloat(computedStyle['marginTop']) +
            parseFloat(computedStyle['marginBottom']);
        this.thumbSize_ = [thumbWidth, thumbHeight];
        if (containerWidth > containerHeight) {
            this.direction_ = Direction.HORIZONTAL;
            this.widthLimit_ = containerWidth - thumbWidth;
        }
        else {
            this.direction_ = Direction.VERTICAL;
            this.heightLimit_ = containerHeight - thumbHeight;
        }
        return (this.sliderInitialized_ = true);
    };
    /**
     * @param {PointerEvent} event The browser event to handle.
     * @private
     */
    ZoomSlider.prototype.handleContainerClick_ = function (event) {
        var view = this.getMap().getView();
        var relativePosition = this.getRelativePosition_(event.offsetX - this.thumbSize_[0] / 2, event.offsetY - this.thumbSize_[1] / 2);
        var resolution = this.getResolutionForPosition_(relativePosition);
        var zoom = view.getConstrainedZoom(view.getZoomForResolution(resolution));
        view.animateInternal({
            zoom: zoom,
            duration: this.duration_,
            easing: _easing_js__WEBPACK_IMPORTED_MODULE_4__.easeOut,
        });
    };
    /**
     * Handle dragger start events.
     * @param {PointerEvent} event The drag event.
     * @private
     */
    ZoomSlider.prototype.handleDraggerStart_ = function (event) {
        if (!this.dragging_ && event.target === this.element.firstElementChild) {
            var element = /** @type {HTMLElement} */ (this.element
                .firstElementChild);
            this.getMap().getView().beginInteraction();
            this.startX_ = event.clientX - parseFloat(element.style.left);
            this.startY_ = event.clientY - parseFloat(element.style.top);
            this.dragging_ = true;
            if (this.dragListenerKeys_.length === 0) {
                var drag = this.handleDraggerDrag_;
                var end = this.handleDraggerEnd_;
                var doc = this.getMap().getOwnerDocument();
                this.dragListenerKeys_.push((0,_events_js__WEBPACK_IMPORTED_MODULE_5__.listen)(doc, _pointer_EventType_js__WEBPACK_IMPORTED_MODULE_1__.default.POINTERMOVE, drag, this), (0,_events_js__WEBPACK_IMPORTED_MODULE_5__.listen)(doc, _pointer_EventType_js__WEBPACK_IMPORTED_MODULE_1__.default.POINTERUP, end, this));
            }
        }
    };
    /**
     * Handle dragger drag events.
     *
     * @param {PointerEvent} event The drag event.
     * @private
     */
    ZoomSlider.prototype.handleDraggerDrag_ = function (event) {
        if (this.dragging_) {
            var deltaX = event.clientX - this.startX_;
            var deltaY = event.clientY - this.startY_;
            var relativePosition = this.getRelativePosition_(deltaX, deltaY);
            this.currentResolution_ = this.getResolutionForPosition_(relativePosition);
            this.getMap().getView().setResolution(this.currentResolution_);
        }
    };
    /**
     * Handle dragger end events.
     * @param {PointerEvent} event The drag event.
     * @private
     */
    ZoomSlider.prototype.handleDraggerEnd_ = function (event) {
        if (this.dragging_) {
            var view = this.getMap().getView();
            view.endInteraction();
            this.dragging_ = false;
            this.startX_ = undefined;
            this.startY_ = undefined;
            this.dragListenerKeys_.forEach(_events_js__WEBPACK_IMPORTED_MODULE_5__.unlistenByKey);
            this.dragListenerKeys_.length = 0;
        }
    };
    /**
     * Positions the thumb inside its container according to the given resolution.
     *
     * @param {number} res The res.
     * @private
     */
    ZoomSlider.prototype.setThumbPosition_ = function (res) {
        var position = this.getPositionForResolution_(res);
        var thumb = /** @type {HTMLElement} */ (this.element.firstElementChild);
        if (this.direction_ == Direction.HORIZONTAL) {
            thumb.style.left = this.widthLimit_ * position + 'px';
        }
        else {
            thumb.style.top = this.heightLimit_ * position + 'px';
        }
    };
    /**
     * Calculates the relative position of the thumb given x and y offsets.  The
     * relative position scales from 0 to 1.  The x and y offsets are assumed to be
     * in pixel units within the dragger limits.
     *
     * @param {number} x Pixel position relative to the left of the slider.
     * @param {number} y Pixel position relative to the top of the slider.
     * @return {number} The relative position of the thumb.
     * @private
     */
    ZoomSlider.prototype.getRelativePosition_ = function (x, y) {
        var amount;
        if (this.direction_ === Direction.HORIZONTAL) {
            amount = x / this.widthLimit_;
        }
        else {
            amount = y / this.heightLimit_;
        }
        return (0,_math_js__WEBPACK_IMPORTED_MODULE_6__.clamp)(amount, 0, 1);
    };
    /**
     * Calculates the corresponding resolution of the thumb given its relative
     * position (where 0 is the minimum and 1 is the maximum).
     *
     * @param {number} position The relative position of the thumb.
     * @return {number} The corresponding resolution.
     * @private
     */
    ZoomSlider.prototype.getResolutionForPosition_ = function (position) {
        var fn = this.getMap().getView().getResolutionForValueFunction();
        return fn(1 - position);
    };
    /**
     * Determines the relative position of the slider for the given resolution.  A
     * relative position of 0 corresponds to the minimum view resolution.  A
     * relative position of 1 corresponds to the maximum view resolution.
     *
     * @param {number} res The resolution.
     * @return {number} The relative position value (between 0 and 1).
     * @private
     */
    ZoomSlider.prototype.getPositionForResolution_ = function (res) {
        var fn = this.getMap().getView().getValueForResolutionFunction();
        return (0,_math_js__WEBPACK_IMPORTED_MODULE_6__.clamp)(1 - fn(res), 0, 1);
    };
    /**
     * Update the zoomslider element.
     * @param {import("../MapEvent.js").default} mapEvent Map event.
     * @override
     */
    ZoomSlider.prototype.render = function (mapEvent) {
        if (!mapEvent.frameState) {
            return;
        }
        if (!this.sliderInitialized_ && !this.initSlider_()) {
            return;
        }
        var res = mapEvent.frameState.viewState.resolution;
        this.currentResolution_ = res;
        this.setThumbPosition_(res);
    };
    return ZoomSlider;
}(_Control_js__WEBPACK_IMPORTED_MODULE_7__.default));
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (ZoomSlider);
//# sourceMappingURL=ZoomSlider.js.map

/***/ }),

/***/ "./node_modules/ol/control/ZoomToExtent.js":
/*!*************************************************!*\
  !*** ./node_modules/ol/control/ZoomToExtent.js ***!
  \*************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _Control_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Control.js */ "./node_modules/ol/control/Control.js");
/* harmony import */ var _events_EventType_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../events/EventType.js */ "./node_modules/ol/events/EventType.js");
/* harmony import */ var _css_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../css.js */ "./node_modules/ol/css.js");
/* harmony import */ var _geom_Polygon_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../geom/Polygon.js */ "./node_modules/ol/geom/Polygon.js");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
/**
 * @module ol/control/ZoomToExtent
 */




/**
 * @typedef {Object} Options
 * @property {string} [className='ol-zoom-extent'] Class name.
 * @property {HTMLElement|string} [target] Specify a target if you want the control
 * to be rendered outside of the map's viewport.
 * @property {string|HTMLElement} [label='E'] Text label to use for the button.
 * Instead of text, also an element (e.g. a `span` element) can be used.
 * @property {string} [tipLabel='Fit to extent'] Text label to use for the button tip.
 * @property {import("../extent.js").Extent} [extent] The extent to zoom to. If undefined the validity
 * extent of the view projection is used.
 */
/**
 * @classdesc
 * A button control which, when pressed, changes the map view to a specific
 * extent. To style this control use the css selector `.ol-zoom-extent`.
 *
 * @api
 */
var ZoomToExtent = /** @class */ (function (_super) {
    __extends(ZoomToExtent, _super);
    /**
     * @param {Options=} opt_options Options.
     */
    function ZoomToExtent(opt_options) {
        var _this = this;
        var options = opt_options ? opt_options : {};
        _this = _super.call(this, {
            element: document.createElement('div'),
            target: options.target,
        }) || this;
        /**
         * @type {?import("../extent.js").Extent}
         * @protected
         */
        _this.extent = options.extent ? options.extent : null;
        var className = options.className !== undefined ? options.className : 'ol-zoom-extent';
        var label = options.label !== undefined ? options.label : 'E';
        var tipLabel = options.tipLabel !== undefined ? options.tipLabel : 'Fit to extent';
        var button = document.createElement('button');
        button.setAttribute('type', 'button');
        button.title = tipLabel;
        button.appendChild(typeof label === 'string' ? document.createTextNode(label) : label);
        button.addEventListener(_events_EventType_js__WEBPACK_IMPORTED_MODULE_0__.default.CLICK, _this.handleClick_.bind(_this), false);
        var cssClasses = className + ' ' + _css_js__WEBPACK_IMPORTED_MODULE_1__.CLASS_UNSELECTABLE + ' ' + _css_js__WEBPACK_IMPORTED_MODULE_1__.CLASS_CONTROL;
        var element = _this.element;
        element.className = cssClasses;
        element.appendChild(button);
        return _this;
    }
    /**
     * @param {MouseEvent} event The event to handle
     * @private
     */
    ZoomToExtent.prototype.handleClick_ = function (event) {
        event.preventDefault();
        this.handleZoomToExtent();
    };
    /**
     * @protected
     */
    ZoomToExtent.prototype.handleZoomToExtent = function () {
        var map = this.getMap();
        var view = map.getView();
        var extent = !this.extent
            ? view.getProjection().getExtent()
            : this.extent;
        view.fitInternal((0,_geom_Polygon_js__WEBPACK_IMPORTED_MODULE_2__.fromExtent)(extent));
    };
    return ZoomToExtent;
}(_Control_js__WEBPACK_IMPORTED_MODULE_3__.default));
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (ZoomToExtent);
//# sourceMappingURL=ZoomToExtent.js.map

/***/ }),

/***/ "./node_modules/ol/coordinate.js":
/*!***************************************!*\
  !*** ./node_modules/ol/coordinate.js ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "add": () => (/* binding */ add),
/* harmony export */   "closestOnCircle": () => (/* binding */ closestOnCircle),
/* harmony export */   "closestOnSegment": () => (/* binding */ closestOnSegment),
/* harmony export */   "createStringXY": () => (/* binding */ createStringXY),
/* harmony export */   "degreesToStringHDMS": () => (/* binding */ degreesToStringHDMS),
/* harmony export */   "format": () => (/* binding */ format),
/* harmony export */   "equals": () => (/* binding */ equals),
/* harmony export */   "rotate": () => (/* binding */ rotate),
/* harmony export */   "scale": () => (/* binding */ scale),
/* harmony export */   "squaredDistance": () => (/* binding */ squaredDistance),
/* harmony export */   "distance": () => (/* binding */ distance),
/* harmony export */   "squaredDistanceToSegment": () => (/* binding */ squaredDistanceToSegment),
/* harmony export */   "toStringHDMS": () => (/* binding */ toStringHDMS),
/* harmony export */   "toStringXY": () => (/* binding */ toStringXY),
/* harmony export */   "wrapX": () => (/* binding */ wrapX),
/* harmony export */   "getWorldsAway": () => (/* binding */ getWorldsAway)
/* harmony export */ });
/* harmony import */ var _extent_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./extent.js */ "./node_modules/ol/extent.js");
/* harmony import */ var _math_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./math.js */ "./node_modules/ol/math.js");
/* harmony import */ var _string_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./string.js */ "./node_modules/ol/string.js");
/**
 * @module ol/coordinate
 */



/**
 * An array of numbers representing an xy coordinate. Example: `[16, 48]`.
 * @typedef {Array<number>} Coordinate
 * @api
 */
/**
 * A function that takes a {@link module:ol/coordinate~Coordinate} and
 * transforms it into a `{string}`.
 *
 * @typedef {function((Coordinate|undefined)): string} CoordinateFormat
 * @api
 */
/**
 * Add `delta` to `coordinate`. `coordinate` is modified in place and returned
 * by the function.
 *
 * Example:
 *
 *     import {add} from 'ol/coordinate';
 *
 *     var coord = [7.85, 47.983333];
 *     add(coord, [-2, 4]);
 *     // coord is now [5.85, 51.983333]
 *
 * @param {Coordinate} coordinate Coordinate.
 * @param {Coordinate} delta Delta.
 * @return {Coordinate} The input coordinate adjusted by
 * the given delta.
 * @api
 */
function add(coordinate, delta) {
    coordinate[0] += +delta[0];
    coordinate[1] += +delta[1];
    return coordinate;
}
/**
 * Calculates the point closest to the passed coordinate on the passed circle.
 *
 * @param {Coordinate} coordinate The coordinate.
 * @param {import("./geom/Circle.js").default} circle The circle.
 * @return {Coordinate} Closest point on the circumference.
 */
function closestOnCircle(coordinate, circle) {
    var r = circle.getRadius();
    var center = circle.getCenter();
    var x0 = center[0];
    var y0 = center[1];
    var x1 = coordinate[0];
    var y1 = coordinate[1];
    var dx = x1 - x0;
    var dy = y1 - y0;
    if (dx === 0 && dy === 0) {
        dx = 1;
    }
    var d = Math.sqrt(dx * dx + dy * dy);
    var x = x0 + (r * dx) / d;
    var y = y0 + (r * dy) / d;
    return [x, y];
}
/**
 * Calculates the point closest to the passed coordinate on the passed segment.
 * This is the foot of the perpendicular of the coordinate to the segment when
 * the foot is on the segment, or the closest segment coordinate when the foot
 * is outside the segment.
 *
 * @param {Coordinate} coordinate The coordinate.
 * @param {Array<Coordinate>} segment The two coordinates
 * of the segment.
 * @return {Coordinate} The foot of the perpendicular of
 * the coordinate to the segment.
 */
function closestOnSegment(coordinate, segment) {
    var x0 = coordinate[0];
    var y0 = coordinate[1];
    var start = segment[0];
    var end = segment[1];
    var x1 = start[0];
    var y1 = start[1];
    var x2 = end[0];
    var y2 = end[1];
    var dx = x2 - x1;
    var dy = y2 - y1;
    var along = dx === 0 && dy === 0
        ? 0
        : (dx * (x0 - x1) + dy * (y0 - y1)) / (dx * dx + dy * dy || 0);
    var x, y;
    if (along <= 0) {
        x = x1;
        y = y1;
    }
    else if (along >= 1) {
        x = x2;
        y = y2;
    }
    else {
        x = x1 + along * dx;
        y = y1 + along * dy;
    }
    return [x, y];
}
/**
 * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be
 * used to format
 * a {Coordinate} to a string.
 *
 * Example without specifying the fractional digits:
 *
 *     import {createStringXY} from 'ol/coordinate';
 *
 *     var coord = [7.85, 47.983333];
 *     var stringifyFunc = createStringXY();
 *     var out = stringifyFunc(coord);
 *     // out is now '8, 48'
 *
 * Example with explicitly specifying 2 fractional digits:
 *
 *     import {createStringXY} from 'ol/coordinate';
 *
 *     var coord = [7.85, 47.983333];
 *     var stringifyFunc = createStringXY(2);
 *     var out = stringifyFunc(coord);
 *     // out is now '7.85, 47.98'
 *
 * @param {number=} opt_fractionDigits The number of digits to include
 *    after the decimal point. Default is `0`.
 * @return {CoordinateFormat} Coordinate format.
 * @api
 */
function createStringXY(opt_fractionDigits) {
    return (
    /**
     * @param {Coordinate} coordinate Coordinate.
     * @return {string} String XY.
     */
    function (coordinate) {
        return toStringXY(coordinate, opt_fractionDigits);
    });
}
/**
 * @param {string} hemispheres Hemispheres.
 * @param {number} degrees Degrees.
 * @param {number=} opt_fractionDigits The number of digits to include
 *    after the decimal point. Default is `0`.
 * @return {string} String.
 */
function degreesToStringHDMS(hemispheres, degrees, opt_fractionDigits) {
    var normalizedDegrees = (0,_math_js__WEBPACK_IMPORTED_MODULE_0__.modulo)(degrees + 180, 360) - 180;
    var x = Math.abs(3600 * normalizedDegrees);
    var dflPrecision = opt_fractionDigits || 0;
    var precision = Math.pow(10, dflPrecision);
    var deg = Math.floor(x / 3600);
    var min = Math.floor((x - deg * 3600) / 60);
    var sec = x - deg * 3600 - min * 60;
    sec = Math.ceil(sec * precision) / precision;
    if (sec >= 60) {
        sec = 0;
        min += 1;
    }
    if (min >= 60) {
        min = 0;
        deg += 1;
    }
    return (deg +
        '\u00b0 ' +
        (0,_string_js__WEBPACK_IMPORTED_MODULE_1__.padNumber)(min, 2) +
        '\u2032 ' +
        (0,_string_js__WEBPACK_IMPORTED_MODULE_1__.padNumber)(sec, 2, dflPrecision) +
        '\u2033' +
        (normalizedDegrees == 0
            ? ''
            : ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0)));
}
/**
 * Transforms the given {@link module:ol/coordinate~Coordinate} to a string
 * using the given string template. The strings `{x}` and `{y}` in the template
 * will be replaced with the first and second coordinate values respectively.
 *
 * Example without specifying the fractional digits:
 *
 *     import {format} from 'ol/coordinate';
 *
 *     var coord = [7.85, 47.983333];
 *     var template = 'Coordinate is ({x}|{y}).';
 *     var out = format(coord, template);
 *     // out is now 'Coordinate is (8|48).'
 *
 * Example explicitly specifying the fractional digits:
 *
 *     import {format} from 'ol/coordinate';
 *
 *     var coord = [7.85, 47.983333];
 *     var template = 'Coordinate is ({x}|{y}).';
 *     var out = format(coord, template, 2);
 *     // out is now 'Coordinate is (7.85|47.98).'
 *
 * @param {Coordinate} coordinate Coordinate.
 * @param {string} template A template string with `{x}` and `{y}` placeholders
 *     that will be replaced by first and second coordinate values.
 * @param {number=} opt_fractionDigits The number of digits to include
 *    after the decimal point. Default is `0`.
 * @return {string} Formatted coordinate.
 * @api
 */
function format(coordinate, template, opt_fractionDigits) {
    if (coordinate) {
        return template
            .replace('{x}', coordinate[0].toFixed(opt_fractionDigits))
            .replace('{y}', coordinate[1].toFixed(opt_fractionDigits));
    }
    else {
        return '';
    }
}
/**
 * @param {Coordinate} coordinate1 First coordinate.
 * @param {Coordinate} coordinate2 Second coordinate.
 * @return {boolean} The two coordinates are equal.
 */
function equals(coordinate1, coordinate2) {
    var equals = true;
    for (var i = coordinate1.length - 1; i >= 0; --i) {
        if (coordinate1[i] != coordinate2[i]) {
            equals = false;
            break;
        }
    }
    return equals;
}
/**
 * Rotate `coordinate` by `angle`. `coordinate` is modified in place and
 * returned by the function.
 *
 * Example:
 *
 *     import {rotate} from 'ol/coordinate';
 *
 *     var coord = [7.85, 47.983333];
 *     var rotateRadians = Math.PI / 2; // 90 degrees
 *     rotate(coord, rotateRadians);
 *     // coord is now [-47.983333, 7.85]
 *
 * @param {Coordinate} coordinate Coordinate.
 * @param {number} angle Angle in radian.
 * @return {Coordinate} Coordinate.
 * @api
 */
function rotate(coordinate, angle) {
    var cosAngle = Math.cos(angle);
    var sinAngle = Math.sin(angle);
    var x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;
    var y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;
    coordinate[0] = x;
    coordinate[1] = y;
    return coordinate;
}
/**
 * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned
 * by the function.
 *
 * Example:
 *
 *     import {scale as scaleCoordinate} from 'ol/coordinate';
 *
 *     var coord = [7.85, 47.983333];
 *     var scale = 1.2;
 *     scaleCoordinate(coord, scale);
 *     // coord is now [9.42, 57.5799996]
 *
 * @param {Coordinate} coordinate Coordinate.
 * @param {number} scale Scale factor.
 * @return {Coordinate} Coordinate.
 */
function scale(coordinate, scale) {
    coordinate[0] *= scale;
    coordinate[1] *= scale;
    return coordinate;
}
/**
 * @param {Coordinate} coord1 First coordinate.
 * @param {Coordinate} coord2 Second coordinate.
 * @return {number} Squared distance between coord1 and coord2.
 */
function squaredDistance(coord1, coord2) {
    var dx = coord1[0] - coord2[0];
    var dy = coord1[1] - coord2[1];
    return dx * dx + dy * dy;
}
/**
 * @param {Coordinate} coord1 First coordinate.
 * @param {Coordinate} coord2 Second coordinate.
 * @return {number} Distance between coord1 and coord2.
 */
function distance(coord1, coord2) {
    return Math.sqrt(squaredDistance(coord1, coord2));
}
/**
 * Calculate the squared distance from a coordinate to a line segment.
 *
 * @param {Coordinate} coordinate Coordinate of the point.
 * @param {Array<Coordinate>} segment Line segment (2
 * coordinates).
 * @return {number} Squared distance from the point to the line segment.
 */
function squaredDistanceToSegment(coordinate, segment) {
    return squaredDistance(coordinate, closestOnSegment(coordinate, segment));
}
/**
 * Format a geographic coordinate with the hemisphere, degrees, minutes, and
 * seconds.
 *
 * Example without specifying fractional digits:
 *
 *     import {toStringHDMS} from 'ol/coordinate';
 *
 *     var coord = [7.85, 47.983333];
 *     var out = toStringHDMS(coord);
 *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'
 *
 * Example explicitly specifying 1 fractional digit:
 *
 *     import {toStringHDMS} from 'ol/coordinate';
 *
 *     var coord = [7.85, 47.983333];
 *     var out = toStringHDMS(coord, 1);
 *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'
 *
 * @param {Coordinate} coordinate Coordinate.
 * @param {number=} opt_fractionDigits The number of digits to include
 *    after the decimal point. Default is `0`.
 * @return {string} Hemisphere, degrees, minutes and seconds.
 * @api
 */
function toStringHDMS(coordinate, opt_fractionDigits) {
    if (coordinate) {
        return (degreesToStringHDMS('NS', coordinate[1], opt_fractionDigits) +
            ' ' +
            degreesToStringHDMS('EW', coordinate[0], opt_fractionDigits));
    }
    else {
        return '';
    }
}
/**
 * Format a coordinate as a comma delimited string.
 *
 * Example without specifying fractional digits:
 *
 *     import {toStringXY} from 'ol/coordinate';
 *
 *     var coord = [7.85, 47.983333];
 *     var out = toStringXY(coord);
 *     // out is now '8, 48'
 *
 * Example explicitly specifying 1 fractional digit:
 *
 *     import {toStringXY} from 'ol/coordinate';
 *
 *     var coord = [7.85, 47.983333];
 *     var out = toStringXY(coord, 1);
 *     // out is now '7.8, 48.0'
 *
 * @param {Coordinate} coordinate Coordinate.
 * @param {number=} opt_fractionDigits The number of digits to include
 *    after the decimal point. Default is `0`.
 * @return {string} XY.
 * @api
 */
function toStringXY(coordinate, opt_fractionDigits) {
    return format(coordinate, '{x}, {y}', opt_fractionDigits);
}
/**
 * Modifies the provided coordinate in-place to be within the real world
 * extent. The lower projection extent boundary is inclusive, the upper one
 * exclusive.
 *
 * @param {Coordinate} coordinate Coordinate.
 * @param {import("./proj/Projection.js").default} projection Projection.
 * @return {Coordinate} The coordinate within the real world extent.
 */
function wrapX(coordinate, projection) {
    if (projection.canWrapX()) {
        var worldWidth = (0,_extent_js__WEBPACK_IMPORTED_MODULE_2__.getWidth)(projection.getExtent());
        var worldsAway = getWorldsAway(coordinate, projection, worldWidth);
        if (worldsAway) {
            coordinate[0] -= worldsAway * worldWidth;
        }
    }
    return coordinate;
}
/**
 * @param {Coordinate} coordinate Coordinate.
 * @param {import("./proj/Projection.js").default} projection Projection.
 * @param {number=} opt_sourceExtentWidth Width of the source extent.
 * @return {number} Offset in world widths.
 */
function getWorldsAway(coordinate, projection, opt_sourceExtentWidth) {
    var projectionExtent = projection.getExtent();
    var worldsAway = 0;
    if (projection.canWrapX() &&
        (coordinate[0] < projectionExtent[0] || coordinate[0] > projectionExtent[2])) {
        var sourceExtentWidth = opt_sourceExtentWidth || (0,_extent_js__WEBPACK_IMPORTED_MODULE_2__.getWidth)(projectionExtent);
        worldsAway = Math.floor((coordinate[0] - projectionExtent[0]) / sourceExtentWidth);
    }
    return worldsAway;
}
//# sourceMappingURL=coordinate.js.map

/***/ }),

/***/ "./node_modules/ol/css.js":
/*!********************************!*\
  !*** ./node_modules/ol/css.js ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "CLASS_HIDDEN": () => (/* binding */ CLASS_HIDDEN),
/* harmony export */   "CLASS_SELECTABLE": () => (/* binding */ CLASS_SELECTABLE),
/* harmony export */   "CLASS_UNSELECTABLE": () => (/* binding */ CLASS_UNSELECTABLE),
/* harmony export */   "CLASS_UNSUPPORTED": () => (/* binding */ CLASS_UNSUPPORTED),
/* harmony export */   "CLASS_CONTROL": () => (/* binding */ CLASS_CONTROL),
/* harmony export */   "CLASS_COLLAPSED": () => (/* binding */ CLASS_COLLAPSED),
/* harmony export */   "getFontParameters": () => (/* binding */ getFontParameters)
/* harmony export */ });
/**
 * @module ol/css
 */
/**
 * @typedef {Object} FontParameters
 * @property {string} style
 * @property {string} variant
 * @property {string} weight
 * @property {string} size
 * @property {string} lineHeight
 * @property {string} family
 * @property {Array<string>} families
 */
/**
 * The CSS class for hidden feature.
 *
 * @const
 * @type {string}
 */
var CLASS_HIDDEN = 'ol-hidden';
/**
 * The CSS class that we'll give the DOM elements to have them selectable.
 *
 * @const
 * @type {string}
 */
var CLASS_SELECTABLE = 'ol-selectable';
/**
 * The CSS class that we'll give the DOM elements to have them unselectable.
 *
 * @const
 * @type {string}
 */
var CLASS_UNSELECTABLE = 'ol-unselectable';
/**
 * The CSS class for unsupported feature.
 *
 * @const
 * @type {string}
 */
var CLASS_UNSUPPORTED = 'ol-unsupported';
/**
 * The CSS class for controls.
 *
 * @const
 * @type {string}
 */
var CLASS_CONTROL = 'ol-control';
/**
 * The CSS class that we'll give the DOM elements that are collapsed, i.e.
 * to those elements which usually can be expanded.
 *
 * @const
 * @type {string}
 */
var CLASS_COLLAPSED = 'ol-collapsed';
/**
 * From http://stackoverflow.com/questions/10135697/regex-to-parse-any-css-font
 * @type {RegExp}
 */
var fontRegEx = new RegExp([
    '^\\s*(?=(?:(?:[-a-z]+\\s*){0,2}(italic|oblique))?)',
    '(?=(?:(?:[-a-z]+\\s*){0,2}(small-caps))?)',
    '(?=(?:(?:[-a-z]+\\s*){0,2}(bold(?:er)?|lighter|[1-9]00 ))?)',
    '(?:(?:normal|\\1|\\2|\\3)\\s*){0,3}((?:xx?-)?',
    '(?:small|large)|medium|smaller|larger|[\\.\\d]+(?:\\%|in|[cem]m|ex|p[ctx]))',
    '(?:\\s*\\/\\s*(normal|[\\.\\d]+(?:\\%|in|[cem]m|ex|p[ctx])?))',
    '?\\s*([-,\\"\\\'\\sa-z]+?)\\s*$',
].join(''), 'i');
var fontRegExMatchIndex = [
    'style',
    'variant',
    'weight',
    'size',
    'lineHeight',
    'family',
];
/**
 * Get the list of font families from a font spec.  Note that this doesn't work
 * for font families that have commas in them.
 * @param {string} fontSpec The CSS font property.
 * @return {FontParameters} The font parameters (or null if the input spec is invalid).
 */
var getFontParameters = function (fontSpec) {
    var match = fontSpec.match(fontRegEx);
    if (!match) {
        return null;
    }
    var style = /** @type {FontParameters} */ ({
        lineHeight: 'normal',
        size: '1.2em',
        style: 'normal',
        weight: 'normal',
        variant: 'normal',
    });
    for (var i = 0, ii = fontRegExMatchIndex.length; i < ii; ++i) {
        var value = match[i + 1];
        if (value !== undefined) {
            style[fontRegExMatchIndex[i]] = value;
        }
    }
    style.families = style.family.split(/,\s?/);
    return style;
};
//# sourceMappingURL=css.js.map

/***/ }),

/***/ "./node_modules/ol/dom.js":
/*!********************************!*\
  !*** ./node_modules/ol/dom.js ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createCanvasContext2D": () => (/* binding */ createCanvasContext2D),
/* harmony export */   "outerWidth": () => (/* binding */ outerWidth),
/* harmony export */   "outerHeight": () => (/* binding */ outerHeight),
/* harmony export */   "replaceNode": () => (/* binding */ replaceNode),
/* harmony export */   "removeNode": () => (/* binding */ removeNode),
/* harmony export */   "removeChildren": () => (/* binding */ removeChildren),
/* harmony export */   "replaceChildren": () => (/* binding */ replaceChildren)
/* harmony export */ });
/* harmony import */ var _has_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./has.js */ "./node_modules/ol/has.js");

/**
 * @module ol/dom
 */
//FIXME Move this function to the canvas module
/**
 * Create an html canvas element and returns its 2d context.
 * @param {number=} opt_width Canvas width.
 * @param {number=} opt_height Canvas height.
 * @param {Array<HTMLCanvasElement>=} opt_canvasPool Canvas pool to take existing canvas from.
 * @return {CanvasRenderingContext2D} The context.
 */
function createCanvasContext2D(opt_width, opt_height, opt_canvasPool) {
    var canvas = opt_canvasPool && opt_canvasPool.length
        ? opt_canvasPool.shift()
        : _has_js__WEBPACK_IMPORTED_MODULE_0__.WORKER_OFFSCREEN_CANVAS
            ? new OffscreenCanvas(opt_width || 300, opt_height || 300)
            : document.createElement('canvas');
    if (opt_width) {
        canvas.width = opt_width;
    }
    if (opt_height) {
        canvas.height = opt_height;
    }
    //FIXME Allow OffscreenCanvasRenderingContext2D as return type
    return /** @type {CanvasRenderingContext2D} */ (canvas.getContext('2d'));
}
/**
 * Get the current computed width for the given element including margin,
 * padding and border.
 * Equivalent to jQuery's `$(el).outerWidth(true)`.
 * @param {!HTMLElement} element Element.
 * @return {number} The width.
 */
function outerWidth(element) {
    var width = element.offsetWidth;
    var style = getComputedStyle(element);
    width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);
    return width;
}
/**
 * Get the current computed height for the given element including margin,
 * padding and border.
 * Equivalent to jQuery's `$(el).outerHeight(true)`.
 * @param {!HTMLElement} element Element.
 * @return {number} The height.
 */
function outerHeight(element) {
    var height = element.offsetHeight;
    var style = getComputedStyle(element);
    height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);
    return height;
}
/**
 * @param {Node} newNode Node to replace old node
 * @param {Node} oldNode The node to be replaced
 */
function replaceNode(newNode, oldNode) {
    var parent = oldNode.parentNode;
    if (parent) {
        parent.replaceChild(newNode, oldNode);
    }
}
/**
 * @param {Node} node The node to remove.
 * @returns {Node} The node that was removed or null.
 */
function removeNode(node) {
    return node && node.parentNode ? node.parentNode.removeChild(node) : null;
}
/**
 * @param {Node} node The node to remove the children from.
 */
function removeChildren(node) {
    while (node.lastChild) {
        node.removeChild(node.lastChild);
    }
}
/**
 * Transform the children of a parent node so they match the
 * provided list of children.  This function aims to efficiently
 * remove, add, and reorder child nodes while maintaining a simple
 * implementation (it is not guaranteed to minimize DOM operations).
 * @param {Node} node The parent node whose children need reworking.
 * @param {Array<Node>} children The desired children.
 */
function replaceChildren(node, children) {
    var oldChildren = node.childNodes;
    for (var i = 0; true; ++i) {
        var oldChild = oldChildren[i];
        var newChild = children[i];
        // check if our work is done
        if (!oldChild && !newChild) {
            break;
        }
        // check if children match
        if (oldChild === newChild) {
            continue;
        }
        // check if a new child needs to be added
        if (!oldChild) {
            node.appendChild(newChild);
            continue;
        }
        // check if an old child needs to be removed
        if (!newChild) {
            node.removeChild(oldChild);
            --i;
            continue;
        }
        // reorder
        node.insertBefore(newChild, oldChild);
    }
}
//# sourceMappingURL=dom.js.map

/***/ }),

/***/ "./node_modules/ol/easing.js":
/*!***********************************!*\
  !*** ./node_modules/ol/easing.js ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "easeIn": () => (/* binding */ easeIn),
/* harmony export */   "easeOut": () => (/* binding */ easeOut),
/* harmony export */   "inAndOut": () => (/* binding */ inAndOut),
/* harmony export */   "linear": () => (/* binding */ linear),
/* harmony export */   "upAndDown": () => (/* binding */ upAndDown)
/* harmony export */ });
/**
 * @module ol/easing
 */
/**
 * Start slow and speed up.
 * @param {number} t Input between 0 and 1.
 * @return {number} Output between 0 and 1.
 * @api
 */
function easeIn(t) {
    return Math.pow(t, 3);
}
/**
 * Start fast and slow down.
 * @param {number} t Input between 0 and 1.
 * @return {number} Output between 0 and 1.
 * @api
 */
function easeOut(t) {
    return 1 - easeIn(1 - t);
}
/**
 * Start slow, speed up, and then slow down again.
 * @param {number} t Input between 0 and 1.
 * @return {number} Output between 0 and 1.
 * @api
 */
function inAndOut(t) {
    return 3 * t * t - 2 * t * t * t;
}
/**
 * Maintain a constant speed over time.
 * @param {number} t Input between 0 and 1.
 * @return {number} Output between 0 and 1.
 * @api
 */
function linear(t) {
    return t;
}
/**
 * Start slow, speed up, and at the very end slow down again.  This has the
 * same general behavior as {@link module:ol/easing~inAndOut}, but the final
 * slowdown is delayed.
 * @param {number} t Input between 0 and 1.
 * @return {number} Output between 0 and 1.
 * @api
 */
function upAndDown(t) {
    if (t < 0.5) {
        return inAndOut(2 * t);
    }
    else {
        return 1 - inAndOut(2 * (t - 0.5));
    }
}
//# sourceMappingURL=easing.js.map

/***/ }),

/***/ "./node_modules/ol/events.js":
/*!***********************************!*\
  !*** ./node_modules/ol/events.js ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "listen": () => (/* binding */ listen),
/* harmony export */   "listenOnce": () => (/* binding */ listenOnce),
/* harmony export */   "unlistenByKey": () => (/* binding */ unlistenByKey)
/* harmony export */ });
/* harmony import */ var _obj_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./obj.js */ "./node_modules/ol/obj.js");
/**
 * @module ol/events
 */

/**
 * Key to use with {@link module:ol/Observable~Observable#unByKey}.
 * @typedef {Object} EventsKey
 * @property {ListenerFunction} listener
 * @property {import("./events/Target.js").EventTargetLike} target
 * @property {string} type
 * @api
 */
/**
 * Listener function. This function is called with an event object as argument.
 * When the function returns `false`, event propagation will stop.
 *
 * @typedef {function((Event|import("./events/Event.js").default)): (void|boolean)} ListenerFunction
 * @api
 */
/**
 * @typedef {Object} ListenerObject
 * @property {ListenerFunction} handleEvent
 */
/**
 * @typedef {ListenerFunction|ListenerObject} Listener
 */
/**
 * Registers an event listener on an event target. Inspired by
 * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html
 *
 * This function efficiently binds a `listener` to a `this` object, and returns
 * a key for use with {@link module:ol/events~unlistenByKey}.
 *
 * @param {import("./events/Target.js").EventTargetLike} target Event target.
 * @param {string} type Event type.
 * @param {ListenerFunction} listener Listener.
 * @param {Object=} opt_this Object referenced by the `this` keyword in the
 *     listener. Default is the `target`.
 * @param {boolean=} opt_once If true, add the listener as one-off listener.
 * @return {EventsKey} Unique key for the listener.
 */
function listen(target, type, listener, opt_this, opt_once) {
    if (opt_this && opt_this !== target) {
        listener = listener.bind(opt_this);
    }
    if (opt_once) {
        var originalListener_1 = listener;
        listener = function () {
            target.removeEventListener(type, listener);
            originalListener_1.apply(this, arguments);
        };
    }
    var eventsKey = {
        target: target,
        type: type,
        listener: listener,
    };
    target.addEventListener(type, listener);
    return eventsKey;
}
/**
 * Registers a one-off event listener on an event target. Inspired by
 * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html
 *
 * This function efficiently binds a `listener` as self-unregistering listener
 * to a `this` object, and returns a key for use with
 * {@link module:ol/events~unlistenByKey} in case the listener needs to be
 * unregistered before it is called.
 *
 * When {@link module:ol/events~listen} is called with the same arguments after this
 * function, the self-unregistering listener will be turned into a permanent
 * listener.
 *
 * @param {import("./events/Target.js").EventTargetLike} target Event target.
 * @param {string} type Event type.
 * @param {ListenerFunction} listener Listener.
 * @param {Object=} opt_this Object referenced by the `this` keyword in the
 *     listener. Default is the `target`.
 * @return {EventsKey} Key for unlistenByKey.
 */
function listenOnce(target, type, listener, opt_this) {
    return listen(target, type, listener, opt_this, true);
}
/**
 * Unregisters event listeners on an event target. Inspired by
 * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html
 *
 * The argument passed to this function is the key returned from
 * {@link module:ol/events~listen} or {@link module:ol/events~listenOnce}.
 *
 * @param {EventsKey} key The key.
 */
function unlistenByKey(key) {
    if (key && key.target) {
        key.target.removeEventListener(key.type, key.listener);
        (0,_obj_js__WEBPACK_IMPORTED_MODULE_0__.clear)(key);
    }
}
//# sourceMappingURL=events.js.map

/***/ }),

/***/ "./node_modules/ol/events/Event.js":
/*!*****************************************!*\
  !*** ./node_modules/ol/events/Event.js ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "stopPropagation": () => (/* binding */ stopPropagation),
/* harmony export */   "preventDefault": () => (/* binding */ preventDefault),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/**
 * @module ol/events/Event
 */
/**
 * @classdesc
 * Stripped down implementation of the W3C DOM Level 2 Event interface.
 * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.
 *
 * This implementation only provides `type` and `target` properties, and
 * `stopPropagation` and `preventDefault` methods. It is meant as base class
 * for higher level events defined in the library, and works with
 * {@link module:ol/events/Target~Target}.
 */
var BaseEvent = /** @class */ (function () {
    /**
     * @param {string} type Type.
     */
    function BaseEvent(type) {
        /**
         * @type {boolean}
         */
        this.propagationStopped;
        /**
         * The event type.
         * @type {string}
         * @api
         */
        this.type = type;
        /**
         * The event target.
         * @type {Object}
         * @api
         */
        this.target = null;
    }
    /**
     * Stop event propagation.
     * @api
     */
    BaseEvent.prototype.preventDefault = function () {
        this.propagationStopped = true;
    };
    /**
     * Stop event propagation.
     * @api
     */
    BaseEvent.prototype.stopPropagation = function () {
        this.propagationStopped = true;
    };
    return BaseEvent;
}());
/**
 * @param {Event|import("./Event.js").default} evt Event
 */
function stopPropagation(evt) {
    evt.stopPropagation();
}
/**
 * @param {Event|import("./Event.js").default} evt Event
 */
function preventDefault(evt) {
    evt.preventDefault();
}
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (BaseEvent);
//# sourceMappingURL=Event.js.map

/***/ }),

/***/ "./node_modules/ol/events/EventType.js":
/*!*********************************************!*\
  !*** ./node_modules/ol/events/EventType.js ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/**
 * @module ol/events/EventType
 */
/**
 * @enum {string}
 * @const
 */
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
    /**
     * Generic change event. Triggered when the revision counter is increased.
     * @event module:ol/events/Event~BaseEvent#change
     * @api
     */
    CHANGE: 'change',
    /**
     * Generic error event. Triggered when an error occurs.
     * @event module:ol/events/Event~BaseEvent#error
     * @api
     */
    ERROR: 'error',
    BLUR: 'blur',
    CLEAR: 'clear',
    CONTEXTMENU: 'contextmenu',
    CLICK: 'click',
    DBLCLICK: 'dblclick',
    DRAGENTER: 'dragenter',
    DRAGOVER: 'dragover',
    DROP: 'drop',
    FOCUS: 'focus',
    KEYDOWN: 'keydown',
    KEYPRESS: 'keypress',
    LOAD: 'load',
    RESIZE: 'resize',
    TOUCHMOVE: 'touchmove',
    WHEEL: 'wheel',
});
//# sourceMappingURL=EventType.js.map

/***/ }),

/***/ "./node_modules/ol/events/KeyCode.js":
/*!*******************************************!*\
  !*** ./node_modules/ol/events/KeyCode.js ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/**
 * @module ol/events/KeyCode
 */
/**
 * @enum {number}
 * @const
 */
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
    LEFT: 37,
    UP: 38,
    RIGHT: 39,
    DOWN: 40,
});
//# sourceMappingURL=KeyCode.js.map

/***/ }),

/***/ "./node_modules/ol/events/Target.js":
/*!******************************************!*\
  !*** ./node_modules/ol/events/Target.js ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _Disposable_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../Disposable.js */ "./node_modules/ol/Disposable.js");
/* harmony import */ var _Event_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Event.js */ "./node_modules/ol/events/Event.js");
/* harmony import */ var _functions_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../functions.js */ "./node_modules/ol/functions.js");
/* harmony import */ var _obj_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../obj.js */ "./node_modules/ol/obj.js");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
/**
 * @module ol/events/Target
 */




/**
 * @typedef {EventTarget|Target} EventTargetLike
 */
/**
 * @classdesc
 * A simplified implementation of the W3C DOM Level 2 EventTarget interface.
 * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.
 *
 * There are two important simplifications compared to the specification:
 *
 * 1. The handling of `useCapture` in `addEventListener` and
 *    `removeEventListener`. There is no real capture model.
 * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.
 *    There is no event target hierarchy. When a listener calls
 *    `stopPropagation` or `preventDefault` on an event object, it means that no
 *    more listeners after this one will be called. Same as when the listener
 *    returns false.
 */
var Target = /** @class */ (function (_super) {
    __extends(Target, _super);
    /**
     * @param {*=} opt_target Default event target for dispatched events.
     */
    function Target(opt_target) {
        var _this = _super.call(this) || this;
        /**
         * @private
         * @type {*}
         */
        _this.eventTarget_ = opt_target;
        /**
         * @private
         * @type {Object<string, number>}
         */
        _this.pendingRemovals_ = null;
        /**
         * @private
         * @type {Object<string, number>}
         */
        _this.dispatching_ = null;
        /**
         * @private
         * @type {Object<string, Array<import("../events.js").Listener>>}
         */
        _this.listeners_ = null;
        return _this;
    }
    /**
     * @param {string} type Type.
     * @param {import("../events.js").Listener} listener Listener.
     */
    Target.prototype.addEventListener = function (type, listener) {
        if (!type || !listener) {
            return;
        }
        var listeners = this.listeners_ || (this.listeners_ = {});
        var listenersForType = listeners[type] || (listeners[type] = []);
        if (listenersForType.indexOf(listener) === -1) {
            listenersForType.push(listener);
        }
    };
    /**
     * Dispatches an event and calls all listeners listening for events
     * of this type. The event parameter can either be a string or an
     * Object with a `type` property.
     *
     * @param {import("./Event.js").default|string} event Event object.
     * @return {boolean|undefined} `false` if anyone called preventDefault on the
     *     event object or if any of the listeners returned false.
     * @api
     */
    Target.prototype.dispatchEvent = function (event) {
        /** @type {import("./Event.js").default|Event} */
        var evt = typeof event === 'string' ? new _Event_js__WEBPACK_IMPORTED_MODULE_0__.default(event) : event;
        var type = evt.type;
        if (!evt.target) {
            evt.target = this.eventTarget_ || this;
        }
        var listeners = this.listeners_ && this.listeners_[type];
        var propagate;
        if (listeners) {
            var dispatching = this.dispatching_ || (this.dispatching_ = {});
            var pendingRemovals = this.pendingRemovals_ || (this.pendingRemovals_ = {});
            if (!(type in dispatching)) {
                dispatching[type] = 0;
                pendingRemovals[type] = 0;
            }
            ++dispatching[type];
            for (var i = 0, ii = listeners.length; i < ii; ++i) {
                if ('handleEvent' in listeners[i]) {
                    propagate = /** @type {import("../events.js").ListenerObject} */ (listeners[i]).handleEvent(evt);
                }
                else {
                    propagate = /** @type {import("../events.js").ListenerFunction} */ (listeners[i]).call(this, evt);
                }
                if (propagate === false || evt.propagationStopped) {
                    propagate = false;
                    break;
                }
            }
            --dispatching[type];
            if (dispatching[type] === 0) {
                var pr = pendingRemovals[type];
                delete pendingRemovals[type];
                while (pr--) {
                    this.removeEventListener(type, _functions_js__WEBPACK_IMPORTED_MODULE_1__.VOID);
                }
                delete dispatching[type];
            }
            return propagate;
        }
    };
    /**
     * Clean up.
     */
    Target.prototype.disposeInternal = function () {
        this.listeners_ && (0,_obj_js__WEBPACK_IMPORTED_MODULE_2__.clear)(this.listeners_);
    };
    /**
     * Get the listeners for a specified event type. Listeners are returned in the
     * order that they will be called in.
     *
     * @param {string} type Type.
     * @return {Array<import("../events.js").Listener>|undefined} Listeners.
     */
    Target.prototype.getListeners = function (type) {
        return (this.listeners_ && this.listeners_[type]) || undefined;
    };
    /**
     * @param {string=} opt_type Type. If not provided,
     *     `true` will be returned if this event target has any listeners.
     * @return {boolean} Has listeners.
     */
    Target.prototype.hasListener = function (opt_type) {
        if (!this.listeners_) {
            return false;
        }
        return opt_type
            ? opt_type in this.listeners_
            : Object.keys(this.listeners_).length > 0;
    };
    /**
     * @param {string} type Type.
     * @param {import("../events.js").Listener} listener Listener.
     */
    Target.prototype.removeEventListener = function (type, listener) {
        var listeners = this.listeners_ && this.listeners_[type];
        if (listeners) {
            var index = listeners.indexOf(listener);
            if (index !== -1) {
                if (this.pendingRemovals_ && type in this.pendingRemovals_) {
                    // make listener a no-op, and remove later in #dispatchEvent()
                    listeners[index] = _functions_js__WEBPACK_IMPORTED_MODULE_1__.VOID;
                    ++this.pendingRemovals_[type];
                }
                else {
                    listeners.splice(index, 1);
                    if (listeners.length === 0) {
                        delete this.listeners_[type];
                    }
                }
            }
        }
    };
    return Target;
}(_Disposable_js__WEBPACK_IMPORTED_MODULE_3__.default));
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Target);
//# sourceMappingURL=Target.js.map

/***/ }),

/***/ "./node_modules/ol/events/condition.js":
/*!*********************************************!*\
  !*** ./node_modules/ol/events/condition.js ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "all": () => (/* binding */ all),
/* harmony export */   "altKeyOnly": () => (/* binding */ altKeyOnly),
/* harmony export */   "altShiftKeysOnly": () => (/* binding */ altShiftKeysOnly),
/* harmony export */   "focus": () => (/* binding */ focus),
/* harmony export */   "focusWithTabindex": () => (/* binding */ focusWithTabindex),
/* harmony export */   "always": () => (/* binding */ always),
/* harmony export */   "click": () => (/* binding */ click),
/* harmony export */   "mouseActionButton": () => (/* binding */ mouseActionButton),
/* harmony export */   "never": () => (/* binding */ never),
/* harmony export */   "pointerMove": () => (/* binding */ pointerMove),
/* harmony export */   "singleClick": () => (/* binding */ singleClick),
/* harmony export */   "doubleClick": () => (/* binding */ doubleClick),
/* harmony export */   "noModifierKeys": () => (/* binding */ noModifierKeys),
/* harmony export */   "platformModifierKeyOnly": () => (/* binding */ platformModifierKeyOnly),
/* harmony export */   "shiftKeyOnly": () => (/* binding */ shiftKeyOnly),
/* harmony export */   "targetNotEditable": () => (/* binding */ targetNotEditable),
/* harmony export */   "mouseOnly": () => (/* binding */ mouseOnly),
/* harmony export */   "touchOnly": () => (/* binding */ touchOnly),
/* harmony export */   "penOnly": () => (/* binding */ penOnly),
/* harmony export */   "primaryAction": () => (/* binding */ primaryAction)
/* harmony export */ });
/* harmony import */ var _MapBrowserEventType_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../MapBrowserEventType.js */ "./node_modules/ol/MapBrowserEventType.js");
/* harmony import */ var _functions_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../functions.js */ "./node_modules/ol/functions.js");
/* harmony import */ var _has_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../has.js */ "./node_modules/ol/has.js");
/* harmony import */ var _asserts_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../asserts.js */ "./node_modules/ol/asserts.js");
/**
 * @module ol/events/condition
 */




/**
 * A function that takes an {@link module:ol/MapBrowserEvent} and returns a
 * `{boolean}`. If the condition is met, true should be returned.
 *
 * @typedef {function(this: ?, import("../MapBrowserEvent.js").default): boolean} Condition
 */
/**
 * Creates a condition function that passes when all provided conditions pass.
 * @param {...Condition} var_args Conditions to check.
 * @return {Condition} Condition function.
 */
function all(var_args) {
    var conditions = arguments;
    /**
     * @param {import("../MapBrowserEvent.js").default} event Event.
     * @return {boolean} All conditions passed.
     */
    return function (event) {
        var pass = true;
        for (var i = 0, ii = conditions.length; i < ii; ++i) {
            pass = pass && conditions[i](event);
            if (!pass) {
                break;
            }
        }
        return pass;
    };
}
/**
 * Return `true` if only the alt-key is pressed, `false` otherwise (e.g. when
 * additionally the shift-key is pressed).
 *
 * @param {import("../MapBrowserEvent.js").default} mapBrowserEvent Map browser event.
 * @return {boolean} True if only the alt key is pressed.
 * @api
 */
var altKeyOnly = function (mapBrowserEvent) {
    var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);
    return (originalEvent.altKey &&
        !(originalEvent.metaKey || originalEvent.ctrlKey) &&
        !originalEvent.shiftKey);
};
/**
 * Return `true` if only the alt-key and shift-key is pressed, `false` otherwise
 * (e.g. when additionally the platform-modifier-key is pressed).
 *
 * @param {import("../MapBrowserEvent.js").default} mapBrowserEvent Map browser event.
 * @return {boolean} True if only the alt and shift keys are pressed.
 * @api
 */
var altShiftKeysOnly = function (mapBrowserEvent) {
    var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);
    return (originalEvent.altKey &&
        !(originalEvent.metaKey || originalEvent.ctrlKey) &&
        originalEvent.shiftKey);
};
/**
 * Return `true` if the map has the focus. This condition requires a map target
 * element with a `tabindex` attribute, e.g. `<div id="map" tabindex="1">`.
 *
 * @param {import("../MapBrowserEvent.js").default} event Map browser event.
 * @return {boolean} The map has the focus.
 * @api
 */
var focus = function (event) {
    return event.target.getTargetElement().contains(document.activeElement);
};
/**
 * Return `true` if the map has the focus or no 'tabindex' attribute set.
 *
 * @param {import("../MapBrowserEvent.js").default} event Map browser event.
 * @return {boolean} The map container has the focus or no 'tabindex' attribute.
 */
var focusWithTabindex = function (event) {
    return event.map.getTargetElement().hasAttribute('tabindex')
        ? focus(event)
        : true;
};
/**
 * Return always true.
 *
 * @param {import("../MapBrowserEvent.js").default} mapBrowserEvent Map browser event.
 * @return {boolean} True.
 * @api
 */
var always = _functions_js__WEBPACK_IMPORTED_MODULE_0__.TRUE;
/**
 * Return `true` if the event is a `click` event, `false` otherwise.
 *
 * @param {import("../MapBrowserEvent.js").default} mapBrowserEvent Map browser event.
 * @return {boolean} True if the event is a map `click` event.
 * @api
 */
var click = function (mapBrowserEvent) {
    return mapBrowserEvent.type == _MapBrowserEventType_js__WEBPACK_IMPORTED_MODULE_1__.default.CLICK;
};
/**
 * Return `true` if the event has an "action"-producing mouse button.
 *
 * By definition, this includes left-click on windows/linux, and left-click
 * without the ctrl key on Macs.
 *
 * @param {import("../MapBrowserEvent.js").default} mapBrowserEvent Map browser event.
 * @return {boolean} The result.
 */
var mouseActionButton = function (mapBrowserEvent) {
    var originalEvent = /** @type {MouseEvent} */ (mapBrowserEvent.originalEvent);
    return originalEvent.button == 0 && !(_has_js__WEBPACK_IMPORTED_MODULE_2__.WEBKIT && _has_js__WEBPACK_IMPORTED_MODULE_2__.MAC && originalEvent.ctrlKey);
};
/**
 * Return always false.
 *
 * @param {import("../MapBrowserEvent.js").default} mapBrowserEvent Map browser event.
 * @return {boolean} False.
 * @api
 */
var never = _functions_js__WEBPACK_IMPORTED_MODULE_0__.FALSE;
/**
 * Return `true` if the browser event is a `pointermove` event, `false`
 * otherwise.
 *
 * @param {import("../MapBrowserEvent.js").default} mapBrowserEvent Map browser event.
 * @return {boolean} True if the browser event is a `pointermove` event.
 * @api
 */
var pointerMove = function (mapBrowserEvent) {
    return mapBrowserEvent.type == 'pointermove';
};
/**
 * Return `true` if the event is a map `singleclick` event, `false` otherwise.
 *
 * @param {import("../MapBrowserEvent.js").default} mapBrowserEvent Map browser event.
 * @return {boolean} True if the event is a map `singleclick` event.
 * @api
 */
var singleClick = function (mapBrowserEvent) {
    return mapBrowserEvent.type == _MapBrowserEventType_js__WEBPACK_IMPORTED_MODULE_1__.default.SINGLECLICK;
};
/**
 * Return `true` if the event is a map `dblclick` event, `false` otherwise.
 *
 * @param {import("../MapBrowserEvent.js").default} mapBrowserEvent Map browser event.
 * @return {boolean} True if the event is a map `dblclick` event.
 * @api
 */
var doubleClick = function (mapBrowserEvent) {
    return mapBrowserEvent.type == _MapBrowserEventType_js__WEBPACK_IMPORTED_MODULE_1__.default.DBLCLICK;
};
/**
 * Return `true` if no modifier key (alt-, shift- or platform-modifier-key) is
 * pressed.
 *
 * @param {import("../MapBrowserEvent.js").default} mapBrowserEvent Map browser event.
 * @return {boolean} True only if there no modifier keys are pressed.
 * @api
 */
var noModifierKeys = function (mapBrowserEvent) {
    var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);
    return (!originalEvent.altKey &&
        !(originalEvent.metaKey || originalEvent.ctrlKey) &&
        !originalEvent.shiftKey);
};
/**
 * Return `true` if only the platform-modifier-key (the meta-key on Mac,
 * ctrl-key otherwise) is pressed, `false` otherwise (e.g. when additionally
 * the shift-key is pressed).
 *
 * @param {import("../MapBrowserEvent.js").default} mapBrowserEvent Map browser event.
 * @return {boolean} True if only the platform modifier key is pressed.
 * @api
 */
var platformModifierKeyOnly = function (mapBrowserEvent) {
    var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);
    return (!originalEvent.altKey &&
        (_has_js__WEBPACK_IMPORTED_MODULE_2__.MAC ? originalEvent.metaKey : originalEvent.ctrlKey) &&
        !originalEvent.shiftKey);
};
/**
 * Return `true` if only the shift-key is pressed, `false` otherwise (e.g. when
 * additionally the alt-key is pressed).
 *
 * @param {import("../MapBrowserEvent.js").default} mapBrowserEvent Map browser event.
 * @return {boolean} True if only the shift key is pressed.
 * @api
 */
var shiftKeyOnly = function (mapBrowserEvent) {
    var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);
    return (!originalEvent.altKey &&
        !(originalEvent.metaKey || originalEvent.ctrlKey) &&
        originalEvent.shiftKey);
};
/**
 * Return `true` if the target element is not editable, i.e. not a `<input>`-,
 * `<select>`- or `<textarea>`-element, `false` otherwise.
 *
 * @param {import("../MapBrowserEvent.js").default} mapBrowserEvent Map browser event.
 * @return {boolean} True only if the target element is not editable.
 * @api
 */
var targetNotEditable = function (mapBrowserEvent) {
    var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);
    var tagName = /** @type {Element} */ (originalEvent.target).tagName;
    return tagName !== 'INPUT' && tagName !== 'SELECT' && tagName !== 'TEXTAREA';
};
/**
 * Return `true` if the event originates from a mouse device.
 *
 * @param {import("../MapBrowserEvent.js").default} mapBrowserEvent Map browser event.
 * @return {boolean} True if the event originates from a mouse device.
 * @api
 */
var mouseOnly = function (mapBrowserEvent) {
    var pointerEvent = /** @type {import("../MapBrowserEvent").default} */ (mapBrowserEvent)
        .originalEvent;
    (0,_asserts_js__WEBPACK_IMPORTED_MODULE_3__.assert)(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event
    // see http://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType
    return pointerEvent.pointerType == 'mouse';
};
/**
 * Return `true` if the event originates from a touchable device.
 *
 * @param {import("../MapBrowserEvent.js").default} mapBrowserEvent Map browser event.
 * @return {boolean} True if the event originates from a touchable device.
 * @api
 */
var touchOnly = function (mapBrowserEvent) {
    var pointerEvt = /** @type {import("../MapBrowserEvent").default} */ (mapBrowserEvent)
        .originalEvent;
    (0,_asserts_js__WEBPACK_IMPORTED_MODULE_3__.assert)(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event
    // see http://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType
    return pointerEvt.pointerType === 'touch';
};
/**
 * Return `true` if the event originates from a digital pen.
 *
 * @param {import("../MapBrowserEvent.js").default} mapBrowserEvent Map browser event.
 * @return {boolean} True if the event originates from a digital pen.
 * @api
 */
var penOnly = function (mapBrowserEvent) {
    var pointerEvt = /** @type {import("../MapBrowserEvent").default} */ (mapBrowserEvent)
        .originalEvent;
    (0,_asserts_js__WEBPACK_IMPORTED_MODULE_3__.assert)(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event
    // see http://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType
    return pointerEvt.pointerType === 'pen';
};
/**
 * Return `true` if the event originates from a primary pointer in
 * contact with the surface or if the left mouse button is pressed.
 * See http://www.w3.org/TR/pointerevents/#button-states.
 *
 * @param {import("../MapBrowserEvent.js").default} mapBrowserEvent Map browser event.
 * @return {boolean} True if the event originates from a primary pointer.
 * @api
 */
var primaryAction = function (mapBrowserEvent) {
    var pointerEvent = /** @type {import("../MapBrowserEvent").default} */ (mapBrowserEvent)
        .originalEvent;
    (0,_asserts_js__WEBPACK_IMPORTED_MODULE_3__.assert)(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event
    return pointerEvent.isPrimary && pointerEvent.button === 0;
};
//# sourceMappingURL=condition.js.map

/***/ }),

/***/ "./node_modules/ol/extent.js":
/*!***********************************!*\
  !*** ./node_modules/ol/extent.js ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "boundingExtent": () => (/* binding */ boundingExtent),
/* harmony export */   "buffer": () => (/* binding */ buffer),
/* harmony export */   "clone": () => (/* binding */ clone),
/* harmony export */   "closestSquaredDistanceXY": () => (/* binding */ closestSquaredDistanceXY),
/* harmony export */   "containsCoordinate": () => (/* binding */ containsCoordinate),
/* harmony export */   "containsExtent": () => (/* binding */ containsExtent),
/* harmony export */   "containsXY": () => (/* binding */ containsXY),
/* harmony export */   "coordinateRelationship": () => (/* binding */ coordinateRelationship),
/* harmony export */   "createEmpty": () => (/* binding */ createEmpty),
/* harmony export */   "createOrUpdate": () => (/* binding */ createOrUpdate),
/* harmony export */   "createOrUpdateEmpty": () => (/* binding */ createOrUpdateEmpty),
/* harmony export */   "createOrUpdateFromCoordinate": () => (/* binding */ createOrUpdateFromCoordinate),
/* harmony export */   "createOrUpdateFromCoordinates": () => (/* binding */ createOrUpdateFromCoordinates),
/* harmony export */   "createOrUpdateFromFlatCoordinates": () => (/* binding */ createOrUpdateFromFlatCoordinates),
/* harmony export */   "createOrUpdateFromRings": () => (/* binding */ createOrUpdateFromRings),
/* harmony export */   "equals": () => (/* binding */ equals),
/* harmony export */   "approximatelyEquals": () => (/* binding */ approximatelyEquals),
/* harmony export */   "extend": () => (/* binding */ extend),
/* harmony export */   "extendCoordinate": () => (/* binding */ extendCoordinate),
/* harmony export */   "extendCoordinates": () => (/* binding */ extendCoordinates),
/* harmony export */   "extendFlatCoordinates": () => (/* binding */ extendFlatCoordinates),
/* harmony export */   "extendRings": () => (/* binding */ extendRings),
/* harmony export */   "extendXY": () => (/* binding */ extendXY),
/* harmony export */   "forEachCorner": () => (/* binding */ forEachCorner),
/* harmony export */   "getArea": () => (/* binding */ getArea),
/* harmony export */   "getBottomLeft": () => (/* binding */ getBottomLeft),
/* harmony export */   "getBottomRight": () => (/* binding */ getBottomRight),
/* harmony export */   "getCenter": () => (/* binding */ getCenter),
/* harmony export */   "getCorner": () => (/* binding */ getCorner),
/* harmony export */   "getEnlargedArea": () => (/* binding */ getEnlargedArea),
/* harmony export */   "getForViewAndSize": () => (/* binding */ getForViewAndSize),
/* harmony export */   "getHeight": () => (/* binding */ getHeight),
/* harmony export */   "getIntersectionArea": () => (/* binding */ getIntersectionArea),
/* harmony export */   "getIntersection": () => (/* binding */ getIntersection),
/* harmony export */   "getMargin": () => (/* binding */ getMargin),
/* harmony export */   "getSize": () => (/* binding */ getSize),
/* harmony export */   "getTopLeft": () => (/* binding */ getTopLeft),
/* harmony export */   "getTopRight": () => (/* binding */ getTopRight),
/* harmony export */   "getWidth": () => (/* binding */ getWidth),
/* harmony export */   "intersects": () => (/* binding */ intersects),
/* harmony export */   "isEmpty": () => (/* binding */ isEmpty),
/* harmony export */   "returnOrUpdate": () => (/* binding */ returnOrUpdate),
/* harmony export */   "scaleFromCenter": () => (/* binding */ scaleFromCenter),
/* harmony export */   "intersectsSegment": () => (/* binding */ intersectsSegment),
/* harmony export */   "applyTransform": () => (/* binding */ applyTransform),
/* harmony export */   "wrapX": () => (/* binding */ wrapX)
/* harmony export */ });
/* harmony import */ var _extent_Corner_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./extent/Corner.js */ "./node_modules/ol/extent/Corner.js");
/* harmony import */ var _extent_Relationship_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./extent/Relationship.js */ "./node_modules/ol/extent/Relationship.js");
/* harmony import */ var _asserts_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./asserts.js */ "./node_modules/ol/asserts.js");
/**
 * @module ol/extent
 */



/**
 * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.
 * @typedef {Array<number>} Extent
 * @api
 */
/**
 * Build an extent that includes all given coordinates.
 *
 * @param {Array<import("./coordinate.js").Coordinate>} coordinates Coordinates.
 * @return {Extent} Bounding extent.
 * @api
 */
function boundingExtent(coordinates) {
    var extent = createEmpty();
    for (var i = 0, ii = coordinates.length; i < ii; ++i) {
        extendCoordinate(extent, coordinates[i]);
    }
    return extent;
}
/**
 * @param {Array<number>} xs Xs.
 * @param {Array<number>} ys Ys.
 * @param {Extent=} opt_extent Destination extent.
 * @private
 * @return {Extent} Extent.
 */
function _boundingExtentXYs(xs, ys, opt_extent) {
    var minX = Math.min.apply(null, xs);
    var minY = Math.min.apply(null, ys);
    var maxX = Math.max.apply(null, xs);
    var maxY = Math.max.apply(null, ys);
    return createOrUpdate(minX, minY, maxX, maxY, opt_extent);
}
/**
 * Return extent increased by the provided value.
 * @param {Extent} extent Extent.
 * @param {number} value The amount by which the extent should be buffered.
 * @param {Extent=} opt_extent Extent.
 * @return {Extent} Extent.
 * @api
 */
function buffer(extent, value, opt_extent) {
    if (opt_extent) {
        opt_extent[0] = extent[0] - value;
        opt_extent[1] = extent[1] - value;
        opt_extent[2] = extent[2] + value;
        opt_extent[3] = extent[3] + value;
        return opt_extent;
    }
    else {
        return [
            extent[0] - value,
            extent[1] - value,
            extent[2] + value,
            extent[3] + value,
        ];
    }
}
/**
 * Creates a clone of an extent.
 *
 * @param {Extent} extent Extent to clone.
 * @param {Extent=} opt_extent Extent.
 * @return {Extent} The clone.
 */
function clone(extent, opt_extent) {
    if (opt_extent) {
        opt_extent[0] = extent[0];
        opt_extent[1] = extent[1];
        opt_extent[2] = extent[2];
        opt_extent[3] = extent[3];
        return opt_extent;
    }
    else {
        return extent.slice();
    }
}
/**
 * @param {Extent} extent Extent.
 * @param {number} x X.
 * @param {number} y Y.
 * @return {number} Closest squared distance.
 */
function closestSquaredDistanceXY(extent, x, y) {
    var dx, dy;
    if (x < extent[0]) {
        dx = extent[0] - x;
    }
    else if (extent[2] < x) {
        dx = x - extent[2];
    }
    else {
        dx = 0;
    }
    if (y < extent[1]) {
        dy = extent[1] - y;
    }
    else if (extent[3] < y) {
        dy = y - extent[3];
    }
    else {
        dy = 0;
    }
    return dx * dx + dy * dy;
}
/**
 * Check if the passed coordinate is contained or on the edge of the extent.
 *
 * @param {Extent} extent Extent.
 * @param {import("./coordinate.js").Coordinate} coordinate Coordinate.
 * @return {boolean} The coordinate is contained in the extent.
 * @api
 */
function containsCoordinate(extent, coordinate) {
    return containsXY(extent, coordinate[0], coordinate[1]);
}
/**
 * Check if one extent contains another.
 *
 * An extent is deemed contained if it lies completely within the other extent,
 * including if they share one or more edges.
 *
 * @param {Extent} extent1 Extent 1.
 * @param {Extent} extent2 Extent 2.
 * @return {boolean} The second extent is contained by or on the edge of the
 *     first.
 * @api
 */
function containsExtent(extent1, extent2) {
    return (extent1[0] <= extent2[0] &&
        extent2[2] <= extent1[2] &&
        extent1[1] <= extent2[1] &&
        extent2[3] <= extent1[3]);
}
/**
 * Check if the passed coordinate is contained or on the edge of the extent.
 *
 * @param {Extent} extent Extent.
 * @param {number} x X coordinate.
 * @param {number} y Y coordinate.
 * @return {boolean} The x, y values are contained in the extent.
 * @api
 */
function containsXY(extent, x, y) {
    return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];
}
/**
 * Get the relationship between a coordinate and extent.
 * @param {Extent} extent The extent.
 * @param {import("./coordinate.js").Coordinate} coordinate The coordinate.
 * @return {import("./extent/Relationship.js").default} The relationship (bitwise compare with
 *     import("./extent/Relationship.js").Relationship).
 */
function coordinateRelationship(extent, coordinate) {
    var minX = extent[0];
    var minY = extent[1];
    var maxX = extent[2];
    var maxY = extent[3];
    var x = coordinate[0];
    var y = coordinate[1];
    var relationship = _extent_Relationship_js__WEBPACK_IMPORTED_MODULE_0__.default.UNKNOWN;
    if (x < minX) {
        relationship = relationship | _extent_Relationship_js__WEBPACK_IMPORTED_MODULE_0__.default.LEFT;
    }
    else if (x > maxX) {
        relationship = relationship | _extent_Relationship_js__WEBPACK_IMPORTED_MODULE_0__.default.RIGHT;
    }
    if (y < minY) {
        relationship = relationship | _extent_Relationship_js__WEBPACK_IMPORTED_MODULE_0__.default.BELOW;
    }
    else if (y > maxY) {
        relationship = relationship | _extent_Relationship_js__WEBPACK_IMPORTED_MODULE_0__.default.ABOVE;
    }
    if (relationship === _extent_Relationship_js__WEBPACK_IMPORTED_MODULE_0__.default.UNKNOWN) {
        relationship = _extent_Relationship_js__WEBPACK_IMPORTED_MODULE_0__.default.INTERSECTING;
    }
    return relationship;
}
/**
 * Create an empty extent.
 * @return {Extent} Empty extent.
 * @api
 */
function createEmpty() {
    return [Infinity, Infinity, -Infinity, -Infinity];
}
/**
 * Create a new extent or update the provided extent.
 * @param {number} minX Minimum X.
 * @param {number} minY Minimum Y.
 * @param {number} maxX Maximum X.
 * @param {number} maxY Maximum Y.
 * @param {Extent=} opt_extent Destination extent.
 * @return {Extent} Extent.
 */
function createOrUpdate(minX, minY, maxX, maxY, opt_extent) {
    if (opt_extent) {
        opt_extent[0] = minX;
        opt_extent[1] = minY;
        opt_extent[2] = maxX;
        opt_extent[3] = maxY;
        return opt_extent;
    }
    else {
        return [minX, minY, maxX, maxY];
    }
}
/**
 * Create a new empty extent or make the provided one empty.
 * @param {Extent=} opt_extent Extent.
 * @return {Extent} Extent.
 */
function createOrUpdateEmpty(opt_extent) {
    return createOrUpdate(Infinity, Infinity, -Infinity, -Infinity, opt_extent);
}
/**
 * @param {import("./coordinate.js").Coordinate} coordinate Coordinate.
 * @param {Extent=} opt_extent Extent.
 * @return {Extent} Extent.
 */
function createOrUpdateFromCoordinate(coordinate, opt_extent) {
    var x = coordinate[0];
    var y = coordinate[1];
    return createOrUpdate(x, y, x, y, opt_extent);
}
/**
 * @param {Array<import("./coordinate.js").Coordinate>} coordinates Coordinates.
 * @param {Extent=} opt_extent Extent.
 * @return {Extent} Extent.
 */
function createOrUpdateFromCoordinates(coordinates, opt_extent) {
    var extent = createOrUpdateEmpty(opt_extent);
    return extendCoordinates(extent, coordinates);
}
/**
 * @param {Array<number>} flatCoordinates Flat coordinates.
 * @param {number} offset Offset.
 * @param {number} end End.
 * @param {number} stride Stride.
 * @param {Extent=} opt_extent Extent.
 * @return {Extent} Extent.
 */
function createOrUpdateFromFlatCoordinates(flatCoordinates, offset, end, stride, opt_extent) {
    var extent = createOrUpdateEmpty(opt_extent);
    return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);
}
/**
 * @param {Array<Array<import("./coordinate.js").Coordinate>>} rings Rings.
 * @param {Extent=} opt_extent Extent.
 * @return {Extent} Extent.
 */
function createOrUpdateFromRings(rings, opt_extent) {
    var extent = createOrUpdateEmpty(opt_extent);
    return extendRings(extent, rings);
}
/**
 * Determine if two extents are equivalent.
 * @param {Extent} extent1 Extent 1.
 * @param {Extent} extent2 Extent 2.
 * @return {boolean} The two extents are equivalent.
 * @api
 */
function equals(extent1, extent2) {
    return (extent1[0] == extent2[0] &&
        extent1[2] == extent2[2] &&
        extent1[1] == extent2[1] &&
        extent1[3] == extent2[3]);
}
/**
 * Determine if two extents are approximately equivalent.
 * @param {Extent} extent1 Extent 1.
 * @param {Extent} extent2 Extent 2.
 * @param {number} tolerance Tolerance in extent coordinate units.
 * @return {boolean} The two extents differ by less than the tolerance.
 */
function approximatelyEquals(extent1, extent2, tolerance) {
    return (Math.abs(extent1[0] - extent2[0]) < tolerance &&
        Math.abs(extent1[2] - extent2[2]) < tolerance &&
        Math.abs(extent1[1] - extent2[1]) < tolerance &&
        Math.abs(extent1[3] - extent2[3]) < tolerance);
}
/**
 * Modify an extent to include another extent.
 * @param {Extent} extent1 The extent to be modified.
 * @param {Extent} extent2 The extent that will be included in the first.
 * @return {Extent} A reference to the first (extended) extent.
 * @api
 */
function extend(extent1, extent2) {
    if (extent2[0] < extent1[0]) {
        extent1[0] = extent2[0];
    }
    if (extent2[2] > extent1[2]) {
        extent1[2] = extent2[2];
    }
    if (extent2[1] < extent1[1]) {
        extent1[1] = extent2[1];
    }
    if (extent2[3] > extent1[3]) {
        extent1[3] = extent2[3];
    }
    return extent1;
}
/**
 * @param {Extent} extent Extent.
 * @param {import("./coordinate.js").Coordinate} coordinate Coordinate.
 */
function extendCoordinate(extent, coordinate) {
    if (coordinate[0] < extent[0]) {
        extent[0] = coordinate[0];
    }
    if (coordinate[0] > extent[2]) {
        extent[2] = coordinate[0];
    }
    if (coordinate[1] < extent[1]) {
        extent[1] = coordinate[1];
    }
    if (coordinate[1] > extent[3]) {
        extent[3] = coordinate[1];
    }
}
/**
 * @param {Extent} extent Extent.
 * @param {Array<import("./coordinate.js").Coordinate>} coordinates Coordinates.
 * @return {Extent} Extent.
 */
function extendCoordinates(extent, coordinates) {
    for (var i = 0, ii = coordinates.length; i < ii; ++i) {
        extendCoordinate(extent, coordinates[i]);
    }
    return extent;
}
/**
 * @param {Extent} extent Extent.
 * @param {Array<number>} flatCoordinates Flat coordinates.
 * @param {number} offset Offset.
 * @param {number} end End.
 * @param {number} stride Stride.
 * @return {Extent} Extent.
 */
function extendFlatCoordinates(extent, flatCoordinates, offset, end, stride) {
    for (; offset < end; offset += stride) {
        extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);
    }
    return extent;
}
/**
 * @param {Extent} extent Extent.
 * @param {Array<Array<import("./coordinate.js").Coordinate>>} rings Rings.
 * @return {Extent} Extent.
 */
function extendRings(extent, rings) {
    for (var i = 0, ii = rings.length; i < ii; ++i) {
        extendCoordinates(extent, rings[i]);
    }
    return extent;
}
/**
 * @param {Extent} extent Extent.
 * @param {number} x X.
 * @param {number} y Y.
 */
function extendXY(extent, x, y) {
    extent[0] = Math.min(extent[0], x);
    extent[1] = Math.min(extent[1], y);
    extent[2] = Math.max(extent[2], x);
    extent[3] = Math.max(extent[3], y);
}
/**
 * This function calls `callback` for each corner of the extent. If the
 * callback returns a truthy value the function returns that value
 * immediately. Otherwise the function returns `false`.
 * @param {Extent} extent Extent.
 * @param {function(import("./coordinate.js").Coordinate): S} callback Callback.
 * @return {S|boolean} Value.
 * @template S
 */
function forEachCorner(extent, callback) {
    var val;
    val = callback(getBottomLeft(extent));
    if (val) {
        return val;
    }
    val = callback(getBottomRight(extent));
    if (val) {
        return val;
    }
    val = callback(getTopRight(extent));
    if (val) {
        return val;
    }
    val = callback(getTopLeft(extent));
    if (val) {
        return val;
    }
    return false;
}
/**
 * Get the size of an extent.
 * @param {Extent} extent Extent.
 * @return {number} Area.
 * @api
 */
function getArea(extent) {
    var area = 0;
    if (!isEmpty(extent)) {
        area = getWidth(extent) * getHeight(extent);
    }
    return area;
}
/**
 * Get the bottom left coordinate of an extent.
 * @param {Extent} extent Extent.
 * @return {import("./coordinate.js").Coordinate} Bottom left coordinate.
 * @api
 */
function getBottomLeft(extent) {
    return [extent[0], extent[1]];
}
/**
 * Get the bottom right coordinate of an extent.
 * @param {Extent} extent Extent.
 * @return {import("./coordinate.js").Coordinate} Bottom right coordinate.
 * @api
 */
function getBottomRight(extent) {
    return [extent[2], extent[1]];
}
/**
 * Get the center coordinate of an extent.
 * @param {Extent} extent Extent.
 * @return {import("./coordinate.js").Coordinate} Center.
 * @api
 */
function getCenter(extent) {
    return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];
}
/**
 * Get a corner coordinate of an extent.
 * @param {Extent} extent Extent.
 * @param {import("./extent/Corner.js").default} corner Corner.
 * @return {import("./coordinate.js").Coordinate} Corner coordinate.
 */
function getCorner(extent, corner) {
    var coordinate;
    if (corner === _extent_Corner_js__WEBPACK_IMPORTED_MODULE_1__.default.BOTTOM_LEFT) {
        coordinate = getBottomLeft(extent);
    }
    else if (corner === _extent_Corner_js__WEBPACK_IMPORTED_MODULE_1__.default.BOTTOM_RIGHT) {
        coordinate = getBottomRight(extent);
    }
    else if (corner === _extent_Corner_js__WEBPACK_IMPORTED_MODULE_1__.default.TOP_LEFT) {
        coordinate = getTopLeft(extent);
    }
    else if (corner === _extent_Corner_js__WEBPACK_IMPORTED_MODULE_1__.default.TOP_RIGHT) {
        coordinate = getTopRight(extent);
    }
    else {
        (0,_asserts_js__WEBPACK_IMPORTED_MODULE_2__.assert)(false, 13); // Invalid corner
    }
    return coordinate;
}
/**
 * @param {Extent} extent1 Extent 1.
 * @param {Extent} extent2 Extent 2.
 * @return {number} Enlarged area.
 */
function getEnlargedArea(extent1, extent2) {
    var minX = Math.min(extent1[0], extent2[0]);
    var minY = Math.min(extent1[1], extent2[1]);
    var maxX = Math.max(extent1[2], extent2[2]);
    var maxY = Math.max(extent1[3], extent2[3]);
    return (maxX - minX) * (maxY - minY);
}
/**
 * @param {import("./coordinate.js").Coordinate} center Center.
 * @param {number} resolution Resolution.
 * @param {number} rotation Rotation.
 * @param {import("./size.js").Size} size Size.
 * @param {Extent=} opt_extent Destination extent.
 * @return {Extent} Extent.
 */
function getForViewAndSize(center, resolution, rotation, size, opt_extent) {
    var dx = (resolution * size[0]) / 2;
    var dy = (resolution * size[1]) / 2;
    var cosRotation = Math.cos(rotation);
    var sinRotation = Math.sin(rotation);
    var xCos = dx * cosRotation;
    var xSin = dx * sinRotation;
    var yCos = dy * cosRotation;
    var ySin = dy * sinRotation;
    var x = center[0];
    var y = center[1];
    var x0 = x - xCos + ySin;
    var x1 = x - xCos - ySin;
    var x2 = x + xCos - ySin;
    var x3 = x + xCos + ySin;
    var y0 = y - xSin - yCos;
    var y1 = y - xSin + yCos;
    var y2 = y + xSin + yCos;
    var y3 = y + xSin - yCos;
    return createOrUpdate(Math.min(x0, x1, x2, x3), Math.min(y0, y1, y2, y3), Math.max(x0, x1, x2, x3), Math.max(y0, y1, y2, y3), opt_extent);
}
/**
 * Get the height of an extent.
 * @param {Extent} extent Extent.
 * @return {number} Height.
 * @api
 */
function getHeight(extent) {
    return extent[3] - extent[1];
}
/**
 * @param {Extent} extent1 Extent 1.
 * @param {Extent} extent2 Extent 2.
 * @return {number} Intersection area.
 */
function getIntersectionArea(extent1, extent2) {
    var intersection = getIntersection(extent1, extent2);
    return getArea(intersection);
}
/**
 * Get the intersection of two extents.
 * @param {Extent} extent1 Extent 1.
 * @param {Extent} extent2 Extent 2.
 * @param {Extent=} opt_extent Optional extent to populate with intersection.
 * @return {Extent} Intersecting extent.
 * @api
 */
function getIntersection(extent1, extent2, opt_extent) {
    var intersection = opt_extent ? opt_extent : createEmpty();
    if (intersects(extent1, extent2)) {
        if (extent1[0] > extent2[0]) {
            intersection[0] = extent1[0];
        }
        else {
            intersection[0] = extent2[0];
        }
        if (extent1[1] > extent2[1]) {
            intersection[1] = extent1[1];
        }
        else {
            intersection[1] = extent2[1];
        }
        if (extent1[2] < extent2[2]) {
            intersection[2] = extent1[2];
        }
        else {
            intersection[2] = extent2[2];
        }
        if (extent1[3] < extent2[3]) {
            intersection[3] = extent1[3];
        }
        else {
            intersection[3] = extent2[3];
        }
    }
    else {
        createOrUpdateEmpty(intersection);
    }
    return intersection;
}
/**
 * @param {Extent} extent Extent.
 * @return {number} Margin.
 */
function getMargin(extent) {
    return getWidth(extent) + getHeight(extent);
}
/**
 * Get the size (width, height) of an extent.
 * @param {Extent} extent The extent.
 * @return {import("./size.js").Size} The extent size.
 * @api
 */
function getSize(extent) {
    return [extent[2] - extent[0], extent[3] - extent[1]];
}
/**
 * Get the top left coordinate of an extent.
 * @param {Extent} extent Extent.
 * @return {import("./coordinate.js").Coordinate} Top left coordinate.
 * @api
 */
function getTopLeft(extent) {
    return [extent[0], extent[3]];
}
/**
 * Get the top right coordinate of an extent.
 * @param {Extent} extent Extent.
 * @return {import("./coordinate.js").Coordinate} Top right coordinate.
 * @api
 */
function getTopRight(extent) {
    return [extent[2], extent[3]];
}
/**
 * Get the width of an extent.
 * @param {Extent} extent Extent.
 * @return {number} Width.
 * @api
 */
function getWidth(extent) {
    return extent[2] - extent[0];
}
/**
 * Determine if one extent intersects another.
 * @param {Extent} extent1 Extent 1.
 * @param {Extent} extent2 Extent.
 * @return {boolean} The two extents intersect.
 * @api
 */
function intersects(extent1, extent2) {
    return (extent1[0] <= extent2[2] &&
        extent1[2] >= extent2[0] &&
        extent1[1] <= extent2[3] &&
        extent1[3] >= extent2[1]);
}
/**
 * Determine if an extent is empty.
 * @param {Extent} extent Extent.
 * @return {boolean} Is empty.
 * @api
 */
function isEmpty(extent) {
    return extent[2] < extent[0] || extent[3] < extent[1];
}
/**
 * @param {Extent} extent Extent.
 * @param {Extent=} opt_extent Extent.
 * @return {Extent} Extent.
 */
function returnOrUpdate(extent, opt_extent) {
    if (opt_extent) {
        opt_extent[0] = extent[0];
        opt_extent[1] = extent[1];
        opt_extent[2] = extent[2];
        opt_extent[3] = extent[3];
        return opt_extent;
    }
    else {
        return extent;
    }
}
/**
 * @param {Extent} extent Extent.
 * @param {number} value Value.
 */
function scaleFromCenter(extent, value) {
    var deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);
    var deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);
    extent[0] -= deltaX;
    extent[2] += deltaX;
    extent[1] -= deltaY;
    extent[3] += deltaY;
}
/**
 * Determine if the segment between two coordinates intersects (crosses,
 * touches, or is contained by) the provided extent.
 * @param {Extent} extent The extent.
 * @param {import("./coordinate.js").Coordinate} start Segment start coordinate.
 * @param {import("./coordinate.js").Coordinate} end Segment end coordinate.
 * @return {boolean} The segment intersects the extent.
 */
function intersectsSegment(extent, start, end) {
    var intersects = false;
    var startRel = coordinateRelationship(extent, start);
    var endRel = coordinateRelationship(extent, end);
    if (startRel === _extent_Relationship_js__WEBPACK_IMPORTED_MODULE_0__.default.INTERSECTING ||
        endRel === _extent_Relationship_js__WEBPACK_IMPORTED_MODULE_0__.default.INTERSECTING) {
        intersects = true;
    }
    else {
        var minX = extent[0];
        var minY = extent[1];
        var maxX = extent[2];
        var maxY = extent[3];
        var startX = start[0];
        var startY = start[1];
        var endX = end[0];
        var endY = end[1];
        var slope = (endY - startY) / (endX - startX);
        var x = void 0, y = void 0;
        if (!!(endRel & _extent_Relationship_js__WEBPACK_IMPORTED_MODULE_0__.default.ABOVE) && !(startRel & _extent_Relationship_js__WEBPACK_IMPORTED_MODULE_0__.default.ABOVE)) {
            // potentially intersects top
            x = endX - (endY - maxY) / slope;
            intersects = x >= minX && x <= maxX;
        }
        if (!intersects &&
            !!(endRel & _extent_Relationship_js__WEBPACK_IMPORTED_MODULE_0__.default.RIGHT) &&
            !(startRel & _extent_Relationship_js__WEBPACK_IMPORTED_MODULE_0__.default.RIGHT)) {
            // potentially intersects right
            y = endY - (endX - maxX) * slope;
            intersects = y >= minY && y <= maxY;
        }
        if (!intersects &&
            !!(endRel & _extent_Relationship_js__WEBPACK_IMPORTED_MODULE_0__.default.BELOW) &&
            !(startRel & _extent_Relationship_js__WEBPACK_IMPORTED_MODULE_0__.default.BELOW)) {
            // potentially intersects bottom
            x = endX - (endY - minY) / slope;
            intersects = x >= minX && x <= maxX;
        }
        if (!intersects &&
            !!(endRel & _extent_Relationship_js__WEBPACK_IMPORTED_MODULE_0__.default.LEFT) &&
            !(startRel & _extent_Relationship_js__WEBPACK_IMPORTED_MODULE_0__.default.LEFT)) {
            // potentially intersects left
            y = endY - (endX - minX) * slope;
            intersects = y >= minY && y <= maxY;
        }
    }
    return intersects;
}
/**
 * Apply a transform function to the extent.
 * @param {Extent} extent Extent.
 * @param {import("./proj.js").TransformFunction} transformFn Transform function.
 * Called with `[minX, minY, maxX, maxY]` extent coordinates.
 * @param {Extent=} opt_extent Destination extent.
 * @param {number=} opt_stops Number of stops per side used for the transform.
 * By default only the corners are used.
 * @return {Extent} Extent.
 * @api
 */
function applyTransform(extent, transformFn, opt_extent, opt_stops) {
    var coordinates = [];
    if (opt_stops > 1) {
        var width = extent[2] - extent[0];
        var height = extent[3] - extent[1];
        for (var i = 0; i < opt_stops; ++i) {
            coordinates.push(extent[0] + (width * i) / opt_stops, extent[1], extent[2], extent[1] + (height * i) / opt_stops, extent[2] - (width * i) / opt_stops, extent[3], extent[0], extent[3] - (height * i) / opt_stops);
        }
    }
    else {
        coordinates = [
            extent[0],
            extent[1],
            extent[2],
            extent[1],
            extent[2],
            extent[3],
            extent[0],
            extent[3],
        ];
    }
    transformFn(coordinates, coordinates, 2);
    var xs = [];
    var ys = [];
    for (var i = 0, l = coordinates.length; i < l; i += 2) {
        xs.push(coordinates[i]);
        ys.push(coordinates[i + 1]);
    }
    return _boundingExtentXYs(xs, ys, opt_extent);
}
/**
 * Modifies the provided extent in-place to be within the real world
 * extent.
 *
 * @param {Extent} extent Extent.
 * @param {import("./proj/Projection.js").default} projection Projection
 * @return {Extent} The extent within the real world extent.
 */
function wrapX(extent, projection) {
    var projectionExtent = projection.getExtent();
    var center = getCenter(extent);
    if (projection.canWrapX() &&
        (center[0] < projectionExtent[0] || center[0] >= projectionExtent[2])) {
        var worldWidth = getWidth(projectionExtent);
        var worldsAway = Math.floor((center[0] - projectionExtent[0]) / worldWidth);
        var offset = worldsAway * worldWidth;
        extent[0] -= offset;
        extent[2] -= offset;
    }
    return extent;
}
//# sourceMappingURL=extent.js.map

/***/ }),

/***/ "./node_modules/ol/extent/Corner.js":
/*!******************************************!*\
  !*** ./node_modules/ol/extent/Corner.js ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/**
 * @module ol/extent/Corner
 */
/**
 * Extent corner.
 * @enum {string}
 */
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
    BOTTOM_LEFT: 'bottom-left',
    BOTTOM_RIGHT: 'bottom-right',
    TOP_LEFT: 'top-left',
    TOP_RIGHT: 'top-right',
});
//# sourceMappingURL=Corner.js.map

/***/ }),

/***/ "./node_modules/ol/extent/Relationship.js":
/*!************************************************!*\
  !*** ./node_modules/ol/extent/Relationship.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/**
 * @module ol/extent/Relationship
 */
/**
 * Relationship to an extent.
 * @enum {number}
 */
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
    UNKNOWN: 0,
    INTERSECTING: 1,
    ABOVE: 2,
    RIGHT: 4,
    BELOW: 8,
    LEFT: 16,
});
//# sourceMappingURL=Relationship.js.map

/***/ }),

/***/ "./node_modules/ol/featureloader.js":
/*!******************************************!*\
  !*** ./node_modules/ol/featureloader.js ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "loadFeaturesXhr": () => (/* binding */ loadFeaturesXhr),
/* harmony export */   "xhr": () => (/* binding */ xhr),
/* harmony export */   "setWithCredentials": () => (/* binding */ setWithCredentials)
/* harmony export */ });
/* harmony import */ var _format_FormatType_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./format/FormatType.js */ "./node_modules/ol/format/FormatType.js");
/* harmony import */ var _functions_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./functions.js */ "./node_modules/ol/functions.js");
/**
 * @module ol/featureloader
 */


/**
 *
 * @type {boolean}
 * @private
 */
var withCredentials = false;
/**
 * {@link module:ol/source/Vector} sources use a function of this type to
 * load features.
 *
 * This function takes an {@link module:ol/extent~Extent} representing the area to be loaded,
 * a `{number}` representing the resolution (map units per pixel), an
 * {@link module:ol/proj/Projection} for the projection and success and failure callbacks as
 * arguments. `this` within the function is bound to the
 * {@link module:ol/source/Vector} it's called from.
 *
 * The function is responsible for loading the features and adding them to the
 * source.
 * @typedef {function(this:(import("./source/Vector").default|import("./VectorTile.js").default),
 *           import("./extent.js").Extent,
 *           number,
 *           import("./proj/Projection.js").default,
 *           function(Array<import("./Feature.js").default>): void=,
 *           function(): void=): void} FeatureLoader
 * @api
 */
/**
 * {@link module:ol/source/Vector} sources use a function of this type to
 * get the url to load features from.
 *
 * This function takes an {@link module:ol/extent~Extent} representing the area
 * to be loaded, a `{number}` representing the resolution (map units per pixel)
 * and an {@link module:ol/proj/Projection} for the projection  as
 * arguments and returns a `{string}` representing the URL.
 * @typedef {function(import("./extent.js").Extent, number, import("./proj/Projection.js").default): string} FeatureUrlFunction
 * @api
 */
/**
 * @param {string|FeatureUrlFunction} url Feature URL service.
 * @param {import("./format/Feature.js").default} format Feature format.
 * @param {import("./extent.js").Extent} extent Extent.
 * @param {number} resolution Resolution.
 * @param {import("./proj/Projection.js").default} projection Projection.
 * @param {function(Array<import("./Feature.js").default>, import("./proj/Projection.js").default): void} success Success
 *      Function called with the loaded features and optionally with the data projection.
 * @param {function(): void} failure Failure
 *      Function called when loading failed.
 */
function loadFeaturesXhr(url, format, extent, resolution, projection, success, failure) {
    var xhr = new XMLHttpRequest();
    xhr.open('GET', typeof url === 'function' ? url(extent, resolution, projection) : url, true);
    if (format.getType() == _format_FormatType_js__WEBPACK_IMPORTED_MODULE_0__.default.ARRAY_BUFFER) {
        xhr.responseType = 'arraybuffer';
    }
    xhr.withCredentials = withCredentials;
    /**
     * @param {Event} event Event.
     * @private
     */
    xhr.onload = function (event) {
        // status will be 0 for file:// urls
        if (!xhr.status || (xhr.status >= 200 && xhr.status < 300)) {
            var type = format.getType();
            /** @type {Document|Node|Object|string|undefined} */
            var source = void 0;
            if (type == _format_FormatType_js__WEBPACK_IMPORTED_MODULE_0__.default.JSON || type == _format_FormatType_js__WEBPACK_IMPORTED_MODULE_0__.default.TEXT) {
                source = xhr.responseText;
            }
            else if (type == _format_FormatType_js__WEBPACK_IMPORTED_MODULE_0__.default.XML) {
                source = xhr.responseXML;
                if (!source) {
                    source = new DOMParser().parseFromString(xhr.responseText, 'application/xml');
                }
            }
            else if (type == _format_FormatType_js__WEBPACK_IMPORTED_MODULE_0__.default.ARRAY_BUFFER) {
                source = /** @type {ArrayBuffer} */ (xhr.response);
            }
            if (source) {
                success(
                /** @type {Array<import("./Feature.js").default>} */
                (format.readFeatures(source, {
                    extent: extent,
                    featureProjection: projection,
                })), format.readProjection(source));
            }
            else {
                failure();
            }
        }
        else {
            failure();
        }
    };
    /**
     * @private
     */
    xhr.onerror = failure;
    xhr.send();
}
/**
 * Create an XHR feature loader for a `url` and `format`. The feature loader
 * loads features (with XHR), parses the features, and adds them to the
 * vector source.
 * @param {string|FeatureUrlFunction} url Feature URL service.
 * @param {import("./format/Feature.js").default} format Feature format.
 * @return {FeatureLoader} The feature loader.
 * @api
 */
function xhr(url, format) {
    /**
     * @param {import("./extent.js").Extent} extent Extent.
     * @param {number} resolution Resolution.
     * @param {import("./proj/Projection.js").default} projection Projection.
     * @param {function(): void=} success Success
     *      Function called when loading succeeded.
     * @param {function(): void=} failure Failure
     *      Function called when loading failed.
     * @this {import("./source/Vector").default}
     */
    return function (extent, resolution, projection, success, failure) {
        var source = /** @type {import("./source/Vector").default} */ (this);
        loadFeaturesXhr(url, format, extent, resolution, projection, 
        /**
         * @param {Array<import("./Feature.js").default>} features The loaded features.
         * @param {import("./proj/Projection.js").default} dataProjection Data
         * projection.
         */
        function (features, dataProjection) {
            if (success !== undefined) {
                success(features);
            }
            source.addFeatures(features);
        }, 
        /* FIXME handle error */ failure ? failure : _functions_js__WEBPACK_IMPORTED_MODULE_1__.VOID);
    };
}
/**
 * Setter for the withCredentials configuration for the XHR.
 *
 * @param {boolean} xhrWithCredentials The value of withCredentials to set.
 * Compare https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/
 * @api
 */
function setWithCredentials(xhrWithCredentials) {
    withCredentials = xhrWithCredentials;
}
//# sourceMappingURL=featureloader.js.map

/***/ }),

/***/ "./node_modules/ol/format/Feature.js":
/*!*******************************************!*\
  !*** ./node_modules/ol/format/Feature.js ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__),
/* harmony export */   "transformGeometryWithOptions": () => (/* binding */ transformGeometryWithOptions),
/* harmony export */   "transformExtentWithOptions": () => (/* binding */ transformExtentWithOptions)
/* harmony export */ });
/* harmony import */ var _proj_Units_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../proj/Units.js */ "./node_modules/ol/proj/Units.js");
/* harmony import */ var _util_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../util.js */ "./node_modules/ol/util.js");
/* harmony import */ var _obj_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../obj.js */ "./node_modules/ol/obj.js");
/* harmony import */ var _proj_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../proj.js */ "./node_modules/ol/proj.js");
/**
 * @module ol/format/Feature
 */




/**
 * @typedef {Object} ReadOptions
 * @property {import("../proj.js").ProjectionLike} [dataProjection] Projection of the data we are reading.
 * If not provided, the projection will be derived from the data (where possible) or
 * the `dataProjection` of the format is assigned (where set). If the projection
 * can not be derived from the data and if no `dataProjection` is set for a format,
 * the features will not be reprojected.
 * @property {import("../extent.js").Extent} [extent] Tile extent in map units of the tile being read.
 * This is only required when reading data with tile pixels as geometry units. When configured,
 * a `dataProjection` with `TILE_PIXELS` as `units` and the tile's pixel extent as `extent` needs to be
 * provided.
 * @property {import("../proj.js").ProjectionLike} [featureProjection] Projection of the feature geometries
 * created by the format reader. If not provided, features will be returned in the
 * `dataProjection`.
 */
/**
 * @typedef {Object} WriteOptions
 * @property {import("../proj.js").ProjectionLike} [dataProjection] Projection of the data we are writing.
 * If not provided, the `dataProjection` of the format is assigned (where set).
 * If no `dataProjection` is set for a format, the features will be returned
 * in the `featureProjection`.
 * @property {import("../proj.js").ProjectionLike} [featureProjection] Projection of the feature geometries
 * that will be serialized by the format writer. If not provided, geometries are assumed
 * to be in the `dataProjection` if that is set; in other words, they are not transformed.
 * @property {boolean} [rightHanded] When writing geometries, follow the right-hand
 * rule for linear ring orientation.  This means that polygons will have counter-clockwise
 * exterior rings and clockwise interior rings.  By default, coordinates are serialized
 * as they are provided at construction.  If `true`, the right-hand rule will
 * be applied.  If `false`, the left-hand rule will be applied (clockwise for
 * exterior and counter-clockwise for interior rings).  Note that not all
 * formats support this.  The GeoJSON format does use this property when writing
 * geometries.
 * @property {number} [decimals] Maximum number of decimal places for coordinates.
 * Coordinates are stored internally as floats, but floating-point arithmetic can create
 * coordinates with a large number of decimal places, not generally wanted on output.
 * Set a number here to round coordinates. Can also be used to ensure that
 * coordinates read in can be written back out with the same number of decimals.
 * Default is no rounding.
 */
/**
 * @classdesc
 * Abstract base class; normally only used for creating subclasses and not
 * instantiated in apps.
 * Base class for feature formats.
 * {@link module:ol/format/Feature~FeatureFormat} subclasses provide the ability to decode and encode
 * {@link module:ol/Feature~Feature} objects from a variety of commonly used geospatial
 * file formats.  See the documentation for each format for more details.
 *
 * @abstract
 * @api
 */
var FeatureFormat = /** @class */ (function () {
    function FeatureFormat() {
        /**
         * @protected
         * @type {import("../proj/Projection.js").default}
         */
        this.dataProjection = null;
        /**
         * @protected
         * @type {import("../proj/Projection.js").default}
         */
        this.defaultFeatureProjection = null;
    }
    /**
     * Adds the data projection to the read options.
     * @param {Document|Element|Object|string} source Source.
     * @param {ReadOptions=} opt_options Options.
     * @return {ReadOptions|undefined} Options.
     * @protected
     */
    FeatureFormat.prototype.getReadOptions = function (source, opt_options) {
        var options;
        if (opt_options) {
            var dataProjection = opt_options.dataProjection
                ? (0,_proj_js__WEBPACK_IMPORTED_MODULE_0__.get)(opt_options.dataProjection)
                : this.readProjection(source);
            if (opt_options.extent &&
                dataProjection &&
                dataProjection.getUnits() === _proj_Units_js__WEBPACK_IMPORTED_MODULE_1__.default.TILE_PIXELS) {
                dataProjection = (0,_proj_js__WEBPACK_IMPORTED_MODULE_0__.get)(dataProjection);
                dataProjection.setWorldExtent(opt_options.extent);
            }
            options = {
                dataProjection: dataProjection,
                featureProjection: opt_options.featureProjection,
            };
        }
        return this.adaptOptions(options);
    };
    /**
     * Sets the `dataProjection` on the options, if no `dataProjection`
     * is set.
     * @param {WriteOptions|ReadOptions|undefined} options
     *     Options.
     * @protected
     * @return {WriteOptions|ReadOptions|undefined}
     *     Updated options.
     */
    FeatureFormat.prototype.adaptOptions = function (options) {
        return (0,_obj_js__WEBPACK_IMPORTED_MODULE_2__.assign)({
            dataProjection: this.dataProjection,
            featureProjection: this.defaultFeatureProjection,
        }, options);
    };
    /**
     * @abstract
     * @return {import("./FormatType.js").default} Format.
     */
    FeatureFormat.prototype.getType = function () {
        return (0,_util_js__WEBPACK_IMPORTED_MODULE_3__.abstract)();
    };
    /**
     * Read a single feature from a source.
     *
     * @abstract
     * @param {Document|Element|Object|string} source Source.
     * @param {ReadOptions=} opt_options Read options.
     * @return {import("../Feature.js").FeatureLike} Feature.
     */
    FeatureFormat.prototype.readFeature = function (source, opt_options) {
        return (0,_util_js__WEBPACK_IMPORTED_MODULE_3__.abstract)();
    };
    /**
     * Read all features from a source.
     *
     * @abstract
     * @param {Document|Element|ArrayBuffer|Object|string} source Source.
     * @param {ReadOptions=} opt_options Read options.
     * @return {Array<import("../Feature.js").FeatureLike>} Features.
     */
    FeatureFormat.prototype.readFeatures = function (source, opt_options) {
        return (0,_util_js__WEBPACK_IMPORTED_MODULE_3__.abstract)();
    };
    /**
     * Read a single geometry from a source.
     *
     * @abstract
     * @param {Document|Element|Object|string} source Source.
     * @param {ReadOptions=} opt_options Read options.
     * @return {import("../geom/Geometry.js").default} Geometry.
     */
    FeatureFormat.prototype.readGeometry = function (source, opt_options) {
        return (0,_util_js__WEBPACK_IMPORTED_MODULE_3__.abstract)();
    };
    /**
     * Read the projection from a source.
     *
     * @abstract
     * @param {Document|Element|Object|string} source Source.
     * @return {import("../proj/Projection.js").default} Projection.
     */
    FeatureFormat.prototype.readProjection = function (source) {
        return (0,_util_js__WEBPACK_IMPORTED_MODULE_3__.abstract)();
    };
    /**
     * Encode a feature in this format.
     *
     * @abstract
     * @param {import("../Feature.js").default} feature Feature.
     * @param {WriteOptions=} opt_options Write options.
     * @return {string} Result.
     */
    FeatureFormat.prototype.writeFeature = function (feature, opt_options) {
        return (0,_util_js__WEBPACK_IMPORTED_MODULE_3__.abstract)();
    };
    /**
     * Encode an array of features in this format.
     *
     * @abstract
     * @param {Array<import("../Feature.js").default>} features Features.
     * @param {WriteOptions=} opt_options Write options.
     * @return {string} Result.
     */
    FeatureFormat.prototype.writeFeatures = function (features, opt_options) {
        return (0,_util_js__WEBPACK_IMPORTED_MODULE_3__.abstract)();
    };
    /**
     * Write a single geometry in this format.
     *
     * @abstract
     * @param {import("../geom/Geometry.js").default} geometry Geometry.
     * @param {WriteOptions=} opt_options Write options.
     * @return {string} Result.
     */
    FeatureFormat.prototype.writeGeometry = function (geometry, opt_options) {
        return (0,_util_js__WEBPACK_IMPORTED_MODULE_3__.abstract)();
    };
    return FeatureFormat;
}());
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (FeatureFormat);
/**
 * @param {import("../geom/Geometry.js").default} geometry Geometry.
 * @param {boolean} write Set to true for writing, false for reading.
 * @param {(WriteOptions|ReadOptions)=} opt_options Options.
 * @return {import("../geom/Geometry.js").default} Transformed geometry.
 */
function transformGeometryWithOptions(geometry, write, opt_options) {
    var featureProjection = opt_options
        ? (0,_proj_js__WEBPACK_IMPORTED_MODULE_0__.get)(opt_options.featureProjection)
        : null;
    var dataProjection = opt_options
        ? (0,_proj_js__WEBPACK_IMPORTED_MODULE_0__.get)(opt_options.dataProjection)
        : null;
    var transformed;
    if (featureProjection &&
        dataProjection &&
        !(0,_proj_js__WEBPACK_IMPORTED_MODULE_0__.equivalent)(featureProjection, dataProjection)) {
        transformed = (write ? geometry.clone() : geometry).transform(write ? featureProjection : dataProjection, write ? dataProjection : featureProjection);
    }
    else {
        transformed = geometry;
    }
    if (write &&
        opt_options &&
        /** @type {WriteOptions} */ (opt_options).decimals !== undefined) {
        var power_1 = Math.pow(10, 
        /** @type {WriteOptions} */ (opt_options).decimals);
        // if decimals option on write, round each coordinate appropriately
        /**
         * @param {Array<number>} coordinates Coordinates.
         * @return {Array<number>} Transformed coordinates.
         */
        var transform = function (coordinates) {
            for (var i = 0, ii = coordinates.length; i < ii; ++i) {
                coordinates[i] = Math.round(coordinates[i] * power_1) / power_1;
            }
            return coordinates;
        };
        if (transformed === geometry) {
            transformed = geometry.clone();
        }
        transformed.applyTransform(transform);
    }
    return transformed;
}
/**
 * @param {import("../extent.js").Extent} extent Extent.
 * @param {ReadOptions=} opt_options Read options.
 * @return {import("../extent.js").Extent} Transformed extent.
 */
function transformExtentWithOptions(extent, opt_options) {
    var featureProjection = opt_options
        ? (0,_proj_js__WEBPACK_IMPORTED_MODULE_0__.get)(opt_options.featureProjection)
        : null;
    var dataProjection = opt_options
        ? (0,_proj_js__WEBPACK_IMPORTED_MODULE_0__.get)(opt_options.dataProjection)
        : null;
    if (featureProjection &&
        dataProjection &&
        !(0,_proj_js__WEBPACK_IMPORTED_MODULE_0__.equivalent)(featureProjection, dataProjection)) {
        return (0,_proj_js__WEBPACK_IMPORTED_MODULE_0__.transformExtent)(extent, dataProjection, featureProjection);
    }
    else {
        return extent;
    }
}
//# sourceMappingURL=Feature.js.map

/***/ }),

/***/ "./node_modules/ol/format/FormatType.js":
/*!**********************************************!*\
  !*** ./node_modules/ol/format/FormatType.js ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/**
 * @module ol/format/FormatType
 */
/**
 * @enum {string}
 */
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
    ARRAY_BUFFER: 'arraybuffer',
    JSON: 'json',
    TEXT: 'text',
    XML: 'xml',
});
//# sourceMappingURL=FormatType.js.map

/***/ }),

/***/ "./node_modules/ol/format/GeoJSON.js":
/*!*******************************************!*\
  !*** ./node_modules/ol/format/GeoJSON.js ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _Feature_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Feature.js */ "./node_modules/ol/Feature.js");
/* harmony import */ var _geom_GeometryCollection_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../geom/GeometryCollection.js */ "./node_modules/ol/geom/GeometryCollection.js");
/* harmony import */ var _geom_GeometryType_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../geom/GeometryType.js */ "./node_modules/ol/geom/GeometryType.js");
/* harmony import */ var _JSONFeature_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./JSONFeature.js */ "./node_modules/ol/format/JSONFeature.js");
/* harmony import */ var _geom_LineString_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../geom/LineString.js */ "./node_modules/ol/geom/LineString.js");
/* harmony import */ var _geom_MultiLineString_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../geom/MultiLineString.js */ "./node_modules/ol/geom/MultiLineString.js");
/* harmony import */ var _geom_MultiPoint_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../geom/MultiPoint.js */ "./node_modules/ol/geom/MultiPoint.js");
/* harmony import */ var _geom_MultiPolygon_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../geom/MultiPolygon.js */ "./node_modules/ol/geom/MultiPolygon.js");
/* harmony import */ var _geom_Point_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../geom/Point.js */ "./node_modules/ol/geom/Point.js");
/* harmony import */ var _geom_Polygon_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../geom/Polygon.js */ "./node_modules/ol/geom/Polygon.js");
/* harmony import */ var _asserts_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../asserts.js */ "./node_modules/ol/asserts.js");
/* harmony import */ var _obj_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../obj.js */ "./node_modules/ol/obj.js");
/* harmony import */ var _proj_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../proj.js */ "./node_modules/ol/proj.js");
/* harmony import */ var _Feature_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./Feature.js */ "./node_modules/ol/format/Feature.js");
/**
 * @module ol/format/GeoJSON
 */
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();














/**
 * @typedef {import("geojson").GeoJSON} GeoJSONObject
 * @typedef {import("geojson").Feature} GeoJSONFeature
 * @typedef {import("geojson").FeatureCollection} GeoJSONFeatureCollection
 * @typedef {import("geojson").Geometry} GeoJSONGeometry
 * @typedef {import("geojson").Point} GeoJSONPoint
 * @typedef {import("geojson").LineString} GeoJSONLineString
 * @typedef {import("geojson").Polygon} GeoJSONPolygon
 * @typedef {import("geojson").MultiPoint} GeoJSONMultiPoint
 * @typedef {import("geojson").MultiLineString} GeoJSONMultiLineString
 * @typedef {import("geojson").MultiPolygon} GeoJSONMultiPolygon
 * @typedef {import("geojson").GeometryCollection} GeoJSONGeometryCollection
 */
/**
 * @typedef {Object} Options
 * @property {import("../proj.js").ProjectionLike} [dataProjection='EPSG:4326'] Default data projection.
 * @property {import("../proj.js").ProjectionLike} [featureProjection] Projection for features read or
 * written by the format.  Options passed to read or write methods will take precedence.
 * @property {string} [geometryName] Geometry name to use when creating features.
 * @property {boolean} [extractGeometryName=false] Certain GeoJSON providers include
 * the geometry_name field in the feature GeoJSON. If set to `true` the GeoJSON reader
 * will look for that field to set the geometry name. If both this field is set to `true`
 * and a `geometryName` is provided, the `geometryName` will take precedence.
 */
/**
 * @classdesc
 * Feature format for reading and writing data in the GeoJSON format.
 *
 * @api
 */
var GeoJSON = /** @class */ (function (_super) {
    __extends(GeoJSON, _super);
    /**
     * @param {Options=} opt_options Options.
     */
    function GeoJSON(opt_options) {
        var _this = this;
        var options = opt_options ? opt_options : {};
        _this = _super.call(this) || this;
        /**
         * @type {import("../proj/Projection.js").default}
         */
        _this.dataProjection = (0,_proj_js__WEBPACK_IMPORTED_MODULE_0__.get)(options.dataProjection ? options.dataProjection : 'EPSG:4326');
        if (options.featureProjection) {
            _this.defaultFeatureProjection = (0,_proj_js__WEBPACK_IMPORTED_MODULE_0__.get)(options.featureProjection);
        }
        /**
         * Name of the geometry attribute for features.
         * @type {string|undefined}
         * @private
         */
        _this.geometryName_ = options.geometryName;
        /**
         * Look for the geometry name in the feature GeoJSON
         * @type {boolean|undefined}
         * @private
         */
        _this.extractGeometryName_ = options.extractGeometryName;
        return _this;
    }
    /**
     * @param {Object} object Object.
     * @param {import("./Feature.js").ReadOptions=} opt_options Read options.
     * @protected
     * @return {import("../Feature.js").default} Feature.
     */
    GeoJSON.prototype.readFeatureFromObject = function (object, opt_options) {
        /**
         * @type {GeoJSONFeature}
         */
        var geoJSONFeature = null;
        if (object['type'] === 'Feature') {
            geoJSONFeature = /** @type {GeoJSONFeature} */ (object);
        }
        else {
            geoJSONFeature = {
                'type': 'Feature',
                'geometry': /** @type {GeoJSONGeometry} */ (object),
                'properties': null,
            };
        }
        var geometry = readGeometry(geoJSONFeature['geometry'], opt_options);
        var feature = new _Feature_js__WEBPACK_IMPORTED_MODULE_1__.default();
        if (this.geometryName_) {
            feature.setGeometryName(this.geometryName_);
        }
        else if (this.extractGeometryName_ &&
            'geometry_name' in geoJSONFeature !== undefined) {
            feature.setGeometryName(geoJSONFeature['geometry_name']);
        }
        feature.setGeometry(geometry);
        if ('id' in geoJSONFeature) {
            feature.setId(geoJSONFeature['id']);
        }
        if (geoJSONFeature['properties']) {
            feature.setProperties(geoJSONFeature['properties'], true);
        }
        return feature;
    };
    /**
     * @param {Object} object Object.
     * @param {import("./Feature.js").ReadOptions=} opt_options Read options.
     * @protected
     * @return {Array<Feature>} Features.
     */
    GeoJSON.prototype.readFeaturesFromObject = function (object, opt_options) {
        var geoJSONObject = /** @type {GeoJSONObject} */ (object);
        /** @type {Array<import("../Feature.js").default>} */
        var features = null;
        if (geoJSONObject['type'] === 'FeatureCollection') {
            var geoJSONFeatureCollection = /** @type {GeoJSONFeatureCollection} */ (object);
            features = [];
            var geoJSONFeatures = geoJSONFeatureCollection['features'];
            for (var i = 0, ii = geoJSONFeatures.length; i < ii; ++i) {
                features.push(this.readFeatureFromObject(geoJSONFeatures[i], opt_options));
            }
        }
        else {
            features = [this.readFeatureFromObject(object, opt_options)];
        }
        return features;
    };
    /**
     * @param {GeoJSONGeometry} object Object.
     * @param {import("./Feature.js").ReadOptions=} opt_options Read options.
     * @protected
     * @return {import("../geom/Geometry.js").default} Geometry.
     */
    GeoJSON.prototype.readGeometryFromObject = function (object, opt_options) {
        return readGeometry(object, opt_options);
    };
    /**
     * @param {Object} object Object.
     * @protected
     * @return {import("../proj/Projection.js").default} Projection.
     */
    GeoJSON.prototype.readProjectionFromObject = function (object) {
        var crs = object['crs'];
        var projection;
        if (crs) {
            if (crs['type'] == 'name') {
                projection = (0,_proj_js__WEBPACK_IMPORTED_MODULE_0__.get)(crs['properties']['name']);
            }
            else if (crs['type'] === 'EPSG') {
                projection = (0,_proj_js__WEBPACK_IMPORTED_MODULE_0__.get)('EPSG:' + crs['properties']['code']);
            }
            else {
                (0,_asserts_js__WEBPACK_IMPORTED_MODULE_2__.assert)(false, 36); // Unknown SRS type
            }
        }
        else {
            projection = this.dataProjection;
        }
        return /** @type {import("../proj/Projection.js").default} */ (projection);
    };
    /**
     * Encode a feature as a GeoJSON Feature object.
     *
     * @param {import("../Feature.js").default} feature Feature.
     * @param {import("./Feature.js").WriteOptions=} opt_options Write options.
     * @return {GeoJSONFeature} Object.
     * @api
     */
    GeoJSON.prototype.writeFeatureObject = function (feature, opt_options) {
        opt_options = this.adaptOptions(opt_options);
        /** @type {GeoJSONFeature} */
        var object = {
            'type': 'Feature',
            geometry: null,
            properties: null,
        };
        var id = feature.getId();
        if (id !== undefined) {
            object.id = id;
        }
        if (!feature.hasProperties()) {
            return object;
        }
        var properties = feature.getProperties();
        var geometry = feature.getGeometry();
        if (geometry) {
            object.geometry = writeGeometry(geometry, opt_options);
            delete properties[feature.getGeometryName()];
        }
        if (!(0,_obj_js__WEBPACK_IMPORTED_MODULE_3__.isEmpty)(properties)) {
            object.properties = properties;
        }
        return object;
    };
    /**
     * Encode an array of features as a GeoJSON object.
     *
     * @param {Array<import("../Feature.js").default>} features Features.
     * @param {import("./Feature.js").WriteOptions=} opt_options Write options.
     * @return {GeoJSONFeatureCollection} GeoJSON Object.
     * @api
     */
    GeoJSON.prototype.writeFeaturesObject = function (features, opt_options) {
        opt_options = this.adaptOptions(opt_options);
        var objects = [];
        for (var i = 0, ii = features.length; i < ii; ++i) {
            objects.push(this.writeFeatureObject(features[i], opt_options));
        }
        return {
            type: 'FeatureCollection',
            features: objects,
        };
    };
    /**
     * Encode a geometry as a GeoJSON object.
     *
     * @param {import("../geom/Geometry.js").default} geometry Geometry.
     * @param {import("./Feature.js").WriteOptions=} opt_options Write options.
     * @return {GeoJSONGeometry|GeoJSONGeometryCollection} Object.
     * @api
     */
    GeoJSON.prototype.writeGeometryObject = function (geometry, opt_options) {
        return writeGeometry(geometry, this.adaptOptions(opt_options));
    };
    return GeoJSON;
}(_JSONFeature_js__WEBPACK_IMPORTED_MODULE_4__.default));
/**
 * @param {GeoJSONGeometry|GeoJSONGeometryCollection} object Object.
 * @param {import("./Feature.js").ReadOptions=} opt_options Read options.
 * @return {import("../geom/Geometry.js").default} Geometry.
 */
function readGeometry(object, opt_options) {
    if (!object) {
        return null;
    }
    /**
     * @type {import("../geom/Geometry.js").default}
     */
    var geometry;
    switch (object['type']) {
        case _geom_GeometryType_js__WEBPACK_IMPORTED_MODULE_5__.default.POINT: {
            geometry = readPointGeometry(/** @type {GeoJSONPoint} */ (object));
            break;
        }
        case _geom_GeometryType_js__WEBPACK_IMPORTED_MODULE_5__.default.LINE_STRING: {
            geometry = readLineStringGeometry(
            /** @type {GeoJSONLineString} */ (object));
            break;
        }
        case _geom_GeometryType_js__WEBPACK_IMPORTED_MODULE_5__.default.POLYGON: {
            geometry = readPolygonGeometry(/** @type {GeoJSONPolygon} */ (object));
            break;
        }
        case _geom_GeometryType_js__WEBPACK_IMPORTED_MODULE_5__.default.MULTI_POINT: {
            geometry = readMultiPointGeometry(
            /** @type {GeoJSONMultiPoint} */ (object));
            break;
        }
        case _geom_GeometryType_js__WEBPACK_IMPORTED_MODULE_5__.default.MULTI_LINE_STRING: {
            geometry = readMultiLineStringGeometry(
            /** @type {GeoJSONMultiLineString} */ (object));
            break;
        }
        case _geom_GeometryType_js__WEBPACK_IMPORTED_MODULE_5__.default.MULTI_POLYGON: {
            geometry = readMultiPolygonGeometry(
            /** @type {GeoJSONMultiPolygon} */ (object));
            break;
        }
        case _geom_GeometryType_js__WEBPACK_IMPORTED_MODULE_5__.default.GEOMETRY_COLLECTION: {
            geometry = readGeometryCollectionGeometry(
            /** @type {GeoJSONGeometryCollection} */ (object));
            break;
        }
        default: {
            throw new Error('Unsupported GeoJSON type: ' + object.type);
        }
    }
    return (0,_Feature_js__WEBPACK_IMPORTED_MODULE_6__.transformGeometryWithOptions)(geometry, false, opt_options);
}
/**
 * @param {GeoJSONGeometryCollection} object Object.
 * @param {import("./Feature.js").ReadOptions=} opt_options Read options.
 * @return {GeometryCollection} Geometry collection.
 */
function readGeometryCollectionGeometry(object, opt_options) {
    var geometries = object['geometries'].map(
    /**
     * @param {GeoJSONGeometry} geometry Geometry.
     * @return {import("../geom/Geometry.js").default} geometry Geometry.
     */
    function (geometry) {
        return readGeometry(geometry, opt_options);
    });
    return new _geom_GeometryCollection_js__WEBPACK_IMPORTED_MODULE_7__.default(geometries);
}
/**
 * @param {GeoJSONPoint} object Object.
 * @return {Point} Point.
 */
function readPointGeometry(object) {
    return new _geom_Point_js__WEBPACK_IMPORTED_MODULE_8__.default(object['coordinates']);
}
/**
 * @param {GeoJSONLineString} object Object.
 * @return {LineString} LineString.
 */
function readLineStringGeometry(object) {
    return new _geom_LineString_js__WEBPACK_IMPORTED_MODULE_9__.default(object['coordinates']);
}
/**
 * @param {GeoJSONMultiLineString} object Object.
 * @return {MultiLineString} MultiLineString.
 */
function readMultiLineStringGeometry(object) {
    return new _geom_MultiLineString_js__WEBPACK_IMPORTED_MODULE_10__.default(object['coordinates']);
}
/**
 * @param {GeoJSONMultiPoint} object Object.
 * @return {MultiPoint} MultiPoint.
 */
function readMultiPointGeometry(object) {
    return new _geom_MultiPoint_js__WEBPACK_IMPORTED_MODULE_11__.default(object['coordinates']);
}
/**
 * @param {GeoJSONMultiPolygon} object Object.
 * @return {MultiPolygon} MultiPolygon.
 */
function readMultiPolygonGeometry(object) {
    return new _geom_MultiPolygon_js__WEBPACK_IMPORTED_MODULE_12__.default(object['coordinates']);
}
/**
 * @param {GeoJSONPolygon} object Object.
 * @return {Polygon} Polygon.
 */
function readPolygonGeometry(object) {
    return new _geom_Polygon_js__WEBPACK_IMPORTED_MODULE_13__.default(object['coordinates']);
}
/**
 * @param {import("../geom/Geometry.js").default} geometry Geometry.
 * @param {import("./Feature.js").WriteOptions=} opt_options Write options.
 * @return {GeoJSONGeometry} GeoJSON geometry.
 */
function writeGeometry(geometry, opt_options) {
    geometry = (0,_Feature_js__WEBPACK_IMPORTED_MODULE_6__.transformGeometryWithOptions)(geometry, true, opt_options);
    var type = geometry.getType();
    /** @type {GeoJSONGeometry} */
    var geoJSON;
    switch (type) {
        case _geom_GeometryType_js__WEBPACK_IMPORTED_MODULE_5__.default.POINT: {
            geoJSON = writePointGeometry(
            /** @type {Point} */ (geometry), opt_options);
            break;
        }
        case _geom_GeometryType_js__WEBPACK_IMPORTED_MODULE_5__.default.LINE_STRING: {
            geoJSON = writeLineStringGeometry(
            /** @type {LineString} */ (geometry), opt_options);
            break;
        }
        case _geom_GeometryType_js__WEBPACK_IMPORTED_MODULE_5__.default.POLYGON: {
            geoJSON = writePolygonGeometry(
            /** @type {Polygon} */ (geometry), opt_options);
            break;
        }
        case _geom_GeometryType_js__WEBPACK_IMPORTED_MODULE_5__.default.MULTI_POINT: {
            geoJSON = writeMultiPointGeometry(
            /** @type {MultiPoint} */ (geometry), opt_options);
            break;
        }
        case _geom_GeometryType_js__WEBPACK_IMPORTED_MODULE_5__.default.MULTI_LINE_STRING: {
            geoJSON = writeMultiLineStringGeometry(
            /** @type {MultiLineString} */ (geometry), opt_options);
            break;
        }
        case _geom_GeometryType_js__WEBPACK_IMPORTED_MODULE_5__.default.MULTI_POLYGON: {
            geoJSON = writeMultiPolygonGeometry(
            /** @type {MultiPolygon} */ (geometry), opt_options);
            break;
        }
        case _geom_GeometryType_js__WEBPACK_IMPORTED_MODULE_5__.default.GEOMETRY_COLLECTION: {
            geoJSON = writeGeometryCollectionGeometry(
            /** @type {GeometryCollection} */ (geometry), opt_options);
            break;
        }
        case _geom_GeometryType_js__WEBPACK_IMPORTED_MODULE_5__.default.CIRCLE: {
            geoJSON = {
                type: 'GeometryCollection',
                geometries: [],
            };
            break;
        }
        default: {
            throw new Error('Unsupported geometry type: ' + type);
        }
    }
    return geoJSON;
}
/**
 * @param {GeometryCollection} geometry Geometry.
 * @param {import("./Feature.js").WriteOptions=} opt_options Write options.
 * @return {GeoJSONGeometryCollection} GeoJSON geometry collection.
 */
function writeGeometryCollectionGeometry(geometry, opt_options) {
    var geometries = geometry.getGeometriesArray().map(function (geometry) {
        var options = (0,_obj_js__WEBPACK_IMPORTED_MODULE_3__.assign)({}, opt_options);
        delete options.featureProjection;
        return writeGeometry(geometry, options);
    });
    return {
        type: 'GeometryCollection',
        geometries: geometries,
    };
}
/**
 * @param {LineString} geometry Geometry.
 * @param {import("./Feature.js").WriteOptions=} opt_options Write options.
 * @return {GeoJSONGeometry} GeoJSON geometry.
 */
function writeLineStringGeometry(geometry, opt_options) {
    return {
        type: 'LineString',
        coordinates: geometry.getCoordinates(),
    };
}
/**
 * @param {MultiLineString} geometry Geometry.
 * @param {import("./Feature.js").WriteOptions=} opt_options Write options.
 * @return {GeoJSONGeometry} GeoJSON geometry.
 */
function writeMultiLineStringGeometry(geometry, opt_options) {
    return {
        type: 'MultiLineString',
        coordinates: geometry.getCoordinates(),
    };
}
/**
 * @param {MultiPoint} geometry Geometry.
 * @param {import("./Feature.js").WriteOptions=} opt_options Write options.
 * @return {GeoJSONGeometry} GeoJSON geometry.
 */
function writeMultiPointGeometry(geometry, opt_options) {
    return {
        type: 'MultiPoint',
        coordinates: geometry.getCoordinates(),
    };
}
/**
 * @param {MultiPolygon} geometry Geometry.
 * @param {import("./Feature.js").WriteOptions=} opt_options Write options.
 * @return {GeoJSONGeometry} GeoJSON geometry.
 */
function writeMultiPolygonGeometry(geometry, opt_options) {
    var right;
    if (opt_options) {
        right = opt_options.rightHanded;
    }
    return {
        type: 'MultiPolygon',
        coordinates: geometry.getCoordinates(right),
    };
}
/**
 * @param {Point} geometry Geometry.
 * @param {import("./Feature.js").WriteOptions=} opt_options Write options.
 * @return {GeoJSONGeometry} GeoJSON geometry.
 */
function writePointGeometry(geometry, opt_options) {
    return {
        type: 'Point',
        coordinates: geometry.getCoordinates(),
    };
}
/**
 * @param {Polygon} geometry Geometry.
 * @param {import("./Feature.js").WriteOptions=} opt_options Write options.
 * @return {GeoJSONGeometry} GeoJSON geometry.
 */
function writePolygonGeometry(geometry, opt_options) {
    var right;
    if (opt_options) {
        right = opt_options.rightHanded;
    }
    return {
        type: 'Polygon',
        coordinates: geometry.getCoordinates(right),
    };
}
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (GeoJSON);
//# sourceMappingURL=GeoJSON.js.map

/***/ }),

/***/ "./node_modules/ol/format/JSONFeature.js":
/*!***********************************************!*\
  !*** ./node_modules/ol/format/JSONFeature.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _Feature_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Feature.js */ "./node_modules/ol/format/Feature.js");
/* harmony import */ var _FormatType_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./FormatType.js */ "./node_modules/ol/format/FormatType.js");
/* harmony import */ var _util_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util.js */ "./node_modules/ol/util.js");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
/**
 * @module ol/format/JSONFeature
 */



/**
 * @classdesc
 * Abstract base class; normally only used for creating subclasses and not
 * instantiated in apps.
 * Base class for JSON feature formats.
 *
 * @abstract
 */
var JSONFeature = /** @class */ (function (_super) {
    __extends(JSONFeature, _super);
    function JSONFeature() {
        return _super.call(this) || this;
    }
    /**
     * @return {import("./FormatType.js").default} Format.
     */
    JSONFeature.prototype.getType = function () {
        return _FormatType_js__WEBPACK_IMPORTED_MODULE_0__.default.JSON;
    };
    /**
     * Read a feature.  Only works for a single feature. Use `readFeatures` to
     * read a feature collection.
     *
     * @param {ArrayBuffer|Document|Element|Object|string} source Source.
     * @param {import("./Feature.js").ReadOptions=} opt_options Read options.
     * @return {import("../Feature.js").default} Feature.
     * @api
     */
    JSONFeature.prototype.readFeature = function (source, opt_options) {
        return this.readFeatureFromObject(getObject(source), this.getReadOptions(source, opt_options));
    };
    /**
     * Read all features.  Works with both a single feature and a feature
     * collection.
     *
     * @param {ArrayBuffer|Document|Element|Object|string} source Source.
     * @param {import("./Feature.js").ReadOptions=} opt_options Read options.
     * @return {Array<import("../Feature.js").default>} Features.
     * @api
     */
    JSONFeature.prototype.readFeatures = function (source, opt_options) {
        return this.readFeaturesFromObject(getObject(source), this.getReadOptions(source, opt_options));
    };
    /**
     * @abstract
     * @param {Object} object Object.
     * @param {import("./Feature.js").ReadOptions=} opt_options Read options.
     * @protected
     * @return {import("../Feature.js").default} Feature.
     */
    JSONFeature.prototype.readFeatureFromObject = function (object, opt_options) {
        return (0,_util_js__WEBPACK_IMPORTED_MODULE_1__.abstract)();
    };
    /**
     * @abstract
     * @param {Object} object Object.
     * @param {import("./Feature.js").ReadOptions=} opt_options Read options.
     * @protected
     * @return {Array<import("../Feature.js").default>} Features.
     */
    JSONFeature.prototype.readFeaturesFromObject = function (object, opt_options) {
        return (0,_util_js__WEBPACK_IMPORTED_MODULE_1__.abstract)();
    };
    /**
     * Read a geometry.
     *
     * @param {ArrayBuffer|Document|Element|Object|string} source Source.
     * @param {import("./Feature.js").ReadOptions=} opt_options Read options.
     * @return {import("../geom/Geometry.js").default} Geometry.
     * @api
     */
    JSONFeature.prototype.readGeometry = function (source, opt_options) {
        return this.readGeometryFromObject(getObject(source), this.getReadOptions(source, opt_options));
    };
    /**
     * @abstract
     * @param {Object} object Object.
     * @param {import("./Feature.js").ReadOptions=} opt_options Read options.
     * @protected
     * @return {import("../geom/Geometry.js").default} Geometry.
     */
    JSONFeature.prototype.readGeometryFromObject = function (object, opt_options) {
        return (0,_util_js__WEBPACK_IMPORTED_MODULE_1__.abstract)();
    };
    /**
     * Read the projection.
     *
     * @param {ArrayBuffer|Document|Element|Object|string} source Source.
     * @return {import("../proj/Projection.js").default} Projection.
     * @api
     */
    JSONFeature.prototype.readProjection = function (source) {
        return this.readProjectionFromObject(getObject(source));
    };
    /**
     * @abstract
     * @param {Object} object Object.
     * @protected
     * @return {import("../proj/Projection.js").default} Projection.
     */
    JSONFeature.prototype.readProjectionFromObject = function (object) {
        return (0,_util_js__WEBPACK_IMPORTED_MODULE_1__.abstract)();
    };
    /**
     * Encode a feature as string.
     *
     * @param {import("../Feature.js").default} feature Feature.
     * @param {import("./Feature.js").WriteOptions=} opt_options Write options.
     * @return {string} Encoded feature.
     * @api
     */
    JSONFeature.prototype.writeFeature = function (feature, opt_options) {
        return JSON.stringify(this.writeFeatureObject(feature, opt_options));
    };
    /**
     * @abstract
     * @param {import("../Feature.js").default} feature Feature.
     * @param {import("./Feature.js").WriteOptions=} opt_options Write options.
     * @return {Object} Object.
     */
    JSONFeature.prototype.writeFeatureObject = function (feature, opt_options) {
        return (0,_util_js__WEBPACK_IMPORTED_MODULE_1__.abstract)();
    };
    /**
     * Encode an array of features as string.
     *
     * @param {Array<import("../Feature.js").default>} features Features.
     * @param {import("./Feature.js").WriteOptions=} opt_options Write options.
     * @return {string} Encoded features.
     * @api
     */
    JSONFeature.prototype.writeFeatures = function (features, opt_options) {
        return JSON.stringify(this.writeFeaturesObject(features, opt_options));
    };
    /**
     * @abstract
     * @param {Array<import("../Feature.js").default>} features Features.
     * @param {import("./Feature.js").WriteOptions=} opt_options Write options.
     * @return {Object} Object.
     */
    JSONFeature.prototype.writeFeaturesObject = function (features, opt_options) {
        return (0,_util_js__WEBPACK_IMPORTED_MODULE_1__.abstract)();
    };
    /**
     * Encode a geometry as string.
     *
     * @param {import("../geom/Geometry.js").default} geometry Geometry.
     * @param {import("./Feature.js").WriteOptions=} opt_options Write options.
     * @return {string} Encoded geometry.
     * @api
     */
    JSONFeature.prototype.writeGeometry = function (geometry, opt_options) {
        return JSON.stringify(this.writeGeometryObject(geometry, opt_options));
    };
    /**
     * @abstract
     * @param {import("../geom/Geometry.js").default} geometry Geometry.
     * @param {import("./Feature.js").WriteOptions=} opt_options Write options.
     * @return {Object} Object.
     */
    JSONFeature.prototype.writeGeometryObject = function (geometry, opt_options) {
        return (0,_util_js__WEBPACK_IMPORTED_MODULE_1__.abstract)();
    };
    return JSONFeature;
}(_Feature_js__WEBPACK_IMPORTED_MODULE_2__.default));
/**
 * @param {Document|Element|Object|string} source Source.
 * @return {Object} Object.
 */
function getObject(source) {
    if (typeof source === 'string') {
        var object = JSON.parse(source);
        return object ? /** @type {Object} */ (object) : null;
    }
    else if (source !== null) {
        return source;
    }
    else {
        return null;
    }
}
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (JSONFeature);
//# sourceMappingURL=JSONFeature.js.map

/***/ }),

/***/ "./node_modules/ol/functions.js":
/*!**************************************!*\
  !*** ./node_modules/ol/functions.js ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "TRUE": () => (/* binding */ TRUE),
/* harmony export */   "FALSE": () => (/* binding */ FALSE),
/* harmony export */   "VOID": () => (/* binding */ VOID),
/* harmony export */   "memoizeOne": () => (/* binding */ memoizeOne)
/* harmony export */ });
/* harmony import */ var _array_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./array.js */ "./node_modules/ol/array.js");
/**
 * @module ol/functions
 */

/**
 * Always returns true.
 * @returns {boolean} true.
 */
function TRUE() {
    return true;
}
/**
 * Always returns false.
 * @returns {boolean} false.
 */
function FALSE() {
    return false;
}
/**
 * A reusable function, used e.g. as a default for callbacks.
 *
 * @return {void} Nothing.
 */
function VOID() { }
/**
 * Wrap a function in another function that remembers the last return.  If the
 * returned function is called twice in a row with the same arguments and the same
 * this object, it will return the value from the first call in the second call.
 *
 * @param {function(...any): ReturnType} fn The function to memoize.
 * @return {function(...any): ReturnType} The memoized function.
 * @template ReturnType
 */
function memoizeOne(fn) {
    var called = false;
    /** @type {ReturnType} */
    var lastResult;
    /** @type {Array<any>} */
    var lastArgs;
    var lastThis;
    return function () {
        var nextArgs = Array.prototype.slice.call(arguments);
        if (!called || this !== lastThis || !(0,_array_js__WEBPACK_IMPORTED_MODULE_0__.equals)(nextArgs, lastArgs)) {
            called = true;
            lastThis = this;
            lastArgs = nextArgs;
            lastResult = fn.apply(this, arguments);
        }
        return lastResult;
    };
}
//# sourceMappingURL=functions.js.map

/***/ }),

/***/ "./node_modules/ol/geom/Circle.js":
/*!****************************************!*\
  !*** ./node_modules/ol/geom/Circle.js ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _GeometryType_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./GeometryType.js */ "./node_modules/ol/geom/GeometryType.js");
/* harmony import */ var _SimpleGeometry_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./SimpleGeometry.js */ "./node_modules/ol/geom/SimpleGeometry.js");
/* harmony import */ var _extent_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../extent.js */ "./node_modules/ol/extent.js");
/* harmony import */ var _flat_deflate_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./flat/deflate.js */ "./node_modules/ol/geom/flat/deflate.js");
/* harmony import */ var _flat_transform_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./flat/transform.js */ "./node_modules/ol/geom/flat/transform.js");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
/**
 * @module ol/geom/Circle
 */





/**
 * @classdesc
 * Circle geometry.
 *
 * @api
 */
var Circle = /** @class */ (function (_super) {
    __extends(Circle, _super);
    /**
     * @param {!import("../coordinate.js").Coordinate} center Center.
     *     For internal use, flat coordinates in combination with `opt_layout` and no
     *     `opt_radius` are also accepted.
     * @param {number=} opt_radius Radius.
     * @param {import("./GeometryLayout.js").default=} opt_layout Layout.
     */
    function Circle(center, opt_radius, opt_layout) {
        var _this = _super.call(this) || this;
        if (opt_layout !== undefined && opt_radius === undefined) {
            _this.setFlatCoordinates(opt_layout, center);
        }
        else {
            var radius = opt_radius ? opt_radius : 0;
            _this.setCenterAndRadius(center, radius, opt_layout);
        }
        return _this;
    }
    /**
     * Make a complete copy of the geometry.
     * @return {!Circle} Clone.
     * @api
     */
    Circle.prototype.clone = function () {
        var circle = new Circle(this.flatCoordinates.slice(), undefined, this.layout);
        circle.applyProperties(this);
        return circle;
    };
    /**
     * @param {number} x X.
     * @param {number} y Y.
     * @param {import("../coordinate.js").Coordinate} closestPoint Closest point.
     * @param {number} minSquaredDistance Minimum squared distance.
     * @return {number} Minimum squared distance.
     */
    Circle.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {
        var flatCoordinates = this.flatCoordinates;
        var dx = x - flatCoordinates[0];
        var dy = y - flatCoordinates[1];
        var squaredDistance = dx * dx + dy * dy;
        if (squaredDistance < minSquaredDistance) {
            if (squaredDistance === 0) {
                for (var i = 0; i < this.stride; ++i) {
                    closestPoint[i] = flatCoordinates[i];
                }
            }
            else {
                var delta = this.getRadius() / Math.sqrt(squaredDistance);
                closestPoint[0] = flatCoordinates[0] + delta * dx;
                closestPoint[1] = flatCoordinates[1] + delta * dy;
                for (var i = 2; i < this.stride; ++i) {
                    closestPoint[i] = flatCoordinates[i];
                }
            }
            closestPoint.length = this.stride;
            return squaredDistance;
        }
        else {
            return minSquaredDistance;
        }
    };
    /**
     * @param {number} x X.
     * @param {number} y Y.
     * @return {boolean} Contains (x, y).
     */
    Circle.prototype.containsXY = function (x, y) {
        var flatCoordinates = this.flatCoordinates;
        var dx = x - flatCoordinates[0];
        var dy = y - flatCoordinates[1];
        return dx * dx + dy * dy <= this.getRadiusSquared_();
    };
    /**
     * Return the center of the circle as {@link module:ol/coordinate~Coordinate coordinate}.
     * @return {import("../coordinate.js").Coordinate} Center.
     * @api
     */
    Circle.prototype.getCenter = function () {
        return this.flatCoordinates.slice(0, this.stride);
    };
    /**
     * @param {import("../extent.js").Extent} extent Extent.
     * @protected
     * @return {import("../extent.js").Extent} extent Extent.
     */
    Circle.prototype.computeExtent = function (extent) {
        var flatCoordinates = this.flatCoordinates;
        var radius = flatCoordinates[this.stride] - flatCoordinates[0];
        return (0,_extent_js__WEBPACK_IMPORTED_MODULE_0__.createOrUpdate)(flatCoordinates[0] - radius, flatCoordinates[1] - radius, flatCoordinates[0] + radius, flatCoordinates[1] + radius, extent);
    };
    /**
     * Return the radius of the circle.
     * @return {number} Radius.
     * @api
     */
    Circle.prototype.getRadius = function () {
        return Math.sqrt(this.getRadiusSquared_());
    };
    /**
     * @private
     * @return {number} Radius squared.
     */
    Circle.prototype.getRadiusSquared_ = function () {
        var dx = this.flatCoordinates[this.stride] - this.flatCoordinates[0];
        var dy = this.flatCoordinates[this.stride + 1] - this.flatCoordinates[1];
        return dx * dx + dy * dy;
    };
    /**
     * Get the type of this geometry.
     * @return {import("./GeometryType.js").default} Geometry type.
     * @api
     */
    Circle.prototype.getType = function () {
        return _GeometryType_js__WEBPACK_IMPORTED_MODULE_1__.default.CIRCLE;
    };
    /**
     * Test if the geometry and the passed extent intersect.
     * @param {import("../extent.js").Extent} extent Extent.
     * @return {boolean} `true` if the geometry and the extent intersect.
     * @api
     */
    Circle.prototype.intersectsExtent = function (extent) {
        var circleExtent = this.getExtent();
        if ((0,_extent_js__WEBPACK_IMPORTED_MODULE_0__.intersects)(extent, circleExtent)) {
            var center = this.getCenter();
            if (extent[0] <= center[0] && extent[2] >= center[0]) {
                return true;
            }
            if (extent[1] <= center[1] && extent[3] >= center[1]) {
                return true;
            }
            return (0,_extent_js__WEBPACK_IMPORTED_MODULE_0__.forEachCorner)(extent, this.intersectsCoordinate.bind(this));
        }
        return false;
    };
    /**
     * Set the center of the circle as {@link module:ol/coordinate~Coordinate coordinate}.
     * @param {import("../coordinate.js").Coordinate} center Center.
     * @api
     */
    Circle.prototype.setCenter = function (center) {
        var stride = this.stride;
        var radius = this.flatCoordinates[stride] - this.flatCoordinates[0];
        var flatCoordinates = center.slice();
        flatCoordinates[stride] = flatCoordinates[0] + radius;
        for (var i = 1; i < stride; ++i) {
            flatCoordinates[stride + i] = center[i];
        }
        this.setFlatCoordinates(this.layout, flatCoordinates);
        this.changed();
    };
    /**
     * Set the center (as {@link module:ol/coordinate~Coordinate coordinate}) and the radius (as
     * number) of the circle.
     * @param {!import("../coordinate.js").Coordinate} center Center.
     * @param {number} radius Radius.
     * @param {import("./GeometryLayout.js").default=} opt_layout Layout.
     * @api
     */
    Circle.prototype.setCenterAndRadius = function (center, radius, opt_layout) {
        this.setLayout(opt_layout, center, 0);
        if (!this.flatCoordinates) {
            this.flatCoordinates = [];
        }
        /** @type {Array<number>} */
        var flatCoordinates = this.flatCoordinates;
        var offset = (0,_flat_deflate_js__WEBPACK_IMPORTED_MODULE_2__.deflateCoordinate)(flatCoordinates, 0, center, this.stride);
        flatCoordinates[offset++] = flatCoordinates[0] + radius;
        for (var i = 1, ii = this.stride; i < ii; ++i) {
            flatCoordinates[offset++] = flatCoordinates[i];
        }
        flatCoordinates.length = offset;
        this.changed();
    };
    Circle.prototype.getCoordinates = function () {
        return null;
    };
    Circle.prototype.setCoordinates = function (coordinates, opt_layout) { };
    /**
     * Set the radius of the circle. The radius is in the units of the projection.
     * @param {number} radius Radius.
     * @api
     */
    Circle.prototype.setRadius = function (radius) {
        this.flatCoordinates[this.stride] = this.flatCoordinates[0] + radius;
        this.changed();
    };
    /**
     * Rotate the geometry around a given coordinate. This modifies the geometry
     * coordinates in place.
     * @param {number} angle Rotation angle in counter-clockwise radians.
     * @param {import("../coordinate.js").Coordinate} anchor The rotation center.
     * @api
     */
    Circle.prototype.rotate = function (angle, anchor) {
        var center = this.getCenter();
        var stride = this.getStride();
        this.setCenter((0,_flat_transform_js__WEBPACK_IMPORTED_MODULE_3__.rotate)(center, 0, center.length, stride, angle, anchor, center));
        this.changed();
    };
    /**
     * Translate the geometry.  This modifies the geometry coordinates in place.  If
     * instead you want a new geometry, first `clone()` this geometry.
     * @param {number} deltaX Delta X.
     * @param {number} deltaY Delta Y.
     * @api
     */
    Circle.prototype.translate = function (deltaX, deltaY) {
        var center = this.getCenter();
        var stride = this.getStride();
        this.setCenter((0,_flat_transform_js__WEBPACK_IMPORTED_MODULE_3__.translate)(center, 0, center.length, stride, deltaX, deltaY, center));
        this.changed();
    };
    return Circle;
}(_SimpleGeometry_js__WEBPACK_IMPORTED_MODULE_4__.default));
/**
 * Transform each coordinate of the circle from one coordinate reference system
 * to another. The geometry is modified in place.
 * If you do not want the geometry modified in place, first clone() it and
 * then use this function on the clone.
 *
 * Internally a circle is currently represented by two points: the center of
 * the circle `[cx, cy]`, and the point to the right of the circle
 * `[cx + r, cy]`. This `transform` function just transforms these two points.
 * So the resulting geometry is also a circle, and that circle does not
 * correspond to the shape that would be obtained by transforming every point
 * of the original circle.
 *
 * @param {import("../proj.js").ProjectionLike} source The current projection.  Can be a
 *     string identifier or a {@link module:ol/proj/Projection~Projection} object.
 * @param {import("../proj.js").ProjectionLike} destination The desired projection.  Can be a
 *     string identifier or a {@link module:ol/proj/Projection~Projection} object.
 * @return {Circle} This geometry.  Note that original geometry is
 *     modified in place.
 * @function
 * @api
 */
Circle.prototype.transform;
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Circle);
//# sourceMappingURL=Circle.js.map

/***/ }),

/***/ "./node_modules/ol/geom/Geometry.js":
/*!******************************************!*\
  !*** ./node_modules/ol/geom/Geometry.js ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _Object_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../Object.js */ "./node_modules/ol/Object.js");
/* harmony import */ var _proj_Units_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../proj/Units.js */ "./node_modules/ol/proj/Units.js");
/* harmony import */ var _util_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../util.js */ "./node_modules/ol/util.js");
/* harmony import */ var _transform_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../transform.js */ "./node_modules/ol/transform.js");
/* harmony import */ var _extent_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../extent.js */ "./node_modules/ol/extent.js");
/* harmony import */ var _proj_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../proj.js */ "./node_modules/ol/proj.js");
/* harmony import */ var _functions_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../functions.js */ "./node_modules/ol/functions.js");
/* harmony import */ var _flat_transform_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./flat/transform.js */ "./node_modules/ol/geom/flat/transform.js");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
/**
 * @module ol/geom/Geometry
 */








/**
 * @type {import("../transform.js").Transform}
 */
var tmpTransform = (0,_transform_js__WEBPACK_IMPORTED_MODULE_1__.create)();
/**
 * @classdesc
 * Abstract base class; normally only used for creating subclasses and not
 * instantiated in apps.
 * Base class for vector geometries.
 *
 * To get notified of changes to the geometry, register a listener for the
 * generic `change` event on your geometry instance.
 *
 * @abstract
 * @api
 */
var Geometry = /** @class */ (function (_super) {
    __extends(Geometry, _super);
    function Geometry() {
        var _this = _super.call(this) || this;
        /**
         * @private
         * @type {import("../extent.js").Extent}
         */
        _this.extent_ = (0,_extent_js__WEBPACK_IMPORTED_MODULE_2__.createEmpty)();
        /**
         * @private
         * @type {number}
         */
        _this.extentRevision_ = -1;
        /**
         * @protected
         * @type {number}
         */
        _this.simplifiedGeometryMaxMinSquaredTolerance = 0;
        /**
         * @protected
         * @type {number}
         */
        _this.simplifiedGeometryRevision = 0;
        /**
         * Get a transformed and simplified version of the geometry.
         * @abstract
         * @param {number} revision The geometry revision.
         * @param {number} squaredTolerance Squared tolerance.
         * @param {import("../proj.js").TransformFunction} [opt_transform] Optional transform function.
         * @return {Geometry} Simplified geometry.
         */
        _this.simplifyTransformedInternal = (0,_functions_js__WEBPACK_IMPORTED_MODULE_3__.memoizeOne)(function (revision, squaredTolerance, opt_transform) {
            if (!opt_transform) {
                return this.getSimplifiedGeometry(squaredTolerance);
            }
            var clone = this.clone();
            clone.applyTransform(opt_transform);
            return clone.getSimplifiedGeometry(squaredTolerance);
        });
        return _this;
    }
    /**
     * Get a transformed and simplified version of the geometry.
     * @abstract
     * @param {number} squaredTolerance Squared tolerance.
     * @param {import("../proj.js").TransformFunction} [opt_transform] Optional transform function.
     * @return {Geometry} Simplified geometry.
     */
    Geometry.prototype.simplifyTransformed = function (squaredTolerance, opt_transform) {
        return this.simplifyTransformedInternal(this.getRevision(), squaredTolerance, opt_transform);
    };
    /**
     * Make a complete copy of the geometry.
     * @abstract
     * @return {!Geometry} Clone.
     */
    Geometry.prototype.clone = function () {
        return (0,_util_js__WEBPACK_IMPORTED_MODULE_4__.abstract)();
    };
    /**
     * @abstract
     * @param {number} x X.
     * @param {number} y Y.
     * @param {import("../coordinate.js").Coordinate} closestPoint Closest point.
     * @param {number} minSquaredDistance Minimum squared distance.
     * @return {number} Minimum squared distance.
     */
    Geometry.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {
        return (0,_util_js__WEBPACK_IMPORTED_MODULE_4__.abstract)();
    };
    /**
     * @param {number} x X.
     * @param {number} y Y.
     * @return {boolean} Contains (x, y).
     */
    Geometry.prototype.containsXY = function (x, y) {
        var coord = this.getClosestPoint([x, y]);
        return coord[0] === x && coord[1] === y;
    };
    /**
     * Return the closest point of the geometry to the passed point as
     * {@link module:ol/coordinate~Coordinate coordinate}.
     * @param {import("../coordinate.js").Coordinate} point Point.
     * @param {import("../coordinate.js").Coordinate=} opt_closestPoint Closest point.
     * @return {import("../coordinate.js").Coordinate} Closest point.
     * @api
     */
    Geometry.prototype.getClosestPoint = function (point, opt_closestPoint) {
        var closestPoint = opt_closestPoint ? opt_closestPoint : [NaN, NaN];
        this.closestPointXY(point[0], point[1], closestPoint, Infinity);
        return closestPoint;
    };
    /**
     * Returns true if this geometry includes the specified coordinate. If the
     * coordinate is on the boundary of the geometry, returns false.
     * @param {import("../coordinate.js").Coordinate} coordinate Coordinate.
     * @return {boolean} Contains coordinate.
     * @api
     */
    Geometry.prototype.intersectsCoordinate = function (coordinate) {
        return this.containsXY(coordinate[0], coordinate[1]);
    };
    /**
     * @abstract
     * @param {import("../extent.js").Extent} extent Extent.
     * @protected
     * @return {import("../extent.js").Extent} extent Extent.
     */
    Geometry.prototype.computeExtent = function (extent) {
        return (0,_util_js__WEBPACK_IMPORTED_MODULE_4__.abstract)();
    };
    /**
     * Get the extent of the geometry.
     * @param {import("../extent.js").Extent=} opt_extent Extent.
     * @return {import("../extent.js").Extent} extent Extent.
     * @api
     */
    Geometry.prototype.getExtent = function (opt_extent) {
        if (this.extentRevision_ != this.getRevision()) {
            var extent = this.computeExtent(this.extent_);
            if (isNaN(extent[0]) || isNaN(extent[1])) {
                (0,_extent_js__WEBPACK_IMPORTED_MODULE_2__.createOrUpdateEmpty)(extent);
            }
            this.extentRevision_ = this.getRevision();
        }
        return (0,_extent_js__WEBPACK_IMPORTED_MODULE_2__.returnOrUpdate)(this.extent_, opt_extent);
    };
    /**
     * Rotate the geometry around a given coordinate. This modifies the geometry
     * coordinates in place.
     * @abstract
     * @param {number} angle Rotation angle in radians.
     * @param {import("../coordinate.js").Coordinate} anchor The rotation center.
     * @api
     */
    Geometry.prototype.rotate = function (angle, anchor) {
        (0,_util_js__WEBPACK_IMPORTED_MODULE_4__.abstract)();
    };
    /**
     * Scale the geometry (with an optional origin).  This modifies the geometry
     * coordinates in place.
     * @abstract
     * @param {number} sx The scaling factor in the x-direction.
     * @param {number=} opt_sy The scaling factor in the y-direction (defaults to sx).
     * @param {import("../coordinate.js").Coordinate=} opt_anchor The scale origin (defaults to the center
     *     of the geometry extent).
     * @api
     */
    Geometry.prototype.scale = function (sx, opt_sy, opt_anchor) {
        (0,_util_js__WEBPACK_IMPORTED_MODULE_4__.abstract)();
    };
    /**
     * Create a simplified version of this geometry.  For linestrings, this uses
     * the [Douglas Peucker](https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm)
     * algorithm.  For polygons, a quantization-based
     * simplification is used to preserve topology.
     * @param {number} tolerance The tolerance distance for simplification.
     * @return {Geometry} A new, simplified version of the original geometry.
     * @api
     */
    Geometry.prototype.simplify = function (tolerance) {
        return this.getSimplifiedGeometry(tolerance * tolerance);
    };
    /**
     * Create a simplified version of this geometry using the Douglas Peucker
     * algorithm.
     * See https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm.
     * @abstract
     * @param {number} squaredTolerance Squared tolerance.
     * @return {Geometry} Simplified geometry.
     */
    Geometry.prototype.getSimplifiedGeometry = function (squaredTolerance) {
        return (0,_util_js__WEBPACK_IMPORTED_MODULE_4__.abstract)();
    };
    /**
     * Get the type of this geometry.
     * @abstract
     * @return {import("./GeometryType.js").default} Geometry type.
     */
    Geometry.prototype.getType = function () {
        return (0,_util_js__WEBPACK_IMPORTED_MODULE_4__.abstract)();
    };
    /**
     * Apply a transform function to the coordinates of the geometry.
     * The geometry is modified in place.
     * If you do not want the geometry modified in place, first `clone()` it and
     * then use this function on the clone.
     * @abstract
     * @param {import("../proj.js").TransformFunction} transformFn Transform function.
     * Called with a flat array of geometry coordinates.
     */
    Geometry.prototype.applyTransform = function (transformFn) {
        (0,_util_js__WEBPACK_IMPORTED_MODULE_4__.abstract)();
    };
    /**
     * Test if the geometry and the passed extent intersect.
     * @abstract
     * @param {import("../extent.js").Extent} extent Extent.
     * @return {boolean} `true` if the geometry and the extent intersect.
     */
    Geometry.prototype.intersectsExtent = function (extent) {
        return (0,_util_js__WEBPACK_IMPORTED_MODULE_4__.abstract)();
    };
    /**
     * Translate the geometry.  This modifies the geometry coordinates in place.  If
     * instead you want a new geometry, first `clone()` this geometry.
     * @abstract
     * @param {number} deltaX Delta X.
     * @param {number} deltaY Delta Y.
     * @api
     */
    Geometry.prototype.translate = function (deltaX, deltaY) {
        (0,_util_js__WEBPACK_IMPORTED_MODULE_4__.abstract)();
    };
    /**
     * Transform each coordinate of the geometry from one coordinate reference
     * system to another. The geometry is modified in place.
     * For example, a line will be transformed to a line and a circle to a circle.
     * If you do not want the geometry modified in place, first `clone()` it and
     * then use this function on the clone.
     *
     * @param {import("../proj.js").ProjectionLike} source The current projection.  Can be a
     *     string identifier or a {@link module:ol/proj/Projection~Projection} object.
     * @param {import("../proj.js").ProjectionLike} destination The desired projection.  Can be a
     *     string identifier or a {@link module:ol/proj/Projection~Projection} object.
     * @return {Geometry} This geometry.  Note that original geometry is
     *     modified in place.
     * @api
     */
    Geometry.prototype.transform = function (source, destination) {
        /** @type {import("../proj/Projection.js").default} */
        var sourceProj = (0,_proj_js__WEBPACK_IMPORTED_MODULE_0__.get)(source);
        var transformFn = sourceProj.getUnits() == _proj_Units_js__WEBPACK_IMPORTED_MODULE_5__.default.TILE_PIXELS
            ? function (inCoordinates, outCoordinates, stride) {
                var pixelExtent = sourceProj.getExtent();
                var projectedExtent = sourceProj.getWorldExtent();
                var scale = (0,_extent_js__WEBPACK_IMPORTED_MODULE_2__.getHeight)(projectedExtent) / (0,_extent_js__WEBPACK_IMPORTED_MODULE_2__.getHeight)(pixelExtent);
                (0,_transform_js__WEBPACK_IMPORTED_MODULE_1__.compose)(tmpTransform, projectedExtent[0], projectedExtent[3], scale, -scale, 0, 0, 0);
                (0,_flat_transform_js__WEBPACK_IMPORTED_MODULE_6__.transform2D)(inCoordinates, 0, inCoordinates.length, stride, tmpTransform, outCoordinates);
                return (0,_proj_js__WEBPACK_IMPORTED_MODULE_0__.getTransform)(sourceProj, destination)(inCoordinates, outCoordinates, stride);
            }
            : (0,_proj_js__WEBPACK_IMPORTED_MODULE_0__.getTransform)(sourceProj, destination);
        this.applyTransform(transformFn);
        return this;
    };
    return Geometry;
}(_Object_js__WEBPACK_IMPORTED_MODULE_7__.default));
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Geometry);
//# sourceMappingURL=Geometry.js.map

/***/ }),

/***/ "./node_modules/ol/geom/GeometryCollection.js":
/*!****************************************************!*\
  !*** ./node_modules/ol/geom/GeometryCollection.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _events_EventType_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../events/EventType.js */ "./node_modules/ol/events/EventType.js");
/* harmony import */ var _Geometry_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./Geometry.js */ "./node_modules/ol/geom/Geometry.js");
/* harmony import */ var _GeometryType_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./GeometryType.js */ "./node_modules/ol/geom/GeometryType.js");
/* harmony import */ var _extent_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../extent.js */ "./node_modules/ol/extent.js");
/* harmony import */ var _events_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../events.js */ "./node_modules/ol/events.js");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
/**
 * @module ol/geom/GeometryCollection
 */





/**
 * @classdesc
 * An array of {@link module:ol/geom/Geometry} objects.
 *
 * @api
 */
var GeometryCollection = /** @class */ (function (_super) {
    __extends(GeometryCollection, _super);
    /**
     * @param {Array<Geometry>=} opt_geometries Geometries.
     */
    function GeometryCollection(opt_geometries) {
        var _this = _super.call(this) || this;
        /**
         * @private
         * @type {Array<Geometry>}
         */
        _this.geometries_ = opt_geometries ? opt_geometries : null;
        /**
         * @type {Array<import("../events.js").EventsKey>}
         */
        _this.changeEventsKeys_ = [];
        _this.listenGeometriesChange_();
        return _this;
    }
    /**
     * @private
     */
    GeometryCollection.prototype.unlistenGeometriesChange_ = function () {
        this.changeEventsKeys_.forEach(_events_js__WEBPACK_IMPORTED_MODULE_0__.unlistenByKey);
        this.changeEventsKeys_.length = 0;
    };
    /**
     * @private
     */
    GeometryCollection.prototype.listenGeometriesChange_ = function () {
        if (!this.geometries_) {
            return;
        }
        for (var i = 0, ii = this.geometries_.length; i < ii; ++i) {
            this.changeEventsKeys_.push((0,_events_js__WEBPACK_IMPORTED_MODULE_0__.listen)(this.geometries_[i], _events_EventType_js__WEBPACK_IMPORTED_MODULE_1__.default.CHANGE, this.changed, this));
        }
    };
    /**
     * Make a complete copy of the geometry.
     * @return {!GeometryCollection} Clone.
     * @api
     */
    GeometryCollection.prototype.clone = function () {
        var geometryCollection = new GeometryCollection(null);
        geometryCollection.setGeometries(this.geometries_);
        geometryCollection.applyProperties(this);
        return geometryCollection;
    };
    /**
     * @param {number} x X.
     * @param {number} y Y.
     * @param {import("../coordinate.js").Coordinate} closestPoint Closest point.
     * @param {number} minSquaredDistance Minimum squared distance.
     * @return {number} Minimum squared distance.
     */
    GeometryCollection.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {
        if (minSquaredDistance < (0,_extent_js__WEBPACK_IMPORTED_MODULE_2__.closestSquaredDistanceXY)(this.getExtent(), x, y)) {
            return minSquaredDistance;
        }
        var geometries = this.geometries_;
        for (var i = 0, ii = geometries.length; i < ii; ++i) {
            minSquaredDistance = geometries[i].closestPointXY(x, y, closestPoint, minSquaredDistance);
        }
        return minSquaredDistance;
    };
    /**
     * @param {number} x X.
     * @param {number} y Y.
     * @return {boolean} Contains (x, y).
     */
    GeometryCollection.prototype.containsXY = function (x, y) {
        var geometries = this.geometries_;
        for (var i = 0, ii = geometries.length; i < ii; ++i) {
            if (geometries[i].containsXY(x, y)) {
                return true;
            }
        }
        return false;
    };
    /**
     * @param {import("../extent.js").Extent} extent Extent.
     * @protected
     * @return {import("../extent.js").Extent} extent Extent.
     */
    GeometryCollection.prototype.computeExtent = function (extent) {
        (0,_extent_js__WEBPACK_IMPORTED_MODULE_2__.createOrUpdateEmpty)(extent);
        var geometries = this.geometries_;
        for (var i = 0, ii = geometries.length; i < ii; ++i) {
            (0,_extent_js__WEBPACK_IMPORTED_MODULE_2__.extend)(extent, geometries[i].getExtent());
        }
        return extent;
    };
    /**
     * Return the geometries that make up this geometry collection.
     * @return {Array<Geometry>} Geometries.
     * @api
     */
    GeometryCollection.prototype.getGeometries = function () {
        return cloneGeometries(this.geometries_);
    };
    /**
     * @return {Array<Geometry>} Geometries.
     */
    GeometryCollection.prototype.getGeometriesArray = function () {
        return this.geometries_;
    };
    /**
     * @return {Array<Geometry>} Geometries.
     */
    GeometryCollection.prototype.getGeometriesArrayRecursive = function () {
        /** @type {Array<Geometry>} */
        var geometriesArray = [];
        var geometries = this.geometries_;
        for (var i = 0, ii = geometries.length; i < ii; ++i) {
            if (geometries[i].getType() === this.getType()) {
                geometriesArray = geometriesArray.concat(
                /** @type {GeometryCollection} */ (geometries[i]).getGeometriesArrayRecursive());
            }
            else {
                geometriesArray.push(geometries[i]);
            }
        }
        return geometriesArray;
    };
    /**
     * Create a simplified version of this geometry using the Douglas Peucker algorithm.
     * @param {number} squaredTolerance Squared tolerance.
     * @return {GeometryCollection} Simplified GeometryCollection.
     */
    GeometryCollection.prototype.getSimplifiedGeometry = function (squaredTolerance) {
        if (this.simplifiedGeometryRevision !== this.getRevision()) {
            this.simplifiedGeometryMaxMinSquaredTolerance = 0;
            this.simplifiedGeometryRevision = this.getRevision();
        }
        if (squaredTolerance < 0 ||
            (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&
                squaredTolerance < this.simplifiedGeometryMaxMinSquaredTolerance)) {
            return this;
        }
        var simplifiedGeometries = [];
        var geometries = this.geometries_;
        var simplified = false;
        for (var i = 0, ii = geometries.length; i < ii; ++i) {
            var geometry = geometries[i];
            var simplifiedGeometry = geometry.getSimplifiedGeometry(squaredTolerance);
            simplifiedGeometries.push(simplifiedGeometry);
            if (simplifiedGeometry !== geometry) {
                simplified = true;
            }
        }
        if (simplified) {
            var simplifiedGeometryCollection = new GeometryCollection(null);
            simplifiedGeometryCollection.setGeometriesArray(simplifiedGeometries);
            return simplifiedGeometryCollection;
        }
        else {
            this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;
            return this;
        }
    };
    /**
     * Get the type of this geometry.
     * @return {import("./GeometryType.js").default} Geometry type.
     * @api
     */
    GeometryCollection.prototype.getType = function () {
        return _GeometryType_js__WEBPACK_IMPORTED_MODULE_3__.default.GEOMETRY_COLLECTION;
    };
    /**
     * Test if the geometry and the passed extent intersect.
     * @param {import("../extent.js").Extent} extent Extent.
     * @return {boolean} `true` if the geometry and the extent intersect.
     * @api
     */
    GeometryCollection.prototype.intersectsExtent = function (extent) {
        var geometries = this.geometries_;
        for (var i = 0, ii = geometries.length; i < ii; ++i) {
            if (geometries[i].intersectsExtent(extent)) {
                return true;
            }
        }
        return false;
    };
    /**
     * @return {boolean} Is empty.
     */
    GeometryCollection.prototype.isEmpty = function () {
        return this.geometries_.length === 0;
    };
    /**
     * Rotate the geometry around a given coordinate. This modifies the geometry
     * coordinates in place.
     * @param {number} angle Rotation angle in radians.
     * @param {import("../coordinate.js").Coordinate} anchor The rotation center.
     * @api
     */
    GeometryCollection.prototype.rotate = function (angle, anchor) {
        var geometries = this.geometries_;
        for (var i = 0, ii = geometries.length; i < ii; ++i) {
            geometries[i].rotate(angle, anchor);
        }
        this.changed();
    };
    /**
     * Scale the geometry (with an optional origin).  This modifies the geometry
     * coordinates in place.
     * @abstract
     * @param {number} sx The scaling factor in the x-direction.
     * @param {number=} opt_sy The scaling factor in the y-direction (defaults to sx).
     * @param {import("../coordinate.js").Coordinate=} opt_anchor The scale origin (defaults to the center
     *     of the geometry extent).
     * @api
     */
    GeometryCollection.prototype.scale = function (sx, opt_sy, opt_anchor) {
        var anchor = opt_anchor;
        if (!anchor) {
            anchor = (0,_extent_js__WEBPACK_IMPORTED_MODULE_2__.getCenter)(this.getExtent());
        }
        var geometries = this.geometries_;
        for (var i = 0, ii = geometries.length; i < ii; ++i) {
            geometries[i].scale(sx, opt_sy, anchor);
        }
        this.changed();
    };
    /**
     * Set the geometries that make up this geometry collection.
     * @param {Array<Geometry>} geometries Geometries.
     * @api
     */
    GeometryCollection.prototype.setGeometries = function (geometries) {
        this.setGeometriesArray(cloneGeometries(geometries));
    };
    /**
     * @param {Array<Geometry>} geometries Geometries.
     */
    GeometryCollection.prototype.setGeometriesArray = function (geometries) {
        this.unlistenGeometriesChange_();
        this.geometries_ = geometries;
        this.listenGeometriesChange_();
        this.changed();
    };
    /**
     * Apply a transform function to the coordinates of the geometry.
     * The geometry is modified in place.
     * If you do not want the geometry modified in place, first `clone()` it and
     * then use this function on the clone.
     * @param {import("../proj.js").TransformFunction} transformFn Transform function.
     * Called with a flat array of geometry coordinates.
     * @api
     */
    GeometryCollection.prototype.applyTransform = function (transformFn) {
        var geometries = this.geometries_;
        for (var i = 0, ii = geometries.length; i < ii; ++i) {
            geometries[i].applyTransform(transformFn);
        }
        this.changed();
    };
    /**
     * Translate the geometry.  This modifies the geometry coordinates in place.  If
     * instead you want a new geometry, first `clone()` this geometry.
     * @param {number} deltaX Delta X.
     * @param {number} deltaY Delta Y.
     * @api
     */
    GeometryCollection.prototype.translate = function (deltaX, deltaY) {
        var geometries = this.geometries_;
        for (var i = 0, ii = geometries.length; i < ii; ++i) {
            geometries[i].translate(deltaX, deltaY);
        }
        this.changed();
    };
    /**
     * Clean up.
     */
    GeometryCollection.prototype.disposeInternal = function () {
        this.unlistenGeometriesChange_();
        _super.prototype.disposeInternal.call(this);
    };
    return GeometryCollection;
}(_Geometry_js__WEBPACK_IMPORTED_MODULE_4__.default));
/**
 * @param {Array<Geometry>} geometries Geometries.
 * @return {Array<Geometry>} Cloned geometries.
 */
function cloneGeometries(geometries) {
    var clonedGeometries = [];
    for (var i = 0, ii = geometries.length; i < ii; ++i) {
        clonedGeometries.push(geometries[i].clone());
    }
    return clonedGeometries;
}
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (GeometryCollection);
//# sourceMappingURL=GeometryCollection.js.map

/***/ }),

/***/ "./node_modules/ol/geom/GeometryLayout.js":
/*!************************************************!*\
  !*** ./node_modules/ol/geom/GeometryLayout.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/**
 * @module ol/geom/GeometryLayout
 */
/**
 * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')
 * or measure ('M') coordinate is available. Supported values are `'XY'`,
 * `'XYZ'`, `'XYM'`, `'XYZM'`.
 * @enum {string}
 */
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
    XY: 'XY',
    XYZ: 'XYZ',
    XYM: 'XYM',
    XYZM: 'XYZM',
});
//# sourceMappingURL=GeometryLayout.js.map

/***/ }),

/***/ "./node_modules/ol/geom/GeometryType.js":
/*!**********************************************!*\
  !*** ./node_modules/ol/geom/GeometryType.js ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/**
 * @module ol/geom/GeometryType
 */
/**
 * The geometry type. One of `'Point'`, `'LineString'`, `'LinearRing'`,
 * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,
 * `'GeometryCollection'`, `'Circle'`.
 * @enum {string}
 */
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
    POINT: 'Point',
    LINE_STRING: 'LineString',
    LINEAR_RING: 'LinearRing',
    POLYGON: 'Polygon',
    MULTI_POINT: 'MultiPoint',
    MULTI_LINE_STRING: 'MultiLineString',
    MULTI_POLYGON: 'MultiPolygon',
    GEOMETRY_COLLECTION: 'GeometryCollection',
    CIRCLE: 'Circle',
});
//# sourceMappingURL=GeometryType.js.map

/***/ }),

/***/ "./node_modules/ol/geom/LineString.js":
/*!********************************************!*\
  !*** ./node_modules/ol/geom/LineString.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _GeometryLayout_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./GeometryLayout.js */ "./node_modules/ol/geom/GeometryLayout.js");
/* harmony import */ var _GeometryType_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./GeometryType.js */ "./node_modules/ol/geom/GeometryType.js");
/* harmony import */ var _SimpleGeometry_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./SimpleGeometry.js */ "./node_modules/ol/geom/SimpleGeometry.js");
/* harmony import */ var _flat_closest_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./flat/closest.js */ "./node_modules/ol/geom/flat/closest.js");
/* harmony import */ var _extent_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../extent.js */ "./node_modules/ol/extent.js");
/* harmony import */ var _flat_deflate_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./flat/deflate.js */ "./node_modules/ol/geom/flat/deflate.js");
/* harmony import */ var _flat_simplify_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./flat/simplify.js */ "./node_modules/ol/geom/flat/simplify.js");
/* harmony import */ var _array_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../array.js */ "./node_modules/ol/array.js");
/* harmony import */ var _flat_segments_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./flat/segments.js */ "./node_modules/ol/geom/flat/segments.js");
/* harmony import */ var _flat_inflate_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./flat/inflate.js */ "./node_modules/ol/geom/flat/inflate.js");
/* harmony import */ var _flat_interpolate_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./flat/interpolate.js */ "./node_modules/ol/geom/flat/interpolate.js");
/* harmony import */ var _flat_intersectsextent_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./flat/intersectsextent.js */ "./node_modules/ol/geom/flat/intersectsextent.js");
/* harmony import */ var _flat_length_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./flat/length.js */ "./node_modules/ol/geom/flat/length.js");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
/**
 * @module ol/geom/LineString
 */













/**
 * @classdesc
 * Linestring geometry.
 *
 * @api
 */
var LineString = /** @class */ (function (_super) {
    __extends(LineString, _super);
    /**
     * @param {Array<import("../coordinate.js").Coordinate>|Array<number>} coordinates Coordinates.
     *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.
     * @param {import("./GeometryLayout.js").default=} opt_layout Layout.
     */
    function LineString(coordinates, opt_layout) {
        var _this = _super.call(this) || this;
        /**
         * @private
         * @type {import("../coordinate.js").Coordinate}
         */
        _this.flatMidpoint_ = null;
        /**
         * @private
         * @type {number}
         */
        _this.flatMidpointRevision_ = -1;
        /**
         * @private
         * @type {number}
         */
        _this.maxDelta_ = -1;
        /**
         * @private
         * @type {number}
         */
        _this.maxDeltaRevision_ = -1;
        if (opt_layout !== undefined && !Array.isArray(coordinates[0])) {
            _this.setFlatCoordinates(opt_layout, 
            /** @type {Array<number>} */ (coordinates));
        }
        else {
            _this.setCoordinates(
            /** @type {Array<import("../coordinate.js").Coordinate>} */ (coordinates), opt_layout);
        }
        return _this;
    }
    /**
     * Append the passed coordinate to the coordinates of the linestring.
     * @param {import("../coordinate.js").Coordinate} coordinate Coordinate.
     * @api
     */
    LineString.prototype.appendCoordinate = function (coordinate) {
        if (!this.flatCoordinates) {
            this.flatCoordinates = coordinate.slice();
        }
        else {
            (0,_array_js__WEBPACK_IMPORTED_MODULE_0__.extend)(this.flatCoordinates, coordinate);
        }
        this.changed();
    };
    /**
     * Make a complete copy of the geometry.
     * @return {!LineString} Clone.
     * @api
     */
    LineString.prototype.clone = function () {
        var lineString = new LineString(this.flatCoordinates.slice(), this.layout);
        lineString.applyProperties(this);
        return lineString;
    };
    /**
     * @param {number} x X.
     * @param {number} y Y.
     * @param {import("../coordinate.js").Coordinate} closestPoint Closest point.
     * @param {number} minSquaredDistance Minimum squared distance.
     * @return {number} Minimum squared distance.
     */
    LineString.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {
        if (minSquaredDistance < (0,_extent_js__WEBPACK_IMPORTED_MODULE_1__.closestSquaredDistanceXY)(this.getExtent(), x, y)) {
            return minSquaredDistance;
        }
        if (this.maxDeltaRevision_ != this.getRevision()) {
            this.maxDelta_ = Math.sqrt((0,_flat_closest_js__WEBPACK_IMPORTED_MODULE_2__.maxSquaredDelta)(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, 0));
            this.maxDeltaRevision_ = this.getRevision();
        }
        return (0,_flat_closest_js__WEBPACK_IMPORTED_MODULE_2__.assignClosestPoint)(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, this.maxDelta_, false, x, y, closestPoint, minSquaredDistance);
    };
    /**
     * Iterate over each segment, calling the provided callback.
     * If the callback returns a truthy value the function returns that
     * value immediately. Otherwise the function returns `false`.
     *
     * @param {function(this: S, import("../coordinate.js").Coordinate, import("../coordinate.js").Coordinate): T} callback Function
     *     called for each segment. The function will receive two arguments, the start and end coordinates of the segment.
     * @return {T|boolean} Value.
     * @template T,S
     * @api
     */
    LineString.prototype.forEachSegment = function (callback) {
        return (0,_flat_segments_js__WEBPACK_IMPORTED_MODULE_3__.forEach)(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, callback);
    };
    /**
     * Returns the coordinate at `m` using linear interpolation, or `null` if no
     * such coordinate exists.
     *
     * `opt_extrapolate` controls extrapolation beyond the range of Ms in the
     * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first
     * M will return the first coordinate and Ms greater than the last M will
     * return the last coordinate.
     *
     * @param {number} m M.
     * @param {boolean=} opt_extrapolate Extrapolate. Default is `false`.
     * @return {import("../coordinate.js").Coordinate} Coordinate.
     * @api
     */
    LineString.prototype.getCoordinateAtM = function (m, opt_extrapolate) {
        if (this.layout != _GeometryLayout_js__WEBPACK_IMPORTED_MODULE_4__.default.XYM &&
            this.layout != _GeometryLayout_js__WEBPACK_IMPORTED_MODULE_4__.default.XYZM) {
            return null;
        }
        var extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;
        return (0,_flat_interpolate_js__WEBPACK_IMPORTED_MODULE_5__.lineStringCoordinateAtM)(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, m, extrapolate);
    };
    /**
     * Return the coordinates of the linestring.
     * @return {Array<import("../coordinate.js").Coordinate>} Coordinates.
     * @api
     */
    LineString.prototype.getCoordinates = function () {
        return (0,_flat_inflate_js__WEBPACK_IMPORTED_MODULE_6__.inflateCoordinates)(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);
    };
    /**
     * Return the coordinate at the provided fraction along the linestring.
     * The `fraction` is a number between 0 and 1, where 0 is the start of the
     * linestring and 1 is the end.
     * @param {number} fraction Fraction.
     * @param {import("../coordinate.js").Coordinate=} opt_dest Optional coordinate whose values will
     *     be modified. If not provided, a new coordinate will be returned.
     * @return {import("../coordinate.js").Coordinate} Coordinate of the interpolated point.
     * @api
     */
    LineString.prototype.getCoordinateAt = function (fraction, opt_dest) {
        return (0,_flat_interpolate_js__WEBPACK_IMPORTED_MODULE_5__.interpolatePoint)(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, fraction, opt_dest, this.stride);
    };
    /**
     * Return the length of the linestring on projected plane.
     * @return {number} Length (on projected plane).
     * @api
     */
    LineString.prototype.getLength = function () {
        return (0,_flat_length_js__WEBPACK_IMPORTED_MODULE_7__.lineStringLength)(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);
    };
    /**
     * @return {Array<number>} Flat midpoint.
     */
    LineString.prototype.getFlatMidpoint = function () {
        if (this.flatMidpointRevision_ != this.getRevision()) {
            this.flatMidpoint_ = this.getCoordinateAt(0.5, this.flatMidpoint_);
            this.flatMidpointRevision_ = this.getRevision();
        }
        return this.flatMidpoint_;
    };
    /**
     * @param {number} squaredTolerance Squared tolerance.
     * @return {LineString} Simplified LineString.
     * @protected
     */
    LineString.prototype.getSimplifiedGeometryInternal = function (squaredTolerance) {
        var simplifiedFlatCoordinates = [];
        simplifiedFlatCoordinates.length = (0,_flat_simplify_js__WEBPACK_IMPORTED_MODULE_8__.douglasPeucker)(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, squaredTolerance, simplifiedFlatCoordinates, 0);
        return new LineString(simplifiedFlatCoordinates, _GeometryLayout_js__WEBPACK_IMPORTED_MODULE_4__.default.XY);
    };
    /**
     * Get the type of this geometry.
     * @return {import("./GeometryType.js").default} Geometry type.
     * @api
     */
    LineString.prototype.getType = function () {
        return _GeometryType_js__WEBPACK_IMPORTED_MODULE_9__.default.LINE_STRING;
    };
    /**
     * Test if the geometry and the passed extent intersect.
     * @param {import("../extent.js").Extent} extent Extent.
     * @return {boolean} `true` if the geometry and the extent intersect.
     * @api
     */
    LineString.prototype.intersectsExtent = function (extent) {
        return (0,_flat_intersectsextent_js__WEBPACK_IMPORTED_MODULE_10__.intersectsLineString)(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, extent);
    };
    /**
     * Set the coordinates of the linestring.
     * @param {!Array<import("../coordinate.js").Coordinate>} coordinates Coordinates.
     * @param {import("./GeometryLayout.js").default=} opt_layout Layout.
     * @api
     */
    LineString.prototype.setCoordinates = function (coordinates, opt_layout) {
        this.setLayout(opt_layout, coordinates, 1);
        if (!this.flatCoordinates) {
            this.flatCoordinates = [];
        }
        this.flatCoordinates.length = (0,_flat_deflate_js__WEBPACK_IMPORTED_MODULE_11__.deflateCoordinates)(this.flatCoordinates, 0, coordinates, this.stride);
        this.changed();
    };
    return LineString;
}(_SimpleGeometry_js__WEBPACK_IMPORTED_MODULE_12__.default));
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (LineString);
//# sourceMappingURL=LineString.js.map

/***/ }),

/***/ "./node_modules/ol/geom/LinearRing.js":
/*!********************************************!*\
  !*** ./node_modules/ol/geom/LinearRing.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _GeometryLayout_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./GeometryLayout.js */ "./node_modules/ol/geom/GeometryLayout.js");
/* harmony import */ var _GeometryType_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./GeometryType.js */ "./node_modules/ol/geom/GeometryType.js");
/* harmony import */ var _SimpleGeometry_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./SimpleGeometry.js */ "./node_modules/ol/geom/SimpleGeometry.js");
/* harmony import */ var _flat_closest_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./flat/closest.js */ "./node_modules/ol/geom/flat/closest.js");
/* harmony import */ var _extent_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../extent.js */ "./node_modules/ol/extent.js");
/* harmony import */ var _flat_deflate_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./flat/deflate.js */ "./node_modules/ol/geom/flat/deflate.js");
/* harmony import */ var _flat_simplify_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./flat/simplify.js */ "./node_modules/ol/geom/flat/simplify.js");
/* harmony import */ var _flat_inflate_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./flat/inflate.js */ "./node_modules/ol/geom/flat/inflate.js");
/* harmony import */ var _flat_area_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./flat/area.js */ "./node_modules/ol/geom/flat/area.js");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
/**
 * @module ol/geom/LinearRing
 */









/**
 * @classdesc
 * Linear ring geometry. Only used as part of polygon; cannot be rendered
 * on its own.
 *
 * @api
 */
var LinearRing = /** @class */ (function (_super) {
    __extends(LinearRing, _super);
    /**
     * @param {Array<import("../coordinate.js").Coordinate>|Array<number>} coordinates Coordinates.
     *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.
     * @param {import("./GeometryLayout.js").default=} opt_layout Layout.
     */
    function LinearRing(coordinates, opt_layout) {
        var _this = _super.call(this) || this;
        /**
         * @private
         * @type {number}
         */
        _this.maxDelta_ = -1;
        /**
         * @private
         * @type {number}
         */
        _this.maxDeltaRevision_ = -1;
        if (opt_layout !== undefined && !Array.isArray(coordinates[0])) {
            _this.setFlatCoordinates(opt_layout, 
            /** @type {Array<number>} */ (coordinates));
        }
        else {
            _this.setCoordinates(
            /** @type {Array<import("../coordinate.js").Coordinate>} */ (coordinates), opt_layout);
        }
        return _this;
    }
    /**
     * Make a complete copy of the geometry.
     * @return {!LinearRing} Clone.
     * @api
     */
    LinearRing.prototype.clone = function () {
        return new LinearRing(this.flatCoordinates.slice(), this.layout);
    };
    /**
     * @param {number} x X.
     * @param {number} y Y.
     * @param {import("../coordinate.js").Coordinate} closestPoint Closest point.
     * @param {number} minSquaredDistance Minimum squared distance.
     * @return {number} Minimum squared distance.
     */
    LinearRing.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {
        if (minSquaredDistance < (0,_extent_js__WEBPACK_IMPORTED_MODULE_0__.closestSquaredDistanceXY)(this.getExtent(), x, y)) {
            return minSquaredDistance;
        }
        if (this.maxDeltaRevision_ != this.getRevision()) {
            this.maxDelta_ = Math.sqrt((0,_flat_closest_js__WEBPACK_IMPORTED_MODULE_1__.maxSquaredDelta)(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, 0));
            this.maxDeltaRevision_ = this.getRevision();
        }
        return (0,_flat_closest_js__WEBPACK_IMPORTED_MODULE_1__.assignClosestPoint)(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);
    };
    /**
     * Return the area of the linear ring on projected plane.
     * @return {number} Area (on projected plane).
     * @api
     */
    LinearRing.prototype.getArea = function () {
        return (0,_flat_area_js__WEBPACK_IMPORTED_MODULE_2__.linearRing)(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);
    };
    /**
     * Return the coordinates of the linear ring.
     * @return {Array<import("../coordinate.js").Coordinate>} Coordinates.
     * @api
     */
    LinearRing.prototype.getCoordinates = function () {
        return (0,_flat_inflate_js__WEBPACK_IMPORTED_MODULE_3__.inflateCoordinates)(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);
    };
    /**
     * @param {number} squaredTolerance Squared tolerance.
     * @return {LinearRing} Simplified LinearRing.
     * @protected
     */
    LinearRing.prototype.getSimplifiedGeometryInternal = function (squaredTolerance) {
        var simplifiedFlatCoordinates = [];
        simplifiedFlatCoordinates.length = (0,_flat_simplify_js__WEBPACK_IMPORTED_MODULE_4__.douglasPeucker)(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, squaredTolerance, simplifiedFlatCoordinates, 0);
        return new LinearRing(simplifiedFlatCoordinates, _GeometryLayout_js__WEBPACK_IMPORTED_MODULE_5__.default.XY);
    };
    /**
     * Get the type of this geometry.
     * @return {import("./GeometryType.js").default} Geometry type.
     * @api
     */
    LinearRing.prototype.getType = function () {
        return _GeometryType_js__WEBPACK_IMPORTED_MODULE_6__.default.LINEAR_RING;
    };
    /**
     * Test if the geometry and the passed extent intersect.
     * @param {import("../extent.js").Extent} extent Extent.
     * @return {boolean} `true` if the geometry and the extent intersect.
     * @api
     */
    LinearRing.prototype.intersectsExtent = function (extent) {
        return false;
    };
    /**
     * Set the coordinates of the linear ring.
     * @param {!Array<import("../coordinate.js").Coordinate>} coordinates Coordinates.
     * @param {import("./GeometryLayout.js").default=} opt_layout Layout.
     * @api
     */
    LinearRing.prototype.setCoordinates = function (coordinates, opt_layout) {
        this.setLayout(opt_layout, coordinates, 1);
        if (!this.flatCoordinates) {
            this.flatCoordinates = [];
        }
        this.flatCoordinates.length = (0,_flat_deflate_js__WEBPACK_IMPORTED_MODULE_7__.deflateCoordinates)(this.flatCoordinates, 0, coordinates, this.stride);
        this.changed();
    };
    return LinearRing;
}(_SimpleGeometry_js__WEBPACK_IMPORTED_MODULE_8__.default));
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (LinearRing);
//# sourceMappingURL=LinearRing.js.map

/***/ }),

/***/ "./node_modules/ol/geom/MultiLineString.js":
/*!*************************************************!*\
  !*** ./node_modules/ol/geom/MultiLineString.js ***!
  \*************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _GeometryLayout_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./GeometryLayout.js */ "./node_modules/ol/geom/GeometryLayout.js");
/* harmony import */ var _GeometryType_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./GeometryType.js */ "./node_modules/ol/geom/GeometryType.js");
/* harmony import */ var _LineString_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./LineString.js */ "./node_modules/ol/geom/LineString.js");
/* harmony import */ var _SimpleGeometry_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./SimpleGeometry.js */ "./node_modules/ol/geom/SimpleGeometry.js");
/* harmony import */ var _flat_closest_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./flat/closest.js */ "./node_modules/ol/geom/flat/closest.js");
/* harmony import */ var _extent_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../extent.js */ "./node_modules/ol/extent.js");
/* harmony import */ var _flat_deflate_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./flat/deflate.js */ "./node_modules/ol/geom/flat/deflate.js");
/* harmony import */ var _flat_simplify_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./flat/simplify.js */ "./node_modules/ol/geom/flat/simplify.js");
/* harmony import */ var _array_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../array.js */ "./node_modules/ol/array.js");
/* harmony import */ var _flat_inflate_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./flat/inflate.js */ "./node_modules/ol/geom/flat/inflate.js");
/* harmony import */ var _flat_interpolate_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./flat/interpolate.js */ "./node_modules/ol/geom/flat/interpolate.js");
/* harmony import */ var _flat_intersectsextent_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./flat/intersectsextent.js */ "./node_modules/ol/geom/flat/intersectsextent.js");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
/**
 * @module ol/geom/MultiLineString
 */












/**
 * @classdesc
 * Multi-linestring geometry.
 *
 * @api
 */
var MultiLineString = /** @class */ (function (_super) {
    __extends(MultiLineString, _super);
    /**
     * @param {Array<Array<import("../coordinate.js").Coordinate>|LineString>|Array<number>} coordinates
     *     Coordinates or LineString geometries. (For internal use, flat coordinates in
     *     combination with `opt_layout` and `opt_ends` are also accepted.)
     * @param {import("./GeometryLayout.js").default=} opt_layout Layout.
     * @param {Array<number>=} opt_ends Flat coordinate ends for internal use.
     */
    function MultiLineString(coordinates, opt_layout, opt_ends) {
        var _this = _super.call(this) || this;
        /**
         * @type {Array<number>}
         * @private
         */
        _this.ends_ = [];
        /**
         * @private
         * @type {number}
         */
        _this.maxDelta_ = -1;
        /**
         * @private
         * @type {number}
         */
        _this.maxDeltaRevision_ = -1;
        if (Array.isArray(coordinates[0])) {
            _this.setCoordinates(
            /** @type {Array<Array<import("../coordinate.js").Coordinate>>} */ (coordinates), opt_layout);
        }
        else if (opt_layout !== undefined && opt_ends) {
            _this.setFlatCoordinates(opt_layout, 
            /** @type {Array<number>} */ (coordinates));
            _this.ends_ = opt_ends;
        }
        else {
            var layout = _this.getLayout();
            var lineStrings = /** @type {Array<LineString>} */ (coordinates);
            var flatCoordinates = [];
            var ends = [];
            for (var i = 0, ii = lineStrings.length; i < ii; ++i) {
                var lineString = lineStrings[i];
                if (i === 0) {
                    layout = lineString.getLayout();
                }
                (0,_array_js__WEBPACK_IMPORTED_MODULE_0__.extend)(flatCoordinates, lineString.getFlatCoordinates());
                ends.push(flatCoordinates.length);
            }
            _this.setFlatCoordinates(layout, flatCoordinates);
            _this.ends_ = ends;
        }
        return _this;
    }
    /**
     * Append the passed linestring to the multilinestring.
     * @param {LineString} lineString LineString.
     * @api
     */
    MultiLineString.prototype.appendLineString = function (lineString) {
        if (!this.flatCoordinates) {
            this.flatCoordinates = lineString.getFlatCoordinates().slice();
        }
        else {
            (0,_array_js__WEBPACK_IMPORTED_MODULE_0__.extend)(this.flatCoordinates, lineString.getFlatCoordinates().slice());
        }
        this.ends_.push(this.flatCoordinates.length);
        this.changed();
    };
    /**
     * Make a complete copy of the geometry.
     * @return {!MultiLineString} Clone.
     * @api
     */
    MultiLineString.prototype.clone = function () {
        var multiLineString = new MultiLineString(this.flatCoordinates.slice(), this.layout, this.ends_.slice());
        multiLineString.applyProperties(this);
        return multiLineString;
    };
    /**
     * @param {number} x X.
     * @param {number} y Y.
     * @param {import("../coordinate.js").Coordinate} closestPoint Closest point.
     * @param {number} minSquaredDistance Minimum squared distance.
     * @return {number} Minimum squared distance.
     */
    MultiLineString.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {
        if (minSquaredDistance < (0,_extent_js__WEBPACK_IMPORTED_MODULE_1__.closestSquaredDistanceXY)(this.getExtent(), x, y)) {
            return minSquaredDistance;
        }
        if (this.maxDeltaRevision_ != this.getRevision()) {
            this.maxDelta_ = Math.sqrt((0,_flat_closest_js__WEBPACK_IMPORTED_MODULE_2__.arrayMaxSquaredDelta)(this.flatCoordinates, 0, this.ends_, this.stride, 0));
            this.maxDeltaRevision_ = this.getRevision();
        }
        return (0,_flat_closest_js__WEBPACK_IMPORTED_MODULE_2__.assignClosestArrayPoint)(this.flatCoordinates, 0, this.ends_, this.stride, this.maxDelta_, false, x, y, closestPoint, minSquaredDistance);
    };
    /**
     * Returns the coordinate at `m` using linear interpolation, or `null` if no
     * such coordinate exists.
     *
     * `opt_extrapolate` controls extrapolation beyond the range of Ms in the
     * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first
     * M will return the first coordinate and Ms greater than the last M will
     * return the last coordinate.
     *
     * `opt_interpolate` controls interpolation between consecutive LineStrings
     * within the MultiLineString. If `opt_interpolate` is `true` the coordinates
     * will be linearly interpolated between the last coordinate of one LineString
     * and the first coordinate of the next LineString.  If `opt_interpolate` is
     * `false` then the function will return `null` for Ms falling between
     * LineStrings.
     *
     * @param {number} m M.
     * @param {boolean=} opt_extrapolate Extrapolate. Default is `false`.
     * @param {boolean=} opt_interpolate Interpolate. Default is `false`.
     * @return {import("../coordinate.js").Coordinate} Coordinate.
     * @api
     */
    MultiLineString.prototype.getCoordinateAtM = function (m, opt_extrapolate, opt_interpolate) {
        if ((this.layout != _GeometryLayout_js__WEBPACK_IMPORTED_MODULE_3__.default.XYM &&
            this.layout != _GeometryLayout_js__WEBPACK_IMPORTED_MODULE_3__.default.XYZM) ||
            this.flatCoordinates.length === 0) {
            return null;
        }
        var extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;
        var interpolate = opt_interpolate !== undefined ? opt_interpolate : false;
        return (0,_flat_interpolate_js__WEBPACK_IMPORTED_MODULE_4__.lineStringsCoordinateAtM)(this.flatCoordinates, 0, this.ends_, this.stride, m, extrapolate, interpolate);
    };
    /**
     * Return the coordinates of the multilinestring.
     * @return {Array<Array<import("../coordinate.js").Coordinate>>} Coordinates.
     * @api
     */
    MultiLineString.prototype.getCoordinates = function () {
        return (0,_flat_inflate_js__WEBPACK_IMPORTED_MODULE_5__.inflateCoordinatesArray)(this.flatCoordinates, 0, this.ends_, this.stride);
    };
    /**
     * @return {Array<number>} Ends.
     */
    MultiLineString.prototype.getEnds = function () {
        return this.ends_;
    };
    /**
     * Return the linestring at the specified index.
     * @param {number} index Index.
     * @return {LineString} LineString.
     * @api
     */
    MultiLineString.prototype.getLineString = function (index) {
        if (index < 0 || this.ends_.length <= index) {
            return null;
        }
        return new _LineString_js__WEBPACK_IMPORTED_MODULE_6__.default(this.flatCoordinates.slice(index === 0 ? 0 : this.ends_[index - 1], this.ends_[index]), this.layout);
    };
    /**
     * Return the linestrings of this multilinestring.
     * @return {Array<LineString>} LineStrings.
     * @api
     */
    MultiLineString.prototype.getLineStrings = function () {
        var flatCoordinates = this.flatCoordinates;
        var ends = this.ends_;
        var layout = this.layout;
        /** @type {Array<LineString>} */
        var lineStrings = [];
        var offset = 0;
        for (var i = 0, ii = ends.length; i < ii; ++i) {
            var end = ends[i];
            var lineString = new _LineString_js__WEBPACK_IMPORTED_MODULE_6__.default(flatCoordinates.slice(offset, end), layout);
            lineStrings.push(lineString);
            offset = end;
        }
        return lineStrings;
    };
    /**
     * @return {Array<number>} Flat midpoints.
     */
    MultiLineString.prototype.getFlatMidpoints = function () {
        var midpoints = [];
        var flatCoordinates = this.flatCoordinates;
        var offset = 0;
        var ends = this.ends_;
        var stride = this.stride;
        for (var i = 0, ii = ends.length; i < ii; ++i) {
            var end = ends[i];
            var midpoint = (0,_flat_interpolate_js__WEBPACK_IMPORTED_MODULE_4__.interpolatePoint)(flatCoordinates, offset, end, stride, 0.5);
            (0,_array_js__WEBPACK_IMPORTED_MODULE_0__.extend)(midpoints, midpoint);
            offset = end;
        }
        return midpoints;
    };
    /**
     * @param {number} squaredTolerance Squared tolerance.
     * @return {MultiLineString} Simplified MultiLineString.
     * @protected
     */
    MultiLineString.prototype.getSimplifiedGeometryInternal = function (squaredTolerance) {
        var simplifiedFlatCoordinates = [];
        var simplifiedEnds = [];
        simplifiedFlatCoordinates.length = (0,_flat_simplify_js__WEBPACK_IMPORTED_MODULE_7__.douglasPeuckerArray)(this.flatCoordinates, 0, this.ends_, this.stride, squaredTolerance, simplifiedFlatCoordinates, 0, simplifiedEnds);
        return new MultiLineString(simplifiedFlatCoordinates, _GeometryLayout_js__WEBPACK_IMPORTED_MODULE_3__.default.XY, simplifiedEnds);
    };
    /**
     * Get the type of this geometry.
     * @return {import("./GeometryType.js").default} Geometry type.
     * @api
     */
    MultiLineString.prototype.getType = function () {
        return _GeometryType_js__WEBPACK_IMPORTED_MODULE_8__.default.MULTI_LINE_STRING;
    };
    /**
     * Test if the geometry and the passed extent intersect.
     * @param {import("../extent.js").Extent} extent Extent.
     * @return {boolean} `true` if the geometry and the extent intersect.
     * @api
     */
    MultiLineString.prototype.intersectsExtent = function (extent) {
        return (0,_flat_intersectsextent_js__WEBPACK_IMPORTED_MODULE_9__.intersectsLineStringArray)(this.flatCoordinates, 0, this.ends_, this.stride, extent);
    };
    /**
     * Set the coordinates of the multilinestring.
     * @param {!Array<Array<import("../coordinate.js").Coordinate>>} coordinates Coordinates.
     * @param {GeometryLayout=} opt_layout Layout.
     * @api
     */
    MultiLineString.prototype.setCoordinates = function (coordinates, opt_layout) {
        this.setLayout(opt_layout, coordinates, 2);
        if (!this.flatCoordinates) {
            this.flatCoordinates = [];
        }
        var ends = (0,_flat_deflate_js__WEBPACK_IMPORTED_MODULE_10__.deflateCoordinatesArray)(this.flatCoordinates, 0, coordinates, this.stride, this.ends_);
        this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];
        this.changed();
    };
    return MultiLineString;
}(_SimpleGeometry_js__WEBPACK_IMPORTED_MODULE_11__.default));
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (MultiLineString);
//# sourceMappingURL=MultiLineString.js.map

/***/ }),

/***/ "./node_modules/ol/geom/MultiPoint.js":
/*!********************************************!*\
  !*** ./node_modules/ol/geom/MultiPoint.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _GeometryType_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./GeometryType.js */ "./node_modules/ol/geom/GeometryType.js");
/* harmony import */ var _Point_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./Point.js */ "./node_modules/ol/geom/Point.js");
/* harmony import */ var _SimpleGeometry_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./SimpleGeometry.js */ "./node_modules/ol/geom/SimpleGeometry.js");
/* harmony import */ var _extent_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../extent.js */ "./node_modules/ol/extent.js");
/* harmony import */ var _flat_deflate_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./flat/deflate.js */ "./node_modules/ol/geom/flat/deflate.js");
/* harmony import */ var _array_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../array.js */ "./node_modules/ol/array.js");
/* harmony import */ var _flat_inflate_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./flat/inflate.js */ "./node_modules/ol/geom/flat/inflate.js");
/* harmony import */ var _math_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../math.js */ "./node_modules/ol/math.js");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
/**
 * @module ol/geom/MultiPoint
 */








/**
 * @classdesc
 * Multi-point geometry.
 *
 * @api
 */
var MultiPoint = /** @class */ (function (_super) {
    __extends(MultiPoint, _super);
    /**
     * @param {Array<import("../coordinate.js").Coordinate>|Array<number>} coordinates Coordinates.
     *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.
     * @param {import("./GeometryLayout.js").default=} opt_layout Layout.
     */
    function MultiPoint(coordinates, opt_layout) {
        var _this = _super.call(this) || this;
        if (opt_layout && !Array.isArray(coordinates[0])) {
            _this.setFlatCoordinates(opt_layout, 
            /** @type {Array<number>} */ (coordinates));
        }
        else {
            _this.setCoordinates(
            /** @type {Array<import("../coordinate.js").Coordinate>} */ (coordinates), opt_layout);
        }
        return _this;
    }
    /**
     * Append the passed point to this multipoint.
     * @param {Point} point Point.
     * @api
     */
    MultiPoint.prototype.appendPoint = function (point) {
        if (!this.flatCoordinates) {
            this.flatCoordinates = point.getFlatCoordinates().slice();
        }
        else {
            (0,_array_js__WEBPACK_IMPORTED_MODULE_0__.extend)(this.flatCoordinates, point.getFlatCoordinates());
        }
        this.changed();
    };
    /**
     * Make a complete copy of the geometry.
     * @return {!MultiPoint} Clone.
     * @api
     */
    MultiPoint.prototype.clone = function () {
        var multiPoint = new MultiPoint(this.flatCoordinates.slice(), this.layout);
        multiPoint.applyProperties(this);
        return multiPoint;
    };
    /**
     * @param {number} x X.
     * @param {number} y Y.
     * @param {import("../coordinate.js").Coordinate} closestPoint Closest point.
     * @param {number} minSquaredDistance Minimum squared distance.
     * @return {number} Minimum squared distance.
     */
    MultiPoint.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {
        if (minSquaredDistance < (0,_extent_js__WEBPACK_IMPORTED_MODULE_1__.closestSquaredDistanceXY)(this.getExtent(), x, y)) {
            return minSquaredDistance;
        }
        var flatCoordinates = this.flatCoordinates;
        var stride = this.stride;
        for (var i = 0, ii = flatCoordinates.length; i < ii; i += stride) {
            var squaredDistance = (0,_math_js__WEBPACK_IMPORTED_MODULE_2__.squaredDistance)(x, y, flatCoordinates[i], flatCoordinates[i + 1]);
            if (squaredDistance < minSquaredDistance) {
                minSquaredDistance = squaredDistance;
                for (var j = 0; j < stride; ++j) {
                    closestPoint[j] = flatCoordinates[i + j];
                }
                closestPoint.length = stride;
            }
        }
        return minSquaredDistance;
    };
    /**
     * Return the coordinates of the multipoint.
     * @return {Array<import("../coordinate.js").Coordinate>} Coordinates.
     * @api
     */
    MultiPoint.prototype.getCoordinates = function () {
        return (0,_flat_inflate_js__WEBPACK_IMPORTED_MODULE_3__.inflateCoordinates)(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);
    };
    /**
     * Return the point at the specified index.
     * @param {number} index Index.
     * @return {Point} Point.
     * @api
     */
    MultiPoint.prototype.getPoint = function (index) {
        var n = !this.flatCoordinates
            ? 0
            : this.flatCoordinates.length / this.stride;
        if (index < 0 || n <= index) {
            return null;
        }
        return new _Point_js__WEBPACK_IMPORTED_MODULE_4__.default(this.flatCoordinates.slice(index * this.stride, (index + 1) * this.stride), this.layout);
    };
    /**
     * Return the points of this multipoint.
     * @return {Array<Point>} Points.
     * @api
     */
    MultiPoint.prototype.getPoints = function () {
        var flatCoordinates = this.flatCoordinates;
        var layout = this.layout;
        var stride = this.stride;
        /** @type {Array<Point>} */
        var points = [];
        for (var i = 0, ii = flatCoordinates.length; i < ii; i += stride) {
            var point = new _Point_js__WEBPACK_IMPORTED_MODULE_4__.default(flatCoordinates.slice(i, i + stride), layout);
            points.push(point);
        }
        return points;
    };
    /**
     * Get the type of this geometry.
     * @return {import("./GeometryType.js").default} Geometry type.
     * @api
     */
    MultiPoint.prototype.getType = function () {
        return _GeometryType_js__WEBPACK_IMPORTED_MODULE_5__.default.MULTI_POINT;
    };
    /**
     * Test if the geometry and the passed extent intersect.
     * @param {import("../extent.js").Extent} extent Extent.
     * @return {boolean} `true` if the geometry and the extent intersect.
     * @api
     */
    MultiPoint.prototype.intersectsExtent = function (extent) {
        var flatCoordinates = this.flatCoordinates;
        var stride = this.stride;
        for (var i = 0, ii = flatCoordinates.length; i < ii; i += stride) {
            var x = flatCoordinates[i];
            var y = flatCoordinates[i + 1];
            if ((0,_extent_js__WEBPACK_IMPORTED_MODULE_1__.containsXY)(extent, x, y)) {
                return true;
            }
        }
        return false;
    };
    /**
     * Set the coordinates of the multipoint.
     * @param {!Array<import("../coordinate.js").Coordinate>} coordinates Coordinates.
     * @param {import("./GeometryLayout.js").default=} opt_layout Layout.
     * @api
     */
    MultiPoint.prototype.setCoordinates = function (coordinates, opt_layout) {
        this.setLayout(opt_layout, coordinates, 1);
        if (!this.flatCoordinates) {
            this.flatCoordinates = [];
        }
        this.flatCoordinates.length = (0,_flat_deflate_js__WEBPACK_IMPORTED_MODULE_6__.deflateCoordinates)(this.flatCoordinates, 0, coordinates, this.stride);
        this.changed();
    };
    return MultiPoint;
}(_SimpleGeometry_js__WEBPACK_IMPORTED_MODULE_7__.default));
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (MultiPoint);
//# sourceMappingURL=MultiPoint.js.map

/***/ }),

/***/ "./node_modules/ol/geom/MultiPolygon.js":
/*!**********************************************!*\
  !*** ./node_modules/ol/geom/MultiPolygon.js ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _GeometryLayout_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./GeometryLayout.js */ "./node_modules/ol/geom/GeometryLayout.js");
/* harmony import */ var _GeometryType_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./GeometryType.js */ "./node_modules/ol/geom/GeometryType.js");
/* harmony import */ var _MultiPoint_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./MultiPoint.js */ "./node_modules/ol/geom/MultiPoint.js");
/* harmony import */ var _Polygon_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./Polygon.js */ "./node_modules/ol/geom/Polygon.js");
/* harmony import */ var _SimpleGeometry_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./SimpleGeometry.js */ "./node_modules/ol/geom/SimpleGeometry.js");
/* harmony import */ var _flat_closest_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./flat/closest.js */ "./node_modules/ol/geom/flat/closest.js");
/* harmony import */ var _extent_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../extent.js */ "./node_modules/ol/extent.js");
/* harmony import */ var _flat_deflate_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./flat/deflate.js */ "./node_modules/ol/geom/flat/deflate.js");
/* harmony import */ var _array_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../array.js */ "./node_modules/ol/array.js");
/* harmony import */ var _flat_interiorpoint_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./flat/interiorpoint.js */ "./node_modules/ol/geom/flat/interiorpoint.js");
/* harmony import */ var _flat_inflate_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./flat/inflate.js */ "./node_modules/ol/geom/flat/inflate.js");
/* harmony import */ var _flat_intersectsextent_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./flat/intersectsextent.js */ "./node_modules/ol/geom/flat/intersectsextent.js");
/* harmony import */ var _flat_orient_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./flat/orient.js */ "./node_modules/ol/geom/flat/orient.js");
/* harmony import */ var _flat_area_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./flat/area.js */ "./node_modules/ol/geom/flat/area.js");
/* harmony import */ var _flat_center_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./flat/center.js */ "./node_modules/ol/geom/flat/center.js");
/* harmony import */ var _flat_contains_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./flat/contains.js */ "./node_modules/ol/geom/flat/contains.js");
/* harmony import */ var _flat_simplify_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./flat/simplify.js */ "./node_modules/ol/geom/flat/simplify.js");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
/**
 * @module ol/geom/MultiPolygon
 */

















/**
 * @classdesc
 * Multi-polygon geometry.
 *
 * @api
 */
var MultiPolygon = /** @class */ (function (_super) {
    __extends(MultiPolygon, _super);
    /**
     * @param {Array<Array<Array<import("../coordinate.js").Coordinate>>|Polygon>|Array<number>} coordinates Coordinates.
     *     For internal use, flat coordinates in combination with `opt_layout` and `opt_endss` are also accepted.
     * @param {import("./GeometryLayout.js").default=} opt_layout Layout.
     * @param {Array<Array<number>>=} opt_endss Array of ends for internal use with flat coordinates.
     */
    function MultiPolygon(coordinates, opt_layout, opt_endss) {
        var _this = _super.call(this) || this;
        /**
         * @type {Array<Array<number>>}
         * @private
         */
        _this.endss_ = [];
        /**
         * @private
         * @type {number}
         */
        _this.flatInteriorPointsRevision_ = -1;
        /**
         * @private
         * @type {Array<number>}
         */
        _this.flatInteriorPoints_ = null;
        /**
         * @private
         * @type {number}
         */
        _this.maxDelta_ = -1;
        /**
         * @private
         * @type {number}
         */
        _this.maxDeltaRevision_ = -1;
        /**
         * @private
         * @type {number}
         */
        _this.orientedRevision_ = -1;
        /**
         * @private
         * @type {Array<number>}
         */
        _this.orientedFlatCoordinates_ = null;
        if (!opt_endss && !Array.isArray(coordinates[0])) {
            var layout = _this.getLayout();
            var polygons = /** @type {Array<Polygon>} */ (coordinates);
            var flatCoordinates = [];
            var endss = [];
            for (var i = 0, ii = polygons.length; i < ii; ++i) {
                var polygon = polygons[i];
                if (i === 0) {
                    layout = polygon.getLayout();
                }
                var offset = flatCoordinates.length;
                var ends = polygon.getEnds();
                for (var j = 0, jj = ends.length; j < jj; ++j) {
                    ends[j] += offset;
                }
                (0,_array_js__WEBPACK_IMPORTED_MODULE_0__.extend)(flatCoordinates, polygon.getFlatCoordinates());
                endss.push(ends);
            }
            opt_layout = layout;
            coordinates = flatCoordinates;
            opt_endss = endss;
        }
        if (opt_layout !== undefined && opt_endss) {
            _this.setFlatCoordinates(opt_layout, 
            /** @type {Array<number>} */ (coordinates));
            _this.endss_ = opt_endss;
        }
        else {
            _this.setCoordinates(
            /** @type {Array<Array<Array<import("../coordinate.js").Coordinate>>>} */ (coordinates), opt_layout);
        }
        return _this;
    }
    /**
     * Append the passed polygon to this multipolygon.
     * @param {Polygon} polygon Polygon.
     * @api
     */
    MultiPolygon.prototype.appendPolygon = function (polygon) {
        /** @type {Array<number>} */
        var ends;
        if (!this.flatCoordinates) {
            this.flatCoordinates = polygon.getFlatCoordinates().slice();
            ends = polygon.getEnds().slice();
            this.endss_.push();
        }
        else {
            var offset = this.flatCoordinates.length;
            (0,_array_js__WEBPACK_IMPORTED_MODULE_0__.extend)(this.flatCoordinates, polygon.getFlatCoordinates());
            ends = polygon.getEnds().slice();
            for (var i = 0, ii = ends.length; i < ii; ++i) {
                ends[i] += offset;
            }
        }
        this.endss_.push(ends);
        this.changed();
    };
    /**
     * Make a complete copy of the geometry.
     * @return {!MultiPolygon} Clone.
     * @api
     */
    MultiPolygon.prototype.clone = function () {
        var len = this.endss_.length;
        var newEndss = new Array(len);
        for (var i = 0; i < len; ++i) {
            newEndss[i] = this.endss_[i].slice();
        }
        var multiPolygon = new MultiPolygon(this.flatCoordinates.slice(), this.layout, newEndss);
        multiPolygon.applyProperties(this);
        return multiPolygon;
    };
    /**
     * @param {number} x X.
     * @param {number} y Y.
     * @param {import("../coordinate.js").Coordinate} closestPoint Closest point.
     * @param {number} minSquaredDistance Minimum squared distance.
     * @return {number} Minimum squared distance.
     */
    MultiPolygon.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {
        if (minSquaredDistance < (0,_extent_js__WEBPACK_IMPORTED_MODULE_1__.closestSquaredDistanceXY)(this.getExtent(), x, y)) {
            return minSquaredDistance;
        }
        if (this.maxDeltaRevision_ != this.getRevision()) {
            this.maxDelta_ = Math.sqrt((0,_flat_closest_js__WEBPACK_IMPORTED_MODULE_2__.multiArrayMaxSquaredDelta)(this.flatCoordinates, 0, this.endss_, this.stride, 0));
            this.maxDeltaRevision_ = this.getRevision();
        }
        return (0,_flat_closest_js__WEBPACK_IMPORTED_MODULE_2__.assignClosestMultiArrayPoint)(this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);
    };
    /**
     * @param {number} x X.
     * @param {number} y Y.
     * @return {boolean} Contains (x, y).
     */
    MultiPolygon.prototype.containsXY = function (x, y) {
        return (0,_flat_contains_js__WEBPACK_IMPORTED_MODULE_3__.linearRingssContainsXY)(this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, x, y);
    };
    /**
     * Return the area of the multipolygon on projected plane.
     * @return {number} Area (on projected plane).
     * @api
     */
    MultiPolygon.prototype.getArea = function () {
        return (0,_flat_area_js__WEBPACK_IMPORTED_MODULE_4__.linearRingss)(this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride);
    };
    /**
     * Get the coordinate array for this geometry.  This array has the structure
     * of a GeoJSON coordinate array for multi-polygons.
     *
     * @param {boolean=} opt_right Orient coordinates according to the right-hand
     *     rule (counter-clockwise for exterior and clockwise for interior rings).
     *     If `false`, coordinates will be oriented according to the left-hand rule
     *     (clockwise for exterior and counter-clockwise for interior rings).
     *     By default, coordinate orientation will depend on how the geometry was
     *     constructed.
     * @return {Array<Array<Array<import("../coordinate.js").Coordinate>>>} Coordinates.
     * @api
     */
    MultiPolygon.prototype.getCoordinates = function (opt_right) {
        var flatCoordinates;
        if (opt_right !== undefined) {
            flatCoordinates = this.getOrientedFlatCoordinates().slice();
            (0,_flat_orient_js__WEBPACK_IMPORTED_MODULE_5__.orientLinearRingsArray)(flatCoordinates, 0, this.endss_, this.stride, opt_right);
        }
        else {
            flatCoordinates = this.flatCoordinates;
        }
        return (0,_flat_inflate_js__WEBPACK_IMPORTED_MODULE_6__.inflateMultiCoordinatesArray)(flatCoordinates, 0, this.endss_, this.stride);
    };
    /**
     * @return {Array<Array<number>>} Endss.
     */
    MultiPolygon.prototype.getEndss = function () {
        return this.endss_;
    };
    /**
     * @return {Array<number>} Flat interior points.
     */
    MultiPolygon.prototype.getFlatInteriorPoints = function () {
        if (this.flatInteriorPointsRevision_ != this.getRevision()) {
            var flatCenters = (0,_flat_center_js__WEBPACK_IMPORTED_MODULE_7__.linearRingss)(this.flatCoordinates, 0, this.endss_, this.stride);
            this.flatInteriorPoints_ = (0,_flat_interiorpoint_js__WEBPACK_IMPORTED_MODULE_8__.getInteriorPointsOfMultiArray)(this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, flatCenters);
            this.flatInteriorPointsRevision_ = this.getRevision();
        }
        return this.flatInteriorPoints_;
    };
    /**
     * Return the interior points as {@link module:ol/geom/MultiPoint multipoint}.
     * @return {MultiPoint} Interior points as XYM coordinates, where M is
     * the length of the horizontal intersection that the point belongs to.
     * @api
     */
    MultiPolygon.prototype.getInteriorPoints = function () {
        return new _MultiPoint_js__WEBPACK_IMPORTED_MODULE_9__.default(this.getFlatInteriorPoints().slice(), _GeometryLayout_js__WEBPACK_IMPORTED_MODULE_10__.default.XYM);
    };
    /**
     * @return {Array<number>} Oriented flat coordinates.
     */
    MultiPolygon.prototype.getOrientedFlatCoordinates = function () {
        if (this.orientedRevision_ != this.getRevision()) {
            var flatCoordinates = this.flatCoordinates;
            if ((0,_flat_orient_js__WEBPACK_IMPORTED_MODULE_5__.linearRingssAreOriented)(flatCoordinates, 0, this.endss_, this.stride)) {
                this.orientedFlatCoordinates_ = flatCoordinates;
            }
            else {
                this.orientedFlatCoordinates_ = flatCoordinates.slice();
                this.orientedFlatCoordinates_.length = (0,_flat_orient_js__WEBPACK_IMPORTED_MODULE_5__.orientLinearRingsArray)(this.orientedFlatCoordinates_, 0, this.endss_, this.stride);
            }
            this.orientedRevision_ = this.getRevision();
        }
        return this.orientedFlatCoordinates_;
    };
    /**
     * @param {number} squaredTolerance Squared tolerance.
     * @return {MultiPolygon} Simplified MultiPolygon.
     * @protected
     */
    MultiPolygon.prototype.getSimplifiedGeometryInternal = function (squaredTolerance) {
        var simplifiedFlatCoordinates = [];
        var simplifiedEndss = [];
        simplifiedFlatCoordinates.length = (0,_flat_simplify_js__WEBPACK_IMPORTED_MODULE_11__.quantizeMultiArray)(this.flatCoordinates, 0, this.endss_, this.stride, Math.sqrt(squaredTolerance), simplifiedFlatCoordinates, 0, simplifiedEndss);
        return new MultiPolygon(simplifiedFlatCoordinates, _GeometryLayout_js__WEBPACK_IMPORTED_MODULE_10__.default.XY, simplifiedEndss);
    };
    /**
     * Return the polygon at the specified index.
     * @param {number} index Index.
     * @return {Polygon} Polygon.
     * @api
     */
    MultiPolygon.prototype.getPolygon = function (index) {
        if (index < 0 || this.endss_.length <= index) {
            return null;
        }
        var offset;
        if (index === 0) {
            offset = 0;
        }
        else {
            var prevEnds = this.endss_[index - 1];
            offset = prevEnds[prevEnds.length - 1];
        }
        var ends = this.endss_[index].slice();
        var end = ends[ends.length - 1];
        if (offset !== 0) {
            for (var i = 0, ii = ends.length; i < ii; ++i) {
                ends[i] -= offset;
            }
        }
        return new _Polygon_js__WEBPACK_IMPORTED_MODULE_12__.default(this.flatCoordinates.slice(offset, end), this.layout, ends);
    };
    /**
     * Return the polygons of this multipolygon.
     * @return {Array<Polygon>} Polygons.
     * @api
     */
    MultiPolygon.prototype.getPolygons = function () {
        var layout = this.layout;
        var flatCoordinates = this.flatCoordinates;
        var endss = this.endss_;
        var polygons = [];
        var offset = 0;
        for (var i = 0, ii = endss.length; i < ii; ++i) {
            var ends = endss[i].slice();
            var end = ends[ends.length - 1];
            if (offset !== 0) {
                for (var j = 0, jj = ends.length; j < jj; ++j) {
                    ends[j] -= offset;
                }
            }
            var polygon = new _Polygon_js__WEBPACK_IMPORTED_MODULE_12__.default(flatCoordinates.slice(offset, end), layout, ends);
            polygons.push(polygon);
            offset = end;
        }
        return polygons;
    };
    /**
     * Get the type of this geometry.
     * @return {import("./GeometryType.js").default} Geometry type.
     * @api
     */
    MultiPolygon.prototype.getType = function () {
        return _GeometryType_js__WEBPACK_IMPORTED_MODULE_13__.default.MULTI_POLYGON;
    };
    /**
     * Test if the geometry and the passed extent intersect.
     * @param {import("../extent.js").Extent} extent Extent.
     * @return {boolean} `true` if the geometry and the extent intersect.
     * @api
     */
    MultiPolygon.prototype.intersectsExtent = function (extent) {
        return (0,_flat_intersectsextent_js__WEBPACK_IMPORTED_MODULE_14__.intersectsLinearRingMultiArray)(this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, extent);
    };
    /**
     * Set the coordinates of the multipolygon.
     * @param {!Array<Array<Array<import("../coordinate.js").Coordinate>>>} coordinates Coordinates.
     * @param {import("./GeometryLayout.js").default=} opt_layout Layout.
     * @api
     */
    MultiPolygon.prototype.setCoordinates = function (coordinates, opt_layout) {
        this.setLayout(opt_layout, coordinates, 3);
        if (!this.flatCoordinates) {
            this.flatCoordinates = [];
        }
        var endss = (0,_flat_deflate_js__WEBPACK_IMPORTED_MODULE_15__.deflateMultiCoordinatesArray)(this.flatCoordinates, 0, coordinates, this.stride, this.endss_);
        if (endss.length === 0) {
            this.flatCoordinates.length = 0;
        }
        else {
            var lastEnds = endss[endss.length - 1];
            this.flatCoordinates.length =
                lastEnds.length === 0 ? 0 : lastEnds[lastEnds.length - 1];
        }
        this.changed();
    };
    return MultiPolygon;
}(_SimpleGeometry_js__WEBPACK_IMPORTED_MODULE_16__.default));
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (MultiPolygon);
//# sourceMappingURL=MultiPolygon.js.map

/***/ }),

/***/ "./node_modules/ol/geom/Point.js":
/*!***************************************!*\
  !*** ./node_modules/ol/geom/Point.js ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _GeometryType_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./GeometryType.js */ "./node_modules/ol/geom/GeometryType.js");
/* harmony import */ var _SimpleGeometry_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./SimpleGeometry.js */ "./node_modules/ol/geom/SimpleGeometry.js");
/* harmony import */ var _extent_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../extent.js */ "./node_modules/ol/extent.js");
/* harmony import */ var _flat_deflate_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./flat/deflate.js */ "./node_modules/ol/geom/flat/deflate.js");
/* harmony import */ var _math_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../math.js */ "./node_modules/ol/math.js");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
/**
 * @module ol/geom/Point
 */





/**
 * @classdesc
 * Point geometry.
 *
 * @api
 */
var Point = /** @class */ (function (_super) {
    __extends(Point, _super);
    /**
     * @param {import("../coordinate.js").Coordinate} coordinates Coordinates.
     * @param {import("./GeometryLayout.js").default=} opt_layout Layout.
     */
    function Point(coordinates, opt_layout) {
        var _this = _super.call(this) || this;
        _this.setCoordinates(coordinates, opt_layout);
        return _this;
    }
    /**
     * Make a complete copy of the geometry.
     * @return {!Point} Clone.
     * @api
     */
    Point.prototype.clone = function () {
        var point = new Point(this.flatCoordinates.slice(), this.layout);
        point.applyProperties(this);
        return point;
    };
    /**
     * @param {number} x X.
     * @param {number} y Y.
     * @param {import("../coordinate.js").Coordinate} closestPoint Closest point.
     * @param {number} minSquaredDistance Minimum squared distance.
     * @return {number} Minimum squared distance.
     */
    Point.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {
        var flatCoordinates = this.flatCoordinates;
        var squaredDistance = (0,_math_js__WEBPACK_IMPORTED_MODULE_0__.squaredDistance)(x, y, flatCoordinates[0], flatCoordinates[1]);
        if (squaredDistance < minSquaredDistance) {
            var stride = this.stride;
            for (var i = 0; i < stride; ++i) {
                closestPoint[i] = flatCoordinates[i];
            }
            closestPoint.length = stride;
            return squaredDistance;
        }
        else {
            return minSquaredDistance;
        }
    };
    /**
     * Return the coordinate of the point.
     * @return {import("../coordinate.js").Coordinate} Coordinates.
     * @api
     */
    Point.prototype.getCoordinates = function () {
        return !this.flatCoordinates ? [] : this.flatCoordinates.slice();
    };
    /**
     * @param {import("../extent.js").Extent} extent Extent.
     * @protected
     * @return {import("../extent.js").Extent} extent Extent.
     */
    Point.prototype.computeExtent = function (extent) {
        return (0,_extent_js__WEBPACK_IMPORTED_MODULE_1__.createOrUpdateFromCoordinate)(this.flatCoordinates, extent);
    };
    /**
     * Get the type of this geometry.
     * @return {import("./GeometryType.js").default} Geometry type.
     * @api
     */
    Point.prototype.getType = function () {
        return _GeometryType_js__WEBPACK_IMPORTED_MODULE_2__.default.POINT;
    };
    /**
     * Test if the geometry and the passed extent intersect.
     * @param {import("../extent.js").Extent} extent Extent.
     * @return {boolean} `true` if the geometry and the extent intersect.
     * @api
     */
    Point.prototype.intersectsExtent = function (extent) {
        return (0,_extent_js__WEBPACK_IMPORTED_MODULE_1__.containsXY)(extent, this.flatCoordinates[0], this.flatCoordinates[1]);
    };
    /**
     * @param {!Array<*>} coordinates Coordinates.
     * @param {import("./GeometryLayout.js").default=} opt_layout Layout.
     * @api
     */
    Point.prototype.setCoordinates = function (coordinates, opt_layout) {
        this.setLayout(opt_layout, coordinates, 0);
        if (!this.flatCoordinates) {
            this.flatCoordinates = [];
        }
        this.flatCoordinates.length = (0,_flat_deflate_js__WEBPACK_IMPORTED_MODULE_3__.deflateCoordinate)(this.flatCoordinates, 0, coordinates, this.stride);
        this.changed();
    };
    return Point;
}(_SimpleGeometry_js__WEBPACK_IMPORTED_MODULE_4__.default));
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Point);
//# sourceMappingURL=Point.js.map

/***/ }),

/***/ "./node_modules/ol/geom/Polygon.js":
/*!*****************************************!*\
  !*** ./node_modules/ol/geom/Polygon.js ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__),
/* harmony export */   "circular": () => (/* binding */ circular),
/* harmony export */   "fromExtent": () => (/* binding */ fromExtent),
/* harmony export */   "fromCircle": () => (/* binding */ fromCircle),
/* harmony export */   "makeRegular": () => (/* binding */ makeRegular)
/* harmony export */ });
/* harmony import */ var _GeometryLayout_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./GeometryLayout.js */ "./node_modules/ol/geom/GeometryLayout.js");
/* harmony import */ var _GeometryType_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./GeometryType.js */ "./node_modules/ol/geom/GeometryType.js");
/* harmony import */ var _LinearRing_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./LinearRing.js */ "./node_modules/ol/geom/LinearRing.js");
/* harmony import */ var _Point_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./Point.js */ "./node_modules/ol/geom/Point.js");
/* harmony import */ var _SimpleGeometry_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./SimpleGeometry.js */ "./node_modules/ol/geom/SimpleGeometry.js");
/* harmony import */ var _flat_closest_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./flat/closest.js */ "./node_modules/ol/geom/flat/closest.js");
/* harmony import */ var _extent_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../extent.js */ "./node_modules/ol/extent.js");
/* harmony import */ var _flat_deflate_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./flat/deflate.js */ "./node_modules/ol/geom/flat/deflate.js");
/* harmony import */ var _array_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../array.js */ "./node_modules/ol/array.js");
/* harmony import */ var _flat_interiorpoint_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./flat/interiorpoint.js */ "./node_modules/ol/geom/flat/interiorpoint.js");
/* harmony import */ var _flat_inflate_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./flat/inflate.js */ "./node_modules/ol/geom/flat/inflate.js");
/* harmony import */ var _flat_intersectsextent_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./flat/intersectsextent.js */ "./node_modules/ol/geom/flat/intersectsextent.js");
/* harmony import */ var _flat_orient_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./flat/orient.js */ "./node_modules/ol/geom/flat/orient.js");
/* harmony import */ var _flat_area_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./flat/area.js */ "./node_modules/ol/geom/flat/area.js");
/* harmony import */ var _flat_contains_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./flat/contains.js */ "./node_modules/ol/geom/flat/contains.js");
/* harmony import */ var _math_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ../math.js */ "./node_modules/ol/math.js");
/* harmony import */ var _flat_simplify_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./flat/simplify.js */ "./node_modules/ol/geom/flat/simplify.js");
/* harmony import */ var _sphere_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../sphere.js */ "./node_modules/ol/sphere.js");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
/**
 * @module ol/geom/Polygon
 */


















/**
 * @classdesc
 * Polygon geometry.
 *
 * @api
 */
var Polygon = /** @class */ (function (_super) {
    __extends(Polygon, _super);
    /**
     * @param {!Array<Array<import("../coordinate.js").Coordinate>>|!Array<number>} coordinates
     *     Array of linear rings that define the polygon. The first linear ring of the
     *     array defines the outer-boundary or surface of the polygon. Each subsequent
     *     linear ring defines a hole in the surface of the polygon. A linear ring is
     *     an array of vertices' coordinates where the first coordinate and the last are
     *     equivalent. (For internal use, flat coordinates in combination with
     *     `opt_layout` and `opt_ends` are also accepted.)
     * @param {import("./GeometryLayout.js").default=} opt_layout Layout.
     * @param {Array<number>=} opt_ends Ends (for internal use with flat coordinates).
     */
    function Polygon(coordinates, opt_layout, opt_ends) {
        var _this = _super.call(this) || this;
        /**
         * @type {Array<number>}
         * @private
         */
        _this.ends_ = [];
        /**
         * @private
         * @type {number}
         */
        _this.flatInteriorPointRevision_ = -1;
        /**
         * @private
         * @type {import("../coordinate.js").Coordinate}
         */
        _this.flatInteriorPoint_ = null;
        /**
         * @private
         * @type {number}
         */
        _this.maxDelta_ = -1;
        /**
         * @private
         * @type {number}
         */
        _this.maxDeltaRevision_ = -1;
        /**
         * @private
         * @type {number}
         */
        _this.orientedRevision_ = -1;
        /**
         * @private
         * @type {Array<number>}
         */
        _this.orientedFlatCoordinates_ = null;
        if (opt_layout !== undefined && opt_ends) {
            _this.setFlatCoordinates(opt_layout, 
            /** @type {Array<number>} */ (coordinates));
            _this.ends_ = opt_ends;
        }
        else {
            _this.setCoordinates(
            /** @type {Array<Array<import("../coordinate.js").Coordinate>>} */ (coordinates), opt_layout);
        }
        return _this;
    }
    /**
     * Append the passed linear ring to this polygon.
     * @param {LinearRing} linearRing Linear ring.
     * @api
     */
    Polygon.prototype.appendLinearRing = function (linearRing) {
        if (!this.flatCoordinates) {
            this.flatCoordinates = linearRing.getFlatCoordinates().slice();
        }
        else {
            (0,_array_js__WEBPACK_IMPORTED_MODULE_0__.extend)(this.flatCoordinates, linearRing.getFlatCoordinates());
        }
        this.ends_.push(this.flatCoordinates.length);
        this.changed();
    };
    /**
     * Make a complete copy of the geometry.
     * @return {!Polygon} Clone.
     * @api
     */
    Polygon.prototype.clone = function () {
        var polygon = new Polygon(this.flatCoordinates.slice(), this.layout, this.ends_.slice());
        polygon.applyProperties(this);
        return polygon;
    };
    /**
     * @param {number} x X.
     * @param {number} y Y.
     * @param {import("../coordinate.js").Coordinate} closestPoint Closest point.
     * @param {number} minSquaredDistance Minimum squared distance.
     * @return {number} Minimum squared distance.
     */
    Polygon.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {
        if (minSquaredDistance < (0,_extent_js__WEBPACK_IMPORTED_MODULE_1__.closestSquaredDistanceXY)(this.getExtent(), x, y)) {
            return minSquaredDistance;
        }
        if (this.maxDeltaRevision_ != this.getRevision()) {
            this.maxDelta_ = Math.sqrt((0,_flat_closest_js__WEBPACK_IMPORTED_MODULE_2__.arrayMaxSquaredDelta)(this.flatCoordinates, 0, this.ends_, this.stride, 0));
            this.maxDeltaRevision_ = this.getRevision();
        }
        return (0,_flat_closest_js__WEBPACK_IMPORTED_MODULE_2__.assignClosestArrayPoint)(this.flatCoordinates, 0, this.ends_, this.stride, this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);
    };
    /**
     * @param {number} x X.
     * @param {number} y Y.
     * @return {boolean} Contains (x, y).
     */
    Polygon.prototype.containsXY = function (x, y) {
        return (0,_flat_contains_js__WEBPACK_IMPORTED_MODULE_3__.linearRingsContainsXY)(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride, x, y);
    };
    /**
     * Return the area of the polygon on projected plane.
     * @return {number} Area (on projected plane).
     * @api
     */
    Polygon.prototype.getArea = function () {
        return (0,_flat_area_js__WEBPACK_IMPORTED_MODULE_4__.linearRings)(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride);
    };
    /**
     * Get the coordinate array for this geometry.  This array has the structure
     * of a GeoJSON coordinate array for polygons.
     *
     * @param {boolean=} opt_right Orient coordinates according to the right-hand
     *     rule (counter-clockwise for exterior and clockwise for interior rings).
     *     If `false`, coordinates will be oriented according to the left-hand rule
     *     (clockwise for exterior and counter-clockwise for interior rings).
     *     By default, coordinate orientation will depend on how the geometry was
     *     constructed.
     * @return {Array<Array<import("../coordinate.js").Coordinate>>} Coordinates.
     * @api
     */
    Polygon.prototype.getCoordinates = function (opt_right) {
        var flatCoordinates;
        if (opt_right !== undefined) {
            flatCoordinates = this.getOrientedFlatCoordinates().slice();
            (0,_flat_orient_js__WEBPACK_IMPORTED_MODULE_5__.orientLinearRings)(flatCoordinates, 0, this.ends_, this.stride, opt_right);
        }
        else {
            flatCoordinates = this.flatCoordinates;
        }
        return (0,_flat_inflate_js__WEBPACK_IMPORTED_MODULE_6__.inflateCoordinatesArray)(flatCoordinates, 0, this.ends_, this.stride);
    };
    /**
     * @return {Array<number>} Ends.
     */
    Polygon.prototype.getEnds = function () {
        return this.ends_;
    };
    /**
     * @return {Array<number>} Interior point.
     */
    Polygon.prototype.getFlatInteriorPoint = function () {
        if (this.flatInteriorPointRevision_ != this.getRevision()) {
            var flatCenter = (0,_extent_js__WEBPACK_IMPORTED_MODULE_1__.getCenter)(this.getExtent());
            this.flatInteriorPoint_ = (0,_flat_interiorpoint_js__WEBPACK_IMPORTED_MODULE_7__.getInteriorPointOfArray)(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride, flatCenter, 0);
            this.flatInteriorPointRevision_ = this.getRevision();
        }
        return this.flatInteriorPoint_;
    };
    /**
     * Return an interior point of the polygon.
     * @return {Point} Interior point as XYM coordinate, where M is the
     * length of the horizontal intersection that the point belongs to.
     * @api
     */
    Polygon.prototype.getInteriorPoint = function () {
        return new _Point_js__WEBPACK_IMPORTED_MODULE_8__.default(this.getFlatInteriorPoint(), _GeometryLayout_js__WEBPACK_IMPORTED_MODULE_9__.default.XYM);
    };
    /**
     * Return the number of rings of the polygon,  this includes the exterior
     * ring and any interior rings.
     *
     * @return {number} Number of rings.
     * @api
     */
    Polygon.prototype.getLinearRingCount = function () {
        return this.ends_.length;
    };
    /**
     * Return the Nth linear ring of the polygon geometry. Return `null` if the
     * given index is out of range.
     * The exterior linear ring is available at index `0` and the interior rings
     * at index `1` and beyond.
     *
     * @param {number} index Index.
     * @return {LinearRing} Linear ring.
     * @api
     */
    Polygon.prototype.getLinearRing = function (index) {
        if (index < 0 || this.ends_.length <= index) {
            return null;
        }
        return new _LinearRing_js__WEBPACK_IMPORTED_MODULE_10__.default(this.flatCoordinates.slice(index === 0 ? 0 : this.ends_[index - 1], this.ends_[index]), this.layout);
    };
    /**
     * Return the linear rings of the polygon.
     * @return {Array<LinearRing>} Linear rings.
     * @api
     */
    Polygon.prototype.getLinearRings = function () {
        var layout = this.layout;
        var flatCoordinates = this.flatCoordinates;
        var ends = this.ends_;
        var linearRings = [];
        var offset = 0;
        for (var i = 0, ii = ends.length; i < ii; ++i) {
            var end = ends[i];
            var linearRing = new _LinearRing_js__WEBPACK_IMPORTED_MODULE_10__.default(flatCoordinates.slice(offset, end), layout);
            linearRings.push(linearRing);
            offset = end;
        }
        return linearRings;
    };
    /**
     * @return {Array<number>} Oriented flat coordinates.
     */
    Polygon.prototype.getOrientedFlatCoordinates = function () {
        if (this.orientedRevision_ != this.getRevision()) {
            var flatCoordinates = this.flatCoordinates;
            if ((0,_flat_orient_js__WEBPACK_IMPORTED_MODULE_5__.linearRingsAreOriented)(flatCoordinates, 0, this.ends_, this.stride)) {
                this.orientedFlatCoordinates_ = flatCoordinates;
            }
            else {
                this.orientedFlatCoordinates_ = flatCoordinates.slice();
                this.orientedFlatCoordinates_.length = (0,_flat_orient_js__WEBPACK_IMPORTED_MODULE_5__.orientLinearRings)(this.orientedFlatCoordinates_, 0, this.ends_, this.stride);
            }
            this.orientedRevision_ = this.getRevision();
        }
        return this.orientedFlatCoordinates_;
    };
    /**
     * @param {number} squaredTolerance Squared tolerance.
     * @return {Polygon} Simplified Polygon.
     * @protected
     */
    Polygon.prototype.getSimplifiedGeometryInternal = function (squaredTolerance) {
        var simplifiedFlatCoordinates = [];
        var simplifiedEnds = [];
        simplifiedFlatCoordinates.length = (0,_flat_simplify_js__WEBPACK_IMPORTED_MODULE_11__.quantizeArray)(this.flatCoordinates, 0, this.ends_, this.stride, Math.sqrt(squaredTolerance), simplifiedFlatCoordinates, 0, simplifiedEnds);
        return new Polygon(simplifiedFlatCoordinates, _GeometryLayout_js__WEBPACK_IMPORTED_MODULE_9__.default.XY, simplifiedEnds);
    };
    /**
     * Get the type of this geometry.
     * @return {import("./GeometryType.js").default} Geometry type.
     * @api
     */
    Polygon.prototype.getType = function () {
        return _GeometryType_js__WEBPACK_IMPORTED_MODULE_12__.default.POLYGON;
    };
    /**
     * Test if the geometry and the passed extent intersect.
     * @param {import("../extent.js").Extent} extent Extent.
     * @return {boolean} `true` if the geometry and the extent intersect.
     * @api
     */
    Polygon.prototype.intersectsExtent = function (extent) {
        return (0,_flat_intersectsextent_js__WEBPACK_IMPORTED_MODULE_13__.intersectsLinearRingArray)(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride, extent);
    };
    /**
     * Set the coordinates of the polygon.
     * @param {!Array<Array<import("../coordinate.js").Coordinate>>} coordinates Coordinates.
     * @param {import("./GeometryLayout.js").default=} opt_layout Layout.
     * @api
     */
    Polygon.prototype.setCoordinates = function (coordinates, opt_layout) {
        this.setLayout(opt_layout, coordinates, 2);
        if (!this.flatCoordinates) {
            this.flatCoordinates = [];
        }
        var ends = (0,_flat_deflate_js__WEBPACK_IMPORTED_MODULE_14__.deflateCoordinatesArray)(this.flatCoordinates, 0, coordinates, this.stride, this.ends_);
        this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];
        this.changed();
    };
    return Polygon;
}(_SimpleGeometry_js__WEBPACK_IMPORTED_MODULE_15__.default));
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Polygon);
/**
 * Create an approximation of a circle on the surface of a sphere.
 * @param {import("../coordinate.js").Coordinate} center Center (`[lon, lat]` in degrees).
 * @param {number} radius The great-circle distance from the center to
 *     the polygon vertices.
 * @param {number=} opt_n Optional number of vertices for the resulting
 *     polygon. Default is `32`.
 * @param {number=} opt_sphereRadius Optional radius for the sphere (defaults to
 *     the Earth's mean radius using the WGS84 ellipsoid).
 * @return {Polygon} The "circular" polygon.
 * @api
 */
function circular(center, radius, opt_n, opt_sphereRadius) {
    var n = opt_n ? opt_n : 32;
    /** @type {Array<number>} */
    var flatCoordinates = [];
    for (var i = 0; i < n; ++i) {
        (0,_array_js__WEBPACK_IMPORTED_MODULE_0__.extend)(flatCoordinates, (0,_sphere_js__WEBPACK_IMPORTED_MODULE_16__.offset)(center, radius, (2 * Math.PI * i) / n, opt_sphereRadius));
    }
    flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);
    return new Polygon(flatCoordinates, _GeometryLayout_js__WEBPACK_IMPORTED_MODULE_9__.default.XY, [
        flatCoordinates.length,
    ]);
}
/**
 * Create a polygon from an extent. The layout used is `XY`.
 * @param {import("../extent.js").Extent} extent The extent.
 * @return {Polygon} The polygon.
 * @api
 */
function fromExtent(extent) {
    var minX = extent[0];
    var minY = extent[1];
    var maxX = extent[2];
    var maxY = extent[3];
    var flatCoordinates = [
        minX,
        minY,
        minX,
        maxY,
        maxX,
        maxY,
        maxX,
        minY,
        minX,
        minY,
    ];
    return new Polygon(flatCoordinates, _GeometryLayout_js__WEBPACK_IMPORTED_MODULE_9__.default.XY, [
        flatCoordinates.length,
    ]);
}
/**
 * Create a regular polygon from a circle.
 * @param {import("./Circle.js").default} circle Circle geometry.
 * @param {number=} opt_sides Number of sides of the polygon. Default is 32.
 * @param {number=} opt_angle Start angle for the first vertex of the polygon in
 *     counter-clockwise radians. 0 means East. Default is 0.
 * @return {Polygon} Polygon geometry.
 * @api
 */
function fromCircle(circle, opt_sides, opt_angle) {
    var sides = opt_sides ? opt_sides : 32;
    var stride = circle.getStride();
    var layout = circle.getLayout();
    var center = circle.getCenter();
    var arrayLength = stride * (sides + 1);
    var flatCoordinates = new Array(arrayLength);
    for (var i = 0; i < arrayLength; i += stride) {
        flatCoordinates[i] = 0;
        flatCoordinates[i + 1] = 0;
        for (var j = 2; j < stride; j++) {
            flatCoordinates[i + j] = center[j];
        }
    }
    var ends = [flatCoordinates.length];
    var polygon = new Polygon(flatCoordinates, layout, ends);
    makeRegular(polygon, center, circle.getRadius(), opt_angle);
    return polygon;
}
/**
 * Modify the coordinates of a polygon to make it a regular polygon.
 * @param {Polygon} polygon Polygon geometry.
 * @param {import("../coordinate.js").Coordinate} center Center of the regular polygon.
 * @param {number} radius Radius of the regular polygon.
 * @param {number=} opt_angle Start angle for the first vertex of the polygon in
 *     counter-clockwise radians. 0 means East. Default is 0.
 */
function makeRegular(polygon, center, radius, opt_angle) {
    var flatCoordinates = polygon.getFlatCoordinates();
    var stride = polygon.getStride();
    var sides = flatCoordinates.length / stride - 1;
    var startAngle = opt_angle ? opt_angle : 0;
    for (var i = 0; i <= sides; ++i) {
        var offset = i * stride;
        var angle = startAngle + ((0,_math_js__WEBPACK_IMPORTED_MODULE_17__.modulo)(i, sides) * 2 * Math.PI) / sides;
        flatCoordinates[offset] = center[0] + radius * Math.cos(angle);
        flatCoordinates[offset + 1] = center[1] + radius * Math.sin(angle);
    }
    polygon.changed();
}
//# sourceMappingURL=Polygon.js.map

/***/ }),

/***/ "./node_modules/ol/geom/SimpleGeometry.js":
/*!************************************************!*\
  !*** ./node_modules/ol/geom/SimpleGeometry.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "getStrideForLayout": () => (/* binding */ getStrideForLayout),
/* harmony export */   "transformGeom2D": () => (/* binding */ transformGeom2D),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _Geometry_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./Geometry.js */ "./node_modules/ol/geom/Geometry.js");
/* harmony import */ var _GeometryLayout_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./GeometryLayout.js */ "./node_modules/ol/geom/GeometryLayout.js");
/* harmony import */ var _util_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util.js */ "./node_modules/ol/util.js");
/* harmony import */ var _extent_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../extent.js */ "./node_modules/ol/extent.js");
/* harmony import */ var _flat_transform_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./flat/transform.js */ "./node_modules/ol/geom/flat/transform.js");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
/**
 * @module ol/geom/SimpleGeometry
 */





/**
 * @classdesc
 * Abstract base class; only used for creating subclasses; do not instantiate
 * in apps, as cannot be rendered.
 *
 * @abstract
 * @api
 */
var SimpleGeometry = /** @class */ (function (_super) {
    __extends(SimpleGeometry, _super);
    function SimpleGeometry() {
        var _this = _super.call(this) || this;
        /**
         * @protected
         * @type {import("./GeometryLayout.js").default}
         */
        _this.layout = _GeometryLayout_js__WEBPACK_IMPORTED_MODULE_0__.default.XY;
        /**
         * @protected
         * @type {number}
         */
        _this.stride = 2;
        /**
         * @protected
         * @type {Array<number>}
         */
        _this.flatCoordinates = null;
        return _this;
    }
    /**
     * @param {import("../extent.js").Extent} extent Extent.
     * @protected
     * @return {import("../extent.js").Extent} extent Extent.
     */
    SimpleGeometry.prototype.computeExtent = function (extent) {
        return (0,_extent_js__WEBPACK_IMPORTED_MODULE_1__.createOrUpdateFromFlatCoordinates)(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, extent);
    };
    /**
     * @abstract
     * @return {Array<*>} Coordinates.
     */
    SimpleGeometry.prototype.getCoordinates = function () {
        return (0,_util_js__WEBPACK_IMPORTED_MODULE_2__.abstract)();
    };
    /**
     * Return the first coordinate of the geometry.
     * @return {import("../coordinate.js").Coordinate} First coordinate.
     * @api
     */
    SimpleGeometry.prototype.getFirstCoordinate = function () {
        return this.flatCoordinates.slice(0, this.stride);
    };
    /**
     * @return {Array<number>} Flat coordinates.
     */
    SimpleGeometry.prototype.getFlatCoordinates = function () {
        return this.flatCoordinates;
    };
    /**
     * Return the last coordinate of the geometry.
     * @return {import("../coordinate.js").Coordinate} Last point.
     * @api
     */
    SimpleGeometry.prototype.getLastCoordinate = function () {
        return this.flatCoordinates.slice(this.flatCoordinates.length - this.stride);
    };
    /**
     * Return the {@link module:ol/geom/GeometryLayout layout} of the geometry.
     * @return {import("./GeometryLayout.js").default} Layout.
     * @api
     */
    SimpleGeometry.prototype.getLayout = function () {
        return this.layout;
    };
    /**
     * Create a simplified version of this geometry using the Douglas Peucker algorithm.
     * @param {number} squaredTolerance Squared tolerance.
     * @return {SimpleGeometry} Simplified geometry.
     */
    SimpleGeometry.prototype.getSimplifiedGeometry = function (squaredTolerance) {
        if (this.simplifiedGeometryRevision !== this.getRevision()) {
            this.simplifiedGeometryMaxMinSquaredTolerance = 0;
            this.simplifiedGeometryRevision = this.getRevision();
        }
        // If squaredTolerance is negative or if we know that simplification will not
        // have any effect then just return this.
        if (squaredTolerance < 0 ||
            (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&
                squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)) {
            return this;
        }
        var simplifiedGeometry = this.getSimplifiedGeometryInternal(squaredTolerance);
        var simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();
        if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {
            return simplifiedGeometry;
        }
        else {
            // Simplification did not actually remove any coordinates.  We now know
            // that any calls to getSimplifiedGeometry with a squaredTolerance less
            // than or equal to the current squaredTolerance will also not have any
            // effect.  This allows us to short circuit simplification (saving CPU
            // cycles) and prevents the cache of simplified geometries from filling
            // up with useless identical copies of this geometry (saving memory).
            this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;
            return this;
        }
    };
    /**
     * @param {number} squaredTolerance Squared tolerance.
     * @return {SimpleGeometry} Simplified geometry.
     * @protected
     */
    SimpleGeometry.prototype.getSimplifiedGeometryInternal = function (squaredTolerance) {
        return this;
    };
    /**
     * @return {number} Stride.
     */
    SimpleGeometry.prototype.getStride = function () {
        return this.stride;
    };
    /**
     * @param {import("./GeometryLayout.js").default} layout Layout.
     * @param {Array<number>} flatCoordinates Flat coordinates.
     */
    SimpleGeometry.prototype.setFlatCoordinates = function (layout, flatCoordinates) {
        this.stride = getStrideForLayout(layout);
        this.layout = layout;
        this.flatCoordinates = flatCoordinates;
    };
    /**
     * @abstract
     * @param {!Array<*>} coordinates Coordinates.
     * @param {import("./GeometryLayout.js").default=} opt_layout Layout.
     */
    SimpleGeometry.prototype.setCoordinates = function (coordinates, opt_layout) {
        (0,_util_js__WEBPACK_IMPORTED_MODULE_2__.abstract)();
    };
    /**
     * @param {import("./GeometryLayout.js").default|undefined} layout Layout.
     * @param {Array<*>} coordinates Coordinates.
     * @param {number} nesting Nesting.
     * @protected
     */
    SimpleGeometry.prototype.setLayout = function (layout, coordinates, nesting) {
        /** @type {number} */
        var stride;
        if (layout) {
            stride = getStrideForLayout(layout);
        }
        else {
            for (var i = 0; i < nesting; ++i) {
                if (coordinates.length === 0) {
                    this.layout = _GeometryLayout_js__WEBPACK_IMPORTED_MODULE_0__.default.XY;
                    this.stride = 2;
                    return;
                }
                else {
                    coordinates = /** @type {Array} */ (coordinates[0]);
                }
            }
            stride = coordinates.length;
            layout = getLayoutForStride(stride);
        }
        this.layout = layout;
        this.stride = stride;
    };
    /**
     * Apply a transform function to the coordinates of the geometry.
     * The geometry is modified in place.
     * If you do not want the geometry modified in place, first `clone()` it and
     * then use this function on the clone.
     * @param {import("../proj.js").TransformFunction} transformFn Transform function.
     * Called with a flat array of geometry coordinates.
     * @api
     */
    SimpleGeometry.prototype.applyTransform = function (transformFn) {
        if (this.flatCoordinates) {
            transformFn(this.flatCoordinates, this.flatCoordinates, this.stride);
            this.changed();
        }
    };
    /**
     * Rotate the geometry around a given coordinate. This modifies the geometry
     * coordinates in place.
     * @param {number} angle Rotation angle in counter-clockwise radians.
     * @param {import("../coordinate.js").Coordinate} anchor The rotation center.
     * @api
     */
    SimpleGeometry.prototype.rotate = function (angle, anchor) {
        var flatCoordinates = this.getFlatCoordinates();
        if (flatCoordinates) {
            var stride = this.getStride();
            (0,_flat_transform_js__WEBPACK_IMPORTED_MODULE_3__.rotate)(flatCoordinates, 0, flatCoordinates.length, stride, angle, anchor, flatCoordinates);
            this.changed();
        }
    };
    /**
     * Scale the geometry (with an optional origin).  This modifies the geometry
     * coordinates in place.
     * @param {number} sx The scaling factor in the x-direction.
     * @param {number=} opt_sy The scaling factor in the y-direction (defaults to sx).
     * @param {import("../coordinate.js").Coordinate=} opt_anchor The scale origin (defaults to the center
     *     of the geometry extent).
     * @api
     */
    SimpleGeometry.prototype.scale = function (sx, opt_sy, opt_anchor) {
        var sy = opt_sy;
        if (sy === undefined) {
            sy = sx;
        }
        var anchor = opt_anchor;
        if (!anchor) {
            anchor = (0,_extent_js__WEBPACK_IMPORTED_MODULE_1__.getCenter)(this.getExtent());
        }
        var flatCoordinates = this.getFlatCoordinates();
        if (flatCoordinates) {
            var stride = this.getStride();
            (0,_flat_transform_js__WEBPACK_IMPORTED_MODULE_3__.scale)(flatCoordinates, 0, flatCoordinates.length, stride, sx, sy, anchor, flatCoordinates);
            this.changed();
        }
    };
    /**
     * Translate the geometry.  This modifies the geometry coordinates in place.  If
     * instead you want a new geometry, first `clone()` this geometry.
     * @param {number} deltaX Delta X.
     * @param {number} deltaY Delta Y.
     * @api
     */
    SimpleGeometry.prototype.translate = function (deltaX, deltaY) {
        var flatCoordinates = this.getFlatCoordinates();
        if (flatCoordinates) {
            var stride = this.getStride();
            (0,_flat_transform_js__WEBPACK_IMPORTED_MODULE_3__.translate)(flatCoordinates, 0, flatCoordinates.length, stride, deltaX, deltaY, flatCoordinates);
            this.changed();
        }
    };
    return SimpleGeometry;
}(_Geometry_js__WEBPACK_IMPORTED_MODULE_4__.default));
/**
 * @param {number} stride Stride.
 * @return {import("./GeometryLayout.js").default} layout Layout.
 */
function getLayoutForStride(stride) {
    var layout;
    if (stride == 2) {
        layout = _GeometryLayout_js__WEBPACK_IMPORTED_MODULE_0__.default.XY;
    }
    else if (stride == 3) {
        layout = _GeometryLayout_js__WEBPACK_IMPORTED_MODULE_0__.default.XYZ;
    }
    else if (stride == 4) {
        layout = _GeometryLayout_js__WEBPACK_IMPORTED_MODULE_0__.default.XYZM;
    }
    return /** @type {import("./GeometryLayout.js").default} */ (layout);
}
/**
 * @param {import("./GeometryLayout.js").default} layout Layout.
 * @return {number} Stride.
 */
function getStrideForLayout(layout) {
    var stride;
    if (layout == _GeometryLayout_js__WEBPACK_IMPORTED_MODULE_0__.default.XY) {
        stride = 2;
    }
    else if (layout == _GeometryLayout_js__WEBPACK_IMPORTED_MODULE_0__.default.XYZ || layout == _GeometryLayout_js__WEBPACK_IMPORTED_MODULE_0__.default.XYM) {
        stride = 3;
    }
    else if (layout == _GeometryLayout_js__WEBPACK_IMPORTED_MODULE_0__.default.XYZM) {
        stride = 4;
    }
    return /** @type {number} */ (stride);
}
/**
 * @param {SimpleGeometry} simpleGeometry Simple geometry.
 * @param {import("../transform.js").Transform} transform Transform.
 * @param {Array<number>=} opt_dest Destination.
 * @return {Array<number>} Transformed flat coordinates.
 */
function transformGeom2D(simpleGeometry, transform, opt_dest) {
    var flatCoordinates = simpleGeometry.getFlatCoordinates();
    if (!flatCoordinates) {
        return null;
    }
    else {
        var stride = simpleGeometry.getStride();
        return (0,_flat_transform_js__WEBPACK_IMPORTED_MODULE_3__.transform2D)(flatCoordinates, 0, flatCoordinates.length, stride, transform, opt_dest);
    }
}
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (SimpleGeometry);
//# sourceMappingURL=SimpleGeometry.js.map

/***/ }),

/***/ "./node_modules/ol/geom/flat/area.js":
/*!*******************************************!*\
  !*** ./node_modules/ol/geom/flat/area.js ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "linearRing": () => (/* binding */ linearRing),
/* harmony export */   "linearRings": () => (/* binding */ linearRings),
/* harmony export */   "linearRingss": () => (/* binding */ linearRingss)
/* harmony export */ });
/**
 * @module ol/geom/flat/area
 */
/**
 * @param {Array<number>} flatCoordinates Flat coordinates.
 * @param {number} offset Offset.
 * @param {number} end End.
 * @param {number} stride Stride.
 * @return {number} Area.
 */
function linearRing(flatCoordinates, offset, end, stride) {
    var twiceArea = 0;
    var x1 = flatCoordinates[end - stride];
    var y1 = flatCoordinates[end - stride + 1];
    for (; offset < end; offset += stride) {
        var x2 = flatCoordinates[offset];
        var y2 = flatCoordinates[offset + 1];
        twiceArea += y1 * x2 - x1 * y2;
        x1 = x2;
        y1 = y2;
    }
    return twiceArea / 2;
}
/**
 * @param {Array<number>} flatCoordinates Flat coordinates.
 * @param {number} offset Offset.
 * @param {Array<number>} ends Ends.
 * @param {number} stride Stride.
 * @return {number} Area.
 */
function linearRings(flatCoordinates, offset, ends, stride) {
    var area = 0;
    for (var i = 0, ii = ends.length; i < ii; ++i) {
        var end = ends[i];
        area += linearRing(flatCoordinates, offset, end, stride);
        offset = end;
    }
    return area;
}
/**
 * @param {Array<number>} flatCoordinates Flat coordinates.
 * @param {number} offset Offset.
 * @param {Array<Array<number>>} endss Endss.
 * @param {number} stride Stride.
 * @return {number} Area.
 */
function linearRingss(flatCoordinates, offset, endss, stride) {
    var area = 0;
    for (var i = 0, ii = endss.length; i < ii; ++i) {
        var ends = endss[i];
        area += linearRings(flatCoordinates, offset, ends, stride);
        offset = ends[ends.length - 1];
    }
    return area;
}
//# sourceMappingURL=area.js.map

/***/ }),

/***/ "./node_modules/ol/geom/flat/center.js":
/*!*********************************************!*\
  !*** ./node_modules/ol/geom/flat/center.js ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "linearRingss": () => (/* binding */ linearRingss)
/* harmony export */ });
/* harmony import */ var _extent_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../extent.js */ "./node_modules/ol/extent.js");
/**
 * @module ol/geom/flat/center
 */

/**
 * @param {Array<number>} flatCoordinates Flat coordinates.
 * @param {number} offset Offset.
 * @param {Array<Array<number>>} endss Endss.
 * @param {number} stride Stride.
 * @return {Array<number>} Flat centers.
 */
function linearRingss(flatCoordinates, offset, endss, stride) {
    var flatCenters = [];
    var extent = (0,_extent_js__WEBPACK_IMPORTED_MODULE_0__.createEmpty)();
    for (var i = 0, ii = endss.length; i < ii; ++i) {
        var ends = endss[i];
        extent = (0,_extent_js__WEBPACK_IMPORTED_MODULE_0__.createOrUpdateFromFlatCoordinates)(flatCoordinates, offset, ends[0], stride);
        flatCenters.push((extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2);
        offset = ends[ends.length - 1];
    }
    return flatCenters;
}
//# sourceMappingURL=center.js.map

/***/ }),

/***/ "./node_modules/ol/geom/flat/closest.js":
/*!**********************************************!*\
  !*** ./node_modules/ol/geom/flat/closest.js ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "maxSquaredDelta": () => (/* binding */ maxSquaredDelta),
/* harmony export */   "arrayMaxSquaredDelta": () => (/* binding */ arrayMaxSquaredDelta),
/* harmony export */   "multiArrayMaxSquaredDelta": () => (/* binding */ multiArrayMaxSquaredDelta),
/* harmony export */   "assignClosestPoint": () => (/* binding */ assignClosestPoint),
/* harmony export */   "assignClosestArrayPoint": () => (/* binding */ assignClosestArrayPoint),
/* harmony export */   "assignClosestMultiArrayPoint": () => (/* binding */ assignClosestMultiArrayPoint)
/* harmony export */ });
/* harmony import */ var _math_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../math.js */ "./node_modules/ol/math.js");
/**
 * @module ol/geom/flat/closest
 */

/**
 * Returns the point on the 2D line segment flatCoordinates[offset1] to
 * flatCoordinates[offset2] that is closest to the point (x, y).  Extra
 * dimensions are linearly interpolated.
 * @param {Array<number>} flatCoordinates Flat coordinates.
 * @param {number} offset1 Offset 1.
 * @param {number} offset2 Offset 2.
 * @param {number} stride Stride.
 * @param {number} x X.
 * @param {number} y Y.
 * @param {Array<number>} closestPoint Closest point.
 */
function assignClosest(flatCoordinates, offset1, offset2, stride, x, y, closestPoint) {
    var x1 = flatCoordinates[offset1];
    var y1 = flatCoordinates[offset1 + 1];
    var dx = flatCoordinates[offset2] - x1;
    var dy = flatCoordinates[offset2 + 1] - y1;
    var offset;
    if (dx === 0 && dy === 0) {
        offset = offset1;
    }
    else {
        var t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);
        if (t > 1) {
            offset = offset2;
        }
        else if (t > 0) {
            for (var i = 0; i < stride; ++i) {
                closestPoint[i] = (0,_math_js__WEBPACK_IMPORTED_MODULE_0__.lerp)(flatCoordinates[offset1 + i], flatCoordinates[offset2 + i], t);
            }
            closestPoint.length = stride;
            return;
        }
        else {
            offset = offset1;
        }
    }
    for (var i = 0; i < stride; ++i) {
        closestPoint[i] = flatCoordinates[offset + i];
    }
    closestPoint.length = stride;
}
/**
 * Return the squared of the largest distance between any pair of consecutive
 * coordinates.
 * @param {Array<number>} flatCoordinates Flat coordinates.
 * @param {number} offset Offset.
 * @param {number} end End.
 * @param {number} stride Stride.
 * @param {number} max Max squared delta.
 * @return {number} Max squared delta.
 */
function maxSquaredDelta(flatCoordinates, offset, end, stride, max) {
    var x1 = flatCoordinates[offset];
    var y1 = flatCoordinates[offset + 1];
    for (offset += stride; offset < end; offset += stride) {
        var x2 = flatCoordinates[offset];
        var y2 = flatCoordinates[offset + 1];
        var squaredDelta = (0,_math_js__WEBPACK_IMPORTED_MODULE_0__.squaredDistance)(x1, y1, x2, y2);
        if (squaredDelta > max) {
            max = squaredDelta;
        }
        x1 = x2;
        y1 = y2;
    }
    return max;
}
/**
 * @param {Array<number>} flatCoordinates Flat coordinates.
 * @param {number} offset Offset.
 * @param {Array<number>} ends Ends.
 * @param {number} stride Stride.
 * @param {number} max Max squared delta.
 * @return {number} Max squared delta.
 */
function arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max) {
    for (var i = 0, ii = ends.length; i < ii; ++i) {
        var end = ends[i];
        max = maxSquaredDelta(flatCoordinates, offset, end, stride, max);
        offset = end;
    }
    return max;
}
/**
 * @param {Array<number>} flatCoordinates Flat coordinates.
 * @param {number} offset Offset.
 * @param {Array<Array<number>>} endss Endss.
 * @param {number} stride Stride.
 * @param {number} max Max squared delta.
 * @return {number} Max squared delta.
 */
function multiArrayMaxSquaredDelta(flatCoordinates, offset, endss, stride, max) {
    for (var i = 0, ii = endss.length; i < ii; ++i) {
        var ends = endss[i];
        max = arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max);
        offset = ends[ends.length - 1];
    }
    return max;
}
/**
 * @param {Array<number>} flatCoordinates Flat coordinates.
 * @param {number} offset Offset.
 * @param {number} end End.
 * @param {number} stride Stride.
 * @param {number} maxDelta Max delta.
 * @param {boolean} isRing Is ring.
 * @param {number} x X.
 * @param {number} y Y.
 * @param {Array<number>} closestPoint Closest point.
 * @param {number} minSquaredDistance Minimum squared distance.
 * @param {Array<number>=} opt_tmpPoint Temporary point object.
 * @return {number} Minimum squared distance.
 */
function assignClosestPoint(flatCoordinates, offset, end, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance, opt_tmpPoint) {
    if (offset == end) {
        return minSquaredDistance;
    }
    var i, squaredDistance;
    if (maxDelta === 0) {
        // All points are identical, so just test the first point.
        squaredDistance = (0,_math_js__WEBPACK_IMPORTED_MODULE_0__.squaredDistance)(x, y, flatCoordinates[offset], flatCoordinates[offset + 1]);
        if (squaredDistance < minSquaredDistance) {
            for (i = 0; i < stride; ++i) {
                closestPoint[i] = flatCoordinates[offset + i];
            }
            closestPoint.length = stride;
            return squaredDistance;
        }
        else {
            return minSquaredDistance;
        }
    }
    var tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];
    var index = offset + stride;
    while (index < end) {
        assignClosest(flatCoordinates, index - stride, index, stride, x, y, tmpPoint);
        squaredDistance = (0,_math_js__WEBPACK_IMPORTED_MODULE_0__.squaredDistance)(x, y, tmpPoint[0], tmpPoint[1]);
        if (squaredDistance < minSquaredDistance) {
            minSquaredDistance = squaredDistance;
            for (i = 0; i < stride; ++i) {
                closestPoint[i] = tmpPoint[i];
            }
            closestPoint.length = stride;
            index += stride;
        }
        else {
            // Skip ahead multiple points, because we know that all the skipped
            // points cannot be any closer than the closest point we have found so
            // far.  We know this because we know how close the current point is, how
            // close the closest point we have found so far is, and the maximum
            // distance between consecutive points.  For example, if we're currently
            // at distance 10, the best we've found so far is 3, and that the maximum
            // distance between consecutive points is 2, then we'll need to skip at
            // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of
            // finding a closer point.  We use Math.max(..., 1) to ensure that we
            // always advance at least one point, to avoid an infinite loop.
            index +=
                stride *
                    Math.max(((Math.sqrt(squaredDistance) - Math.sqrt(minSquaredDistance)) /
                        maxDelta) |
                        0, 1);
        }
    }
    if (isRing) {
        // Check the closing segment.
        assignClosest(flatCoordinates, end - stride, offset, stride, x, y, tmpPoint);
        squaredDistance = (0,_math_js__WEBPACK_IMPORTED_MODULE_0__.squaredDistance)(x, y, tmpPoint[0], tmpPoint[1]);
        if (squaredDistance < minSquaredDistance) {
            minSquaredDistance = squaredDistance;
            for (i = 0; i < stride; ++i) {
                closestPoint[i] = tmpPoint[i];
            }
            closestPoint.length = stride;
        }
    }
    return minSquaredDistance;
}
/**
 * @param {Array<number>} flatCoordinates Flat coordinates.
 * @param {number} offset Offset.
 * @param {Array<number>} ends Ends.
 * @param {number} stride Stride.
 * @param {number} maxDelta Max delta.
 * @param {boolean} isRing Is ring.
 * @param {number} x X.
 * @param {number} y Y.
 * @param {Array<number>} closestPoint Closest point.
 * @param {number} minSquaredDistance Minimum squared distance.
 * @param {Array<number>=} opt_tmpPoint Temporary point object.
 * @return {number} Minimum squared distance.
 */
function assignClosestArrayPoint(flatCoordinates, offset, ends, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance, opt_tmpPoint) {
    var tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];
    for (var i = 0, ii = ends.length; i < ii; ++i) {
        var end = ends[i];
        minSquaredDistance = assignClosestPoint(flatCoordinates, offset, end, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance, tmpPoint);
        offset = end;
    }
    return minSquaredDistance;
}
/**
 * @param {Array<number>} flatCoordinates Flat coordinates.
 * @param {number} offset Offset.
 * @param {Array<Array<number>>} endss Endss.
 * @param {number} stride Stride.
 * @param {number} maxDelta Max delta.
 * @param {boolean} isRing Is ring.
 * @param {number} x X.
 * @param {number} y Y.
 * @param {Array<number>} closestPoint Closest point.
 * @param {number} minSquaredDistance Minimum squared distance.
 * @param {Array<number>=} opt_tmpPoint Temporary point object.
 * @return {number} Minimum squared distance.
 */
function assignClosestMultiArrayPoint(flatCoordinates, offset, endss, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance, opt_tmpPoint) {
    var tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];
    for (var i = 0, ii = endss.length; i < ii; ++i) {
        var ends = endss[i];
        minSquaredDistance = assignClosestArrayPoint(flatCoordinates, offset, ends, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance, tmpPoint);
        offset = ends[ends.length - 1];
    }
    return minSquaredDistance;
}
//# sourceMappingURL=closest.js.map

/***/ }),

/***/ "./node_modules/ol/geom/flat/contains.js":
/*!***********************************************!*\
  !*** ./node_modules/ol/geom/flat/contains.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "linearRingContainsExtent": () => (/* binding */ linearRingContainsExtent),
/* harmony export */   "linearRingContainsXY": () => (/* binding */ linearRingContainsXY),
/* harmony export */   "linearRingsContainsXY": () => (/* binding */ linearRingsContainsXY),
/* harmony export */   "linearRingssContainsXY": () => (/* binding */ linearRingssContainsXY)
/* harmony export */ });
/* harmony import */ var _extent_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../extent.js */ "./node_modules/ol/extent.js");
/**
 * @module ol/geom/flat/contains
 */

/**
 * @param {Array<number>} flatCoordinates Flat coordinates.
 * @param {number} offset Offset.
 * @param {number} end End.
 * @param {number} stride Stride.
 * @param {import("../../extent.js").Extent} extent Extent.
 * @return {boolean} Contains extent.
 */
function linearRingContainsExtent(flatCoordinates, offset, end, stride, extent) {
    var outside = (0,_extent_js__WEBPACK_IMPORTED_MODULE_0__.forEachCorner)(extent, 
    /**
     * @param {import("../../coordinate.js").Coordinate} coordinate Coordinate.
     * @return {boolean} Contains (x, y).
     */
    function (coordinate) {
        return !linearRingContainsXY(flatCoordinates, offset, end, stride, coordinate[0], coordinate[1]);
    });
    return !outside;
}
/**
 * @param {Array<number>} flatCoordinates Flat coordinates.
 * @param {number} offset Offset.
 * @param {number} end End.
 * @param {number} stride Stride.
 * @param {number} x X.
 * @param {number} y Y.
 * @return {boolean} Contains (x, y).
 */
function linearRingContainsXY(flatCoordinates, offset, end, stride, x, y) {
    // http://geomalgorithms.com/a03-_inclusion.html
    // Copyright 2000 softSurfer, 2012 Dan Sunday
    // This code may be freely used and modified for any purpose
    // providing that this copyright notice is included with it.
    // SoftSurfer makes no warranty for this code, and cannot be held
    // liable for any real or imagined damage resulting from its use.
    // Users of this code must verify correctness for their application.
    var wn = 0;
    var x1 = flatCoordinates[end - stride];
    var y1 = flatCoordinates[end - stride + 1];
    for (; offset < end; offset += stride) {
        var x2 = flatCoordinates[offset];
        var y2 = flatCoordinates[offset + 1];
        if (y1 <= y) {
            if (y2 > y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) > 0) {
                wn++;
            }
        }
        else if (y2 <= y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) < 0) {
            wn--;
        }
        x1 = x2;
        y1 = y2;
    }
    return wn !== 0;
}
/**
 * @param {Array<number>} flatCoordinates Flat coordinates.
 * @param {number} offset Offset.
 * @param {Array<number>} ends Ends.
 * @param {number} stride Stride.
 * @param {number} x X.
 * @param {number} y Y.
 * @return {boolean} Contains (x, y).
 */
function linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y) {
    if (ends.length === 0) {
        return false;
    }
    if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {
        return false;
    }
    for (var i = 1, ii = ends.length; i < ii; ++i) {
        if (linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)) {
            return false;
        }
    }
    return true;
}
/**
 * @param {Array<number>} flatCoordinates Flat coordinates.
 * @param {number} offset Offset.
 * @param {Array<Array<number>>} endss Endss.
 * @param {number} stride Stride.
 * @param {number} x X.
 * @param {number} y Y.
 * @return {boolean} Contains (x, y).
 */
function linearRingssContainsXY(flatCoordinates, offset, endss, stride, x, y) {
    if (endss.length === 0) {
        return false;
    }
    for (var i = 0, ii = endss.length; i < ii; ++i) {
        var ends = endss[i];
        if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {
            return true;
        }
        offset = ends[ends.length - 1];
    }
    return false;
}
//# sourceMappingURL=contains.js.map

/***/ }),

/***/ "./node_modules/ol/geom/flat/deflate.js":
/*!**********************************************!*\
  !*** ./node_modules/ol/geom/flat/deflate.js ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "deflateCoordinate": () => (/* binding */ deflateCoordinate),
/* harmony export */   "deflateCoordinates": () => (/* binding */ deflateCoordinates),
/* harmony export */   "deflateCoordinatesArray": () => (/* binding */ deflateCoordinatesArray),
/* harmony export */   "deflateMultiCoordinatesArray": () => (/* binding */ deflateMultiCoordinatesArray)
/* harmony export */ });
/**
 * @module ol/geom/flat/deflate
 */
/**
 * @param {Array<number>} flatCoordinates Flat coordinates.
 * @param {number} offset Offset.
 * @param {import("../../coordinate.js").Coordinate} coordinate Coordinate.
 * @param {number} stride Stride.
 * @return {number} offset Offset.
 */
function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {
    for (var i = 0, ii = coordinate.length; i < ii; ++i) {
        flatCoordinates[offset++] = coordinate[i];
    }
    return offset;
}
/**
 * @param {Array<number>} flatCoordinates Flat coordinates.
 * @param {number} offset Offset.
 * @param {Array<import("../../coordinate.js").Coordinate>} coordinates Coordinates.
 * @param {number} stride Stride.
 * @return {number} offset Offset.
 */
function deflateCoordinates(flatCoordinates, offset, coordinates, stride) {
    for (var i = 0, ii = coordinates.length; i < ii; ++i) {
        var coordinate = coordinates[i];
        for (var j = 0; j < stride; ++j) {
            flatCoordinates[offset++] = coordinate[j];
        }
    }
    return offset;
}
/**
 * @param {Array<number>} flatCoordinates Flat coordinates.
 * @param {number} offset Offset.
 * @param {Array<Array<import("../../coordinate.js").Coordinate>>} coordinatess Coordinatess.
 * @param {number} stride Stride.
 * @param {Array<number>=} opt_ends Ends.
 * @return {Array<number>} Ends.
 */
function deflateCoordinatesArray(flatCoordinates, offset, coordinatess, stride, opt_ends) {
    var ends = opt_ends ? opt_ends : [];
    var i = 0;
    for (var j = 0, jj = coordinatess.length; j < jj; ++j) {
        var end = deflateCoordinates(flatCoordinates, offset, coordinatess[j], stride);
        ends[i++] = end;
        offset = end;
    }
    ends.length = i;
    return ends;
}
/**
 * @param {Array<number>} flatCoordinates Flat coordinates.
 * @param {number} offset Offset.
 * @param {Array<Array<Array<import("../../coordinate.js").Coordinate>>>} coordinatesss Coordinatesss.
 * @param {number} stride Stride.
 * @param {Array<Array<number>>=} opt_endss Endss.
 * @return {Array<Array<number>>} Endss.
 */
function deflateMultiCoordinatesArray(flatCoordinates, offset, coordinatesss, stride, opt_endss) {
    var endss = opt_endss ? opt_endss : [];
    var i = 0;
    for (var j = 0, jj = coordinatesss.length; j < jj; ++j) {
        var ends = deflateCoordinatesArray(flatCoordinates, offset, coordinatesss[j], stride, endss[i]);
        endss[i++] = ends;
        offset = ends[ends.length - 1];
    }
    endss.length = i;
    return endss;
}
//# sourceMappingURL=deflate.js.map

/***/ }),

/***/ "./node_modules/ol/geom/flat/inflate.js":
/*!**********************************************!*\
  !*** ./node_modules/ol/geom/flat/inflate.js ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "inflateCoordinates": () => (/* binding */ inflateCoordinates),
/* harmony export */   "inflateCoordinatesArray": () => (/* binding */ inflateCoordinatesArray),
/* harmony export */   "inflateMultiCoordinatesArray": () => (/* binding */ inflateMultiCoordinatesArray)
/* harmony export */ });
/**
 * @module ol/geom/flat/inflate
 */
/**
 * @param {Array<number>} flatCoordinates Flat coordinates.
 * @param {number} offset Offset.
 * @param {number} end End.
 * @param {number} stride Stride.
 * @param {Array<import("../../coordinate.js").Coordinate>=} opt_coordinates Coordinates.
 * @return {Array<import("../../coordinate.js").Coordinate>} Coordinates.
 */
function inflateCoordinates(flatCoordinates, offset, end, stride, opt_coordinates) {
    var coordinates = opt_coordinates !== undefined ? opt_coordinates : [];
    var i = 0;
    for (var j = offset; j < end; j += stride) {
        coordinates[i++] = flatCoordinates.slice(j, j + stride);
    }
    coordinates.length = i;
    return coordinates;
}
/**
 * @param {Array<number>} flatCoordinates Flat coordinates.
 * @param {number} offset Offset.
 * @param {Array<number>} ends Ends.
 * @param {number} stride Stride.
 * @param {Array<Array<import("../../coordinate.js").Coordinate>>=} opt_coordinatess Coordinatess.
 * @return {Array<Array<import("../../coordinate.js").Coordinate>>} Coordinatess.
 */
function inflateCoordinatesArray(flatCoordinates, offset, ends, stride, opt_coordinatess) {
    var coordinatess = opt_coordinatess !== undefined ? opt_coordinatess : [];
    var i = 0;
    for (var j = 0, jj = ends.length; j < jj; ++j) {
        var end = ends[j];
        coordinatess[i++] = inflateCoordinates(flatCoordinates, offset, end, stride, coordinatess[i]);
        offset = end;
    }
    coordinatess.length = i;
    return coordinatess;
}
/**
 * @param {Array<number>} flatCoordinates Flat coordinates.
 * @param {number} offset Offset.
 * @param {Array<Array<number>>} endss Endss.
 * @param {number} stride Stride.
 * @param {Array<Array<Array<import("../../coordinate.js").Coordinate>>>=} opt_coordinatesss
 *     Coordinatesss.
 * @return {Array<Array<Array<import("../../coordinate.js").Coordinate>>>} Coordinatesss.
 */
function inflateMultiCoordinatesArray(flatCoordinates, offset, endss, stride, opt_coordinatesss) {
    var coordinatesss = opt_coordinatesss !== undefined ? opt_coordinatesss : [];
    var i = 0;
    for (var j = 0, jj = endss.length; j < jj; ++j) {
        var ends = endss[j];
        coordinatesss[i++] = inflateCoordinatesArray(flatCoordinates, offset, ends, stride, coordinatesss[i]);
        offset = ends[ends.length - 1];
    }
    coordinatesss.length = i;
    return coordinatesss;
}
//# sourceMappingURL=inflate.js.map

/***/ }),

/***/ "./node_modules/ol/geom/flat/interiorpoint.js":
/*!****************************************************!*\
  !*** ./node_modules/ol/geom/flat/interiorpoint.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "getInteriorPointOfArray": () => (/* binding */ getInteriorPointOfArray),
/* harmony export */   "getInteriorPointsOfMultiArray": () => (/* binding */ getInteriorPointsOfMultiArray)
/* harmony export */ });
/* harmony import */ var _contains_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./contains.js */ "./node_modules/ol/geom/flat/contains.js");
/* harmony import */ var _array_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../array.js */ "./node_modules/ol/array.js");
/**
 * @module ol/geom/flat/interiorpoint
 */


/**
 * Calculates a point that is likely to lie in the interior of the linear rings.
 * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.
 * @param {Array<number>} flatCoordinates Flat coordinates.
 * @param {number} offset Offset.
 * @param {Array<number>} ends Ends.
 * @param {number} stride Stride.
 * @param {Array<number>} flatCenters Flat centers.
 * @param {number} flatCentersOffset Flat center offset.
 * @param {Array<number>=} opt_dest Destination.
 * @return {Array<number>} Destination point as XYM coordinate, where M is the
 * length of the horizontal intersection that the point belongs to.
 */
function getInteriorPointOfArray(flatCoordinates, offset, ends, stride, flatCenters, flatCentersOffset, opt_dest) {
    var i, ii, x, x1, x2, y1, y2;
    var y = flatCenters[flatCentersOffset + 1];
    /** @type {Array<number>} */
    var intersections = [];
    // Calculate intersections with the horizontal line
    for (var r = 0, rr = ends.length; r < rr; ++r) {
        var end = ends[r];
        x1 = flatCoordinates[end - stride];
        y1 = flatCoordinates[end - stride + 1];
        for (i = offset; i < end; i += stride) {
            x2 = flatCoordinates[i];
            y2 = flatCoordinates[i + 1];
            if ((y <= y1 && y2 <= y) || (y1 <= y && y <= y2)) {
                x = ((y - y1) / (y2 - y1)) * (x2 - x1) + x1;
                intersections.push(x);
            }
            x1 = x2;
            y1 = y2;
        }
    }
    // Find the longest segment of the horizontal line that has its center point
    // inside the linear ring.
    var pointX = NaN;
    var maxSegmentLength = -Infinity;
    intersections.sort(_array_js__WEBPACK_IMPORTED_MODULE_0__.numberSafeCompareFunction);
    x1 = intersections[0];
    for (i = 1, ii = intersections.length; i < ii; ++i) {
        x2 = intersections[i];
        var segmentLength = Math.abs(x2 - x1);
        if (segmentLength > maxSegmentLength) {
            x = (x1 + x2) / 2;
            if ((0,_contains_js__WEBPACK_IMPORTED_MODULE_1__.linearRingsContainsXY)(flatCoordinates, offset, ends, stride, x, y)) {
                pointX = x;
                maxSegmentLength = segmentLength;
            }
        }
        x1 = x2;
    }
    if (isNaN(pointX)) {
        // There is no horizontal line that has its center point inside the linear
        // ring.  Use the center of the the linear ring's extent.
        pointX = flatCenters[flatCentersOffset];
    }
    if (opt_dest) {
        opt_dest.push(pointX, y, maxSegmentLength);
        return opt_dest;
    }
    else {
        return [pointX, y, maxSegmentLength];
    }
}
/**
 * @param {Array<number>} flatCoordinates Flat coordinates.
 * @param {number} offset Offset.
 * @param {Array<Array<number>>} endss Endss.
 * @param {number} stride Stride.
 * @param {Array<number>} flatCenters Flat centers.
 * @return {Array<number>} Interior points as XYM coordinates, where M is the
 * length of the horizontal intersection that the point belongs to.
 */
function getInteriorPointsOfMultiArray(flatCoordinates, offset, endss, stride, flatCenters) {
    var interiorPoints = [];
    for (var i = 0, ii = endss.length; i < ii; ++i) {
        var ends = endss[i];
        interiorPoints = getInteriorPointOfArray(flatCoordinates, offset, ends, stride, flatCenters, 2 * i, interiorPoints);
        offset = ends[ends.length - 1];
    }
    return interiorPoints;
}
//# sourceMappingURL=interiorpoint.js.map

/***/ }),

/***/ "./node_modules/ol/geom/flat/interpolate.js":
/*!**************************************************!*\
  !*** ./node_modules/ol/geom/flat/interpolate.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "interpolatePoint": () => (/* binding */ interpolatePoint),
/* harmony export */   "lineStringCoordinateAtM": () => (/* binding */ lineStringCoordinateAtM),
/* harmony export */   "lineStringsCoordinateAtM": () => (/* binding */ lineStringsCoordinateAtM)
/* harmony export */ });
/* harmony import */ var _array_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../array.js */ "./node_modules/ol/array.js");
/* harmony import */ var _math_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../math.js */ "./node_modules/ol/math.js");
/**
 * @module ol/geom/flat/interpolate
 */


/**
 * @param {Array<number>} flatCoordinates Flat coordinates.
 * @param {number} offset Offset.
 * @param {number} end End.
 * @param {number} stride Stride.
 * @param {number} fraction Fraction.
 * @param {Array<number>=} opt_dest Destination.
 * @param {number=} opt_dimension Destination dimension (default is `2`)
 * @return {Array<number>} Destination.
 */
function interpolatePoint(flatCoordinates, offset, end, stride, fraction, opt_dest, opt_dimension) {
    var o, t;
    var n = (end - offset) / stride;
    if (n === 1) {
        o = offset;
    }
    else if (n === 2) {
        o = offset;
        t = fraction;
    }
    else if (n !== 0) {
        var x1 = flatCoordinates[offset];
        var y1 = flatCoordinates[offset + 1];
        var length_1 = 0;
        var cumulativeLengths = [0];
        for (var i = offset + stride; i < end; i += stride) {
            var x2 = flatCoordinates[i];
            var y2 = flatCoordinates[i + 1];
            length_1 += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));
            cumulativeLengths.push(length_1);
            x1 = x2;
            y1 = y2;
        }
        var target = fraction * length_1;
        var index = (0,_array_js__WEBPACK_IMPORTED_MODULE_0__.binarySearch)(cumulativeLengths, target);
        if (index < 0) {
            t =
                (target - cumulativeLengths[-index - 2]) /
                    (cumulativeLengths[-index - 1] - cumulativeLengths[-index - 2]);
            o = offset + (-index - 2) * stride;
        }
        else {
            o = offset + index * stride;
        }
    }
    var dimension = opt_dimension > 1 ? opt_dimension : 2;
    var dest = opt_dest ? opt_dest : new Array(dimension);
    for (var i = 0; i < dimension; ++i) {
        dest[i] =
            o === undefined
                ? NaN
                : t === undefined
                    ? flatCoordinates[o + i]
                    : (0,_math_js__WEBPACK_IMPORTED_MODULE_1__.lerp)(flatCoordinates[o + i], flatCoordinates[o + stride + i], t);
    }
    return dest;
}
/**
 * @param {Array<number>} flatCoordinates Flat coordinates.
 * @param {number} offset Offset.
 * @param {number} end End.
 * @param {number} stride Stride.
 * @param {number} m M.
 * @param {boolean} extrapolate Extrapolate.
 * @return {import("../../coordinate.js").Coordinate} Coordinate.
 */
function lineStringCoordinateAtM(flatCoordinates, offset, end, stride, m, extrapolate) {
    if (end == offset) {
        return null;
    }
    var coordinate;
    if (m < flatCoordinates[offset + stride - 1]) {
        if (extrapolate) {
            coordinate = flatCoordinates.slice(offset, offset + stride);
            coordinate[stride - 1] = m;
            return coordinate;
        }
        else {
            return null;
        }
    }
    else if (flatCoordinates[end - 1] < m) {
        if (extrapolate) {
            coordinate = flatCoordinates.slice(end - stride, end);
            coordinate[stride - 1] = m;
            return coordinate;
        }
        else {
            return null;
        }
    }
    // FIXME use O(1) search
    if (m == flatCoordinates[offset + stride - 1]) {
        return flatCoordinates.slice(offset, offset + stride);
    }
    var lo = offset / stride;
    var hi = end / stride;
    while (lo < hi) {
        var mid = (lo + hi) >> 1;
        if (m < flatCoordinates[(mid + 1) * stride - 1]) {
            hi = mid;
        }
        else {
            lo = mid + 1;
        }
    }
    var m0 = flatCoordinates[lo * stride - 1];
    if (m == m0) {
        return flatCoordinates.slice((lo - 1) * stride, (lo - 1) * stride + stride);
    }
    var m1 = flatCoordinates[(lo + 1) * stride - 1];
    var t = (m - m0) / (m1 - m0);
    coordinate = [];
    for (var i = 0; i < stride - 1; ++i) {
        coordinate.push((0,_math_js__WEBPACK_IMPORTED_MODULE_1__.lerp)(flatCoordinates[(lo - 1) * stride + i], flatCoordinates[lo * stride + i], t));
    }
    coordinate.push(m);
    return coordinate;
}
/**
 * @param {Array<number>} flatCoordinates Flat coordinates.
 * @param {number} offset Offset.
 * @param {Array<number>} ends Ends.
 * @param {number} stride Stride.
 * @param {number} m M.
 * @param {boolean} extrapolate Extrapolate.
 * @param {boolean} interpolate Interpolate.
 * @return {import("../../coordinate.js").Coordinate} Coordinate.
 */
function lineStringsCoordinateAtM(flatCoordinates, offset, ends, stride, m, extrapolate, interpolate) {
    if (interpolate) {
        return lineStringCoordinateAtM(flatCoordinates, offset, ends[ends.length - 1], stride, m, extrapolate);
    }
    var coordinate;
    if (m < flatCoordinates[stride - 1]) {
        if (extrapolate) {
            coordinate = flatCoordinates.slice(0, stride);
            coordinate[stride - 1] = m;
            return coordinate;
        }
        else {
            return null;
        }
    }
    if (flatCoordinates[flatCoordinates.length - 1] < m) {
        if (extrapolate) {
            coordinate = flatCoordinates.slice(flatCoordinates.length - stride);
            coordinate[stride - 1] = m;
            return coordinate;
        }
        else {
            return null;
        }
    }
    for (var i = 0, ii = ends.length; i < ii; ++i) {
        var end = ends[i];
        if (offset == end) {
            continue;
        }
        if (m < flatCoordinates[offset + stride - 1]) {
            return null;
        }
        else if (m <= flatCoordinates[end - 1]) {
            return lineStringCoordinateAtM(flatCoordinates, offset, end, stride, m, false);
        }
        offset = end;
    }
    return null;
}
//# sourceMappingURL=interpolate.js.map

/***/ }),

/***/ "./node_modules/ol/geom/flat/intersectsextent.js":
/*!*******************************************************!*\
  !*** ./node_modules/ol/geom/flat/intersectsextent.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "intersectsLineString": () => (/* binding */ intersectsLineString),
/* harmony export */   "intersectsLineStringArray": () => (/* binding */ intersectsLineStringArray),
/* harmony export */   "intersectsLinearRing": () => (/* binding */ intersectsLinearRing),
/* harmony export */   "intersectsLinearRingArray": () => (/* binding */ intersectsLinearRingArray),
/* harmony export */   "intersectsLinearRingMultiArray": () => (/* binding */ intersectsLinearRingMultiArray)
/* harmony export */ });
/* harmony import */ var _extent_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../extent.js */ "./node_modules/ol/extent.js");
/* harmony import */ var _segments_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./segments.js */ "./node_modules/ol/geom/flat/segments.js");
/* harmony import */ var _contains_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./contains.js */ "./node_modules/ol/geom/flat/contains.js");
/**
 * @module ol/geom/flat/intersectsextent
 */



/**
 * @param {Array<number>} flatCoordinates Flat coordinates.
 * @param {number} offset Offset.
 * @param {number} end End.
 * @param {number} stride Stride.
 * @param {import("../../extent.js").Extent} extent Extent.
 * @return {boolean} True if the geometry and the extent intersect.
 */
function intersectsLineString(flatCoordinates, offset, end, stride, extent) {
    var coordinatesExtent = (0,_extent_js__WEBPACK_IMPORTED_MODULE_0__.extendFlatCoordinates)((0,_extent_js__WEBPACK_IMPORTED_MODULE_0__.createEmpty)(), flatCoordinates, offset, end, stride);
    if (!(0,_extent_js__WEBPACK_IMPORTED_MODULE_0__.intersects)(extent, coordinatesExtent)) {
        return false;
    }
    if ((0,_extent_js__WEBPACK_IMPORTED_MODULE_0__.containsExtent)(extent, coordinatesExtent)) {
        return true;
    }
    if (coordinatesExtent[0] >= extent[0] && coordinatesExtent[2] <= extent[2]) {
        return true;
    }
    if (coordinatesExtent[1] >= extent[1] && coordinatesExtent[3] <= extent[3]) {
        return true;
    }
    return (0,_segments_js__WEBPACK_IMPORTED_MODULE_1__.forEach)(flatCoordinates, offset, end, stride, 
    /**
     * @param {import("../../coordinate.js").Coordinate} point1 Start point.
     * @param {import("../../coordinate.js").Coordinate} point2 End point.
     * @return {boolean} `true` if the segment and the extent intersect,
     *     `false` otherwise.
     */
    function (point1, point2) {
        return (0,_extent_js__WEBPACK_IMPORTED_MODULE_0__.intersectsSegment)(extent, point1, point2);
    });
}
/**
 * @param {Array<number>} flatCoordinates Flat coordinates.
 * @param {number} offset Offset.
 * @param {Array<number>} ends Ends.
 * @param {number} stride Stride.
 * @param {import("../../extent.js").Extent} extent Extent.
 * @return {boolean} True if the geometry and the extent intersect.
 */
function intersectsLineStringArray(flatCoordinates, offset, ends, stride, extent) {
    for (var i = 0, ii = ends.length; i < ii; ++i) {
        if (intersectsLineString(flatCoordinates, offset, ends[i], stride, extent)) {
            return true;
        }
        offset = ends[i];
    }
    return false;
}
/**
 * @param {Array<number>} flatCoordinates Flat coordinates.
 * @param {number} offset Offset.
 * @param {number} end End.
 * @param {number} stride Stride.
 * @param {import("../../extent.js").Extent} extent Extent.
 * @return {boolean} True if the geometry and the extent intersect.
 */
function intersectsLinearRing(flatCoordinates, offset, end, stride, extent) {
    if (intersectsLineString(flatCoordinates, offset, end, stride, extent)) {
        return true;
    }
    if ((0,_contains_js__WEBPACK_IMPORTED_MODULE_2__.linearRingContainsXY)(flatCoordinates, offset, end, stride, extent[0], extent[1])) {
        return true;
    }
    if ((0,_contains_js__WEBPACK_IMPORTED_MODULE_2__.linearRingContainsXY)(flatCoordinates, offset, end, stride, extent[0], extent[3])) {
        return true;
    }
    if ((0,_contains_js__WEBPACK_IMPORTED_MODULE_2__.linearRingContainsXY)(flatCoordinates, offset, end, stride, extent[2], extent[1])) {
        return true;
    }
    if ((0,_contains_js__WEBPACK_IMPORTED_MODULE_2__.linearRingContainsXY)(flatCoordinates, offset, end, stride, extent[2], extent[3])) {
        return true;
    }
    return false;
}
/**
 * @param {Array<number>} flatCoordinates Flat coordinates.
 * @param {number} offset Offset.
 * @param {Array<number>} ends Ends.
 * @param {number} stride Stride.
 * @param {import("../../extent.js").Extent} extent Extent.
 * @return {boolean} True if the geometry and the extent intersect.
 */
function intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent) {
    if (!intersectsLinearRing(flatCoordinates, offset, ends[0], stride, extent)) {
        return false;
    }
    if (ends.length === 1) {
        return true;
    }
    for (var i = 1, ii = ends.length; i < ii; ++i) {
        if ((0,_contains_js__WEBPACK_IMPORTED_MODULE_2__.linearRingContainsExtent)(flatCoordinates, ends[i - 1], ends[i], stride, extent)) {
            if (!intersectsLineString(flatCoordinates, ends[i - 1], ends[i], stride, extent)) {
                return false;
            }
        }
    }
    return true;
}
/**
 * @param {Array<number>} flatCoordinates Flat coordinates.
 * @param {number} offset Offset.
 * @param {Array<Array<number>>} endss Endss.
 * @param {number} stride Stride.
 * @param {import("../../extent.js").Extent} extent Extent.
 * @return {boolean} True if the geometry and the extent intersect.
 */
function intersectsLinearRingMultiArray(flatCoordinates, offset, endss, stride, extent) {
    for (var i = 0, ii = endss.length; i < ii; ++i) {
        var ends = endss[i];
        if (intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent)) {
            return true;
        }
        offset = ends[ends.length - 1];
    }
    return false;
}
//# sourceMappingURL=intersectsextent.js.map

/***/ }),

/***/ "./node_modules/ol/geom/flat/length.js":
/*!*********************************************!*\
  !*** ./node_modules/ol/geom/flat/length.js ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "lineStringLength": () => (/* binding */ lineStringLength),
/* harmony export */   "linearRingLength": () => (/* binding */ linearRingLength)
/* harmony export */ });
/**
 * @module ol/geom/flat/length
 */
/**
 * @param {Array<number>} flatCoordinates Flat coordinates.
 * @param {number} offset Offset.
 * @param {number} end End.
 * @param {number} stride Stride.
 * @return {number} Length.
 */
function lineStringLength(flatCoordinates, offset, end, stride) {
    var x1 = flatCoordinates[offset];
    var y1 = flatCoordinates[offset + 1];
    var length = 0;
    for (var i = offset + stride; i < end; i += stride) {
        var x2 = flatCoordinates[i];
        var y2 = flatCoordinates[i + 1];
        length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));
        x1 = x2;
        y1 = y2;
    }
    return length;
}
/**
 * @param {Array<number>} flatCoordinates Flat coordinates.
 * @param {number} offset Offset.
 * @param {number} end End.
 * @param {number} stride Stride.
 * @return {number} Perimeter.
 */
function linearRingLength(flatCoordinates, offset, end, stride) {
    var perimeter = lineStringLength(flatCoordinates, offset, end, stride);
    var dx = flatCoordinates[end - stride] - flatCoordinates[offset];
    var dy = flatCoordinates[end - stride + 1] - flatCoordinates[offset + 1];
    perimeter += Math.sqrt(dx * dx + dy * dy);
    return perimeter;
}
//# sourceMappingURL=length.js.map

/***/ }),

/***/ "./node_modules/ol/geom/flat/orient.js":
/*!*********************************************!*\
  !*** ./node_modules/ol/geom/flat/orient.js ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "linearRingIsClockwise": () => (/* binding */ linearRingIsClockwise),
/* harmony export */   "linearRingsAreOriented": () => (/* binding */ linearRingsAreOriented),
/* harmony export */   "linearRingssAreOriented": () => (/* binding */ linearRingssAreOriented),
/* harmony export */   "orientLinearRings": () => (/* binding */ orientLinearRings),
/* harmony export */   "orientLinearRingsArray": () => (/* binding */ orientLinearRingsArray)
/* harmony export */ });
/* harmony import */ var _reverse_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./reverse.js */ "./node_modules/ol/geom/flat/reverse.js");
/**
 * @module ol/geom/flat/orient
 */

/**
 * Is the linear ring oriented clockwise in a coordinate system with a bottom-left
 * coordinate origin? For a coordinate system with a top-left coordinate origin,
 * the ring's orientation is clockwise when this function returns false.
 * @param {Array<number>} flatCoordinates Flat coordinates.
 * @param {number} offset Offset.
 * @param {number} end End.
 * @param {number} stride Stride.
 * @return {boolean} Is clockwise.
 */
function linearRingIsClockwise(flatCoordinates, offset, end, stride) {
    // http://tinyurl.com/clockwise-method
    // https://github.com/OSGeo/gdal/blob/trunk/gdal/ogr/ogrlinearring.cpp
    var edge = 0;
    var x1 = flatCoordinates[end - stride];
    var y1 = flatCoordinates[end - stride + 1];
    for (; offset < end; offset += stride) {
        var x2 = flatCoordinates[offset];
        var y2 = flatCoordinates[offset + 1];
        edge += (x2 - x1) * (y2 + y1);
        x1 = x2;
        y1 = y2;
    }
    return edge === 0 ? undefined : edge > 0;
}
/**
 * Determines if linear rings are oriented.  By default, left-hand orientation
 * is tested (first ring must be clockwise, remaining rings counter-clockwise).
 * To test for right-hand orientation, use the `opt_right` argument.
 *
 * @param {Array<number>} flatCoordinates Flat coordinates.
 * @param {number} offset Offset.
 * @param {Array<number>} ends Array of end indexes.
 * @param {number} stride Stride.
 * @param {boolean=} opt_right Test for right-hand orientation
 *     (counter-clockwise exterior ring and clockwise interior rings).
 * @return {boolean} Rings are correctly oriented.
 */
function linearRingsAreOriented(flatCoordinates, offset, ends, stride, opt_right) {
    var right = opt_right !== undefined ? opt_right : false;
    for (var i = 0, ii = ends.length; i < ii; ++i) {
        var end = ends[i];
        var isClockwise = linearRingIsClockwise(flatCoordinates, offset, end, stride);
        if (i === 0) {
            if ((right && isClockwise) || (!right && !isClockwise)) {
                return false;
            }
        }
        else {
            if ((right && !isClockwise) || (!right && isClockwise)) {
                return false;
            }
        }
        offset = end;
    }
    return true;
}
/**
 * Determines if linear rings are oriented.  By default, left-hand orientation
 * is tested (first ring must be clockwise, remaining rings counter-clockwise).
 * To test for right-hand orientation, use the `opt_right` argument.
 *
 * @param {Array<number>} flatCoordinates Flat coordinates.
 * @param {number} offset Offset.
 * @param {Array<Array<number>>} endss Array of array of end indexes.
 * @param {number} stride Stride.
 * @param {boolean=} opt_right Test for right-hand orientation
 *     (counter-clockwise exterior ring and clockwise interior rings).
 * @return {boolean} Rings are correctly oriented.
 */
function linearRingssAreOriented(flatCoordinates, offset, endss, stride, opt_right) {
    for (var i = 0, ii = endss.length; i < ii; ++i) {
        var ends = endss[i];
        if (!linearRingsAreOriented(flatCoordinates, offset, ends, stride, opt_right)) {
            return false;
        }
        if (ends.length) {
            offset = ends[ends.length - 1];
        }
    }
    return true;
}
/**
 * Orient coordinates in a flat array of linear rings.  By default, rings
 * are oriented following the left-hand rule (clockwise for exterior and
 * counter-clockwise for interior rings).  To orient according to the
 * right-hand rule, use the `opt_right` argument.
 *
 * @param {Array<number>} flatCoordinates Flat coordinates.
 * @param {number} offset Offset.
 * @param {Array<number>} ends Ends.
 * @param {number} stride Stride.
 * @param {boolean=} opt_right Follow the right-hand rule for orientation.
 * @return {number} End.
 */
function orientLinearRings(flatCoordinates, offset, ends, stride, opt_right) {
    var right = opt_right !== undefined ? opt_right : false;
    for (var i = 0, ii = ends.length; i < ii; ++i) {
        var end = ends[i];
        var isClockwise = linearRingIsClockwise(flatCoordinates, offset, end, stride);
        var reverse = i === 0
            ? (right && isClockwise) || (!right && !isClockwise)
            : (right && !isClockwise) || (!right && isClockwise);
        if (reverse) {
            (0,_reverse_js__WEBPACK_IMPORTED_MODULE_0__.coordinates)(flatCoordinates, offset, end, stride);
        }
        offset = end;
    }
    return offset;
}
/**
 * Orient coordinates in a flat array of linear rings.  By default, rings
 * are oriented following the left-hand rule (clockwise for exterior and
 * counter-clockwise for interior rings).  To orient according to the
 * right-hand rule, use the `opt_right` argument.
 *
 * @param {Array<number>} flatCoordinates Flat coordinates.
 * @param {number} offset Offset.
 * @param {Array<Array<number>>} endss Array of array of end indexes.
 * @param {number} stride Stride.
 * @param {boolean=} opt_right Follow the right-hand rule for orientation.
 * @return {number} End.
 */
function orientLinearRingsArray(flatCoordinates, offset, endss, stride, opt_right) {
    for (var i = 0, ii = endss.length; i < ii; ++i) {
        offset = orientLinearRings(flatCoordinates, offset, endss[i], stride, opt_right);
    }
    return offset;
}
//# sourceMappingURL=orient.js.map

/***/ }),

/***/ "./node_modules/ol/geom/flat/reverse.js":
/*!**********************************************!*\
  !*** ./node_modules/ol/geom/flat/reverse.js ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "coordinates": () => (/* binding */ coordinates)
/* harmony export */ });
/**
 * @module ol/geom/flat/reverse
 */
/**
 * @param {Array<number>} flatCoordinates Flat coordinates.
 * @param {number} offset Offset.
 * @param {number} end End.
 * @param {number} stride Stride.
 */
function coordinates(flatCoordinates, offset, end, stride) {
    while (offset < end - stride) {
        for (var i = 0; i < stride; ++i) {
            var tmp = flatCoordinates[offset + i];
            flatCoordinates[offset + i] = flatCoordinates[end - stride + i];
            flatCoordinates[end - stride + i] = tmp;
        }
        offset += stride;
        end -= stride;
    }
}
//# sourceMappingURL=reverse.js.map

/***/ }),

/***/ "./node_modules/ol/geom/flat/segments.js":
/*!***********************************************!*\
  !*** ./node_modules/ol/geom/flat/segments.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "forEach": () => (/* binding */ forEach)
/* harmony export */ });
/**
 * @module ol/geom/flat/segments
 */
/**
 * This function calls `callback` for each segment of the flat coordinates
 * array. If the callback returns a truthy value the function returns that
 * value immediately. Otherwise the function returns `false`.
 * @param {Array<number>} flatCoordinates Flat coordinates.
 * @param {number} offset Offset.
 * @param {number} end End.
 * @param {number} stride Stride.
 * @param {function(import("../../coordinate.js").Coordinate, import("../../coordinate.js").Coordinate): T} callback Function
 *     called for each segment.
 * @return {T|boolean} Value.
 * @template T
 */
function forEach(flatCoordinates, offset, end, stride, callback) {
    var point1 = [flatCoordinates[offset], flatCoordinates[offset + 1]];
    var point2 = [];
    var ret;
    for (; offset + stride < end; offset += stride) {
        point2[0] = flatCoordinates[offset + stride];
        point2[1] = flatCoordinates[offset + stride + 1];
        ret = callback(point1, point2);
        if (ret) {
            return ret;
        }
        point1[0] = point2[0];
        point1[1] = point2[1];
    }
    return false;
}
//# sourceMappingURL=segments.js.map

/***/ }),

/***/ "./node_modules/ol/geom/flat/simplify.js":
/*!***********************************************!*\
  !*** ./node_modules/ol/geom/flat/simplify.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "simplifyLineString": () => (/* binding */ simplifyLineString),
/* harmony export */   "douglasPeucker": () => (/* binding */ douglasPeucker),
/* harmony export */   "douglasPeuckerArray": () => (/* binding */ douglasPeuckerArray),
/* harmony export */   "douglasPeuckerMultiArray": () => (/* binding */ douglasPeuckerMultiArray),
/* harmony export */   "radialDistance": () => (/* binding */ radialDistance),
/* harmony export */   "snap": () => (/* binding */ snap),
/* harmony export */   "quantize": () => (/* binding */ quantize),
/* harmony export */   "quantizeArray": () => (/* binding */ quantizeArray),
/* harmony export */   "quantizeMultiArray": () => (/* binding */ quantizeMultiArray)
/* harmony export */ });
/* harmony import */ var _math_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../math.js */ "./node_modules/ol/math.js");
/**
 * @module ol/geom/flat/simplify
 */
// Based on simplify-js https://github.com/mourner/simplify-js
// Copyright (c) 2012, Vladimir Agafonkin
// All rights reserved.
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are met:
//
//    1. Redistributions of source code must retain the above copyright notice,
//       this list of conditions and the following disclaimer.
//
//    2. Redistributions in binary form must reproduce the above copyright
//       notice, this list of conditions and the following disclaimer in the
//       documentation and/or other materials provided with the distribution.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
// POSSIBILITY OF SUCH DAMAGE.

/**
 * @param {Array<number>} flatCoordinates Flat coordinates.
 * @param {number} offset Offset.
 * @param {number} end End.
 * @param {number} stride Stride.
 * @param {number} squaredTolerance Squared tolerance.
 * @param {boolean} highQuality Highest quality.
 * @param {Array<number>=} opt_simplifiedFlatCoordinates Simplified flat
 *     coordinates.
 * @return {Array<number>} Simplified line string.
 */
function simplifyLineString(flatCoordinates, offset, end, stride, squaredTolerance, highQuality, opt_simplifiedFlatCoordinates) {
    var simplifiedFlatCoordinates = opt_simplifiedFlatCoordinates !== undefined
        ? opt_simplifiedFlatCoordinates
        : [];
    if (!highQuality) {
        end = radialDistance(flatCoordinates, offset, end, stride, squaredTolerance, simplifiedFlatCoordinates, 0);
        flatCoordinates = simplifiedFlatCoordinates;
        offset = 0;
        stride = 2;
    }
    simplifiedFlatCoordinates.length = douglasPeucker(flatCoordinates, offset, end, stride, squaredTolerance, simplifiedFlatCoordinates, 0);
    return simplifiedFlatCoordinates;
}
/**
 * @param {Array<number>} flatCoordinates Flat coordinates.
 * @param {number} offset Offset.
 * @param {number} end End.
 * @param {number} stride Stride.
 * @param {number} squaredTolerance Squared tolerance.
 * @param {Array<number>} simplifiedFlatCoordinates Simplified flat
 *     coordinates.
 * @param {number} simplifiedOffset Simplified offset.
 * @return {number} Simplified offset.
 */
function douglasPeucker(flatCoordinates, offset, end, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset) {
    var n = (end - offset) / stride;
    if (n < 3) {
        for (; offset < end; offset += stride) {
            simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];
            simplifiedFlatCoordinates[simplifiedOffset++] =
                flatCoordinates[offset + 1];
        }
        return simplifiedOffset;
    }
    /** @type {Array<number>} */
    var markers = new Array(n);
    markers[0] = 1;
    markers[n - 1] = 1;
    /** @type {Array<number>} */
    var stack = [offset, end - stride];
    var index = 0;
    while (stack.length > 0) {
        var last = stack.pop();
        var first = stack.pop();
        var maxSquaredDistance = 0;
        var x1 = flatCoordinates[first];
        var y1 = flatCoordinates[first + 1];
        var x2 = flatCoordinates[last];
        var y2 = flatCoordinates[last + 1];
        for (var i = first + stride; i < last; i += stride) {
            var x = flatCoordinates[i];
            var y = flatCoordinates[i + 1];
            var squaredDistance_1 = (0,_math_js__WEBPACK_IMPORTED_MODULE_0__.squaredSegmentDistance)(x, y, x1, y1, x2, y2);
            if (squaredDistance_1 > maxSquaredDistance) {
                index = i;
                maxSquaredDistance = squaredDistance_1;
            }
        }
        if (maxSquaredDistance > squaredTolerance) {
            markers[(index - offset) / stride] = 1;
            if (first + stride < index) {
                stack.push(first, index);
            }
            if (index + stride < last) {
                stack.push(index, last);
            }
        }
    }
    for (var i = 0; i < n; ++i) {
        if (markers[i]) {
            simplifiedFlatCoordinates[simplifiedOffset++] =
                flatCoordinates[offset + i * stride];
            simplifiedFlatCoordinates[simplifiedOffset++] =
                flatCoordinates[offset + i * stride + 1];
        }
    }
    return simplifiedOffset;
}
/**
 * @param {Array<number>} flatCoordinates Flat coordinates.
 * @param {number} offset Offset.
 * @param {Array<number>} ends Ends.
 * @param {number} stride Stride.
 * @param {number} squaredTolerance Squared tolerance.
 * @param {Array<number>} simplifiedFlatCoordinates Simplified flat
 *     coordinates.
 * @param {number} simplifiedOffset Simplified offset.
 * @param {Array<number>} simplifiedEnds Simplified ends.
 * @return {number} Simplified offset.
 */
function douglasPeuckerArray(flatCoordinates, offset, ends, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds) {
    for (var i = 0, ii = ends.length; i < ii; ++i) {
        var end = ends[i];
        simplifiedOffset = douglasPeucker(flatCoordinates, offset, end, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset);
        simplifiedEnds.push(simplifiedOffset);
        offset = end;
    }
    return simplifiedOffset;
}
/**
 * @param {Array<number>} flatCoordinates Flat coordinates.
 * @param {number} offset Offset.
 * @param {Array<Array<number>>} endss Endss.
 * @param {number} stride Stride.
 * @param {number} squaredTolerance Squared tolerance.
 * @param {Array<number>} simplifiedFlatCoordinates Simplified flat
 *     coordinates.
 * @param {number} simplifiedOffset Simplified offset.
 * @param {Array<Array<number>>} simplifiedEndss Simplified endss.
 * @return {number} Simplified offset.
 */
function douglasPeuckerMultiArray(flatCoordinates, offset, endss, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEndss) {
    for (var i = 0, ii = endss.length; i < ii; ++i) {
        var ends = endss[i];
        var simplifiedEnds = [];
        simplifiedOffset = douglasPeuckerArray(flatCoordinates, offset, ends, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds);
        simplifiedEndss.push(simplifiedEnds);
        offset = ends[ends.length - 1];
    }
    return simplifiedOffset;
}
/**
 * @param {Array<number>} flatCoordinates Flat coordinates.
 * @param {number} offset Offset.
 * @param {number} end End.
 * @param {number} stride Stride.
 * @param {number} squaredTolerance Squared tolerance.
 * @param {Array<number>} simplifiedFlatCoordinates Simplified flat
 *     coordinates.
 * @param {number} simplifiedOffset Simplified offset.
 * @return {number} Simplified offset.
 */
function radialDistance(flatCoordinates, offset, end, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset) {
    if (end <= offset + stride) {
        // zero or one point, no simplification possible, so copy and return
        for (; offset < end; offset += stride) {
            simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];
            simplifiedFlatCoordinates[simplifiedOffset++] =
                flatCoordinates[offset + 1];
        }
        return simplifiedOffset;
    }
    var x1 = flatCoordinates[offset];
    var y1 = flatCoordinates[offset + 1];
    // copy first point
    simplifiedFlatCoordinates[simplifiedOffset++] = x1;
    simplifiedFlatCoordinates[simplifiedOffset++] = y1;
    var x2 = x1;
    var y2 = y1;
    for (offset += stride; offset < end; offset += stride) {
        x2 = flatCoordinates[offset];
        y2 = flatCoordinates[offset + 1];
        if ((0,_math_js__WEBPACK_IMPORTED_MODULE_0__.squaredDistance)(x1, y1, x2, y2) > squaredTolerance) {
            // copy point at offset
            simplifiedFlatCoordinates[simplifiedOffset++] = x2;
            simplifiedFlatCoordinates[simplifiedOffset++] = y2;
            x1 = x2;
            y1 = y2;
        }
    }
    if (x2 != x1 || y2 != y1) {
        // copy last point
        simplifiedFlatCoordinates[simplifiedOffset++] = x2;
        simplifiedFlatCoordinates[simplifiedOffset++] = y2;
    }
    return simplifiedOffset;
}
/**
 * @param {number} value Value.
 * @param {number} tolerance Tolerance.
 * @return {number} Rounded value.
 */
function snap(value, tolerance) {
    return tolerance * Math.round(value / tolerance);
}
/**
 * Simplifies a line string using an algorithm designed by Tim Schaub.
 * Coordinates are snapped to the nearest value in a virtual grid and
 * consecutive duplicate coordinates are discarded.  This effectively preserves
 * topology as the simplification of any subsection of a line string is
 * independent of the rest of the line string.  This means that, for examples,
 * the common edge between two polygons will be simplified to the same line
 * string independently in both polygons.  This implementation uses a single
 * pass over the coordinates and eliminates intermediate collinear points.
 * @param {Array<number>} flatCoordinates Flat coordinates.
 * @param {number} offset Offset.
 * @param {number} end End.
 * @param {number} stride Stride.
 * @param {number} tolerance Tolerance.
 * @param {Array<number>} simplifiedFlatCoordinates Simplified flat
 *     coordinates.
 * @param {number} simplifiedOffset Simplified offset.
 * @return {number} Simplified offset.
 */
function quantize(flatCoordinates, offset, end, stride, tolerance, simplifiedFlatCoordinates, simplifiedOffset) {
    // do nothing if the line is empty
    if (offset == end) {
        return simplifiedOffset;
    }
    // snap the first coordinate (P1)
    var x1 = snap(flatCoordinates[offset], tolerance);
    var y1 = snap(flatCoordinates[offset + 1], tolerance);
    offset += stride;
    // add the first coordinate to the output
    simplifiedFlatCoordinates[simplifiedOffset++] = x1;
    simplifiedFlatCoordinates[simplifiedOffset++] = y1;
    // find the next coordinate that does not snap to the same value as the first
    // coordinate (P2)
    var x2, y2;
    do {
        x2 = snap(flatCoordinates[offset], tolerance);
        y2 = snap(flatCoordinates[offset + 1], tolerance);
        offset += stride;
        if (offset == end) {
            // all coordinates snap to the same value, the line collapses to a point
            // push the last snapped value anyway to ensure that the output contains
            // at least two points
            // FIXME should we really return at least two points anyway?
            simplifiedFlatCoordinates[simplifiedOffset++] = x2;
            simplifiedFlatCoordinates[simplifiedOffset++] = y2;
            return simplifiedOffset;
        }
    } while (x2 == x1 && y2 == y1);
    while (offset < end) {
        // snap the next coordinate (P3)
        var x3 = snap(flatCoordinates[offset], tolerance);
        var y3 = snap(flatCoordinates[offset + 1], tolerance);
        offset += stride;
        // skip P3 if it is equal to P2
        if (x3 == x2 && y3 == y2) {
            continue;
        }
        // calculate the delta between P1 and P2
        var dx1 = x2 - x1;
        var dy1 = y2 - y1;
        // calculate the delta between P3 and P1
        var dx2 = x3 - x1;
        var dy2 = y3 - y1;
        // if P1, P2, and P3 are colinear and P3 is further from P1 than P2 is from
        // P1 in the same direction then P2 is on the straight line between P1 and
        // P3
        if (dx1 * dy2 == dy1 * dx2 &&
            ((dx1 < 0 && dx2 < dx1) || dx1 == dx2 || (dx1 > 0 && dx2 > dx1)) &&
            ((dy1 < 0 && dy2 < dy1) || dy1 == dy2 || (dy1 > 0 && dy2 > dy1))) {
            // discard P2 and set P2 = P3
            x2 = x3;
            y2 = y3;
            continue;
        }
        // either P1, P2, and P3 are not colinear, or they are colinear but P3 is
        // between P3 and P1 or on the opposite half of the line to P2.  add P2,
        // and continue with P1 = P2 and P2 = P3
        simplifiedFlatCoordinates[simplifiedOffset++] = x2;
        simplifiedFlatCoordinates[simplifiedOffset++] = y2;
        x1 = x2;
        y1 = y2;
        x2 = x3;
        y2 = y3;
    }
    // add the last point (P2)
    simplifiedFlatCoordinates[simplifiedOffset++] = x2;
    simplifiedFlatCoordinates[simplifiedOffset++] = y2;
    return simplifiedOffset;
}
/**
 * @param {Array<number>} flatCoordinates Flat coordinates.
 * @param {number} offset Offset.
 * @param {Array<number>} ends Ends.
 * @param {number} stride Stride.
 * @param {number} tolerance Tolerance.
 * @param {Array<number>} simplifiedFlatCoordinates Simplified flat
 *     coordinates.
 * @param {number} simplifiedOffset Simplified offset.
 * @param {Array<number>} simplifiedEnds Simplified ends.
 * @return {number} Simplified offset.
 */
function quantizeArray(flatCoordinates, offset, ends, stride, tolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds) {
    for (var i = 0, ii = ends.length; i < ii; ++i) {
        var end = ends[i];
        simplifiedOffset = quantize(flatCoordinates, offset, end, stride, tolerance, simplifiedFlatCoordinates, simplifiedOffset);
        simplifiedEnds.push(simplifiedOffset);
        offset = end;
    }
    return simplifiedOffset;
}
/**
 * @param {Array<number>} flatCoordinates Flat coordinates.
 * @param {number} offset Offset.
 * @param {Array<Array<number>>} endss Endss.
 * @param {number} stride Stride.
 * @param {number} tolerance Tolerance.
 * @param {Array<number>} simplifiedFlatCoordinates Simplified flat
 *     coordinates.
 * @param {number} simplifiedOffset Simplified offset.
 * @param {Array<Array<number>>} simplifiedEndss Simplified endss.
 * @return {number} Simplified offset.
 */
function quantizeMultiArray(flatCoordinates, offset, endss, stride, tolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEndss) {
    for (var i = 0, ii = endss.length; i < ii; ++i) {
        var ends = endss[i];
        var simplifiedEnds = [];
        simplifiedOffset = quantizeArray(flatCoordinates, offset, ends, stride, tolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds);
        simplifiedEndss.push(simplifiedEnds);
        offset = ends[ends.length - 1];
    }
    return simplifiedOffset;
}
//# sourceMappingURL=simplify.js.map

/***/ }),

/***/ "./node_modules/ol/geom/flat/straightchunk.js":
/*!****************************************************!*\
  !*** ./node_modules/ol/geom/flat/straightchunk.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "matchingChunk": () => (/* binding */ matchingChunk)
/* harmony export */ });
/**
 * @module ol/geom/flat/straightchunk
 */
/**
 * @param {number} maxAngle Maximum acceptable angle delta between segments.
 * @param {Array<number>} flatCoordinates Flat coordinates.
 * @param {number} offset Offset.
 * @param {number} end End.
 * @param {number} stride Stride.
 * @return {Array<number>} Start and end of the first suitable chunk of the
 * given `flatCoordinates`.
 */
function matchingChunk(maxAngle, flatCoordinates, offset, end, stride) {
    var chunkStart = offset;
    var chunkEnd = offset;
    var chunkM = 0;
    var m = 0;
    var start = offset;
    var acos, i, m12, m23, x1, y1, x12, y12, x23, y23;
    for (i = offset; i < end; i += stride) {
        var x2 = flatCoordinates[i];
        var y2 = flatCoordinates[i + 1];
        if (x1 !== undefined) {
            x23 = x2 - x1;
            y23 = y2 - y1;
            m23 = Math.sqrt(x23 * x23 + y23 * y23);
            if (x12 !== undefined) {
                m += m12;
                acos = Math.acos((x12 * x23 + y12 * y23) / (m12 * m23));
                if (acos > maxAngle) {
                    if (m > chunkM) {
                        chunkM = m;
                        chunkStart = start;
                        chunkEnd = i;
                    }
                    m = 0;
                    start = i - stride;
                }
            }
            m12 = m23;
            x12 = x23;
            y12 = y23;
        }
        x1 = x2;
        y1 = y2;
    }
    m += m23;
    return m > chunkM ? [start, i] : [chunkStart, chunkEnd];
}
//# sourceMappingURL=straightchunk.js.map

/***/ }),

/***/ "./node_modules/ol/geom/flat/textpath.js":
/*!***********************************************!*\
  !*** ./node_modules/ol/geom/flat/textpath.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "drawTextOnPath": () => (/* binding */ drawTextOnPath)
/* harmony export */ });
/* harmony import */ var _math_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../math.js */ "./node_modules/ol/math.js");
/* harmony import */ var _transform_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./transform.js */ "./node_modules/ol/geom/flat/transform.js");
/**
 * @module ol/geom/flat/textpath
 */


/**
 * @param {Array<number>} flatCoordinates Path to put text on.
 * @param {number} offset Start offset of the `flatCoordinates`.
 * @param {number} end End offset of the `flatCoordinates`.
 * @param {number} stride Stride.
 * @param {string} text Text to place on the path.
 * @param {number} startM m along the path where the text starts.
 * @param {number} maxAngle Max angle between adjacent chars in radians.
 * @param {number} scale The product of the text scale and the device pixel ratio.
 * @param {function(string, string, Object<string, number>):number} measureAndCacheTextWidth Measure and cache text width.
 * @param {string} font The font.
 * @param {Object<string, number>} cache A cache of measured widths.
 * @param {number} rotation Rotation to apply to the flatCoordinates to determine whether text needs to be reversed.
 * @return {Array<Array<*>>} The result array (or null if `maxAngle` was
 * exceeded). Entries of the array are x, y, anchorX, angle, chunk.
 */
function drawTextOnPath(flatCoordinates, offset, end, stride, text, startM, maxAngle, scale, measureAndCacheTextWidth, font, cache, rotation) {
    var x2 = flatCoordinates[offset];
    var y2 = flatCoordinates[offset + 1];
    var x1 = 0;
    var y1 = 0;
    var segmentLength = 0;
    var segmentM = 0;
    function advance() {
        x1 = x2;
        y1 = y2;
        offset += stride;
        x2 = flatCoordinates[offset];
        y2 = flatCoordinates[offset + 1];
        segmentM += segmentLength;
        segmentLength = Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));
    }
    do {
        advance();
    } while (offset < end - stride && segmentM + segmentLength < startM);
    var interpolate = (startM - segmentM) / segmentLength;
    var beginX = (0,_math_js__WEBPACK_IMPORTED_MODULE_0__.lerp)(x1, x2, interpolate);
    var beginY = (0,_math_js__WEBPACK_IMPORTED_MODULE_0__.lerp)(y1, y2, interpolate);
    var startOffset = offset - stride;
    var startLength = segmentM;
    var endM = startM + scale * measureAndCacheTextWidth(font, text, cache);
    while (offset < end - stride && segmentM + segmentLength < endM) {
        advance();
    }
    interpolate = (endM - segmentM) / segmentLength;
    var endX = (0,_math_js__WEBPACK_IMPORTED_MODULE_0__.lerp)(x1, x2, interpolate);
    var endY = (0,_math_js__WEBPACK_IMPORTED_MODULE_0__.lerp)(y1, y2, interpolate);
    // Keep text upright
    var reverse;
    if (rotation) {
        var flat = [beginX, beginY, endX, endY];
        (0,_transform_js__WEBPACK_IMPORTED_MODULE_1__.rotate)(flat, 0, 4, 2, rotation, flat, flat);
        reverse = flat[0] > flat[2];
    }
    else {
        reverse = beginX > endX;
    }
    var PI = Math.PI;
    var result = [];
    var singleSegment = startOffset + stride === offset;
    offset = startOffset;
    segmentLength = 0;
    segmentM = startLength;
    x2 = flatCoordinates[offset];
    y2 = flatCoordinates[offset + 1];
    // All on the same segment
    if (singleSegment) {
        advance();
        var previousAngle_1 = Math.atan2(y2 - y1, x2 - x1);
        if (reverse) {
            previousAngle_1 += previousAngle_1 > 0 ? -PI : PI;
        }
        var x = (endX + beginX) / 2;
        var y = (endY + beginY) / 2;
        result[0] = [x, y, (endM - startM) / 2, previousAngle_1, text];
        return result;
    }
    var previousAngle;
    for (var i = 0, ii = text.length; i < ii;) {
        advance();
        var angle = Math.atan2(y2 - y1, x2 - x1);
        if (reverse) {
            angle += angle > 0 ? -PI : PI;
        }
        if (previousAngle !== undefined) {
            var delta = angle - previousAngle;
            delta += delta > PI ? -2 * PI : delta < -PI ? 2 * PI : 0;
            if (Math.abs(delta) > maxAngle) {
                return null;
            }
        }
        previousAngle = angle;
        var iStart = i;
        var charLength = 0;
        for (; i < ii; ++i) {
            var index = reverse ? ii - i - 1 : i;
            var len = scale * measureAndCacheTextWidth(font, text[index], cache);
            if (offset + stride < end &&
                segmentM + segmentLength < startM + charLength + len / 2) {
                break;
            }
            charLength += len;
        }
        if (i === iStart) {
            continue;
        }
        var chars = reverse
            ? text.substring(ii - iStart, ii - i)
            : text.substring(iStart, i);
        interpolate = (startM + charLength / 2 - segmentM) / segmentLength;
        var x = (0,_math_js__WEBPACK_IMPORTED_MODULE_0__.lerp)(x1, x2, interpolate);
        var y = (0,_math_js__WEBPACK_IMPORTED_MODULE_0__.lerp)(y1, y2, interpolate);
        result.push([x, y, charLength / 2, angle, chars]);
        startM += charLength;
    }
    return result;
}
//# sourceMappingURL=textpath.js.map

/***/ }),

/***/ "./node_modules/ol/geom/flat/transform.js":
/*!************************************************!*\
  !*** ./node_modules/ol/geom/flat/transform.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "transform2D": () => (/* binding */ transform2D),
/* harmony export */   "rotate": () => (/* binding */ rotate),
/* harmony export */   "scale": () => (/* binding */ scale),
/* harmony export */   "translate": () => (/* binding */ translate)
/* harmony export */ });
/**
 * @module ol/geom/flat/transform
 */
/**
 * @param {Array<number>} flatCoordinates Flat coordinates.
 * @param {number} offset Offset.
 * @param {number} end End.
 * @param {number} stride Stride.
 * @param {import("../../transform.js").Transform} transform Transform.
 * @param {Array<number>=} opt_dest Destination.
 * @return {Array<number>} Transformed coordinates.
 */
function transform2D(flatCoordinates, offset, end, stride, transform, opt_dest) {
    var dest = opt_dest ? opt_dest : [];
    var i = 0;
    for (var j = offset; j < end; j += stride) {
        var x = flatCoordinates[j];
        var y = flatCoordinates[j + 1];
        dest[i++] = transform[0] * x + transform[2] * y + transform[4];
        dest[i++] = transform[1] * x + transform[3] * y + transform[5];
    }
    if (opt_dest && dest.length != i) {
        dest.length = i;
    }
    return dest;
}
/**
 * @param {Array<number>} flatCoordinates Flat coordinates.
 * @param {number} offset Offset.
 * @param {number} end End.
 * @param {number} stride Stride.
 * @param {number} angle Angle.
 * @param {Array<number>} anchor Rotation anchor point.
 * @param {Array<number>=} opt_dest Destination.
 * @return {Array<number>} Transformed coordinates.
 */
function rotate(flatCoordinates, offset, end, stride, angle, anchor, opt_dest) {
    var dest = opt_dest ? opt_dest : [];
    var cos = Math.cos(angle);
    var sin = Math.sin(angle);
    var anchorX = anchor[0];
    var anchorY = anchor[1];
    var i = 0;
    for (var j = offset; j < end; j += stride) {
        var deltaX = flatCoordinates[j] - anchorX;
        var deltaY = flatCoordinates[j + 1] - anchorY;
        dest[i++] = anchorX + deltaX * cos - deltaY * sin;
        dest[i++] = anchorY + deltaX * sin + deltaY * cos;
        for (var k = j + 2; k < j + stride; ++k) {
            dest[i++] = flatCoordinates[k];
        }
    }
    if (opt_dest && dest.length != i) {
        dest.length = i;
    }
    return dest;
}
/**
 * Scale the coordinates.
 * @param {Array<number>} flatCoordinates Flat coordinates.
 * @param {number} offset Offset.
 * @param {number} end End.
 * @param {number} stride Stride.
 * @param {number} sx Scale factor in the x-direction.
 * @param {number} sy Scale factor in the y-direction.
 * @param {Array<number>} anchor Scale anchor point.
 * @param {Array<number>=} opt_dest Destination.
 * @return {Array<number>} Transformed coordinates.
 */
function scale(flatCoordinates, offset, end, stride, sx, sy, anchor, opt_dest) {
    var dest = opt_dest ? opt_dest : [];
    var anchorX = anchor[0];
    var anchorY = anchor[1];
    var i = 0;
    for (var j = offset; j < end; j += stride) {
        var deltaX = flatCoordinates[j] - anchorX;
        var deltaY = flatCoordinates[j + 1] - anchorY;
        dest[i++] = anchorX + sx * deltaX;
        dest[i++] = anchorY + sy * deltaY;
        for (var k = j + 2; k < j + stride; ++k) {
            dest[i++] = flatCoordinates[k];
        }
    }
    if (opt_dest && dest.length != i) {
        dest.length = i;
    }
    return dest;
}
/**
 * @param {Array<number>} flatCoordinates Flat coordinates.
 * @param {number} offset Offset.
 * @param {number} end End.
 * @param {number} stride Stride.
 * @param {number} deltaX Delta X.
 * @param {number} deltaY Delta Y.
 * @param {Array<number>=} opt_dest Destination.
 * @return {Array<number>} Transformed coordinates.
 */
function translate(flatCoordinates, offset, end, stride, deltaX, deltaY, opt_dest) {
    var dest = opt_dest ? opt_dest : [];
    var i = 0;
    for (var j = offset; j < end; j += stride) {
        dest[i++] = flatCoordinates[j] + deltaX;
        dest[i++] = flatCoordinates[j + 1] + deltaY;
        for (var k = j + 2; k < j + stride; ++k) {
            dest[i++] = flatCoordinates[k];
        }
    }
    if (opt_dest && dest.length != i) {
        dest.length = i;
    }
    return dest;
}
//# sourceMappingURL=transform.js.map

/***/ }),

/***/ "./node_modules/ol/has.js":
/*!********************************!*\
  !*** ./node_modules/ol/has.js ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "FIREFOX": () => (/* binding */ FIREFOX),
/* harmony export */   "SAFARI": () => (/* binding */ SAFARI),
/* harmony export */   "WEBKIT": () => (/* binding */ WEBKIT),
/* harmony export */   "MAC": () => (/* binding */ MAC),
/* harmony export */   "DEVICE_PIXEL_RATIO": () => (/* binding */ DEVICE_PIXEL_RATIO),
/* harmony export */   "WORKER_OFFSCREEN_CANVAS": () => (/* binding */ WORKER_OFFSCREEN_CANVAS),
/* harmony export */   "IMAGE_DECODE": () => (/* binding */ IMAGE_DECODE),
/* harmony export */   "PASSIVE_EVENT_LISTENERS": () => (/* binding */ PASSIVE_EVENT_LISTENERS)
/* harmony export */ });
/**
 * @module ol/has
 */
var ua = typeof navigator !== 'undefined' && typeof navigator.userAgent !== 'undefined'
    ? navigator.userAgent.toLowerCase()
    : '';
/**
 * User agent string says we are dealing with Firefox as browser.
 * @type {boolean}
 */
var FIREFOX = ua.indexOf('firefox') !== -1;
/**
 * User agent string says we are dealing with Safari as browser.
 * @type {boolean}
 */
var SAFARI = ua.indexOf('safari') !== -1 && ua.indexOf('chrom') == -1;
/**
 * User agent string says we are dealing with a WebKit engine.
 * @type {boolean}
 */
var WEBKIT = ua.indexOf('webkit') !== -1 && ua.indexOf('edge') == -1;
/**
 * User agent string says we are dealing with a Mac as platform.
 * @type {boolean}
 */
var MAC = ua.indexOf('macintosh') !== -1;
/**
 * The ratio between physical pixels and device-independent pixels
 * (dips) on the device (`window.devicePixelRatio`).
 * @const
 * @type {number}
 * @api
 */
var DEVICE_PIXEL_RATIO = typeof devicePixelRatio !== 'undefined' ? devicePixelRatio : 1;
/**
 * The execution context is a worker with OffscreenCanvas available.
 * @const
 * @type {boolean}
 */
var WORKER_OFFSCREEN_CANVAS = typeof WorkerGlobalScope !== 'undefined' &&
    typeof OffscreenCanvas !== 'undefined' &&
    self instanceof WorkerGlobalScope; //eslint-disable-line
/**
 * Image.prototype.decode() is supported.
 * @type {boolean}
 */
var IMAGE_DECODE = typeof Image !== 'undefined' && Image.prototype.decode;
/**
 * @type {boolean}
 */
var PASSIVE_EVENT_LISTENERS = (function () {
    var passive = false;
    try {
        var options = Object.defineProperty({}, 'passive', {
            get: function () {
                passive = true;
            },
        });
        window.addEventListener('_', null, options);
        window.removeEventListener('_', null, options);
    }
    catch (error) {
        // passive not supported
    }
    return passive;
})();
//# sourceMappingURL=has.js.map

/***/ }),

/***/ "./node_modules/ol/interaction.js":
/*!****************************************!*\
  !*** ./node_modules/ol/interaction.js ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "DoubleClickZoom": () => (/* reexport safe */ _interaction_DoubleClickZoom_js__WEBPACK_IMPORTED_MODULE_0__.default),
/* harmony export */   "DragAndDrop": () => (/* reexport safe */ _interaction_DragAndDrop_js__WEBPACK_IMPORTED_MODULE_1__.default),
/* harmony export */   "DragBox": () => (/* reexport safe */ _interaction_DragBox_js__WEBPACK_IMPORTED_MODULE_2__.default),
/* harmony export */   "DragPan": () => (/* reexport safe */ _interaction_DragPan_js__WEBPACK_IMPORTED_MODULE_3__.default),
/* harmony export */   "DragRotate": () => (/* reexport safe */ _interaction_DragRotate_js__WEBPACK_IMPORTED_MODULE_4__.default),
/* harmony export */   "DragRotateAndZoom": () => (/* reexport safe */ _interaction_DragRotateAndZoom_js__WEBPACK_IMPORTED_MODULE_5__.default),
/* harmony export */   "DragZoom": () => (/* reexport safe */ _interaction_DragZoom_js__WEBPACK_IMPORTED_MODULE_6__.default),
/* harmony export */   "Draw": () => (/* reexport safe */ _interaction_Draw_js__WEBPACK_IMPORTED_MODULE_7__.default),
/* harmony export */   "Extent": () => (/* reexport safe */ _interaction_Extent_js__WEBPACK_IMPORTED_MODULE_8__.default),
/* harmony export */   "Interaction": () => (/* reexport safe */ _interaction_Interaction_js__WEBPACK_IMPORTED_MODULE_9__.default),
/* harmony export */   "KeyboardPan": () => (/* reexport safe */ _interaction_KeyboardPan_js__WEBPACK_IMPORTED_MODULE_10__.default),
/* harmony export */   "KeyboardZoom": () => (/* reexport safe */ _interaction_KeyboardZoom_js__WEBPACK_IMPORTED_MODULE_11__.default),
/* harmony export */   "Modify": () => (/* reexport safe */ _interaction_Modify_js__WEBPACK_IMPORTED_MODULE_12__.default),
/* harmony export */   "MouseWheelZoom": () => (/* reexport safe */ _interaction_MouseWheelZoom_js__WEBPACK_IMPORTED_MODULE_13__.default),
/* harmony export */   "PinchRotate": () => (/* reexport safe */ _interaction_PinchRotate_js__WEBPACK_IMPORTED_MODULE_14__.default),
/* harmony export */   "PinchZoom": () => (/* reexport safe */ _interaction_PinchZoom_js__WEBPACK_IMPORTED_MODULE_15__.default),
/* harmony export */   "Pointer": () => (/* reexport safe */ _interaction_Pointer_js__WEBPACK_IMPORTED_MODULE_16__.default),
/* harmony export */   "Select": () => (/* reexport safe */ _interaction_Select_js__WEBPACK_IMPORTED_MODULE_17__.default),
/* harmony export */   "Snap": () => (/* reexport safe */ _interaction_Snap_js__WEBPACK_IMPORTED_MODULE_18__.default),
/* harmony export */   "Translate": () => (/* reexport safe */ _interaction_Translate_js__WEBPACK_IMPORTED_MODULE_19__.default),
/* harmony export */   "defaults": () => (/* binding */ defaults)
/* harmony export */ });
/* harmony import */ var _Collection_js__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./Collection.js */ "./node_modules/ol/Collection.js");
/* harmony import */ var _interaction_DoubleClickZoom_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./interaction/DoubleClickZoom.js */ "./node_modules/ol/interaction/DoubleClickZoom.js");
/* harmony import */ var _interaction_DragPan_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./interaction/DragPan.js */ "./node_modules/ol/interaction/DragPan.js");
/* harmony import */ var _interaction_DragRotate_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./interaction/DragRotate.js */ "./node_modules/ol/interaction/DragRotate.js");
/* harmony import */ var _interaction_DragZoom_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./interaction/DragZoom.js */ "./node_modules/ol/interaction/DragZoom.js");
/* harmony import */ var _interaction_KeyboardPan_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./interaction/KeyboardPan.js */ "./node_modules/ol/interaction/KeyboardPan.js");
/* harmony import */ var _interaction_KeyboardZoom_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./interaction/KeyboardZoom.js */ "./node_modules/ol/interaction/KeyboardZoom.js");
/* harmony import */ var _Kinetic_js__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./Kinetic.js */ "./node_modules/ol/Kinetic.js");
/* harmony import */ var _interaction_MouseWheelZoom_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./interaction/MouseWheelZoom.js */ "./node_modules/ol/interaction/MouseWheelZoom.js");
/* harmony import */ var _interaction_PinchRotate_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./interaction/PinchRotate.js */ "./node_modules/ol/interaction/PinchRotate.js");
/* harmony import */ var _interaction_PinchZoom_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./interaction/PinchZoom.js */ "./node_modules/ol/interaction/PinchZoom.js");
/* harmony import */ var _interaction_DragAndDrop_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./interaction/DragAndDrop.js */ "./node_modules/ol/interaction/DragAndDrop.js");
/* harmony import */ var _interaction_DragBox_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./interaction/DragBox.js */ "./node_modules/ol/interaction/DragBox.js");
/* harmony import */ var _interaction_DragRotateAndZoom_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./interaction/DragRotateAndZoom.js */ "./node_modules/ol/interaction/DragRotateAndZoom.js");
/* harmony import */ var _interaction_Draw_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./interaction/Draw.js */ "./node_modules/ol/interaction/Draw.js");
/* harmony import */ var _interaction_Extent_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./interaction/Extent.js */ "./node_modules/ol/interaction/Extent.js");
/* harmony import */ var _interaction_Interaction_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./interaction/Interaction.js */ "./node_modules/ol/interaction/Interaction.js");
/* harmony import */ var _interaction_Modify_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./interaction/Modify.js */ "./node_modules/ol/interaction/Modify.js");
/* harmony import */ var _interaction_Pointer_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./interaction/Pointer.js */ "./node_modules/ol/interaction/Pointer.js");
/* harmony import */ var _interaction_Select_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./interaction/Select.js */ "./node_modules/ol/interaction/Select.js");
/* harmony import */ var _interaction_Snap_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./interaction/Snap.js */ "./node_modules/ol/interaction/Snap.js");
/* harmony import */ var _interaction_Translate_js__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./interaction/Translate.js */ "./node_modules/ol/interaction/Translate.js");
/**
 * @module ol/interaction
 */































/**
 * @typedef {Object} DefaultsOptions
 * @property {boolean} [altShiftDragRotate=true] Whether Alt-Shift-drag rotate is
 * desired.
 * @property {boolean} [onFocusOnly=false] Interact only when the map has the
 * focus. This affects the `MouseWheelZoom` and `DragPan` interactions and is
 * useful when page scroll is desired for maps that do not have the browser's
 * focus.
 * @property {boolean} [doubleClickZoom=true] Whether double click zoom is
 * desired.
 * @property {boolean} [keyboard=true] Whether keyboard interaction is desired.
 * @property {boolean} [mouseWheelZoom=true] Whether mousewheel zoom is desired.
 * @property {boolean} [shiftDragZoom=true] Whether Shift-drag zoom is desired.
 * @property {boolean} [dragPan=true] Whether drag pan is desired.
 * @property {boolean} [pinchRotate=true] Whether pinch rotate is desired.
 * @property {boolean} [pinchZoom=true] Whether pinch zoom is desired.
 * @property {number} [zoomDelta] Zoom level delta when using keyboard or double click zoom.
 * @property {number} [zoomDuration] Duration of the zoom animation in
 * milliseconds.
 */
/**
 * Set of interactions included in maps by default. Specific interactions can be
 * excluded by setting the appropriate option to false in the constructor
 * options, but the order of the interactions is fixed.  If you want to specify
 * a different order for interactions, you will need to create your own
 * {@link module:ol/interaction/Interaction} instances and insert
 * them into a {@link module:ol/Collection} in the order you want
 * before creating your {@link module:ol/Map~Map} instance. Changing the order can
 * be of interest if the event propagation needs to be stopped at a point.
 * The default set of interactions, in sequence, is:
 * * {@link module:ol/interaction/DragRotate~DragRotate}
 * * {@link module:ol/interaction/DoubleClickZoom~DoubleClickZoom}
 * * {@link module:ol/interaction/DragPan~DragPan}
 * * {@link module:ol/interaction/PinchRotate~PinchRotate}
 * * {@link module:ol/interaction/PinchZoom~PinchZoom}
 * * {@link module:ol/interaction/KeyboardPan~KeyboardPan}
 * * {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}
 * * {@link module:ol/interaction/MouseWheelZoom~MouseWheelZoom}
 * * {@link module:ol/interaction/DragZoom~DragZoom}
 *
 * @param {DefaultsOptions=} opt_options Defaults options.
 * @return {import("./Collection.js").default<import("./interaction/Interaction.js").default>}
 * A collection of interactions to be used with the {@link module:ol/Map~Map}
 * constructor's `interactions` option.
 * @api
 */
function defaults(opt_options) {
    var options = opt_options ? opt_options : {};
    var interactions = new _Collection_js__WEBPACK_IMPORTED_MODULE_20__.default();
    var kinetic = new _Kinetic_js__WEBPACK_IMPORTED_MODULE_21__.default(-0.005, 0.05, 100);
    var altShiftDragRotate = options.altShiftDragRotate !== undefined
        ? options.altShiftDragRotate
        : true;
    if (altShiftDragRotate) {
        interactions.push(new _interaction_DragRotate_js__WEBPACK_IMPORTED_MODULE_4__.default());
    }
    var doubleClickZoom = options.doubleClickZoom !== undefined ? options.doubleClickZoom : true;
    if (doubleClickZoom) {
        interactions.push(new _interaction_DoubleClickZoom_js__WEBPACK_IMPORTED_MODULE_0__.default({
            delta: options.zoomDelta,
            duration: options.zoomDuration,
        }));
    }
    var dragPan = options.dragPan !== undefined ? options.dragPan : true;
    if (dragPan) {
        interactions.push(new _interaction_DragPan_js__WEBPACK_IMPORTED_MODULE_3__.default({
            onFocusOnly: options.onFocusOnly,
            kinetic: kinetic,
        }));
    }
    var pinchRotate = options.pinchRotate !== undefined ? options.pinchRotate : true;
    if (pinchRotate) {
        interactions.push(new _interaction_PinchRotate_js__WEBPACK_IMPORTED_MODULE_14__.default());
    }
    var pinchZoom = options.pinchZoom !== undefined ? options.pinchZoom : true;
    if (pinchZoom) {
        interactions.push(new _interaction_PinchZoom_js__WEBPACK_IMPORTED_MODULE_15__.default({
            duration: options.zoomDuration,
        }));
    }
    var keyboard = options.keyboard !== undefined ? options.keyboard : true;
    if (keyboard) {
        interactions.push(new _interaction_KeyboardPan_js__WEBPACK_IMPORTED_MODULE_10__.default());
        interactions.push(new _interaction_KeyboardZoom_js__WEBPACK_IMPORTED_MODULE_11__.default({
            delta: options.zoomDelta,
            duration: options.zoomDuration,
        }));
    }
    var mouseWheelZoom = options.mouseWheelZoom !== undefined ? options.mouseWheelZoom : true;
    if (mouseWheelZoom) {
        interactions.push(new _interaction_MouseWheelZoom_js__WEBPACK_IMPORTED_MODULE_13__.default({
            onFocusOnly: options.onFocusOnly,
            duration: options.zoomDuration,
        }));
    }
    var shiftDragZoom = options.shiftDragZoom !== undefined ? options.shiftDragZoom : true;
    if (shiftDragZoom) {
        interactions.push(new _interaction_DragZoom_js__WEBPACK_IMPORTED_MODULE_6__.default({
            duration: options.zoomDuration,
        }));
    }
    return interactions;
}
//# sourceMappingURL=interaction.js.map

/***/ }),

/***/ "./node_modules/ol/interaction/DoubleClickZoom.js":
/*!********************************************************!*\
  !*** ./node_modules/ol/interaction/DoubleClickZoom.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _Interaction_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Interaction.js */ "./node_modules/ol/interaction/Interaction.js");
/* harmony import */ var _MapBrowserEventType_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../MapBrowserEventType.js */ "./node_modules/ol/MapBrowserEventType.js");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
/**
 * @module ol/interaction/DoubleClickZoom
 */


/**
 * @typedef {Object} Options
 * @property {number} [duration=250] Animation duration in milliseconds.
 * @property {number} [delta=1] The zoom delta applied on each double click.
 */
/**
 * @classdesc
 * Allows the user to zoom by double-clicking on the map.
 * @api
 */
var DoubleClickZoom = /** @class */ (function (_super) {
    __extends(DoubleClickZoom, _super);
    /**
     * @param {Options=} opt_options Options.
     */
    function DoubleClickZoom(opt_options) {
        var _this = _super.call(this) || this;
        var options = opt_options ? opt_options : {};
        /**
         * @private
         * @type {number}
         */
        _this.delta_ = options.delta ? options.delta : 1;
        /**
         * @private
         * @type {number}
         */
        _this.duration_ = options.duration !== undefined ? options.duration : 250;
        return _this;
    }
    /**
     * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a
     * doubleclick) and eventually zooms the map.
     * @param {import("../MapBrowserEvent.js").default} mapBrowserEvent Map browser event.
     * @return {boolean} `false` to stop event propagation.
     */
    DoubleClickZoom.prototype.handleEvent = function (mapBrowserEvent) {
        var stopEvent = false;
        if (mapBrowserEvent.type == _MapBrowserEventType_js__WEBPACK_IMPORTED_MODULE_0__.default.DBLCLICK) {
            var browserEvent = /** @type {MouseEvent} */ (mapBrowserEvent.originalEvent);
            var map = mapBrowserEvent.map;
            var anchor = mapBrowserEvent.coordinate;
            var delta = browserEvent.shiftKey ? -this.delta_ : this.delta_;
            var view = map.getView();
            (0,_Interaction_js__WEBPACK_IMPORTED_MODULE_1__.zoomByDelta)(view, delta, anchor, this.duration_);
            browserEvent.preventDefault();
            stopEvent = true;
        }
        return !stopEvent;
    };
    return DoubleClickZoom;
}(_Interaction_js__WEBPACK_IMPORTED_MODULE_1__.default));
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (DoubleClickZoom);
//# sourceMappingURL=DoubleClickZoom.js.map

/***/ }),

/***/ "./node_modules/ol/interaction/DragAndDrop.js":
/*!****************************************************!*\
  !*** ./node_modules/ol/interaction/DragAndDrop.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "DragAndDropEvent": () => (/* binding */ DragAndDropEvent),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _events_Event_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../events/Event.js */ "./node_modules/ol/events/Event.js");
/* harmony import */ var _events_EventType_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../events/EventType.js */ "./node_modules/ol/events/EventType.js");
/* harmony import */ var _format_FormatType_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../format/FormatType.js */ "./node_modules/ol/format/FormatType.js");
/* harmony import */ var _Interaction_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./Interaction.js */ "./node_modules/ol/interaction/Interaction.js");
/* harmony import */ var _functions_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../functions.js */ "./node_modules/ol/functions.js");
/* harmony import */ var _proj_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../proj.js */ "./node_modules/ol/proj.js");
/* harmony import */ var _events_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../events.js */ "./node_modules/ol/events.js");
/**
 * @module ol/interaction/DragAndDrop
 */
// FIXME should handle all geo-referenced data, not just vector data
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();







/**
 * @typedef {Object} Options
 * @property {Array<typeof import("../format/Feature.js").default|import("../format/Feature.js").default>} [formatConstructors] Format constructors
 * (and/or formats pre-constructed with options).
 * @property {import("../source/Vector.js").default} [source] Optional vector source where features will be added.  If a source is provided
 * all existing features will be removed and new features will be added when
 * they are dropped on the target.  If you want to add features to a vector
 * source without removing the existing features (append only), instead of
 * providing the source option listen for the "addfeatures" event.
 * @property {import("../proj.js").ProjectionLike} [projection] Target projection. By default, the map's view's projection is used.
 * @property {HTMLElement} [target] The element that is used as the drop target, default is the viewport element.
 */
/**
 * @enum {string}
 */
var DragAndDropEventType = {
    /**
     * Triggered when features are added
     * @event DragAndDropEvent#addfeatures
     * @api
     */
    ADD_FEATURES: 'addfeatures',
};
/**
 * @classdesc
 * Events emitted by {@link module:ol/interaction/DragAndDrop~DragAndDrop} instances are instances
 * of this type.
 */
var DragAndDropEvent = /** @class */ (function (_super) {
    __extends(DragAndDropEvent, _super);
    /**
     * @param {DragAndDropEventType} type Type.
     * @param {File} file File.
     * @param {Array<import("../Feature.js").default>=} opt_features Features.
     * @param {import("../proj/Projection.js").default=} opt_projection Projection.
     */
    function DragAndDropEvent(type, file, opt_features, opt_projection) {
        var _this = _super.call(this, type) || this;
        /**
         * The features parsed from dropped data.
         * @type {Array<import("../Feature.js").FeatureLike>|undefined}
         * @api
         */
        _this.features = opt_features;
        /**
         * The dropped file.
         * @type {File}
         * @api
         */
        _this.file = file;
        /**
         * The feature projection.
         * @type {import("../proj/Projection.js").default|undefined}
         * @api
         */
        _this.projection = opt_projection;
        return _this;
    }
    return DragAndDropEvent;
}(_events_Event_js__WEBPACK_IMPORTED_MODULE_1__.default));

/**
 * @classdesc
 * Handles input of vector data by drag and drop.
 *
 * Note that the DragAndDrop interaction uses the TextDecoder() constructor if the supplied
 * combinnation of formats read both text string and ArrayBuffer sources. Older browsers such
 * as IE which do not support this will need a TextDecoder polyfill to be loaded before use.
 *
 * @api
 *
 * @fires DragAndDropEvent
 */
var DragAndDrop = /** @class */ (function (_super) {
    __extends(DragAndDrop, _super);
    /**
     * @param {Options=} opt_options Options.
     */
    function DragAndDrop(opt_options) {
        var _this = this;
        var options = opt_options ? opt_options : {};
        _this = _super.call(this, {
            handleEvent: _functions_js__WEBPACK_IMPORTED_MODULE_2__.TRUE,
        }) || this;
        /**
         * @private
         * @type {boolean}
         */
        _this.readAsBuffer_ = false;
        /**
         * @private
         * @type {Array<import("../format/Feature.js").default>}
         */
        _this.formats_ = [];
        var formatConstructors = options.formatConstructors
            ? options.formatConstructors
            : [];
        for (var i = 0, ii = formatConstructors.length; i < ii; ++i) {
            var format = formatConstructors[i];
            if (typeof format === 'function') {
                format = new format();
            }
            _this.formats_.push(format);
            _this.readAsBuffer_ =
                _this.readAsBuffer_ || format.getType() === _format_FormatType_js__WEBPACK_IMPORTED_MODULE_3__.default.ARRAY_BUFFER;
        }
        /**
         * @private
         * @type {import("../proj/Projection.js").default}
         */
        _this.projection_ = options.projection
            ? (0,_proj_js__WEBPACK_IMPORTED_MODULE_0__.get)(options.projection)
            : null;
        /**
         * @private
         * @type {?Array<import("../events.js").EventsKey>}
         */
        _this.dropListenKeys_ = null;
        /**
         * @private
         * @type {import("../source/Vector.js").default}
         */
        _this.source_ = options.source || null;
        /**
         * @private
         * @type {HTMLElement}
         */
        _this.target = options.target ? options.target : null;
        return _this;
    }
    /**
     * @param {File} file File.
     * @param {Event} event Load event.
     * @private
     */
    DragAndDrop.prototype.handleResult_ = function (file, event) {
        var result = event.target.result;
        var map = this.getMap();
        var projection = this.projection_;
        if (!projection) {
            var view = map.getView();
            projection = view.getProjection();
        }
        var text;
        var formats = this.formats_;
        for (var i = 0, ii = formats.length; i < ii; ++i) {
            var format = formats[i];
            var input = result;
            if (this.readAsBuffer_ && format.getType() !== _format_FormatType_js__WEBPACK_IMPORTED_MODULE_3__.default.ARRAY_BUFFER) {
                if (text === undefined) {
                    text = new TextDecoder().decode(result);
                }
                input = text;
            }
            var features = this.tryReadFeatures_(format, input, {
                featureProjection: projection,
            });
            if (features && features.length > 0) {
                if (this.source_) {
                    this.source_.clear();
                    this.source_.addFeatures(features);
                }
                this.dispatchEvent(new DragAndDropEvent(DragAndDropEventType.ADD_FEATURES, file, features, projection));
                break;
            }
        }
    };
    /**
     * @private
     */
    DragAndDrop.prototype.registerListeners_ = function () {
        var map = this.getMap();
        if (map) {
            var dropArea = this.target ? this.target : map.getViewport();
            this.dropListenKeys_ = [
                (0,_events_js__WEBPACK_IMPORTED_MODULE_4__.listen)(dropArea, _events_EventType_js__WEBPACK_IMPORTED_MODULE_5__.default.DROP, this.handleDrop, this),
                (0,_events_js__WEBPACK_IMPORTED_MODULE_4__.listen)(dropArea, _events_EventType_js__WEBPACK_IMPORTED_MODULE_5__.default.DRAGENTER, this.handleStop, this),
                (0,_events_js__WEBPACK_IMPORTED_MODULE_4__.listen)(dropArea, _events_EventType_js__WEBPACK_IMPORTED_MODULE_5__.default.DRAGOVER, this.handleStop, this),
                (0,_events_js__WEBPACK_IMPORTED_MODULE_4__.listen)(dropArea, _events_EventType_js__WEBPACK_IMPORTED_MODULE_5__.default.DROP, this.handleStop, this),
            ];
        }
    };
    /**
     * Activate or deactivate the interaction.
     * @param {boolean} active Active.
     * @observable
     * @api
     */
    DragAndDrop.prototype.setActive = function (active) {
        if (!this.getActive() && active) {
            this.registerListeners_();
        }
        if (this.getActive() && !active) {
            this.unregisterListeners_();
        }
        _super.prototype.setActive.call(this, active);
    };
    /**
     * Remove the interaction from its current map and attach it to the new map.
     * Subclasses may set up event handlers to get notified about changes to
     * the map here.
     * @param {import("../PluggableMap.js").default} map Map.
     */
    DragAndDrop.prototype.setMap = function (map) {
        this.unregisterListeners_();
        _super.prototype.setMap.call(this, map);
        if (this.getActive()) {
            this.registerListeners_();
        }
    };
    /**
     * @param {import("../format/Feature.js").default} format Format.
     * @param {string} text Text.
     * @param {import("../format/Feature.js").ReadOptions} options Read options.
     * @private
     * @return {Array<import("../Feature.js").default>} Features.
     */
    DragAndDrop.prototype.tryReadFeatures_ = function (format, text, options) {
        try {
            return (
            /** @type {Array<import("../Feature.js").default>} */
            (format.readFeatures(text, options)));
        }
        catch (e) {
            return null;
        }
    };
    /**
     * @private
     */
    DragAndDrop.prototype.unregisterListeners_ = function () {
        if (this.dropListenKeys_) {
            this.dropListenKeys_.forEach(_events_js__WEBPACK_IMPORTED_MODULE_4__.unlistenByKey);
            this.dropListenKeys_ = null;
        }
    };
    /**
     * @param {DragEvent} event Event.
     */
    DragAndDrop.prototype.handleDrop = function (event) {
        var files = event.dataTransfer.files;
        for (var i = 0, ii = files.length; i < ii; ++i) {
            var file = files.item(i);
            var reader = new FileReader();
            reader.addEventListener(_events_EventType_js__WEBPACK_IMPORTED_MODULE_5__.default.LOAD, this.handleResult_.bind(this, file));
            if (this.readAsBuffer_) {
                reader.readAsArrayBuffer(file);
            }
            else {
                reader.readAsText(file);
            }
        }
    };
    /**
     * @param {DragEvent} event Event.
     */
    DragAndDrop.prototype.handleStop = function (event) {
        event.stopPropagation();
        event.preventDefault();
        event.dataTransfer.dropEffect = 'copy';
    };
    return DragAndDrop;
}(_Interaction_js__WEBPACK_IMPORTED_MODULE_6__.default));
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (DragAndDrop);
//# sourceMappingURL=DragAndDrop.js.map

/***/ }),

/***/ "./node_modules/ol/interaction/DragBox.js":
/*!************************************************!*\
  !*** ./node_modules/ol/interaction/DragBox.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "DragBoxEvent": () => (/* binding */ DragBoxEvent),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _events_Event_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../events/Event.js */ "./node_modules/ol/events/Event.js");
/* harmony import */ var _Pointer_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Pointer.js */ "./node_modules/ol/interaction/Pointer.js");
/* harmony import */ var _render_Box_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../render/Box.js */ "./node_modules/ol/render/Box.js");
/* harmony import */ var _events_condition_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../events/condition.js */ "./node_modules/ol/events/condition.js");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
/**
 * @module ol/interaction/DragBox
 */
// FIXME draw drag box




/**
 * A function that takes a {@link module:ol/MapBrowserEvent} and two
 * {@link module:ol/pixel~Pixel}s and returns a `{boolean}`. If the condition is met,
 * true should be returned.
 * @typedef {function(this: ?, import("../MapBrowserEvent.js").default, import("../pixel.js").Pixel, import("../pixel.js").Pixel):boolean} EndCondition
 */
/**
 * @typedef {Object} Options
 * @property {string} [className='ol-dragbox'] CSS class name for styling the box.
 * @property {import("../events/condition.js").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean
 * to indicate whether that event should be handled.
 * Default is {@link ol/events/condition~mouseActionButton}.
 * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the default
 * `boxEndCondition` function.
 * @property {EndCondition} [boxEndCondition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two
 * {@link module:ol/pixel~Pixel}s to indicate whether a `boxend` event should be fired.
 * Default is `true` if the area of the box is bigger than the `minArea` option.
 * @property {function(this:DragBox, import("../MapBrowserEvent.js").default):void} [onBoxEnd] Code to execute just
 * before `boxend` is fired.
 */
/**
 * @enum {string}
 */
var DragBoxEventType = {
    /**
     * Triggered upon drag box start.
     * @event DragBoxEvent#boxstart
     * @api
     */
    BOXSTART: 'boxstart',
    /**
     * Triggered on drag when box is active.
     * @event DragBoxEvent#boxdrag
     * @api
     */
    BOXDRAG: 'boxdrag',
    /**
     * Triggered upon drag box end.
     * @event DragBoxEvent#boxend
     * @api
     */
    BOXEND: 'boxend',
    /**
     * Triggered upon drag box canceled.
     * @event DragBoxEvent#boxcancel
     * @api
     */
    BOXCANCEL: 'boxcancel',
};
/**
 * @classdesc
 * Events emitted by {@link module:ol/interaction/DragBox~DragBox} instances are instances of
 * this type.
 */
var DragBoxEvent = /** @class */ (function (_super) {
    __extends(DragBoxEvent, _super);
    /**
     * @param {string} type The event type.
     * @param {import("../coordinate.js").Coordinate} coordinate The event coordinate.
     * @param {import("../MapBrowserEvent.js").default} mapBrowserEvent Originating event.
     */
    function DragBoxEvent(type, coordinate, mapBrowserEvent) {
        var _this = _super.call(this, type) || this;
        /**
         * The coordinate of the drag event.
         * @const
         * @type {import("../coordinate.js").Coordinate}
         * @api
         */
        _this.coordinate = coordinate;
        /**
         * @const
         * @type {import("../MapBrowserEvent.js").default}
         * @api
         */
        _this.mapBrowserEvent = mapBrowserEvent;
        return _this;
    }
    return DragBoxEvent;
}(_events_Event_js__WEBPACK_IMPORTED_MODULE_0__.default));

/**
 * @classdesc
 * Allows the user to draw a vector box by clicking and dragging on the map,
 * normally combined with an {@link module:ol/events/condition} that limits
 * it to when the shift or other key is held down. This is used, for example,
 * for zooming to a specific area of the map
 * (see {@link module:ol/interaction/DragZoom~DragZoom} and
 * {@link module:ol/interaction/DragRotateAndZoom}).
 *
 * @fires DragBoxEvent
 * @api
 */
var DragBox = /** @class */ (function (_super) {
    __extends(DragBox, _super);
    /**
     * @param {Options=} opt_options Options.
     */
    function DragBox(opt_options) {
        var _this = _super.call(this) || this;
        var options = opt_options ? opt_options : {};
        /**
         * @type {import("../render/Box.js").default}
         * @private
         */
        _this.box_ = new _render_Box_js__WEBPACK_IMPORTED_MODULE_1__.default(options.className || 'ol-dragbox');
        /**
         * @type {number}
         * @private
         */
        _this.minArea_ = options.minArea !== undefined ? options.minArea : 64;
        if (options.onBoxEnd) {
            _this.onBoxEnd = options.onBoxEnd;
        }
        /**
         * @type {import("../pixel.js").Pixel}
         * @private
         */
        _this.startPixel_ = null;
        /**
         * @private
         * @type {import("../events/condition.js").Condition}
         */
        _this.condition_ = options.condition ? options.condition : _events_condition_js__WEBPACK_IMPORTED_MODULE_2__.mouseActionButton;
        /**
         * @private
         * @type {EndCondition}
         */
        _this.boxEndCondition_ = options.boxEndCondition
            ? options.boxEndCondition
            : _this.defaultBoxEndCondition;
        return _this;
    }
    /**
     * The default condition for determining whether the boxend event
     * should fire.
     * @param {import("../MapBrowserEvent.js").default} mapBrowserEvent The originating MapBrowserEvent
     *     leading to the box end.
     * @param {import("../pixel.js").Pixel} startPixel The starting pixel of the box.
     * @param {import("../pixel.js").Pixel} endPixel The end pixel of the box.
     * @return {boolean} Whether or not the boxend condition should be fired.
     */
    DragBox.prototype.defaultBoxEndCondition = function (mapBrowserEvent, startPixel, endPixel) {
        var width = endPixel[0] - startPixel[0];
        var height = endPixel[1] - startPixel[1];
        return width * width + height * height >= this.minArea_;
    };
    /**
     * Returns geometry of last drawn box.
     * @return {import("../geom/Polygon.js").default} Geometry.
     * @api
     */
    DragBox.prototype.getGeometry = function () {
        return this.box_.getGeometry();
    };
    /**
     * Handle pointer drag events.
     * @param {import("../MapBrowserEvent.js").default} mapBrowserEvent Event.
     */
    DragBox.prototype.handleDragEvent = function (mapBrowserEvent) {
        this.box_.setPixels(this.startPixel_, mapBrowserEvent.pixel);
        this.dispatchEvent(new DragBoxEvent(DragBoxEventType.BOXDRAG, mapBrowserEvent.coordinate, mapBrowserEvent));
    };
    /**
     * Handle pointer up events.
     * @param {import("../MapBrowserEvent.js").default} mapBrowserEvent Event.
     * @return {boolean} If the event was consumed.
     */
    DragBox.prototype.handleUpEvent = function (mapBrowserEvent) {
        this.box_.setMap(null);
        var completeBox = this.boxEndCondition_(mapBrowserEvent, this.startPixel_, mapBrowserEvent.pixel);
        if (completeBox) {
            this.onBoxEnd(mapBrowserEvent);
        }
        this.dispatchEvent(new DragBoxEvent(completeBox ? DragBoxEventType.BOXEND : DragBoxEventType.BOXCANCEL, mapBrowserEvent.coordinate, mapBrowserEvent));
        return false;
    };
    /**
     * Handle pointer down events.
     * @param {import("../MapBrowserEvent.js").default} mapBrowserEvent Event.
     * @return {boolean} If the event was consumed.
     */
    DragBox.prototype.handleDownEvent = function (mapBrowserEvent) {
        if (this.condition_(mapBrowserEvent)) {
            this.startPixel_ = mapBrowserEvent.pixel;
            this.box_.setMap(mapBrowserEvent.map);
            this.box_.setPixels(this.startPixel_, this.startPixel_);
            this.dispatchEvent(new DragBoxEvent(DragBoxEventType.BOXSTART, mapBrowserEvent.coordinate, mapBrowserEvent));
            return true;
        }
        else {
            return false;
        }
    };
    /**
     * Function to execute just before `onboxend` is fired
     * @param {import("../MapBrowserEvent.js").default} event Event.
     */
    DragBox.prototype.onBoxEnd = function (event) { };
    return DragBox;
}(_Pointer_js__WEBPACK_IMPORTED_MODULE_3__.default));
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (DragBox);
//# sourceMappingURL=DragBox.js.map

/***/ }),

/***/ "./node_modules/ol/interaction/DragPan.js":
/*!************************************************!*\
  !*** ./node_modules/ol/interaction/DragPan.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _Pointer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Pointer.js */ "./node_modules/ol/interaction/Pointer.js");
/* harmony import */ var _functions_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../functions.js */ "./node_modules/ol/functions.js");
/* harmony import */ var _events_condition_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../events/condition.js */ "./node_modules/ol/events/condition.js");
/* harmony import */ var _easing_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../easing.js */ "./node_modules/ol/easing.js");
/* harmony import */ var _coordinate_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../coordinate.js */ "./node_modules/ol/coordinate.js");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
/**
 * @module ol/interaction/DragPan
 */





/**
 * @typedef {Object} Options
 * @property {import("../events/condition.js").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean
 * to indicate whether that event should be handled.
 * Default is {@link module:ol/events/condition~noModifierKeys} and {@link module:ol/events/condition~primaryAction}.
 * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,
 * the interaction will only handle events when the map has the focus.
 * @property {import("../Kinetic.js").default} [kinetic] Kinetic inertia to apply to the pan.
 */
/**
 * @classdesc
 * Allows the user to pan the map by dragging the map.
 * @api
 */
var DragPan = /** @class */ (function (_super) {
    __extends(DragPan, _super);
    /**
     * @param {Options=} opt_options Options.
     */
    function DragPan(opt_options) {
        var _this = _super.call(this, {
            stopDown: _functions_js__WEBPACK_IMPORTED_MODULE_0__.FALSE,
        }) || this;
        var options = opt_options ? opt_options : {};
        /**
         * @private
         * @type {import("../Kinetic.js").default|undefined}
         */
        _this.kinetic_ = options.kinetic;
        /**
         * @type {import("../pixel.js").Pixel}
         */
        _this.lastCentroid = null;
        /**
         * @type {number}
         */
        _this.lastPointersCount_;
        /**
         * @type {boolean}
         */
        _this.panning_ = false;
        var condition = options.condition
            ? options.condition
            : (0,_events_condition_js__WEBPACK_IMPORTED_MODULE_1__.all)(_events_condition_js__WEBPACK_IMPORTED_MODULE_1__.noModifierKeys, _events_condition_js__WEBPACK_IMPORTED_MODULE_1__.primaryAction);
        /**
         * @private
         * @type {import("../events/condition.js").Condition}
         */
        _this.condition_ = options.onFocusOnly
            ? (0,_events_condition_js__WEBPACK_IMPORTED_MODULE_1__.all)(_events_condition_js__WEBPACK_IMPORTED_MODULE_1__.focusWithTabindex, condition)
            : condition;
        /**
         * @private
         * @type {boolean}
         */
        _this.noKinetic_ = false;
        return _this;
    }
    /**
     * Handle pointer drag events.
     * @param {import("../MapBrowserEvent.js").default} mapBrowserEvent Event.
     */
    DragPan.prototype.handleDragEvent = function (mapBrowserEvent) {
        if (!this.panning_) {
            this.panning_ = true;
            this.getMap().getView().beginInteraction();
        }
        var targetPointers = this.targetPointers;
        var centroid = (0,_Pointer_js__WEBPACK_IMPORTED_MODULE_2__.centroid)(targetPointers);
        if (targetPointers.length == this.lastPointersCount_) {
            if (this.kinetic_) {
                this.kinetic_.update(centroid[0], centroid[1]);
            }
            if (this.lastCentroid) {
                var delta = [
                    this.lastCentroid[0] - centroid[0],
                    centroid[1] - this.lastCentroid[1],
                ];
                var map = mapBrowserEvent.map;
                var view = map.getView();
                (0,_coordinate_js__WEBPACK_IMPORTED_MODULE_3__.scale)(delta, view.getResolution());
                (0,_coordinate_js__WEBPACK_IMPORTED_MODULE_3__.rotate)(delta, view.getRotation());
                view.adjustCenterInternal(delta);
            }
        }
        else if (this.kinetic_) {
            // reset so we don't overestimate the kinetic energy after
            // after one finger down, tiny drag, second finger down
            this.kinetic_.begin();
        }
        this.lastCentroid = centroid;
        this.lastPointersCount_ = targetPointers.length;
        mapBrowserEvent.originalEvent.preventDefault();
    };
    /**
     * Handle pointer up events.
     * @param {import("../MapBrowserEvent.js").default} mapBrowserEvent Event.
     * @return {boolean} If the event was consumed.
     */
    DragPan.prototype.handleUpEvent = function (mapBrowserEvent) {
        var map = mapBrowserEvent.map;
        var view = map.getView();
        if (this.targetPointers.length === 0) {
            if (!this.noKinetic_ && this.kinetic_ && this.kinetic_.end()) {
                var distance = this.kinetic_.getDistance();
                var angle = this.kinetic_.getAngle();
                var center = view.getCenterInternal();
                var centerpx = map.getPixelFromCoordinateInternal(center);
                var dest = map.getCoordinateFromPixelInternal([
                    centerpx[0] - distance * Math.cos(angle),
                    centerpx[1] - distance * Math.sin(angle),
                ]);
                view.animateInternal({
                    center: view.getConstrainedCenter(dest),
                    duration: 500,
                    easing: _easing_js__WEBPACK_IMPORTED_MODULE_4__.easeOut,
                });
            }
            if (this.panning_) {
                this.panning_ = false;
                view.endInteraction();
            }
            return false;
        }
        else {
            if (this.kinetic_) {
                // reset so we don't overestimate the kinetic energy after
                // after one finger up, tiny drag, second finger up
                this.kinetic_.begin();
            }
            this.lastCentroid = null;
            return true;
        }
    };
    /**
     * Handle pointer down events.
     * @param {import("../MapBrowserEvent.js").default} mapBrowserEvent Event.
     * @return {boolean} If the event was consumed.
     */
    DragPan.prototype.handleDownEvent = function (mapBrowserEvent) {
        if (this.targetPointers.length > 0 && this.condition_(mapBrowserEvent)) {
            var map = mapBrowserEvent.map;
            var view = map.getView();
            this.lastCentroid = null;
            // stop any current animation
            if (view.getAnimating()) {
                view.cancelAnimations();
            }
            if (this.kinetic_) {
                this.kinetic_.begin();
            }
            // No kinetic as soon as more than one pointer on the screen is
            // detected. This is to prevent nasty pans after pinch.
            this.noKinetic_ = this.targetPointers.length > 1;
            return true;
        }
        else {
            return false;
        }
    };
    return DragPan;
}(_Pointer_js__WEBPACK_IMPORTED_MODULE_2__.default));
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (DragPan);
//# sourceMappingURL=DragPan.js.map

/***/ }),

/***/ "./node_modules/ol/interaction/DragRotate.js":
/*!***************************************************!*\
  !*** ./node_modules/ol/interaction/DragRotate.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _Pointer_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Pointer.js */ "./node_modules/ol/interaction/Pointer.js");
/* harmony import */ var _functions_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../functions.js */ "./node_modules/ol/functions.js");
/* harmony import */ var _events_condition_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../events/condition.js */ "./node_modules/ol/events/condition.js");
/* harmony import */ var _rotationconstraint_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../rotationconstraint.js */ "./node_modules/ol/rotationconstraint.js");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
/**
 * @module ol/interaction/DragRotate
 */




/**
 * @typedef {Object} Options
 * @property {import("../events/condition.js").Condition} [condition] A function that takes an
 * {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean
 * to indicate whether that event should be handled.
 * Default is {@link module:ol/events/condition~altShiftKeysOnly}.
 * @property {number} [duration=250] Animation duration in milliseconds.
 */
/**
 * @classdesc
 * Allows the user to rotate the map by clicking and dragging on the map,
 * normally combined with an {@link module:ol/events/condition} that limits
 * it to when the alt and shift keys are held down.
 *
 * This interaction is only supported for mouse devices.
 * @api
 */
var DragRotate = /** @class */ (function (_super) {
    __extends(DragRotate, _super);
    /**
     * @param {Options=} opt_options Options.
     */
    function DragRotate(opt_options) {
        var _this = this;
        var options = opt_options ? opt_options : {};
        _this = _super.call(this, {
            stopDown: _functions_js__WEBPACK_IMPORTED_MODULE_0__.FALSE,
        }) || this;
        /**
         * @private
         * @type {import("../events/condition.js").Condition}
         */
        _this.condition_ = options.condition ? options.condition : _events_condition_js__WEBPACK_IMPORTED_MODULE_1__.altShiftKeysOnly;
        /**
         * @private
         * @type {number|undefined}
         */
        _this.lastAngle_ = undefined;
        /**
         * @private
         * @type {number}
         */
        _this.duration_ = options.duration !== undefined ? options.duration : 250;
        return _this;
    }
    /**
     * Handle pointer drag events.
     * @param {import("../MapBrowserEvent.js").default} mapBrowserEvent Event.
     */
    DragRotate.prototype.handleDragEvent = function (mapBrowserEvent) {
        if (!(0,_events_condition_js__WEBPACK_IMPORTED_MODULE_1__.mouseOnly)(mapBrowserEvent)) {
            return;
        }
        var map = mapBrowserEvent.map;
        var view = map.getView();
        if (view.getConstraints().rotation === _rotationconstraint_js__WEBPACK_IMPORTED_MODULE_2__.disable) {
            return;
        }
        var size = map.getSize();
        var offset = mapBrowserEvent.pixel;
        var theta = Math.atan2(size[1] / 2 - offset[1], offset[0] - size[0] / 2);
        if (this.lastAngle_ !== undefined) {
            var delta = theta - this.lastAngle_;
            view.adjustRotationInternal(-delta);
        }
        this.lastAngle_ = theta;
    };
    /**
     * Handle pointer up events.
     * @param {import("../MapBrowserEvent.js").default} mapBrowserEvent Event.
     * @return {boolean} If the event was consumed.
     */
    DragRotate.prototype.handleUpEvent = function (mapBrowserEvent) {
        if (!(0,_events_condition_js__WEBPACK_IMPORTED_MODULE_1__.mouseOnly)(mapBrowserEvent)) {
            return true;
        }
        var map = mapBrowserEvent.map;
        var view = map.getView();
        view.endInteraction(this.duration_);
        return false;
    };
    /**
     * Handle pointer down events.
     * @param {import("../MapBrowserEvent.js").default} mapBrowserEvent Event.
     * @return {boolean} If the event was consumed.
     */
    DragRotate.prototype.handleDownEvent = function (mapBrowserEvent) {
        if (!(0,_events_condition_js__WEBPACK_IMPORTED_MODULE_1__.mouseOnly)(mapBrowserEvent)) {
            return false;
        }
        if ((0,_events_condition_js__WEBPACK_IMPORTED_MODULE_1__.mouseActionButton)(mapBrowserEvent) &&
            this.condition_(mapBrowserEvent)) {
            var map = mapBrowserEvent.map;
            map.getView().beginInteraction();
            this.lastAngle_ = undefined;
            return true;
        }
        else {
            return false;
        }
    };
    return DragRotate;
}(_Pointer_js__WEBPACK_IMPORTED_MODULE_3__.default));
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (DragRotate);
//# sourceMappingURL=DragRotate.js.map

/***/ }),

/***/ "./node_modules/ol/interaction/DragRotateAndZoom.js":
/*!**********************************************************!*\
  !*** ./node_modules/ol/interaction/DragRotateAndZoom.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _Pointer_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Pointer.js */ "./node_modules/ol/interaction/Pointer.js");
/* harmony import */ var _events_condition_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../events/condition.js */ "./node_modules/ol/events/condition.js");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
/**
 * @module ol/interaction/DragRotateAndZoom
 */


/**
 * @typedef {Object} Options
 * @property {import("../events/condition.js").Condition} [condition] A function that
 * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a
 * boolean to indicate whether that event should be handled.
 * Default is {@link module:ol/events/condition~shiftKeyOnly}.
 * @property {number} [duration=400] Animation duration in milliseconds.
 */
/**
 * @classdesc
 * Allows the user to zoom and rotate the map by clicking and dragging
 * on the map.  By default, this interaction is limited to when the shift
 * key is held down.
 *
 * This interaction is only supported for mouse devices.
 *
 * And this interaction is not included in the default interactions.
 * @api
 */
var DragRotateAndZoom = /** @class */ (function (_super) {
    __extends(DragRotateAndZoom, _super);
    /**
     * @param {Options=} opt_options Options.
     */
    function DragRotateAndZoom(opt_options) {
        var _this = this;
        var options = opt_options ? opt_options : {};
        _this = _super.call(this, /** @type {import("./Pointer.js").Options} */ (options)) || this;
        /**
         * @private
         * @type {import("../events/condition.js").Condition}
         */
        _this.condition_ = options.condition ? options.condition : _events_condition_js__WEBPACK_IMPORTED_MODULE_0__.shiftKeyOnly;
        /**
         * @private
         * @type {number|undefined}
         */
        _this.lastAngle_ = undefined;
        /**
         * @private
         * @type {number|undefined}
         */
        _this.lastMagnitude_ = undefined;
        /**
         * @private
         * @type {number}
         */
        _this.lastScaleDelta_ = 0;
        /**
         * @private
         * @type {number}
         */
        _this.duration_ = options.duration !== undefined ? options.duration : 400;
        return _this;
    }
    /**
     * Handle pointer drag events.
     * @param {import("../MapBrowserEvent.js").default} mapBrowserEvent Event.
     */
    DragRotateAndZoom.prototype.handleDragEvent = function (mapBrowserEvent) {
        if (!(0,_events_condition_js__WEBPACK_IMPORTED_MODULE_0__.mouseOnly)(mapBrowserEvent)) {
            return;
        }
        var map = mapBrowserEvent.map;
        var size = map.getSize();
        var offset = mapBrowserEvent.pixel;
        var deltaX = offset[0] - size[0] / 2;
        var deltaY = size[1] / 2 - offset[1];
        var theta = Math.atan2(deltaY, deltaX);
        var magnitude = Math.sqrt(deltaX * deltaX + deltaY * deltaY);
        var view = map.getView();
        if (this.lastAngle_ !== undefined) {
            var angleDelta = this.lastAngle_ - theta;
            view.adjustRotationInternal(angleDelta);
        }
        this.lastAngle_ = theta;
        if (this.lastMagnitude_ !== undefined) {
            view.adjustResolutionInternal(this.lastMagnitude_ / magnitude);
        }
        if (this.lastMagnitude_ !== undefined) {
            this.lastScaleDelta_ = this.lastMagnitude_ / magnitude;
        }
        this.lastMagnitude_ = magnitude;
    };
    /**
     * Handle pointer up events.
     * @param {import("../MapBrowserEvent.js").default} mapBrowserEvent Event.
     * @return {boolean} If the event was consumed.
     */
    DragRotateAndZoom.prototype.handleUpEvent = function (mapBrowserEvent) {
        if (!(0,_events_condition_js__WEBPACK_IMPORTED_MODULE_0__.mouseOnly)(mapBrowserEvent)) {
            return true;
        }
        var map = mapBrowserEvent.map;
        var view = map.getView();
        var direction = this.lastScaleDelta_ > 1 ? 1 : -1;
        view.endInteraction(this.duration_, direction);
        this.lastScaleDelta_ = 0;
        return false;
    };
    /**
     * Handle pointer down events.
     * @param {import("../MapBrowserEvent.js").default} mapBrowserEvent Event.
     * @return {boolean} If the event was consumed.
     */
    DragRotateAndZoom.prototype.handleDownEvent = function (mapBrowserEvent) {
        if (!(0,_events_condition_js__WEBPACK_IMPORTED_MODULE_0__.mouseOnly)(mapBrowserEvent)) {
            return false;
        }
        if (this.condition_(mapBrowserEvent)) {
            mapBrowserEvent.map.getView().beginInteraction();
            this.lastAngle_ = undefined;
            this.lastMagnitude_ = undefined;
            return true;
        }
        else {
            return false;
        }
    };
    return DragRotateAndZoom;
}(_Pointer_js__WEBPACK_IMPORTED_MODULE_1__.default));
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (DragRotateAndZoom);
//# sourceMappingURL=DragRotateAndZoom.js.map

/***/ }),

/***/ "./node_modules/ol/interaction/DragZoom.js":
/*!*************************************************!*\
  !*** ./node_modules/ol/interaction/DragZoom.js ***!
  \*************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _DragBox_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./DragBox.js */ "./node_modules/ol/interaction/DragBox.js");
/* harmony import */ var _extent_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../extent.js */ "./node_modules/ol/extent.js");
/* harmony import */ var _easing_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../easing.js */ "./node_modules/ol/easing.js");
/* harmony import */ var _events_condition_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../events/condition.js */ "./node_modules/ol/events/condition.js");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
/**
 * @module ol/interaction/DragZoom
 */




/**
 * @typedef {Object} Options
 * @property {string} [className='ol-dragzoom'] CSS class name for styling the
 * box.
 * @property {import("../events/condition.js").Condition} [condition] A function that
 * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a
 * boolean to indicate whether that event should be handled.
 * Default is {@link module:ol/events/condition~shiftKeyOnly}.
 * @property {number} [duration=200] Animation duration in milliseconds.
 * @property {boolean} [out=false] Use interaction for zooming out.
 * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the parent default
 * `boxEndCondition` function.
 */
/**
 * @classdesc
 * Allows the user to zoom the map by clicking and dragging on the map,
 * normally combined with an {@link module:ol/events/condition} that limits
 * it to when a key, shift by default, is held down.
 *
 * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or
 * your custom one configured with `className`.
 * @api
 */
var DragZoom = /** @class */ (function (_super) {
    __extends(DragZoom, _super);
    /**
     * @param {Options=} opt_options Options.
     */
    function DragZoom(opt_options) {
        var _this = this;
        var options = opt_options ? opt_options : {};
        var condition = options.condition ? options.condition : _events_condition_js__WEBPACK_IMPORTED_MODULE_0__.shiftKeyOnly;
        _this = _super.call(this, {
            condition: condition,
            className: options.className || 'ol-dragzoom',
            minArea: options.minArea,
        }) || this;
        /**
         * @private
         * @type {number}
         */
        _this.duration_ = options.duration !== undefined ? options.duration : 200;
        /**
         * @private
         * @type {boolean}
         */
        _this.out_ = options.out !== undefined ? options.out : false;
        return _this;
    }
    /**
     * Function to execute just before `onboxend` is fired
     * @param {import("../MapBrowserEvent.js").default} event Event.
     */
    DragZoom.prototype.onBoxEnd = function (event) {
        var map = this.getMap();
        var view = /** @type {!import("../View.js").default} */ (map.getView());
        var size = /** @type {!import("../size.js").Size} */ (map.getSize());
        var extent = this.getGeometry().getExtent();
        if (this.out_) {
            var mapExtent = view.calculateExtentInternal(size);
            var boxPixelExtent = (0,_extent_js__WEBPACK_IMPORTED_MODULE_1__.createOrUpdateFromCoordinates)([
                map.getPixelFromCoordinateInternal((0,_extent_js__WEBPACK_IMPORTED_MODULE_1__.getBottomLeft)(extent)),
                map.getPixelFromCoordinateInternal((0,_extent_js__WEBPACK_IMPORTED_MODULE_1__.getTopRight)(extent)),
            ]);
            var factor = view.getResolutionForExtentInternal(boxPixelExtent, size);
            (0,_extent_js__WEBPACK_IMPORTED_MODULE_1__.scaleFromCenter)(mapExtent, 1 / factor);
            extent = mapExtent;
        }
        var resolution = view.getConstrainedResolution(view.getResolutionForExtentInternal(extent, size));
        var center = view.getConstrainedCenter((0,_extent_js__WEBPACK_IMPORTED_MODULE_1__.getCenter)(extent), resolution);
        view.animateInternal({
            resolution: resolution,
            center: center,
            duration: this.duration_,
            easing: _easing_js__WEBPACK_IMPORTED_MODULE_2__.easeOut,
        });
    };
    return DragZoom;
}(_DragBox_js__WEBPACK_IMPORTED_MODULE_3__.default));
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (DragZoom);
//# sourceMappingURL=DragZoom.js.map

/***/ }),

/***/ "./node_modules/ol/interaction/Draw.js":
/*!*********************************************!*\
  !*** ./node_modules/ol/interaction/Draw.js ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "DrawEvent": () => (/* binding */ DrawEvent),
/* harmony export */   "createRegularPolygon": () => (/* binding */ createRegularPolygon),
/* harmony export */   "createBox": () => (/* binding */ createBox),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _geom_Circle_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../geom/Circle.js */ "./node_modules/ol/geom/Circle.js");
/* harmony import */ var _events_Event_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../events/Event.js */ "./node_modules/ol/events/Event.js");
/* harmony import */ var _events_EventType_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../events/EventType.js */ "./node_modules/ol/events/EventType.js");
/* harmony import */ var _Feature_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../Feature.js */ "./node_modules/ol/Feature.js");
/* harmony import */ var _geom_GeometryType_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ../geom/GeometryType.js */ "./node_modules/ol/geom/GeometryType.js");
/* harmony import */ var _Property_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./Property.js */ "./node_modules/ol/interaction/Property.js");
/* harmony import */ var _geom_LineString_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../geom/LineString.js */ "./node_modules/ol/geom/LineString.js");
/* harmony import */ var _MapBrowserEvent_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../MapBrowserEvent.js */ "./node_modules/ol/MapBrowserEvent.js");
/* harmony import */ var _MapBrowserEventType_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../MapBrowserEventType.js */ "./node_modules/ol/MapBrowserEventType.js");
/* harmony import */ var _geom_MultiLineString_js__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ../geom/MultiLineString.js */ "./node_modules/ol/geom/MultiLineString.js");
/* harmony import */ var _geom_MultiPoint_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ../geom/MultiPoint.js */ "./node_modules/ol/geom/MultiPoint.js");
/* harmony import */ var _geom_MultiPolygon_js__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ../geom/MultiPolygon.js */ "./node_modules/ol/geom/MultiPolygon.js");
/* harmony import */ var _geom_Point_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../geom/Point.js */ "./node_modules/ol/geom/Point.js");
/* harmony import */ var _Pointer_js__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./Pointer.js */ "./node_modules/ol/interaction/Pointer.js");
/* harmony import */ var _geom_Polygon_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../geom/Polygon.js */ "./node_modules/ol/geom/Polygon.js");
/* harmony import */ var _layer_Vector_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../layer/Vector.js */ "./node_modules/ol/layer/Vector.js");
/* harmony import */ var _source_Vector_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../source/Vector.js */ "./node_modules/ol/source/Vector.js");
/* harmony import */ var _functions_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../functions.js */ "./node_modules/ol/functions.js");
/* harmony import */ var _events_condition_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../events/condition.js */ "./node_modules/ol/events/condition.js");
/* harmony import */ var _extent_js__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ../extent.js */ "./node_modules/ol/extent.js");
/* harmony import */ var _style_Style_js__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ../style/Style.js */ "./node_modules/ol/style/Style.js");
/* harmony import */ var _proj_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../proj.js */ "./node_modules/ol/proj.js");
/* harmony import */ var _Object_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../Object.js */ "./node_modules/ol/Object.js");
/* harmony import */ var _coordinate_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../coordinate.js */ "./node_modules/ol/coordinate.js");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
/**
 * @module ol/interaction/Draw
 */
























/**
 * @typedef {Object} Options
 * @property {import("../geom/GeometryType.js").default} type Geometry type of
 * the geometries being drawn with this instance.
 * @property {number} [clickTolerance=6] The maximum distance in pixels between
 * "down" and "up" for a "up" event to be considered a "click" event and
 * actually add a point/vertex to the geometry being drawn.  The default of `6`
 * was chosen for the draw interaction to behave correctly on mouse as well as
 * on touch devices.
 * @property {import("../Collection.js").default<Feature>} [features]
 * Destination collection for the drawn features.
 * @property {VectorSource} [source] Destination source for
 * the drawn features.
 * @property {number} [dragVertexDelay=500] Delay in milliseconds after pointerdown
 * before the current vertex can be dragged to its exact position.
 * @property {number} [snapTolerance=12] Pixel distance for snapping to the
 * drawing finish. Must be greater than `0`.
 * @property {boolean} [stopClick=false] Stop click, singleclick, and
 * doubleclick events from firing during drawing.
 * @property {number} [maxPoints] The number of points that can be drawn before
 * a polygon ring or line string is finished. By default there is no
 * restriction.
 * @property {number} [minPoints] The number of points that must be drawn
 * before a polygon ring or line string can be finished. Default is `3` for
 * polygon rings and `2` for line strings.
 * @property {import("../events/condition.js").Condition} [finishCondition] A function
 * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a
 * boolean to indicate whether the drawing can be finished. Not used when drawing
 * POINT or MULTI_POINT geometries.
 * @property {import("../style/Style.js").StyleLike} [style]
 * Style for sketch features.
 * @property {GeometryFunction} [geometryFunction]
 * Function that is called when a geometry's coordinates are updated.
 * @property {string} [geometryName] Geometry name to use for features created
 * by the draw interaction.
 * @property {import("../events/condition.js").Condition} [condition] A function that
 * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a
 * boolean to indicate whether that event should be handled.
 * By default {@link module:ol/events/condition~noModifierKeys}, i.e. a click,
 * adds a vertex or deactivates freehand drawing.
 * @property {boolean} [freehand=false] Operate in freehand mode for lines,
 * polygons, and circles.  This makes the interaction always operate in freehand
 * mode and takes precedence over any `freehandCondition` option.
 * @property {import("../events/condition.js").Condition} [freehandCondition]
 * Condition that activates freehand drawing for lines and polygons. This
 * function takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and
 * returns a boolean to indicate whether that event should be handled. The
 * default is {@link module:ol/events/condition~shiftKeyOnly}, meaning that the
 * Shift key activates freehand drawing.
 * @property {boolean} [wrapX=false] Wrap the world horizontally on the sketch
 * overlay.
 */
/**
 * Coordinate type when drawing points.
 * @typedef {import("../coordinate.js").Coordinate} PointCoordType
 */
/**
 * Coordinate type when drawing lines.
 * @typedef {Array<import("../coordinate.js").Coordinate>} LineCoordType
 */
/**
 * Coordinate type when drawing polygons.
 * @typedef {Array<Array<import("../coordinate.js").Coordinate>>} PolyCoordType
 */
/**
 * Types used for drawing coordinates.
 * @typedef {PointCoordType|LineCoordType|PolyCoordType} SketchCoordType
 */
/**
 * Function that takes an array of coordinates and an optional existing geometry
 * and a projection as arguments, and returns a geometry. The optional existing
 * geometry is the geometry that is returned when the function is called without
 * a second argument.
 * @typedef {function(!SketchCoordType, import("../geom/SimpleGeometry.js").default,
 *     import("../proj/Projection.js").default):
 *     import("../geom/SimpleGeometry.js").default} GeometryFunction
 */
/**
 * Draw mode.  This collapses multi-part geometry types with their single-part
 * cousins.
 * @enum {string}
 */
var Mode = {
    POINT: 'Point',
    LINE_STRING: 'LineString',
    POLYGON: 'Polygon',
    CIRCLE: 'Circle',
};
/**
 * @enum {string}
 */
var DrawEventType = {
    /**
     * Triggered upon feature draw start
     * @event DrawEvent#drawstart
     * @api
     */
    DRAWSTART: 'drawstart',
    /**
     * Triggered upon feature draw end
     * @event DrawEvent#drawend
     * @api
     */
    DRAWEND: 'drawend',
    /**
     * Triggered upon feature draw abortion
     * @event DrawEvent#drawabort
     * @api
     */
    DRAWABORT: 'drawabort',
};
/**
 * @classdesc
 * Events emitted by {@link module:ol/interaction/Draw~Draw} instances are
 * instances of this type.
 */
var DrawEvent = /** @class */ (function (_super) {
    __extends(DrawEvent, _super);
    /**
     * @param {DrawEventType} type Type.
     * @param {Feature} feature The feature drawn.
     */
    function DrawEvent(type, feature) {
        var _this = _super.call(this, type) || this;
        /**
         * The feature being drawn.
         * @type {Feature}
         * @api
         */
        _this.feature = feature;
        return _this;
    }
    return DrawEvent;
}(_events_Event_js__WEBPACK_IMPORTED_MODULE_1__.default));

/**
 * @classdesc
 * Interaction for drawing feature geometries.
 *
 * @fires DrawEvent
 * @api
 */
var Draw = /** @class */ (function (_super) {
    __extends(Draw, _super);
    /**
     * @param {Options} options Options.
     */
    function Draw(options) {
        var _this = this;
        var pointerOptions = /** @type {import("./Pointer.js").Options} */ (options);
        if (!pointerOptions.stopDown) {
            pointerOptions.stopDown = _functions_js__WEBPACK_IMPORTED_MODULE_2__.FALSE;
        }
        _this = _super.call(this, pointerOptions) || this;
        /**
         * @type {boolean}
         * @private
         */
        _this.shouldHandle_ = false;
        /**
         * @type {import("../pixel.js").Pixel}
         * @private
         */
        _this.downPx_ = null;
        /**
         * @type {?}
         * @private
         */
        _this.downTimeout_;
        /**
         * @type {number|undefined}
         * @private
         */
        _this.lastDragTime_;
        /**
         * Pointer type of the last pointermove event
         * @type {string}
         * @private
         */
        _this.pointerType_;
        /**
         * @type {boolean}
         * @private
         */
        _this.freehand_ = false;
        /**
         * Target source for drawn features.
         * @type {VectorSource}
         * @private
         */
        _this.source_ = options.source ? options.source : null;
        /**
         * Target collection for drawn features.
         * @type {import("../Collection.js").default<Feature>}
         * @private
         */
        _this.features_ = options.features ? options.features : null;
        /**
         * Pixel distance for snapping.
         * @type {number}
         * @private
         */
        _this.snapTolerance_ = options.snapTolerance ? options.snapTolerance : 12;
        /**
         * Geometry type.
         * @type {import("../geom/GeometryType.js").default}
         * @private
         */
        _this.type_ = /** @type {import("../geom/GeometryType.js").default} */ (options.type);
        /**
         * Drawing mode (derived from geometry type.
         * @type {Mode}
         * @private
         */
        _this.mode_ = getMode(_this.type_);
        /**
         * Stop click, singleclick, and doubleclick events from firing during drawing.
         * Default is `false`.
         * @type {boolean}
         * @private
         */
        _this.stopClick_ = !!options.stopClick;
        /**
         * The number of points that must be drawn before a polygon ring or line
         * string can be finished.  The default is 3 for polygon rings and 2 for
         * line strings.
         * @type {number}
         * @private
         */
        _this.minPoints_ = options.minPoints
            ? options.minPoints
            : _this.mode_ === Mode.POLYGON
                ? 3
                : 2;
        /**
         * The number of points that can be drawn before a polygon ring or line string
         * is finished. The default is no restriction.
         * @type {number}
         * @private
         */
        _this.maxPoints_ =
            _this.mode_ === Mode.CIRCLE
                ? 2
                : options.maxPoints
                    ? options.maxPoints
                    : Infinity;
        /**
         * A function to decide if a potential finish coordinate is permissible
         * @private
         * @type {import("../events/condition.js").Condition}
         */
        _this.finishCondition_ = options.finishCondition
            ? options.finishCondition
            : _functions_js__WEBPACK_IMPORTED_MODULE_2__.TRUE;
        var geometryFunction = options.geometryFunction;
        if (!geometryFunction) {
            var mode_1 = _this.mode_;
            if (mode_1 === Mode.CIRCLE) {
                /**
                 * @param {!LineCoordType} coordinates The coordinates.
                 * @param {import("../geom/SimpleGeometry.js").default|undefined} geometry Optional geometry.
                 * @param {import("../proj/Projection.js").default} projection The view projection.
                 * @return {import("../geom/SimpleGeometry.js").default} A geometry.
                 */
                geometryFunction = function (coordinates, geometry, projection) {
                    var circle = geometry
                        ? /** @type {Circle} */ (geometry)
                        : new _geom_Circle_js__WEBPACK_IMPORTED_MODULE_3__.default([NaN, NaN]);
                    var center = (0,_proj_js__WEBPACK_IMPORTED_MODULE_0__.fromUserCoordinate)(coordinates[0], projection);
                    var squaredLength = (0,_coordinate_js__WEBPACK_IMPORTED_MODULE_4__.squaredDistance)(center, (0,_proj_js__WEBPACK_IMPORTED_MODULE_0__.fromUserCoordinate)(coordinates[coordinates.length - 1], projection));
                    circle.setCenterAndRadius(center, Math.sqrt(squaredLength));
                    var userProjection = (0,_proj_js__WEBPACK_IMPORTED_MODULE_0__.getUserProjection)();
                    if (userProjection) {
                        circle.transform(projection, userProjection);
                    }
                    return circle;
                };
            }
            else {
                var Constructor_1;
                if (mode_1 === Mode.POINT) {
                    Constructor_1 = _geom_Point_js__WEBPACK_IMPORTED_MODULE_5__.default;
                }
                else if (mode_1 === Mode.LINE_STRING) {
                    Constructor_1 = _geom_LineString_js__WEBPACK_IMPORTED_MODULE_6__.default;
                }
                else if (mode_1 === Mode.POLYGON) {
                    Constructor_1 = _geom_Polygon_js__WEBPACK_IMPORTED_MODULE_7__.default;
                }
                /**
                 * @param {!LineCoordType} coordinates The coordinates.
                 * @param {import("../geom/SimpleGeometry.js").default|undefined} geometry Optional geometry.
                 * @param {import("../proj/Projection.js").default} projection The view projection.
                 * @return {import("../geom/SimpleGeometry.js").default} A geometry.
                 */
                geometryFunction = function (coordinates, geometry, projection) {
                    if (geometry) {
                        if (mode_1 === Mode.POLYGON) {
                            if (coordinates[0].length) {
                                // Add a closing coordinate to match the first
                                geometry.setCoordinates([
                                    coordinates[0].concat([coordinates[0][0]]),
                                ]);
                            }
                            else {
                                geometry.setCoordinates([]);
                            }
                        }
                        else {
                            geometry.setCoordinates(coordinates);
                        }
                    }
                    else {
                        geometry = new Constructor_1(coordinates);
                    }
                    return geometry;
                };
            }
        }
        /**
         * @type {GeometryFunction}
         * @private
         */
        _this.geometryFunction_ = geometryFunction;
        /**
         * @type {number}
         * @private
         */
        _this.dragVertexDelay_ =
            options.dragVertexDelay !== undefined ? options.dragVertexDelay : 500;
        /**
         * Finish coordinate for the feature (first point for polygons, last point for
         * linestrings).
         * @type {import("../coordinate.js").Coordinate}
         * @private
         */
        _this.finishCoordinate_ = null;
        /**
         * Sketch feature.
         * @type {Feature}
         * @private
         */
        _this.sketchFeature_ = null;
        /**
         * Sketch point.
         * @type {Feature<Point>}
         * @private
         */
        _this.sketchPoint_ = null;
        /**
         * Sketch coordinates. Used when drawing a line or polygon.
         * @type {SketchCoordType}
         * @private
         */
        _this.sketchCoords_ = null;
        /**
         * Sketch line. Used when drawing polygon.
         * @type {Feature<LineString>}
         * @private
         */
        _this.sketchLine_ = null;
        /**
         * Sketch line coordinates. Used when drawing a polygon or circle.
         * @type {LineCoordType}
         * @private
         */
        _this.sketchLineCoords_ = null;
        /**
         * Squared tolerance for handling up events.  If the squared distance
         * between a down and up event is greater than this tolerance, up events
         * will not be handled.
         * @type {number}
         * @private
         */
        _this.squaredClickTolerance_ = options.clickTolerance
            ? options.clickTolerance * options.clickTolerance
            : 36;
        /**
         * Draw overlay where our sketch features are drawn.
         * @type {VectorLayer}
         * @private
         */
        _this.overlay_ = new _layer_Vector_js__WEBPACK_IMPORTED_MODULE_8__.default({
            source: new _source_Vector_js__WEBPACK_IMPORTED_MODULE_9__.default({
                useSpatialIndex: false,
                wrapX: options.wrapX ? options.wrapX : false,
            }),
            style: options.style ? options.style : getDefaultStyleFunction(),
            updateWhileInteracting: true,
        });
        /**
         * Name of the geometry attribute for newly created features.
         * @type {string|undefined}
         * @private
         */
        _this.geometryName_ = options.geometryName;
        /**
         * @private
         * @type {import("../events/condition.js").Condition}
         */
        _this.condition_ = options.condition ? options.condition : _events_condition_js__WEBPACK_IMPORTED_MODULE_10__.noModifierKeys;
        /**
         * @private
         * @type {import("../events/condition.js").Condition}
         */
        _this.freehandCondition_;
        if (options.freehand) {
            _this.freehandCondition_ = _events_condition_js__WEBPACK_IMPORTED_MODULE_10__.always;
        }
        else {
            _this.freehandCondition_ = options.freehandCondition
                ? options.freehandCondition
                : _events_condition_js__WEBPACK_IMPORTED_MODULE_10__.shiftKeyOnly;
        }
        _this.addEventListener((0,_Object_js__WEBPACK_IMPORTED_MODULE_11__.getChangeEventType)(_Property_js__WEBPACK_IMPORTED_MODULE_12__.default.ACTIVE), _this.updateState_);
        return _this;
    }
    /**
     * Remove the interaction from its current map and attach it to the new map.
     * Subclasses may set up event handlers to get notified about changes to
     * the map here.
     * @param {import("../PluggableMap.js").default} map Map.
     */
    Draw.prototype.setMap = function (map) {
        _super.prototype.setMap.call(this, map);
        this.updateState_();
    };
    /**
     * Get the overlay layer that this interaction renders sketch features to.
     * @return {VectorLayer} Overlay layer.
     * @api
     */
    Draw.prototype.getOverlay = function () {
        return this.overlay_;
    };
    /**
     * Handles the {@link module:ol/MapBrowserEvent map browser event} and may actually draw or finish the drawing.
     * @param {import("../MapBrowserEvent.js").default} event Map browser event.
     * @return {boolean} `false` to stop event propagation.
     * @api
     */
    Draw.prototype.handleEvent = function (event) {
        if (event.originalEvent.type === _events_EventType_js__WEBPACK_IMPORTED_MODULE_13__.default.CONTEXTMENU) {
            // Avoid context menu for long taps when drawing on mobile
            event.originalEvent.preventDefault();
        }
        this.freehand_ =
            this.mode_ !== Mode.POINT && this.freehandCondition_(event);
        var move = event.type === _MapBrowserEventType_js__WEBPACK_IMPORTED_MODULE_14__.default.POINTERMOVE;
        var pass = true;
        if (!this.freehand_ &&
            this.lastDragTime_ &&
            event.type === _MapBrowserEventType_js__WEBPACK_IMPORTED_MODULE_14__.default.POINTERDRAG) {
            var now = Date.now();
            if (now - this.lastDragTime_ >= this.dragVertexDelay_) {
                this.downPx_ = event.pixel;
                this.shouldHandle_ = !this.freehand_;
                move = true;
            }
            else {
                this.lastDragTime_ = undefined;
            }
            if (this.shouldHandle_ && this.downTimeout_ !== undefined) {
                clearTimeout(this.downTimeout_);
                this.downTimeout_ = undefined;
            }
        }
        if (this.freehand_ &&
            event.type === _MapBrowserEventType_js__WEBPACK_IMPORTED_MODULE_14__.default.POINTERDRAG &&
            this.sketchFeature_ !== null) {
            this.addToDrawing_(event.coordinate);
            pass = false;
        }
        else if (this.freehand_ &&
            event.type === _MapBrowserEventType_js__WEBPACK_IMPORTED_MODULE_14__.default.POINTERDOWN) {
            pass = false;
        }
        else if (move && this.getPointerCount() < 2) {
            pass = event.type === _MapBrowserEventType_js__WEBPACK_IMPORTED_MODULE_14__.default.POINTERMOVE;
            if (pass && this.freehand_) {
                this.handlePointerMove_(event);
                if (this.shouldHandle_) {
                    // Avoid page scrolling when freehand drawing on mobile
                    event.originalEvent.preventDefault();
                }
            }
            else if (event.originalEvent.pointerType === 'mouse' ||
                (event.type === _MapBrowserEventType_js__WEBPACK_IMPORTED_MODULE_14__.default.POINTERDRAG &&
                    this.downTimeout_ === undefined)) {
                this.handlePointerMove_(event);
            }
        }
        else if (event.type === _MapBrowserEventType_js__WEBPACK_IMPORTED_MODULE_14__.default.DBLCLICK) {
            pass = false;
        }
        return _super.prototype.handleEvent.call(this, event) && pass;
    };
    /**
     * Handle pointer down events.
     * @param {import("../MapBrowserEvent.js").default} event Event.
     * @return {boolean} If the event was consumed.
     */
    Draw.prototype.handleDownEvent = function (event) {
        this.shouldHandle_ = !this.freehand_;
        if (this.freehand_) {
            this.downPx_ = event.pixel;
            if (!this.finishCoordinate_) {
                this.startDrawing_(event.coordinate);
            }
            return true;
        }
        else if (this.condition_(event)) {
            this.lastDragTime_ = Date.now();
            this.downTimeout_ = setTimeout(function () {
                this.handlePointerMove_(new _MapBrowserEvent_js__WEBPACK_IMPORTED_MODULE_15__.default(_MapBrowserEventType_js__WEBPACK_IMPORTED_MODULE_14__.default.POINTERMOVE, event.map, event.originalEvent, false, event.frameState));
            }.bind(this), this.dragVertexDelay_);
            this.downPx_ = event.pixel;
            return true;
        }
        else {
            this.lastDragTime_ = undefined;
            return false;
        }
    };
    /**
     * Handle pointer up events.
     * @param {import("../MapBrowserEvent.js").default} event Event.
     * @return {boolean} If the event was consumed.
     */
    Draw.prototype.handleUpEvent = function (event) {
        var pass = true;
        if (this.getPointerCount() === 0) {
            if (this.downTimeout_) {
                clearTimeout(this.downTimeout_);
                this.downTimeout_ = undefined;
            }
            this.handlePointerMove_(event);
            if (this.shouldHandle_) {
                switch (true) {
                    case !this.finishCoordinate_:
                        this.startDrawing_(event.coordinate);
                        if (this.mode_ !== Mode.POINT) {
                            break;
                        }
                    // eslint-disable-next-line no-fallthrough
                    case this.freehand_ ||
                        (this.atFinish_(event.pixel) && this.finishCondition_(event)):
                        this.finishDrawing();
                        break;
                    case !this.freehand_:
                        this.addToDrawing_(event.coordinate);
                        break;
                    default:
                        break;
                }
                pass = false;
            }
            else if (this.freehand_) {
                this.abortDrawing();
            }
        }
        if (!pass && this.stopClick_) {
            event.originalEvent.stopPropagation();
        }
        return pass;
    };
    /**
     * Handle move events.
     * @param {import("../MapBrowserEvent.js").default} event A move event.
     * @private
     */
    Draw.prototype.handlePointerMove_ = function (event) {
        this.pointerType_ = event.originalEvent.pointerType;
        if (this.downPx_ &&
            ((!this.freehand_ && this.shouldHandle_) ||
                (this.freehand_ && !this.shouldHandle_))) {
            var downPx = this.downPx_;
            var clickPx = event.pixel;
            var dx = downPx[0] - clickPx[0];
            var dy = downPx[1] - clickPx[1];
            var squaredDistance = dx * dx + dy * dy;
            this.shouldHandle_ = this.freehand_
                ? squaredDistance > this.squaredClickTolerance_
                : squaredDistance <= this.squaredClickTolerance_;
            if (!this.shouldHandle_) {
                return;
            }
        }
        if (this.finishCoordinate_) {
            this.modifyDrawing_(event.coordinate);
        }
        else {
            this.createOrUpdateSketchPoint_(event);
        }
    };
    /**
     * Determine if an event is within the snapping tolerance of the start coord.
     * @param {import("../pixel.js").Pixel} pixel Pixel.
     * @return {boolean} The event is within the snapping tolerance of the start.
     * @private
     */
    Draw.prototype.atFinish_ = function (pixel) {
        var at = false;
        if (this.sketchFeature_) {
            var potentiallyDone = false;
            var potentiallyFinishCoordinates = [this.finishCoordinate_];
            var mode = this.mode_;
            if (mode === Mode.POINT) {
                at = true;
            }
            else if (mode === Mode.CIRCLE) {
                at = this.sketchCoords_.length === 2;
            }
            else if (mode === Mode.LINE_STRING) {
                potentiallyDone = this.sketchCoords_.length > this.minPoints_;
            }
            else if (mode === Mode.POLYGON) {
                var sketchCoords = /** @type {PolyCoordType} */ (this.sketchCoords_);
                potentiallyDone = sketchCoords[0].length > this.minPoints_;
                potentiallyFinishCoordinates = [
                    sketchCoords[0][0],
                    sketchCoords[0][sketchCoords[0].length - 2],
                ];
            }
            if (potentiallyDone) {
                var map = this.getMap();
                for (var i = 0, ii = potentiallyFinishCoordinates.length; i < ii; i++) {
                    var finishCoordinate = potentiallyFinishCoordinates[i];
                    var finishPixel = map.getPixelFromCoordinate(finishCoordinate);
                    var dx = pixel[0] - finishPixel[0];
                    var dy = pixel[1] - finishPixel[1];
                    var snapTolerance = this.freehand_ ? 1 : this.snapTolerance_;
                    at = Math.sqrt(dx * dx + dy * dy) <= snapTolerance;
                    if (at) {
                        this.finishCoordinate_ = finishCoordinate;
                        break;
                    }
                }
            }
        }
        return at;
    };
    /**
     * @param {import("../MapBrowserEvent.js").default} event Event.
     * @private
     */
    Draw.prototype.createOrUpdateSketchPoint_ = function (event) {
        var coordinates = event.coordinate.slice();
        if (!this.sketchPoint_) {
            this.sketchPoint_ = new _Feature_js__WEBPACK_IMPORTED_MODULE_16__.default(new _geom_Point_js__WEBPACK_IMPORTED_MODULE_5__.default(coordinates));
            this.updateSketchFeatures_();
        }
        else {
            var sketchPointGeom = this.sketchPoint_.getGeometry();
            sketchPointGeom.setCoordinates(coordinates);
        }
    };
    /**
     * @param {import("../geom/Polygon.js").default} geometry Polygon geometry.
     * @private
     */
    Draw.prototype.createOrUpdateCustomSketchLine_ = function (geometry) {
        if (!this.sketchLine_) {
            this.sketchLine_ = new _Feature_js__WEBPACK_IMPORTED_MODULE_16__.default();
        }
        var ring = geometry.getLinearRing(0);
        var sketchLineGeom = this.sketchLine_.getGeometry();
        if (!sketchLineGeom) {
            sketchLineGeom = new _geom_LineString_js__WEBPACK_IMPORTED_MODULE_6__.default(ring.getFlatCoordinates(), ring.getLayout());
            this.sketchLine_.setGeometry(sketchLineGeom);
        }
        else {
            sketchLineGeom.setFlatCoordinates(ring.getLayout(), ring.getFlatCoordinates());
            sketchLineGeom.changed();
        }
    };
    /**
     * Start the drawing.
     * @param {import("../coordinate.js").Coordinate} start Start coordinate.
     * @private
     */
    Draw.prototype.startDrawing_ = function (start) {
        var projection = this.getMap().getView().getProjection();
        this.finishCoordinate_ = start;
        if (this.mode_ === Mode.POINT) {
            this.sketchCoords_ = start.slice();
        }
        else if (this.mode_ === Mode.POLYGON) {
            this.sketchCoords_ = [[start.slice(), start.slice()]];
            this.sketchLineCoords_ = this.sketchCoords_[0];
        }
        else {
            this.sketchCoords_ = [start.slice(), start.slice()];
        }
        if (this.sketchLineCoords_) {
            this.sketchLine_ = new _Feature_js__WEBPACK_IMPORTED_MODULE_16__.default(new _geom_LineString_js__WEBPACK_IMPORTED_MODULE_6__.default(this.sketchLineCoords_));
        }
        var geometry = this.geometryFunction_(this.sketchCoords_, undefined, projection);
        this.sketchFeature_ = new _Feature_js__WEBPACK_IMPORTED_MODULE_16__.default();
        if (this.geometryName_) {
            this.sketchFeature_.setGeometryName(this.geometryName_);
        }
        this.sketchFeature_.setGeometry(geometry);
        this.updateSketchFeatures_();
        this.dispatchEvent(new DrawEvent(DrawEventType.DRAWSTART, this.sketchFeature_));
    };
    /**
     * Modify the drawing.
     * @param {import("../coordinate.js").Coordinate} coordinate Coordinate.
     * @private
     */
    Draw.prototype.modifyDrawing_ = function (coordinate) {
        var map = this.getMap();
        var geometry = this.sketchFeature_.getGeometry();
        var projection = map.getView().getProjection();
        var coordinates, last;
        if (this.mode_ === Mode.POINT) {
            last = this.sketchCoords_;
        }
        else if (this.mode_ === Mode.POLYGON) {
            coordinates = /** @type {PolyCoordType} */ (this.sketchCoords_)[0];
            last = coordinates[coordinates.length - 1];
            if (this.atFinish_(map.getPixelFromCoordinate(coordinate))) {
                // snap to finish
                coordinate = this.finishCoordinate_.slice();
            }
        }
        else {
            coordinates = this.sketchCoords_;
            last = coordinates[coordinates.length - 1];
        }
        last[0] = coordinate[0];
        last[1] = coordinate[1];
        this.geometryFunction_(
        /** @type {!LineCoordType} */ (this.sketchCoords_), geometry, projection);
        if (this.sketchPoint_) {
            var sketchPointGeom = this.sketchPoint_.getGeometry();
            sketchPointGeom.setCoordinates(coordinate);
        }
        if (geometry.getType() === _geom_GeometryType_js__WEBPACK_IMPORTED_MODULE_17__.default.POLYGON &&
            this.mode_ !== Mode.POLYGON) {
            this.createOrUpdateCustomSketchLine_(/** @type {Polygon} */ (geometry));
        }
        else if (this.sketchLineCoords_) {
            var sketchLineGeom = this.sketchLine_.getGeometry();
            sketchLineGeom.setCoordinates(this.sketchLineCoords_);
        }
        this.updateSketchFeatures_();
    };
    /**
     * Add a new coordinate to the drawing.
     * @param {!PointCoordType} coordinate Coordinate
     * @private
     */
    Draw.prototype.addToDrawing_ = function (coordinate) {
        var geometry = this.sketchFeature_.getGeometry();
        var projection = this.getMap().getView().getProjection();
        var done;
        var coordinates;
        var mode = this.mode_;
        if (mode === Mode.LINE_STRING || mode === Mode.CIRCLE) {
            this.finishCoordinate_ = coordinate.slice();
            coordinates = /** @type {LineCoordType} */ (this.sketchCoords_);
            if (coordinates.length >= this.maxPoints_) {
                if (this.freehand_) {
                    coordinates.pop();
                }
                else {
                    done = true;
                }
            }
            coordinates.push(coordinate.slice());
            this.geometryFunction_(coordinates, geometry, projection);
        }
        else if (mode === Mode.POLYGON) {
            coordinates = /** @type {PolyCoordType} */ (this.sketchCoords_)[0];
            if (coordinates.length >= this.maxPoints_) {
                if (this.freehand_) {
                    coordinates.pop();
                }
                else {
                    done = true;
                }
            }
            coordinates.push(coordinate.slice());
            if (done) {
                this.finishCoordinate_ = coordinates[0];
            }
            this.geometryFunction_(this.sketchCoords_, geometry, projection);
        }
        this.updateSketchFeatures_();
        if (done) {
            this.finishDrawing();
        }
    };
    /**
     * Remove last point of the feature currently being drawn. Does not do anything when
     * drawing POINT or MULTI_POINT geometries.
     * @api
     */
    Draw.prototype.removeLastPoint = function () {
        if (!this.sketchFeature_) {
            return;
        }
        var geometry = this.sketchFeature_.getGeometry();
        var projection = this.getMap().getView().getProjection();
        var coordinates;
        var mode = this.mode_;
        if (mode === Mode.LINE_STRING || mode === Mode.CIRCLE) {
            coordinates = /** @type {LineCoordType} */ (this.sketchCoords_);
            coordinates.splice(-2, 1);
            if (coordinates.length >= 2) {
                this.finishCoordinate_ = coordinates[coordinates.length - 2].slice();
                var finishCoordinate = this.finishCoordinate_.slice();
                coordinates[coordinates.length - 1] = finishCoordinate;
                this.sketchPoint_.setGeometry(new _geom_Point_js__WEBPACK_IMPORTED_MODULE_5__.default(finishCoordinate));
            }
            this.geometryFunction_(coordinates, geometry, projection);
            if (geometry.getType() === _geom_GeometryType_js__WEBPACK_IMPORTED_MODULE_17__.default.POLYGON && this.sketchLine_) {
                this.createOrUpdateCustomSketchLine_(/** @type {Polygon} */ (geometry));
            }
        }
        else if (mode === Mode.POLYGON) {
            coordinates = /** @type {PolyCoordType} */ (this.sketchCoords_)[0];
            coordinates.splice(-2, 1);
            var sketchLineGeom = this.sketchLine_.getGeometry();
            if (coordinates.length >= 2) {
                var finishCoordinate = coordinates[coordinates.length - 2].slice();
                coordinates[coordinates.length - 1] = finishCoordinate;
                this.sketchPoint_.setGeometry(new _geom_Point_js__WEBPACK_IMPORTED_MODULE_5__.default(finishCoordinate));
            }
            sketchLineGeom.setCoordinates(coordinates);
            this.geometryFunction_(this.sketchCoords_, geometry, projection);
        }
        if (coordinates.length === 1) {
            this.abortDrawing();
        }
        this.updateSketchFeatures_();
    };
    /**
     * Stop drawing and add the sketch feature to the target layer.
     * The {@link module:ol/interaction/Draw~DrawEventType.DRAWEND} event is
     * dispatched before inserting the feature.
     * @api
     */
    Draw.prototype.finishDrawing = function () {
        var sketchFeature = this.abortDrawing_();
        if (!sketchFeature) {
            return;
        }
        var coordinates = this.sketchCoords_;
        var geometry = sketchFeature.getGeometry();
        var projection = this.getMap().getView().getProjection();
        if (this.mode_ === Mode.LINE_STRING) {
            // remove the redundant last point
            coordinates.pop();
            this.geometryFunction_(coordinates, geometry, projection);
        }
        else if (this.mode_ === Mode.POLYGON) {
            // remove the redundant last point in ring
            /** @type {PolyCoordType} */ (coordinates)[0].pop();
            this.geometryFunction_(coordinates, geometry, projection);
            coordinates = geometry.getCoordinates();
        }
        // cast multi-part geometries
        if (this.type_ === _geom_GeometryType_js__WEBPACK_IMPORTED_MODULE_17__.default.MULTI_POINT) {
            sketchFeature.setGeometry(new _geom_MultiPoint_js__WEBPACK_IMPORTED_MODULE_18__.default([/** @type {PointCoordType} */ (coordinates)]));
        }
        else if (this.type_ === _geom_GeometryType_js__WEBPACK_IMPORTED_MODULE_17__.default.MULTI_LINE_STRING) {
            sketchFeature.setGeometry(new _geom_MultiLineString_js__WEBPACK_IMPORTED_MODULE_19__.default([/** @type {LineCoordType} */ (coordinates)]));
        }
        else if (this.type_ === _geom_GeometryType_js__WEBPACK_IMPORTED_MODULE_17__.default.MULTI_POLYGON) {
            sketchFeature.setGeometry(new _geom_MultiPolygon_js__WEBPACK_IMPORTED_MODULE_20__.default([/** @type {PolyCoordType} */ (coordinates)]));
        }
        // First dispatch event to allow full set up of feature
        this.dispatchEvent(new DrawEvent(DrawEventType.DRAWEND, sketchFeature));
        // Then insert feature
        if (this.features_) {
            this.features_.push(sketchFeature);
        }
        if (this.source_) {
            this.source_.addFeature(sketchFeature);
        }
    };
    /**
     * Stop drawing without adding the sketch feature to the target layer.
     * @return {Feature} The sketch feature (or null if none).
     * @private
     */
    Draw.prototype.abortDrawing_ = function () {
        this.finishCoordinate_ = null;
        var sketchFeature = this.sketchFeature_;
        this.sketchFeature_ = null;
        this.sketchPoint_ = null;
        this.sketchLine_ = null;
        this.overlay_.getSource().clear(true);
        return sketchFeature;
    };
    /**
     * Stop drawing without adding the sketch feature to the target layer.
     * @api
     */
    Draw.prototype.abortDrawing = function () {
        var sketchFeature = this.abortDrawing_();
        if (sketchFeature) {
            this.dispatchEvent(new DrawEvent(DrawEventType.DRAWABORT, sketchFeature));
        }
    };
    /**
     * Append coordinates to the end of the geometry that is currently being drawn.
     * This can be used when drawing LineStrings or Polygons. Coordinates will
     * either be appended to the current LineString or the outer ring of the current
     * Polygon. If no geometry is being drawn, a new one will be created.
     * @param {!LineCoordType} coordinates Linear coordinates to be appended to
     * the coordinate array.
     * @api
     */
    Draw.prototype.appendCoordinates = function (coordinates) {
        var mode = this.mode_;
        var newDrawing = !this.sketchFeature_;
        if (newDrawing) {
            this.startDrawing_(coordinates[0]);
        }
        /** @type {LineCoordType} */
        var sketchCoords;
        if (mode === Mode.LINE_STRING || mode === Mode.CIRCLE) {
            sketchCoords = /** @type {LineCoordType} */ (this.sketchCoords_);
        }
        else if (mode === Mode.POLYGON) {
            sketchCoords =
                this.sketchCoords_ && this.sketchCoords_.length
                    ? /** @type {PolyCoordType} */ (this.sketchCoords_)[0]
                    : [];
        }
        else {
            return;
        }
        if (newDrawing) {
            sketchCoords.shift();
        }
        // Remove last coordinate from sketch drawing (this coordinate follows cursor position)
        sketchCoords.pop();
        // Append coordinate list
        for (var i = 0; i < coordinates.length; i++) {
            this.addToDrawing_(coordinates[i]);
        }
        var ending = coordinates[coordinates.length - 1];
        // Duplicate last coordinate for sketch drawing (cursor position)
        this.addToDrawing_(ending);
        this.modifyDrawing_(ending);
    };
    /**
     * Initiate draw mode by starting from an existing geometry which will
     * receive new additional points. This only works on features with
     * `LineString` geometries, where the interaction will extend lines by adding
     * points to the end of the coordinates array.
     * This will change the original feature, instead of drawing a copy.
     *
     * The function will dispatch a `drawstart` event.
     *
     * @param {!Feature<LineString>} feature Feature to be extended.
     * @api
     */
    Draw.prototype.extend = function (feature) {
        var geometry = feature.getGeometry();
        var lineString = geometry;
        this.sketchFeature_ = feature;
        this.sketchCoords_ = lineString.getCoordinates();
        var last = this.sketchCoords_[this.sketchCoords_.length - 1];
        this.finishCoordinate_ = last.slice();
        this.sketchCoords_.push(last.slice());
        this.sketchPoint_ = new _Feature_js__WEBPACK_IMPORTED_MODULE_16__.default(new _geom_Point_js__WEBPACK_IMPORTED_MODULE_5__.default(last));
        this.updateSketchFeatures_();
        this.dispatchEvent(new DrawEvent(DrawEventType.DRAWSTART, this.sketchFeature_));
    };
    /**
     * Redraw the sketch features.
     * @private
     */
    Draw.prototype.updateSketchFeatures_ = function () {
        var sketchFeatures = [];
        if (this.sketchFeature_) {
            sketchFeatures.push(this.sketchFeature_);
        }
        if (this.sketchLine_) {
            sketchFeatures.push(this.sketchLine_);
        }
        if (this.sketchPoint_) {
            sketchFeatures.push(this.sketchPoint_);
        }
        var overlaySource = this.overlay_.getSource();
        overlaySource.clear(true);
        overlaySource.addFeatures(sketchFeatures);
    };
    /**
     * @private
     */
    Draw.prototype.updateState_ = function () {
        var map = this.getMap();
        var active = this.getActive();
        if (!map || !active) {
            this.abortDrawing();
        }
        this.overlay_.setMap(active ? map : null);
    };
    return Draw;
}(_Pointer_js__WEBPACK_IMPORTED_MODULE_21__.default));
/**
 * @return {import("../style/Style.js").StyleFunction} Styles.
 */
function getDefaultStyleFunction() {
    var styles = (0,_style_Style_js__WEBPACK_IMPORTED_MODULE_22__.createEditingStyle)();
    return function (feature, resolution) {
        return styles[feature.getGeometry().getType()];
    };
}
/**
 * Create a `geometryFunction` for `type: 'Circle'` that will create a regular
 * polygon with a user specified number of sides and start angle instead of a
 * `import("../geom/Circle.js").Circle` geometry.
 * @param {number=} opt_sides Number of sides of the regular polygon.
 *     Default is 32.
 * @param {number=} opt_angle Angle of the first point in counter-clockwise
 *     radians. 0 means East.
 *     Default is the angle defined by the heading from the center of the
 *     regular polygon to the current pointer position.
 * @return {GeometryFunction} Function that draws a polygon.
 * @api
 */
function createRegularPolygon(opt_sides, opt_angle) {
    return function (coordinates, opt_geometry, projection) {
        var center = (0,_proj_js__WEBPACK_IMPORTED_MODULE_0__.fromUserCoordinate)(
        /** @type {LineCoordType} */ (coordinates)[0], projection);
        var end = (0,_proj_js__WEBPACK_IMPORTED_MODULE_0__.fromUserCoordinate)(
        /** @type {LineCoordType} */ (coordinates)[coordinates.length - 1], projection);
        var radius = Math.sqrt((0,_coordinate_js__WEBPACK_IMPORTED_MODULE_4__.squaredDistance)(center, end));
        var geometry = opt_geometry
            ? /** @type {Polygon} */ (opt_geometry)
            : (0,_geom_Polygon_js__WEBPACK_IMPORTED_MODULE_7__.fromCircle)(new _geom_Circle_js__WEBPACK_IMPORTED_MODULE_3__.default(center), opt_sides);
        var angle = opt_angle;
        if (!opt_angle && opt_angle !== 0) {
            var x = end[0] - center[0];
            var y = end[1] - center[1];
            angle = Math.atan2(y, x);
        }
        (0,_geom_Polygon_js__WEBPACK_IMPORTED_MODULE_7__.makeRegular)(geometry, center, radius, angle);
        var userProjection = (0,_proj_js__WEBPACK_IMPORTED_MODULE_0__.getUserProjection)();
        if (userProjection) {
            geometry.transform(projection, userProjection);
        }
        return geometry;
    };
}
/**
 * Create a `geometryFunction` that will create a box-shaped polygon (aligned
 * with the coordinate system axes).  Use this with the draw interaction and
 * `type: 'Circle'` to return a box instead of a circle geometry.
 * @return {GeometryFunction} Function that draws a box-shaped polygon.
 * @api
 */
function createBox() {
    return function (coordinates, opt_geometry, projection) {
        var extent = (0,_extent_js__WEBPACK_IMPORTED_MODULE_23__.boundingExtent)(
        /** @type {LineCoordType} */ ([
            coordinates[0],
            coordinates[coordinates.length - 1],
        ]).map(function (coordinate) {
            return (0,_proj_js__WEBPACK_IMPORTED_MODULE_0__.fromUserCoordinate)(coordinate, projection);
        }));
        var boxCoordinates = [
            [
                (0,_extent_js__WEBPACK_IMPORTED_MODULE_23__.getBottomLeft)(extent),
                (0,_extent_js__WEBPACK_IMPORTED_MODULE_23__.getBottomRight)(extent),
                (0,_extent_js__WEBPACK_IMPORTED_MODULE_23__.getTopRight)(extent),
                (0,_extent_js__WEBPACK_IMPORTED_MODULE_23__.getTopLeft)(extent),
                (0,_extent_js__WEBPACK_IMPORTED_MODULE_23__.getBottomLeft)(extent),
            ],
        ];
        var geometry = opt_geometry;
        if (geometry) {
            geometry.setCoordinates(boxCoordinates);
        }
        else {
            geometry = new _geom_Polygon_js__WEBPACK_IMPORTED_MODULE_7__.default(boxCoordinates);
        }
        var userProjection = (0,_proj_js__WEBPACK_IMPORTED_MODULE_0__.getUserProjection)();
        if (userProjection) {
            geometry.transform(projection, userProjection);
        }
        return geometry;
    };
}
/**
 * Get the drawing mode.  The mode for mult-part geometries is the same as for
 * their single-part cousins.
 * @param {import("../geom/GeometryType.js").default} type Geometry type.
 * @return {Mode} Drawing mode.
 */
function getMode(type) {
    var mode;
    if (type === _geom_GeometryType_js__WEBPACK_IMPORTED_MODULE_17__.default.POINT || type === _geom_GeometryType_js__WEBPACK_IMPORTED_MODULE_17__.default.MULTI_POINT) {
        mode = Mode.POINT;
    }
    else if (type === _geom_GeometryType_js__WEBPACK_IMPORTED_MODULE_17__.default.LINE_STRING ||
        type === _geom_GeometryType_js__WEBPACK_IMPORTED_MODULE_17__.default.MULTI_LINE_STRING) {
        mode = Mode.LINE_STRING;
    }
    else if (type === _geom_GeometryType_js__WEBPACK_IMPORTED_MODULE_17__.default.POLYGON ||
        type === _geom_GeometryType_js__WEBPACK_IMPORTED_MODULE_17__.default.MULTI_POLYGON) {
        mode = Mode.POLYGON;
    }
    else if (type === _geom_GeometryType_js__WEBPACK_IMPORTED_MODULE_17__.default.CIRCLE) {
        mode = Mode.CIRCLE;
    }
    return /** @type {!Mode} */ (mode);
}
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Draw);
//# sourceMappingURL=Draw.js.map

/***/ }),

/***/ "./node_modules/ol/interaction/Extent.js":
/*!***********************************************!*\
  !*** ./node_modules/ol/interaction/Extent.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ExtentEvent": () => (/* binding */ ExtentEvent),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _events_Event_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../events/Event.js */ "./node_modules/ol/events/Event.js");
/* harmony import */ var _Feature_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../Feature.js */ "./node_modules/ol/Feature.js");
/* harmony import */ var _geom_GeometryType_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../geom/GeometryType.js */ "./node_modules/ol/geom/GeometryType.js");
/* harmony import */ var _MapBrowserEventType_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../MapBrowserEventType.js */ "./node_modules/ol/MapBrowserEventType.js");
/* harmony import */ var _geom_Point_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../geom/Point.js */ "./node_modules/ol/geom/Point.js");
/* harmony import */ var _Pointer_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./Pointer.js */ "./node_modules/ol/interaction/Pointer.js");
/* harmony import */ var _layer_Vector_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../layer/Vector.js */ "./node_modules/ol/layer/Vector.js");
/* harmony import */ var _source_Vector_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../source/Vector.js */ "./node_modules/ol/source/Vector.js");
/* harmony import */ var _events_condition_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../events/condition.js */ "./node_modules/ol/events/condition.js");
/* harmony import */ var _extent_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../extent.js */ "./node_modules/ol/extent.js");
/* harmony import */ var _coordinate_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../coordinate.js */ "./node_modules/ol/coordinate.js");
/* harmony import */ var _style_Style_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../style/Style.js */ "./node_modules/ol/style/Style.js");
/* harmony import */ var _geom_Polygon_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../geom/Polygon.js */ "./node_modules/ol/geom/Polygon.js");
/* harmony import */ var _proj_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../proj.js */ "./node_modules/ol/proj.js");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
/**
 * @module ol/interaction/Extent
 */














/**
 * @typedef {Object} Options
 * @property {import("../events/condition.js").Condition} [condition] A function that
 * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a
 * boolean to indicate whether that event should be handled.
 * Default is {@link module:ol/events/condition~always}.
 * @property {import("../extent.js").Extent} [extent] Initial extent. Defaults to no
 * initial extent.
 * @property {import("../style/Style.js").StyleLike} [boxStyle]
 * Style for the drawn extent box. Defaults to
 * {@link module:ol/style/Style~createEditing()['Polygon']}
 * @property {number} [pixelTolerance=10] Pixel tolerance for considering the
 * pointer close enough to a segment or vertex for editing.
 * @property {import("../style/Style.js").StyleLike} [pointerStyle]
 * Style for the cursor used to draw the extent. Defaults to
 * {@link module:ol/style/Style~createEditing()['Point']}
 * @property {boolean} [wrapX=false] Wrap the drawn extent across multiple maps
 * in the X direction? Only affects visuals, not functionality.
 */
/**
 * @enum {string}
 */
var ExtentEventType = {
    /**
     * Triggered after the extent is changed
     * @event ExtentEvent#extentchanged
     * @api
     */
    EXTENTCHANGED: 'extentchanged',
};
/**
 * @classdesc
 * Events emitted by {@link module:ol/interaction/Extent~Extent} instances are
 * instances of this type.
 */
var ExtentEvent = /** @class */ (function (_super) {
    __extends(ExtentEvent, _super);
    /**
     * @param {import("../extent.js").Extent} extent the new extent
     */
    function ExtentEvent(extent) {
        var _this = _super.call(this, ExtentEventType.EXTENTCHANGED) || this;
        /**
         * The current extent.
         * @type {import("../extent.js").Extent}
         * @api
         */
        _this.extent = extent;
        return _this;
    }
    return ExtentEvent;
}(_events_Event_js__WEBPACK_IMPORTED_MODULE_1__.default));

/**
 * @classdesc
 * Allows the user to draw a vector box by clicking and dragging on the map.
 * Once drawn, the vector box can be modified by dragging its vertices or edges.
 * This interaction is only supported for mouse devices.
 *
 * @fires ExtentEvent
 * @api
 */
var Extent = /** @class */ (function (_super) {
    __extends(Extent, _super);
    /**
     * @param {Options=} opt_options Options.
     */
    function Extent(opt_options) {
        var _this = this;
        var options = opt_options || {};
        _this = _super.call(this, /** @type {import("./Pointer.js").Options} */ (options)) || this;
        /**
         * Condition
         * @type {import("../events/condition.js").Condition}
         * @private
         */
        _this.condition_ = options.condition ? options.condition : _events_condition_js__WEBPACK_IMPORTED_MODULE_2__.always;
        /**
         * Extent of the drawn box
         * @type {import("../extent.js").Extent}
         * @private
         */
        _this.extent_ = null;
        /**
         * Handler for pointer move events
         * @type {function (import("../coordinate.js").Coordinate): import("../extent.js").Extent|null}
         * @private
         */
        _this.pointerHandler_ = null;
        /**
         * Pixel threshold to snap to extent
         * @type {number}
         * @private
         */
        _this.pixelTolerance_ =
            options.pixelTolerance !== undefined ? options.pixelTolerance : 10;
        /**
         * Is the pointer snapped to an extent vertex
         * @type {boolean}
         * @private
         */
        _this.snappedToVertex_ = false;
        /**
         * Feature for displaying the visible extent
         * @type {Feature}
         * @private
         */
        _this.extentFeature_ = null;
        /**
         * Feature for displaying the visible pointer
         * @type {Feature<Point>}
         * @private
         */
        _this.vertexFeature_ = null;
        if (!opt_options) {
            opt_options = {};
        }
        /**
         * Layer for the extentFeature
         * @type {VectorLayer}
         * @private
         */
        _this.extentOverlay_ = new _layer_Vector_js__WEBPACK_IMPORTED_MODULE_3__.default({
            source: new _source_Vector_js__WEBPACK_IMPORTED_MODULE_4__.default({
                useSpatialIndex: false,
                wrapX: !!opt_options.wrapX,
            }),
            style: opt_options.boxStyle
                ? opt_options.boxStyle
                : getDefaultExtentStyleFunction(),
            updateWhileAnimating: true,
            updateWhileInteracting: true,
        });
        /**
         * Layer for the vertexFeature
         * @type {VectorLayer}
         * @private
         */
        _this.vertexOverlay_ = new _layer_Vector_js__WEBPACK_IMPORTED_MODULE_3__.default({
            source: new _source_Vector_js__WEBPACK_IMPORTED_MODULE_4__.default({
                useSpatialIndex: false,
                wrapX: !!opt_options.wrapX,
            }),
            style: opt_options.pointerStyle
                ? opt_options.pointerStyle
                : getDefaultPointerStyleFunction(),
            updateWhileAnimating: true,
            updateWhileInteracting: true,
        });
        if (opt_options.extent) {
            _this.setExtent(opt_options.extent);
        }
        return _this;
    }
    /**
     * @param {import("../pixel.js").Pixel} pixel cursor location
     * @param {import("../PluggableMap.js").default} map map
     * @returns {import("../coordinate.js").Coordinate|null} snapped vertex on extent
     * @private
     */
    Extent.prototype.snapToVertex_ = function (pixel, map) {
        var pixelCoordinate = map.getCoordinateFromPixelInternal(pixel);
        var sortByDistance = function (a, b) {
            return ((0,_coordinate_js__WEBPACK_IMPORTED_MODULE_5__.squaredDistanceToSegment)(pixelCoordinate, a) -
                (0,_coordinate_js__WEBPACK_IMPORTED_MODULE_5__.squaredDistanceToSegment)(pixelCoordinate, b));
        };
        var extent = this.getExtentInternal();
        if (extent) {
            //convert extents to line segments and find the segment closest to pixelCoordinate
            var segments = getSegments(extent);
            segments.sort(sortByDistance);
            var closestSegment = segments[0];
            var vertex = (0,_coordinate_js__WEBPACK_IMPORTED_MODULE_5__.closestOnSegment)(pixelCoordinate, closestSegment);
            var vertexPixel = map.getPixelFromCoordinateInternal(vertex);
            //if the distance is within tolerance, snap to the segment
            if ((0,_coordinate_js__WEBPACK_IMPORTED_MODULE_5__.distance)(pixel, vertexPixel) <= this.pixelTolerance_) {
                //test if we should further snap to a vertex
                var pixel1 = map.getPixelFromCoordinateInternal(closestSegment[0]);
                var pixel2 = map.getPixelFromCoordinateInternal(closestSegment[1]);
                var squaredDist1 = (0,_coordinate_js__WEBPACK_IMPORTED_MODULE_5__.squaredDistance)(vertexPixel, pixel1);
                var squaredDist2 = (0,_coordinate_js__WEBPACK_IMPORTED_MODULE_5__.squaredDistance)(vertexPixel, pixel2);
                var dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));
                this.snappedToVertex_ = dist <= this.pixelTolerance_;
                if (this.snappedToVertex_) {
                    vertex =
                        squaredDist1 > squaredDist2 ? closestSegment[1] : closestSegment[0];
                }
                return vertex;
            }
        }
        return null;
    };
    /**
     * @param {import("../MapBrowserEvent.js").default} mapBrowserEvent pointer move event
     * @private
     */
    Extent.prototype.handlePointerMove_ = function (mapBrowserEvent) {
        var pixel = mapBrowserEvent.pixel;
        var map = mapBrowserEvent.map;
        var vertex = this.snapToVertex_(pixel, map);
        if (!vertex) {
            vertex = map.getCoordinateFromPixelInternal(pixel);
        }
        this.createOrUpdatePointerFeature_(vertex);
    };
    /**
     * @param {import("../extent.js").Extent} extent extent
     * @returns {Feature} extent as featrue
     * @private
     */
    Extent.prototype.createOrUpdateExtentFeature_ = function (extent) {
        var extentFeature = this.extentFeature_;
        if (!extentFeature) {
            if (!extent) {
                extentFeature = new _Feature_js__WEBPACK_IMPORTED_MODULE_6__.default({});
            }
            else {
                extentFeature = new _Feature_js__WEBPACK_IMPORTED_MODULE_6__.default((0,_geom_Polygon_js__WEBPACK_IMPORTED_MODULE_7__.fromExtent)(extent));
            }
            this.extentFeature_ = extentFeature;
            this.extentOverlay_.getSource().addFeature(extentFeature);
        }
        else {
            if (!extent) {
                extentFeature.setGeometry(undefined);
            }
            else {
                extentFeature.setGeometry((0,_geom_Polygon_js__WEBPACK_IMPORTED_MODULE_7__.fromExtent)(extent));
            }
        }
        return extentFeature;
    };
    /**
     * @param {import("../coordinate.js").Coordinate} vertex location of feature
     * @returns {Feature} vertex as feature
     * @private
     */
    Extent.prototype.createOrUpdatePointerFeature_ = function (vertex) {
        var vertexFeature = this.vertexFeature_;
        if (!vertexFeature) {
            vertexFeature = new _Feature_js__WEBPACK_IMPORTED_MODULE_6__.default(new _geom_Point_js__WEBPACK_IMPORTED_MODULE_8__.default(vertex));
            this.vertexFeature_ = vertexFeature;
            this.vertexOverlay_.getSource().addFeature(vertexFeature);
        }
        else {
            var geometry = vertexFeature.getGeometry();
            geometry.setCoordinates(vertex);
        }
        return vertexFeature;
    };
    /**
     * @param {import("../MapBrowserEvent.js").default} mapBrowserEvent Map browser event.
     * @return {boolean} `false` to stop event propagation.
     */
    Extent.prototype.handleEvent = function (mapBrowserEvent) {
        if (!mapBrowserEvent.originalEvent || !this.condition_(mapBrowserEvent)) {
            return true;
        }
        //display pointer (if not dragging)
        if (mapBrowserEvent.type == _MapBrowserEventType_js__WEBPACK_IMPORTED_MODULE_9__.default.POINTERMOVE &&
            !this.handlingDownUpSequence) {
            this.handlePointerMove_(mapBrowserEvent);
        }
        //call pointer to determine up/down/drag
        _super.prototype.handleEvent.call(this, mapBrowserEvent);
        //return false to stop propagation
        return false;
    };
    /**
     * Handle pointer down events.
     * @param {import("../MapBrowserEvent.js").default} mapBrowserEvent Event.
     * @return {boolean} If the event was consumed.
     */
    Extent.prototype.handleDownEvent = function (mapBrowserEvent) {
        var pixel = mapBrowserEvent.pixel;
        var map = mapBrowserEvent.map;
        var extent = this.getExtentInternal();
        var vertex = this.snapToVertex_(pixel, map);
        //find the extent corner opposite the passed corner
        var getOpposingPoint = function (point) {
            var x_ = null;
            var y_ = null;
            if (point[0] == extent[0]) {
                x_ = extent[2];
            }
            else if (point[0] == extent[2]) {
                x_ = extent[0];
            }
            if (point[1] == extent[1]) {
                y_ = extent[3];
            }
            else if (point[1] == extent[3]) {
                y_ = extent[1];
            }
            if (x_ !== null && y_ !== null) {
                return [x_, y_];
            }
            return null;
        };
        if (vertex && extent) {
            var x = vertex[0] == extent[0] || vertex[0] == extent[2] ? vertex[0] : null;
            var y = vertex[1] == extent[1] || vertex[1] == extent[3] ? vertex[1] : null;
            //snap to point
            if (x !== null && y !== null) {
                this.pointerHandler_ = getPointHandler(getOpposingPoint(vertex));
                //snap to edge
            }
            else if (x !== null) {
                this.pointerHandler_ = getEdgeHandler(getOpposingPoint([x, extent[1]]), getOpposingPoint([x, extent[3]]));
            }
            else if (y !== null) {
                this.pointerHandler_ = getEdgeHandler(getOpposingPoint([extent[0], y]), getOpposingPoint([extent[2], y]));
            }
            //no snap - new bbox
        }
        else {
            vertex = map.getCoordinateFromPixelInternal(pixel);
            this.setExtent([vertex[0], vertex[1], vertex[0], vertex[1]]);
            this.pointerHandler_ = getPointHandler(vertex);
        }
        return true; //event handled; start downup sequence
    };
    /**
     * Handle pointer drag events.
     * @param {import("../MapBrowserEvent.js").default} mapBrowserEvent Event.
     */
    Extent.prototype.handleDragEvent = function (mapBrowserEvent) {
        if (this.pointerHandler_) {
            var pixelCoordinate = mapBrowserEvent.coordinate;
            this.setExtent(this.pointerHandler_(pixelCoordinate));
            this.createOrUpdatePointerFeature_(pixelCoordinate);
        }
    };
    /**
     * Handle pointer up events.
     * @param {import("../MapBrowserEvent.js").default} mapBrowserEvent Event.
     * @return {boolean} If the event was consumed.
     */
    Extent.prototype.handleUpEvent = function (mapBrowserEvent) {
        this.pointerHandler_ = null;
        //If bbox is zero area, set to null;
        var extent = this.getExtentInternal();
        if (!extent || (0,_extent_js__WEBPACK_IMPORTED_MODULE_10__.getArea)(extent) === 0) {
            this.setExtent(null);
        }
        return false; //Stop handling downup sequence
    };
    /**
     * Remove the interaction from its current map and attach it to the new map.
     * Subclasses may set up event handlers to get notified about changes to
     * the map here.
     * @param {import("../PluggableMap.js").default} map Map.
     */
    Extent.prototype.setMap = function (map) {
        this.extentOverlay_.setMap(map);
        this.vertexOverlay_.setMap(map);
        _super.prototype.setMap.call(this, map);
    };
    /**
     * Returns the current drawn extent in the view projection (or user projection if set)
     *
     * @return {import("../extent.js").Extent} Drawn extent in the view projection.
     * @api
     */
    Extent.prototype.getExtent = function () {
        return (0,_proj_js__WEBPACK_IMPORTED_MODULE_0__.toUserExtent)(this.getExtentInternal(), this.getMap().getView().getProjection());
    };
    /**
     * Returns the current drawn extent in the view projection
     *
     * @return {import("../extent.js").Extent} Drawn extent in the view projection.
     * @api
     */
    Extent.prototype.getExtentInternal = function () {
        return this.extent_;
    };
    /**
     * Manually sets the drawn extent, using the view projection.
     *
     * @param {import("../extent.js").Extent} extent Extent
     * @api
     */
    Extent.prototype.setExtent = function (extent) {
        //Null extent means no bbox
        this.extent_ = extent ? extent : null;
        this.createOrUpdateExtentFeature_(extent);
        this.dispatchEvent(new ExtentEvent(this.extent_));
    };
    return Extent;
}(_Pointer_js__WEBPACK_IMPORTED_MODULE_11__.default));
/**
 * Returns the default style for the drawn bbox
 *
 * @return {import("../style/Style.js").StyleFunction} Default Extent style
 */
function getDefaultExtentStyleFunction() {
    var style = (0,_style_Style_js__WEBPACK_IMPORTED_MODULE_12__.createEditingStyle)();
    return function (feature, resolution) {
        return style[_geom_GeometryType_js__WEBPACK_IMPORTED_MODULE_13__.default.POLYGON];
    };
}
/**
 * Returns the default style for the pointer
 *
 * @return {import("../style/Style.js").StyleFunction} Default pointer style
 */
function getDefaultPointerStyleFunction() {
    var style = (0,_style_Style_js__WEBPACK_IMPORTED_MODULE_12__.createEditingStyle)();
    return function (feature, resolution) {
        return style[_geom_GeometryType_js__WEBPACK_IMPORTED_MODULE_13__.default.POINT];
    };
}
/**
 * @param {import("../coordinate.js").Coordinate} fixedPoint corner that will be unchanged in the new extent
 * @returns {function (import("../coordinate.js").Coordinate): import("../extent.js").Extent} event handler
 */
function getPointHandler(fixedPoint) {
    return function (point) {
        return (0,_extent_js__WEBPACK_IMPORTED_MODULE_10__.boundingExtent)([fixedPoint, point]);
    };
}
/**
 * @param {import("../coordinate.js").Coordinate} fixedP1 first corner that will be unchanged in the new extent
 * @param {import("../coordinate.js").Coordinate} fixedP2 second corner that will be unchanged in the new extent
 * @returns {function (import("../coordinate.js").Coordinate): import("../extent.js").Extent|null} event handler
 */
function getEdgeHandler(fixedP1, fixedP2) {
    if (fixedP1[0] == fixedP2[0]) {
        return function (point) {
            return (0,_extent_js__WEBPACK_IMPORTED_MODULE_10__.boundingExtent)([fixedP1, [point[0], fixedP2[1]]]);
        };
    }
    else if (fixedP1[1] == fixedP2[1]) {
        return function (point) {
            return (0,_extent_js__WEBPACK_IMPORTED_MODULE_10__.boundingExtent)([fixedP1, [fixedP2[0], point[1]]]);
        };
    }
    else {
        return null;
    }
}
/**
 * @param {import("../extent.js").Extent} extent extent
 * @returns {Array<Array<import("../coordinate.js").Coordinate>>} extent line segments
 */
function getSegments(extent) {
    return [
        [
            [extent[0], extent[1]],
            [extent[0], extent[3]],
        ],
        [
            [extent[0], extent[3]],
            [extent[2], extent[3]],
        ],
        [
            [extent[2], extent[3]],
            [extent[2], extent[1]],
        ],
        [
            [extent[2], extent[1]],
            [extent[0], extent[1]],
        ],
    ];
}
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Extent);
//# sourceMappingURL=Extent.js.map

/***/ }),

/***/ "./node_modules/ol/interaction/Interaction.js":
/*!****************************************************!*\
  !*** ./node_modules/ol/interaction/Interaction.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "pan": () => (/* binding */ pan),
/* harmony export */   "zoomByDelta": () => (/* binding */ zoomByDelta),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _Object_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Object.js */ "./node_modules/ol/Object.js");
/* harmony import */ var _Property_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Property.js */ "./node_modules/ol/interaction/Property.js");
/* harmony import */ var _easing_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../easing.js */ "./node_modules/ol/easing.js");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
/**
 * @module ol/interaction/Interaction
 */



/**
 * Object literal with config options for interactions.
 * @typedef {Object} InteractionOptions
 * @property {function(import("../MapBrowserEvent.js").default):boolean} handleEvent
 * Method called by the map to notify the interaction that a browser event was
 * dispatched to the map. If the function returns a falsy value, propagation of
 * the event to other interactions in the map's interactions chain will be
 * prevented (this includes functions with no explicit return). The interactions
 * are traversed in reverse order of the interactions collection of the map.
 */
/**
 * @classdesc
 * Abstract base class; normally only used for creating subclasses and not
 * instantiated in apps.
 * User actions that change the state of the map. Some are similar to controls,
 * but are not associated with a DOM element.
 * For example, {@link module:ol/interaction/KeyboardZoom~KeyboardZoom} is
 * functionally the same as {@link module:ol/control/Zoom~Zoom}, but triggered
 * by a keyboard event not a button element event.
 * Although interactions do not have a DOM element, some of them do render
 * vectors and so are visible on the screen.
 * @api
 */
var Interaction = /** @class */ (function (_super) {
    __extends(Interaction, _super);
    /**
     * @param {InteractionOptions=} opt_options Options.
     */
    function Interaction(opt_options) {
        var _this = _super.call(this) || this;
        if (opt_options && opt_options.handleEvent) {
            _this.handleEvent = opt_options.handleEvent;
        }
        /**
         * @private
         * @type {import("../PluggableMap.js").default}
         */
        _this.map_ = null;
        _this.setActive(true);
        return _this;
    }
    /**
     * Return whether the interaction is currently active.
     * @return {boolean} `true` if the interaction is active, `false` otherwise.
     * @observable
     * @api
     */
    Interaction.prototype.getActive = function () {
        return /** @type {boolean} */ (this.get(_Property_js__WEBPACK_IMPORTED_MODULE_0__.default.ACTIVE));
    };
    /**
     * Get the map associated with this interaction.
     * @return {import("../PluggableMap.js").default} Map.
     * @api
     */
    Interaction.prototype.getMap = function () {
        return this.map_;
    };
    /**
     * Handles the {@link module:ol/MapBrowserEvent map browser event}.
     * @param {import("../MapBrowserEvent.js").default} mapBrowserEvent Map browser event.
     * @return {boolean} `false` to stop event propagation.
     * @api
     */
    Interaction.prototype.handleEvent = function (mapBrowserEvent) {
        return true;
    };
    /**
     * Activate or deactivate the interaction.
     * @param {boolean} active Active.
     * @observable
     * @api
     */
    Interaction.prototype.setActive = function (active) {
        this.set(_Property_js__WEBPACK_IMPORTED_MODULE_0__.default.ACTIVE, active);
    };
    /**
     * Remove the interaction from its current map and attach it to the new map.
     * Subclasses may set up event handlers to get notified about changes to
     * the map here.
     * @param {import("../PluggableMap.js").default} map Map.
     */
    Interaction.prototype.setMap = function (map) {
        this.map_ = map;
    };
    return Interaction;
}(_Object_js__WEBPACK_IMPORTED_MODULE_1__.default));
/**
 * @param {import("../View.js").default} view View.
 * @param {import("../coordinate.js").Coordinate} delta Delta.
 * @param {number=} opt_duration Duration.
 */
function pan(view, delta, opt_duration) {
    var currentCenter = view.getCenterInternal();
    if (currentCenter) {
        var center = [currentCenter[0] + delta[0], currentCenter[1] + delta[1]];
        view.animateInternal({
            duration: opt_duration !== undefined ? opt_duration : 250,
            easing: _easing_js__WEBPACK_IMPORTED_MODULE_2__.linear,
            center: view.getConstrainedCenter(center),
        });
    }
}
/**
 * @param {import("../View.js").default} view View.
 * @param {number} delta Delta from previous zoom level.
 * @param {import("../coordinate.js").Coordinate=} opt_anchor Anchor coordinate in the user projection.
 * @param {number=} opt_duration Duration.
 */
function zoomByDelta(view, delta, opt_anchor, opt_duration) {
    var currentZoom = view.getZoom();
    if (currentZoom === undefined) {
        return;
    }
    var newZoom = view.getConstrainedZoom(currentZoom + delta);
    var newResolution = view.getResolutionForZoom(newZoom);
    if (view.getAnimating()) {
        view.cancelAnimations();
    }
    view.animate({
        resolution: newResolution,
        anchor: opt_anchor,
        duration: opt_duration !== undefined ? opt_duration : 250,
        easing: _easing_js__WEBPACK_IMPORTED_MODULE_2__.easeOut,
    });
}
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Interaction);
//# sourceMappingURL=Interaction.js.map

/***/ }),

/***/ "./node_modules/ol/interaction/KeyboardPan.js":
/*!****************************************************!*\
  !*** ./node_modules/ol/interaction/KeyboardPan.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _events_EventType_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../events/EventType.js */ "./node_modules/ol/events/EventType.js");
/* harmony import */ var _Interaction_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./Interaction.js */ "./node_modules/ol/interaction/Interaction.js");
/* harmony import */ var _events_KeyCode_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../events/KeyCode.js */ "./node_modules/ol/events/KeyCode.js");
/* harmony import */ var _events_condition_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../events/condition.js */ "./node_modules/ol/events/condition.js");
/* harmony import */ var _coordinate_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../coordinate.js */ "./node_modules/ol/coordinate.js");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
/**
 * @module ol/interaction/KeyboardPan
 */





/**
 * @typedef {Object} Options
 * @property {import("../events/condition.js").Condition} [condition] A function that
 * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a
 * boolean to indicate whether that event should be handled. Default is
 * {@link module:ol/events/condition~noModifierKeys} and
 * {@link module:ol/events/condition~targetNotEditable}.
 * @property {number} [duration=100] Animation duration in milliseconds.
 * @property {number} [pixelDelta=128] The amount of pixels to pan on each key
 * press.
 */
/**
 * @classdesc
 * Allows the user to pan the map using keyboard arrows.
 * Note that, although this interaction is by default included in maps,
 * the keys can only be used when browser focus is on the element to which
 * the keyboard events are attached. By default, this is the map div,
 * though you can change this with the `keyboardEventTarget` in
 * {@link module:ol/Map~Map}. `document` never loses focus but, for any other
 * element, focus will have to be on, and returned to, this element if the keys
 * are to function.
 * See also {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}.
 * @api
 */
var KeyboardPan = /** @class */ (function (_super) {
    __extends(KeyboardPan, _super);
    /**
     * @param {Options=} opt_options Options.
     */
    function KeyboardPan(opt_options) {
        var _this = _super.call(this) || this;
        var options = opt_options || {};
        /**
         * @private
         * @param {import("../MapBrowserEvent.js").default} mapBrowserEvent Browser event.
         * @return {boolean} Combined condition result.
         */
        _this.defaultCondition_ = function (mapBrowserEvent) {
            return ((0,_events_condition_js__WEBPACK_IMPORTED_MODULE_0__.noModifierKeys)(mapBrowserEvent) && (0,_events_condition_js__WEBPACK_IMPORTED_MODULE_0__.targetNotEditable)(mapBrowserEvent));
        };
        /**
         * @private
         * @type {import("../events/condition.js").Condition}
         */
        _this.condition_ =
            options.condition !== undefined
                ? options.condition
                : _this.defaultCondition_;
        /**
         * @private
         * @type {number}
         */
        _this.duration_ = options.duration !== undefined ? options.duration : 100;
        /**
         * @private
         * @type {number}
         */
        _this.pixelDelta_ =
            options.pixelDelta !== undefined ? options.pixelDelta : 128;
        return _this;
    }
    /**
     * Handles the {@link module:ol/MapBrowserEvent map browser event} if it was a
     * `KeyEvent`, and decides the direction to pan to (if an arrow key was
     * pressed).
     * @param {import("../MapBrowserEvent.js").default} mapBrowserEvent Map browser event.
     * @return {boolean} `false` to stop event propagation.
     * @this {KeyboardPan}
     */
    KeyboardPan.prototype.handleEvent = function (mapBrowserEvent) {
        var stopEvent = false;
        if (mapBrowserEvent.type == _events_EventType_js__WEBPACK_IMPORTED_MODULE_1__.default.KEYDOWN) {
            var keyEvent = /** @type {KeyboardEvent} */ (mapBrowserEvent.originalEvent);
            var keyCode = keyEvent.keyCode;
            if (this.condition_(mapBrowserEvent) &&
                (keyCode == _events_KeyCode_js__WEBPACK_IMPORTED_MODULE_2__.default.DOWN ||
                    keyCode == _events_KeyCode_js__WEBPACK_IMPORTED_MODULE_2__.default.LEFT ||
                    keyCode == _events_KeyCode_js__WEBPACK_IMPORTED_MODULE_2__.default.RIGHT ||
                    keyCode == _events_KeyCode_js__WEBPACK_IMPORTED_MODULE_2__.default.UP)) {
                var map = mapBrowserEvent.map;
                var view = map.getView();
                var mapUnitsDelta = view.getResolution() * this.pixelDelta_;
                var deltaX = 0, deltaY = 0;
                if (keyCode == _events_KeyCode_js__WEBPACK_IMPORTED_MODULE_2__.default.DOWN) {
                    deltaY = -mapUnitsDelta;
                }
                else if (keyCode == _events_KeyCode_js__WEBPACK_IMPORTED_MODULE_2__.default.LEFT) {
                    deltaX = -mapUnitsDelta;
                }
                else if (keyCode == _events_KeyCode_js__WEBPACK_IMPORTED_MODULE_2__.default.RIGHT) {
                    deltaX = mapUnitsDelta;
                }
                else {
                    deltaY = mapUnitsDelta;
                }
                var delta = [deltaX, deltaY];
                (0,_coordinate_js__WEBPACK_IMPORTED_MODULE_3__.rotate)(delta, view.getRotation());
                (0,_Interaction_js__WEBPACK_IMPORTED_MODULE_4__.pan)(view, delta, this.duration_);
                keyEvent.preventDefault();
                stopEvent = true;
            }
        }
        return !stopEvent;
    };
    return KeyboardPan;
}(_Interaction_js__WEBPACK_IMPORTED_MODULE_4__.default));
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (KeyboardPan);
//# sourceMappingURL=KeyboardPan.js.map

/***/ }),

/***/ "./node_modules/ol/interaction/KeyboardZoom.js":
/*!*****************************************************!*\
  !*** ./node_modules/ol/interaction/KeyboardZoom.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _events_EventType_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../events/EventType.js */ "./node_modules/ol/events/EventType.js");
/* harmony import */ var _Interaction_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Interaction.js */ "./node_modules/ol/interaction/Interaction.js");
/* harmony import */ var _events_condition_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../events/condition.js */ "./node_modules/ol/events/condition.js");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
/**
 * @module ol/interaction/KeyboardZoom
 */



/**
 * @typedef {Object} Options
 * @property {number} [duration=100] Animation duration in milliseconds.
 * @property {import("../events/condition.js").Condition} [condition] A function that
 * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a
 * boolean to indicate whether that event should be handled. Default is
 * {@link module:ol/events/condition~targetNotEditable}.
 * @property {number} [delta=1] The zoom level delta on each key press.
 */
/**
 * @classdesc
 * Allows the user to zoom the map using keyboard + and -.
 * Note that, although this interaction is by default included in maps,
 * the keys can only be used when browser focus is on the element to which
 * the keyboard events are attached. By default, this is the map div,
 * though you can change this with the `keyboardEventTarget` in
 * {@link module:ol/Map~Map}. `document` never loses focus but, for any other
 * element, focus will have to be on, and returned to, this element if the keys
 * are to function.
 * See also {@link module:ol/interaction/KeyboardPan~KeyboardPan}.
 * @api
 */
var KeyboardZoom = /** @class */ (function (_super) {
    __extends(KeyboardZoom, _super);
    /**
     * @param {Options=} opt_options Options.
     */
    function KeyboardZoom(opt_options) {
        var _this = _super.call(this) || this;
        var options = opt_options ? opt_options : {};
        /**
         * @private
         * @type {import("../events/condition.js").Condition}
         */
        _this.condition_ = options.condition ? options.condition : _events_condition_js__WEBPACK_IMPORTED_MODULE_0__.targetNotEditable;
        /**
         * @private
         * @type {number}
         */
        _this.delta_ = options.delta ? options.delta : 1;
        /**
         * @private
         * @type {number}
         */
        _this.duration_ = options.duration !== undefined ? options.duration : 100;
        return _this;
    }
    /**
     * Handles the {@link module:ol/MapBrowserEvent map browser event} if it was a
     * `KeyEvent`, and decides whether to zoom in or out (depending on whether the
     * key pressed was '+' or '-').
     * @param {import("../MapBrowserEvent.js").default} mapBrowserEvent Map browser event.
     * @return {boolean} `false` to stop event propagation.
     * @this {KeyboardZoom}
     */
    KeyboardZoom.prototype.handleEvent = function (mapBrowserEvent) {
        var stopEvent = false;
        if (mapBrowserEvent.type == _events_EventType_js__WEBPACK_IMPORTED_MODULE_1__.default.KEYDOWN ||
            mapBrowserEvent.type == _events_EventType_js__WEBPACK_IMPORTED_MODULE_1__.default.KEYPRESS) {
            var keyEvent = /** @type {KeyboardEvent} */ (mapBrowserEvent.originalEvent);
            var charCode = keyEvent.charCode;
            if (this.condition_(mapBrowserEvent) &&
                (charCode == '+'.charCodeAt(0) || charCode == '-'.charCodeAt(0))) {
                var map = mapBrowserEvent.map;
                var delta = charCode == '+'.charCodeAt(0) ? this.delta_ : -this.delta_;
                var view = map.getView();
                (0,_Interaction_js__WEBPACK_IMPORTED_MODULE_2__.zoomByDelta)(view, delta, undefined, this.duration_);
                keyEvent.preventDefault();
                stopEvent = true;
            }
        }
        return !stopEvent;
    };
    return KeyboardZoom;
}(_Interaction_js__WEBPACK_IMPORTED_MODULE_2__.default));
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (KeyboardZoom);
//# sourceMappingURL=KeyboardZoom.js.map

/***/ }),

/***/ "./node_modules/ol/interaction/Modify.js":
/*!***********************************************!*\
  !*** ./node_modules/ol/interaction/Modify.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ModifyEvent": () => (/* binding */ ModifyEvent),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _Collection_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../Collection.js */ "./node_modules/ol/Collection.js");
/* harmony import */ var _CollectionEventType_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../CollectionEventType.js */ "./node_modules/ol/CollectionEventType.js");
/* harmony import */ var _events_Event_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../events/Event.js */ "./node_modules/ol/events/Event.js");
/* harmony import */ var _events_EventType_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../events/EventType.js */ "./node_modules/ol/events/EventType.js");
/* harmony import */ var _Feature_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../Feature.js */ "./node_modules/ol/Feature.js");
/* harmony import */ var _geom_GeometryType_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../geom/GeometryType.js */ "./node_modules/ol/geom/GeometryType.js");
/* harmony import */ var _MapBrowserEventType_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../MapBrowserEventType.js */ "./node_modules/ol/MapBrowserEventType.js");
/* harmony import */ var _geom_Point_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../geom/Point.js */ "./node_modules/ol/geom/Point.js");
/* harmony import */ var _Pointer_js__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./Pointer.js */ "./node_modules/ol/interaction/Pointer.js");
/* harmony import */ var _structs_RBush_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../structs/RBush.js */ "./node_modules/ol/structs/RBush.js");
/* harmony import */ var _source_VectorEventType_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../source/VectorEventType.js */ "./node_modules/ol/source/VectorEventType.js");
/* harmony import */ var _layer_Vector_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../layer/Vector.js */ "./node_modules/ol/layer/Vector.js");
/* harmony import */ var _source_Vector_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../source/Vector.js */ "./node_modules/ol/source/Vector.js");
/* harmony import */ var _events_condition_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../events/condition.js */ "./node_modules/ol/events/condition.js");
/* harmony import */ var _extent_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../extent.js */ "./node_modules/ol/extent.js");
/* harmony import */ var _coordinate_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../coordinate.js */ "./node_modules/ol/coordinate.js");
/* harmony import */ var _style_Style_js__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ../style/Style.js */ "./node_modules/ol/style/Style.js");
/* harmony import */ var _array_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ../array.js */ "./node_modules/ol/array.js");
/* harmony import */ var _geom_Polygon_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../geom/Polygon.js */ "./node_modules/ol/geom/Polygon.js");
/* harmony import */ var _proj_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../proj.js */ "./node_modules/ol/proj.js");
/* harmony import */ var _util_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ../util.js */ "./node_modules/ol/util.js");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
/**
 * @module ol/interaction/Modify
 */





















/**
 * The segment index assigned to a circle's center when
 * breaking up a circle into ModifySegmentDataType segments.
 * @type {number}
 */
var CIRCLE_CENTER_INDEX = 0;
/**
 * The segment index assigned to a circle's circumference when
 * breaking up a circle into ModifySegmentDataType segments.
 * @type {number}
 */
var CIRCLE_CIRCUMFERENCE_INDEX = 1;
var tempExtent = [0, 0, 0, 0];
var tempSegment = [];
/**
 * @enum {string}
 */
var ModifyEventType = {
    /**
     * Triggered upon feature modification start
     * @event ModifyEvent#modifystart
     * @api
     */
    MODIFYSTART: 'modifystart',
    /**
     * Triggered upon feature modification end
     * @event ModifyEvent#modifyend
     * @api
     */
    MODIFYEND: 'modifyend',
};
/**
 * @typedef {Object} SegmentData
 * @property {Array<number>} [depth]
 * @property {Feature} feature
 * @property {import("../geom/SimpleGeometry.js").default} geometry
 * @property {number} [index]
 * @property {Array<import("../extent.js").Extent>} segment
 * @property {Array<SegmentData>} [featureSegments]
 */
/**
 * @typedef {Object} Options
 * @property {import("../events/condition.js").Condition} [condition] A function that
 * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a
 * boolean to indicate whether that event will be considered to add or move a
 * vertex to the sketch. Default is
 * {@link module:ol/events/condition~primaryAction}.
 * @property {import("../events/condition.js").Condition} [deleteCondition] A function
 * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a
 * boolean to indicate whether that event should be handled. By default,
 * {@link module:ol/events/condition~singleClick} with
 * {@link module:ol/events/condition~altKeyOnly} results in a vertex deletion.
 * @property {import("../events/condition.js").Condition} [insertVertexCondition] A
 * function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and
 * returns a boolean to indicate whether a new vertex should be added to the sketch
 * features. Default is {@link module:ol/events/condition~always}.
 * @property {number} [pixelTolerance=10] Pixel tolerance for considering the
 * pointer close enough to a segment or vertex for editing.
 * @property {import("../style/Style.js").StyleLike} [style]
 * Style used for the modification point or vertex. For linestrings and polygons, this will
 * be the affected vertex, for circles a point along the circle, and for points the actual
 * point. If not configured, the default edit style is used (see {@link module:ol/style}).
 * When using a style function, the point feature passed to the function will have a `features`
 * property - an array whose entries are the features that are being modified, and a `geometries`
 * property - an array whose entries are the geometries that are being modified. Both arrays are
 * in the same order. The `geometries` are only useful when modifying geometry collections, where
 * the geometry will be the particular geometry from the collection that is being modified.
 * @property {VectorSource} [source] The vector source with
 * features to modify.  If a vector source is not provided, a feature collection
 * must be provided with the `features` option.
 * @property {boolean|import("../layer/BaseVector").default} [hitDetection] When configured, point
 * features will be considered for modification based on their visual appearance, instead of being within
 * the `pixelTolerance` from the pointer location. When a {@link module:ol/layer/BaseVector} is
 * provided, only the rendered representation of the features on that layer will be considered.
 * @property {Collection<Feature>} [features]
 * The features the interaction works on.  If a feature collection is not
 * provided, a vector source must be provided with the `source` option.
 * @property {boolean} [wrapX=false] Wrap the world horizontally on the sketch
 * overlay.
 */
/**
 * @classdesc
 * Events emitted by {@link module:ol/interaction/Modify~Modify} instances are
 * instances of this type.
 */
var ModifyEvent = /** @class */ (function (_super) {
    __extends(ModifyEvent, _super);
    /**
     * @param {ModifyEventType} type Type.
     * @param {Collection<Feature>} features
     * The features modified.
     * @param {import("../MapBrowserEvent.js").default} MapBrowserEvent
     * Associated {@link module:ol/MapBrowserEvent}.
     */
    function ModifyEvent(type, features, MapBrowserEvent) {
        var _this = _super.call(this, type) || this;
        /**
         * The features being modified.
         * @type {Collection<Feature>}
         * @api
         */
        _this.features = features;
        /**
         * Associated {@link module:ol/MapBrowserEvent}.
         * @type {import("../MapBrowserEvent.js").default}
         * @api
         */
        _this.mapBrowserEvent = MapBrowserEvent;
        return _this;
    }
    return ModifyEvent;
}(_events_Event_js__WEBPACK_IMPORTED_MODULE_1__.default));

/**
 * @classdesc
 * Interaction for modifying feature geometries.  To modify features that have
 * been added to an existing source, construct the modify interaction with the
 * `source` option.  If you want to modify features in a collection (for example,
 * the collection used by a select interaction), construct the interaction with
 * the `features` option.  The interaction must be constructed with either a
 * `source` or `features` option.
 *
 * Cartesian distance from the pointer is used to determine the features that
 * will be modified. This means that geometries will only be considered for
 * modification when they are within the configured `pixelTolerane`. For point
 * geometries, the `hitDetection` option can be used to match their visual
 * appearance.
 *
 * By default, the interaction will allow deletion of vertices when the `alt`
 * key is pressed.  To configure the interaction with a different condition
 * for deletion, use the `deleteCondition` option.
 * @fires ModifyEvent
 * @api
 */
var Modify = /** @class */ (function (_super) {
    __extends(Modify, _super);
    /**
     * @param {Options} options Options.
     */
    function Modify(options) {
        var _this = _super.call(this, /** @type {import("./Pointer.js").Options} */ (options)) || this;
        /** @private */
        _this.boundHandleFeatureChange_ = _this.handleFeatureChange_.bind(_this);
        /**
         * @private
         * @type {import("../events/condition.js").Condition}
         */
        _this.condition_ = options.condition ? options.condition : _events_condition_js__WEBPACK_IMPORTED_MODULE_2__.primaryAction;
        /**
         * @private
         * @param {import("../MapBrowserEvent.js").default} mapBrowserEvent Browser event.
         * @return {boolean} Combined condition result.
         */
        _this.defaultDeleteCondition_ = function (mapBrowserEvent) {
            return (0,_events_condition_js__WEBPACK_IMPORTED_MODULE_2__.altKeyOnly)(mapBrowserEvent) && (0,_events_condition_js__WEBPACK_IMPORTED_MODULE_2__.singleClick)(mapBrowserEvent);
        };
        /**
         * @type {import("../events/condition.js").Condition}
         * @private
         */
        _this.deleteCondition_ = options.deleteCondition
            ? options.deleteCondition
            : _this.defaultDeleteCondition_;
        /**
         * @type {import("../events/condition.js").Condition}
         * @private
         */
        _this.insertVertexCondition_ = options.insertVertexCondition
            ? options.insertVertexCondition
            : _events_condition_js__WEBPACK_IMPORTED_MODULE_2__.always;
        /**
         * Editing vertex.
         * @type {Feature}
         * @private
         */
        _this.vertexFeature_ = null;
        /**
         * Segments intersecting {@link this.vertexFeature_} by segment uid.
         * @type {Object<string, boolean>}
         * @private
         */
        _this.vertexSegments_ = null;
        /**
         * @type {import("../pixel.js").Pixel}
         * @private
         */
        _this.lastPixel_ = [0, 0];
        /**
         * Tracks if the next `singleclick` event should be ignored to prevent
         * accidental deletion right after vertex creation.
         * @type {boolean}
         * @private
         */
        _this.ignoreNextSingleClick_ = false;
        /**
         * @type {Collection<Feature>}
         * @private
         */
        _this.featuresBeingModified_ = null;
        /**
         * Segment RTree for each layer
         * @type {RBush<SegmentData>}
         * @private
         */
        _this.rBush_ = new _structs_RBush_js__WEBPACK_IMPORTED_MODULE_3__.default();
        /**
         * @type {number}
         * @private
         */
        _this.pixelTolerance_ =
            options.pixelTolerance !== undefined ? options.pixelTolerance : 10;
        /**
         * @type {boolean}
         * @private
         */
        _this.snappedToVertex_ = false;
        /**
         * Indicate whether the interaction is currently changing a feature's
         * coordinates.
         * @type {boolean}
         * @private
         */
        _this.changingFeature_ = false;
        /**
         * @type {Array}
         * @private
         */
        _this.dragSegments_ = [];
        /**
         * Draw overlay where sketch features are drawn.
         * @type {VectorLayer}
         * @private
         */
        _this.overlay_ = new _layer_Vector_js__WEBPACK_IMPORTED_MODULE_4__.default({
            source: new _source_Vector_js__WEBPACK_IMPORTED_MODULE_5__.default({
                useSpatialIndex: false,
                wrapX: !!options.wrapX,
            }),
            style: options.style ? options.style : getDefaultStyleFunction(),
            updateWhileAnimating: true,
            updateWhileInteracting: true,
        });
        /**
         * @const
         * @private
         * @type {!Object<string, function(Feature, import("../geom/Geometry.js").default): void>}
         */
        _this.SEGMENT_WRITERS_ = {
            'Point': _this.writePointGeometry_.bind(_this),
            'LineString': _this.writeLineStringGeometry_.bind(_this),
            'LinearRing': _this.writeLineStringGeometry_.bind(_this),
            'Polygon': _this.writePolygonGeometry_.bind(_this),
            'MultiPoint': _this.writeMultiPointGeometry_.bind(_this),
            'MultiLineString': _this.writeMultiLineStringGeometry_.bind(_this),
            'MultiPolygon': _this.writeMultiPolygonGeometry_.bind(_this),
            'Circle': _this.writeCircleGeometry_.bind(_this),
            'GeometryCollection': _this.writeGeometryCollectionGeometry_.bind(_this),
        };
        /**
         * @type {VectorSource}
         * @private
         */
        _this.source_ = null;
        /**
         * @type {boolean|import("../layer/BaseVector").default}
         */
        _this.hitDetection_ = null;
        var features;
        if (options.features) {
            features = options.features;
        }
        else if (options.source) {
            _this.source_ = options.source;
            features = new _Collection_js__WEBPACK_IMPORTED_MODULE_6__.default(_this.source_.getFeatures());
            _this.source_.addEventListener(_source_VectorEventType_js__WEBPACK_IMPORTED_MODULE_7__.default.ADDFEATURE, _this.handleSourceAdd_.bind(_this));
            _this.source_.addEventListener(_source_VectorEventType_js__WEBPACK_IMPORTED_MODULE_7__.default.REMOVEFEATURE, _this.handleSourceRemove_.bind(_this));
        }
        if (!features) {
            throw new Error('The modify interaction requires features, a source or a layer');
        }
        if (options.hitDetection) {
            _this.hitDetection_ = options.hitDetection;
        }
        /**
         * @type {Collection<import("../Feature.js").FeatureLike>}
         * @private
         */
        _this.features_ = features;
        _this.features_.forEach(_this.addFeature_.bind(_this));
        _this.features_.addEventListener(_CollectionEventType_js__WEBPACK_IMPORTED_MODULE_8__.default.ADD, _this.handleFeatureAdd_.bind(_this));
        _this.features_.addEventListener(_CollectionEventType_js__WEBPACK_IMPORTED_MODULE_8__.default.REMOVE, _this.handleFeatureRemove_.bind(_this));
        /**
         * @type {import("../MapBrowserEvent.js").default}
         * @private
         */
        _this.lastPointerEvent_ = null;
        /**
         * Delta (x, y in map units) between matched rtree vertex and pointer vertex.
         * @type {Array<number>}
         */
        _this.delta_ = [0, 0];
        return _this;
    }
    /**
     * @param {Feature} feature Feature.
     * @private
     */
    Modify.prototype.addFeature_ = function (feature) {
        var geometry = feature.getGeometry();
        if (geometry) {
            var writer = this.SEGMENT_WRITERS_[geometry.getType()];
            if (writer) {
                writer(feature, geometry);
            }
        }
        var map = this.getMap();
        if (map && map.isRendered() && this.getActive()) {
            this.handlePointerAtPixel_(this.lastPixel_, map);
        }
        feature.addEventListener(_events_EventType_js__WEBPACK_IMPORTED_MODULE_9__.default.CHANGE, this.boundHandleFeatureChange_);
    };
    /**
     * @param {import("../MapBrowserEvent.js").default} evt Map browser event.
     * @param {Array<Array<SegmentData>>} segments The segments subject to modification.
     * @private
     */
    Modify.prototype.willModifyFeatures_ = function (evt, segments) {
        if (!this.featuresBeingModified_) {
            this.featuresBeingModified_ = new _Collection_js__WEBPACK_IMPORTED_MODULE_6__.default();
            var features = this.featuresBeingModified_.getArray();
            for (var i = 0, ii = segments.length; i < ii; ++i) {
                var feature = segments[i][0].feature;
                if (features.indexOf(feature) === -1) {
                    this.featuresBeingModified_.push(feature);
                }
            }
            this.dispatchEvent(new ModifyEvent(ModifyEventType.MODIFYSTART, this.featuresBeingModified_, evt));
        }
    };
    /**
     * @param {Feature} feature Feature.
     * @private
     */
    Modify.prototype.removeFeature_ = function (feature) {
        this.removeFeatureSegmentData_(feature);
        // Remove the vertex feature if the collection of canditate features is empty.
        if (this.vertexFeature_ && this.features_.getLength() === 0) {
            this.overlay_.getSource().removeFeature(this.vertexFeature_);
            this.vertexFeature_ = null;
        }
        feature.removeEventListener(_events_EventType_js__WEBPACK_IMPORTED_MODULE_9__.default.CHANGE, this.boundHandleFeatureChange_);
    };
    /**
     * @param {Feature} feature Feature.
     * @private
     */
    Modify.prototype.removeFeatureSegmentData_ = function (feature) {
        var rBush = this.rBush_;
        /** @type {Array<SegmentData>} */
        var nodesToRemove = [];
        rBush.forEach(
        /**
         * @param {SegmentData} node RTree node.
         */
        function (node) {
            if (feature === node.feature) {
                nodesToRemove.push(node);
            }
        });
        for (var i = nodesToRemove.length - 1; i >= 0; --i) {
            var nodeToRemove = nodesToRemove[i];
            for (var j = this.dragSegments_.length - 1; j >= 0; --j) {
                if (this.dragSegments_[j][0] === nodeToRemove) {
                    this.dragSegments_.splice(j, 1);
                }
            }
            rBush.remove(nodeToRemove);
        }
    };
    /**
     * Activate or deactivate the interaction.
     * @param {boolean} active Active.
     * @observable
     * @api
     */
    Modify.prototype.setActive = function (active) {
        if (this.vertexFeature_ && !active) {
            this.overlay_.getSource().removeFeature(this.vertexFeature_);
            this.vertexFeature_ = null;
        }
        _super.prototype.setActive.call(this, active);
    };
    /**
     * Remove the interaction from its current map and attach it to the new map.
     * Subclasses may set up event handlers to get notified about changes to
     * the map here.
     * @param {import("../PluggableMap.js").default} map Map.
     */
    Modify.prototype.setMap = function (map) {
        this.overlay_.setMap(map);
        _super.prototype.setMap.call(this, map);
    };
    /**
     * Get the overlay layer that this interaction renders the modification point or vertex to.
     * @return {VectorLayer} Overlay layer.
     * @api
     */
    Modify.prototype.getOverlay = function () {
        return this.overlay_;
    };
    /**
     * @param {import("../source/Vector.js").VectorSourceEvent} event Event.
     * @private
     */
    Modify.prototype.handleSourceAdd_ = function (event) {
        if (event.feature) {
            this.features_.push(event.feature);
        }
    };
    /**
     * @param {import("../source/Vector.js").VectorSourceEvent} event Event.
     * @private
     */
    Modify.prototype.handleSourceRemove_ = function (event) {
        if (event.feature) {
            this.features_.remove(event.feature);
        }
    };
    /**
     * @param {import("../Collection.js").CollectionEvent} evt Event.
     * @private
     */
    Modify.prototype.handleFeatureAdd_ = function (evt) {
        this.addFeature_(/** @type {Feature} */ (evt.element));
    };
    /**
     * @param {import("../events/Event.js").default} evt Event.
     * @private
     */
    Modify.prototype.handleFeatureChange_ = function (evt) {
        if (!this.changingFeature_) {
            var feature = /** @type {Feature} */ (evt.target);
            this.removeFeature_(feature);
            this.addFeature_(feature);
        }
    };
    /**
     * @param {import("../Collection.js").CollectionEvent} evt Event.
     * @private
     */
    Modify.prototype.handleFeatureRemove_ = function (evt) {
        var feature = /** @type {Feature} */ (evt.element);
        this.removeFeature_(feature);
    };
    /**
     * @param {Feature} feature Feature
     * @param {Point} geometry Geometry.
     * @private
     */
    Modify.prototype.writePointGeometry_ = function (feature, geometry) {
        var coordinates = geometry.getCoordinates();
        /** @type {SegmentData} */
        var segmentData = {
            feature: feature,
            geometry: geometry,
            segment: [coordinates, coordinates],
        };
        this.rBush_.insert(geometry.getExtent(), segmentData);
    };
    /**
     * @param {Feature} feature Feature
     * @param {import("../geom/MultiPoint.js").default} geometry Geometry.
     * @private
     */
    Modify.prototype.writeMultiPointGeometry_ = function (feature, geometry) {
        var points = geometry.getCoordinates();
        for (var i = 0, ii = points.length; i < ii; ++i) {
            var coordinates = points[i];
            /** @type {SegmentData} */
            var segmentData = {
                feature: feature,
                geometry: geometry,
                depth: [i],
                index: i,
                segment: [coordinates, coordinates],
            };
            this.rBush_.insert(geometry.getExtent(), segmentData);
        }
    };
    /**
     * @param {Feature} feature Feature
     * @param {import("../geom/LineString.js").default} geometry Geometry.
     * @private
     */
    Modify.prototype.writeLineStringGeometry_ = function (feature, geometry) {
        var coordinates = geometry.getCoordinates();
        for (var i = 0, ii = coordinates.length - 1; i < ii; ++i) {
            var segment = coordinates.slice(i, i + 2);
            /** @type {SegmentData} */
            var segmentData = {
                feature: feature,
                geometry: geometry,
                index: i,
                segment: segment,
            };
            this.rBush_.insert((0,_extent_js__WEBPACK_IMPORTED_MODULE_10__.boundingExtent)(segment), segmentData);
        }
    };
    /**
     * @param {Feature} feature Feature
     * @param {import("../geom/MultiLineString.js").default} geometry Geometry.
     * @private
     */
    Modify.prototype.writeMultiLineStringGeometry_ = function (feature, geometry) {
        var lines = geometry.getCoordinates();
        for (var j = 0, jj = lines.length; j < jj; ++j) {
            var coordinates = lines[j];
            for (var i = 0, ii = coordinates.length - 1; i < ii; ++i) {
                var segment = coordinates.slice(i, i + 2);
                /** @type {SegmentData} */
                var segmentData = {
                    feature: feature,
                    geometry: geometry,
                    depth: [j],
                    index: i,
                    segment: segment,
                };
                this.rBush_.insert((0,_extent_js__WEBPACK_IMPORTED_MODULE_10__.boundingExtent)(segment), segmentData);
            }
        }
    };
    /**
     * @param {Feature} feature Feature
     * @param {import("../geom/Polygon.js").default} geometry Geometry.
     * @private
     */
    Modify.prototype.writePolygonGeometry_ = function (feature, geometry) {
        var rings = geometry.getCoordinates();
        for (var j = 0, jj = rings.length; j < jj; ++j) {
            var coordinates = rings[j];
            for (var i = 0, ii = coordinates.length - 1; i < ii; ++i) {
                var segment = coordinates.slice(i, i + 2);
                /** @type {SegmentData} */
                var segmentData = {
                    feature: feature,
                    geometry: geometry,
                    depth: [j],
                    index: i,
                    segment: segment,
                };
                this.rBush_.insert((0,_extent_js__WEBPACK_IMPORTED_MODULE_10__.boundingExtent)(segment), segmentData);
            }
        }
    };
    /**
     * @param {Feature} feature Feature
     * @param {import("../geom/MultiPolygon.js").default} geometry Geometry.
     * @private
     */
    Modify.prototype.writeMultiPolygonGeometry_ = function (feature, geometry) {
        var polygons = geometry.getCoordinates();
        for (var k = 0, kk = polygons.length; k < kk; ++k) {
            var rings = polygons[k];
            for (var j = 0, jj = rings.length; j < jj; ++j) {
                var coordinates = rings[j];
                for (var i = 0, ii = coordinates.length - 1; i < ii; ++i) {
                    var segment = coordinates.slice(i, i + 2);
                    /** @type {SegmentData} */
                    var segmentData = {
                        feature: feature,
                        geometry: geometry,
                        depth: [j, k],
                        index: i,
                        segment: segment,
                    };
                    this.rBush_.insert((0,_extent_js__WEBPACK_IMPORTED_MODULE_10__.boundingExtent)(segment), segmentData);
                }
            }
        }
    };
    /**
     * We convert a circle into two segments.  The segment at index
     * {@link CIRCLE_CENTER_INDEX} is the
     * circle's center (a point).  The segment at index
     * {@link CIRCLE_CIRCUMFERENCE_INDEX} is
     * the circumference, and is not a line segment.
     *
     * @param {Feature} feature Feature.
     * @param {import("../geom/Circle.js").default} geometry Geometry.
     * @private
     */
    Modify.prototype.writeCircleGeometry_ = function (feature, geometry) {
        var coordinates = geometry.getCenter();
        /** @type {SegmentData} */
        var centerSegmentData = {
            feature: feature,
            geometry: geometry,
            index: CIRCLE_CENTER_INDEX,
            segment: [coordinates, coordinates],
        };
        /** @type {SegmentData} */
        var circumferenceSegmentData = {
            feature: feature,
            geometry: geometry,
            index: CIRCLE_CIRCUMFERENCE_INDEX,
            segment: [coordinates, coordinates],
        };
        var featureSegments = [centerSegmentData, circumferenceSegmentData];
        centerSegmentData.featureSegments = featureSegments;
        circumferenceSegmentData.featureSegments = featureSegments;
        this.rBush_.insert((0,_extent_js__WEBPACK_IMPORTED_MODULE_10__.createOrUpdateFromCoordinate)(coordinates), centerSegmentData);
        var circleGeometry = /** @type {import("../geom/Geometry.js").default} */ (geometry);
        var userProjection = (0,_proj_js__WEBPACK_IMPORTED_MODULE_0__.getUserProjection)();
        if (userProjection && this.getMap()) {
            var projection = this.getMap().getView().getProjection();
            circleGeometry = circleGeometry
                .clone()
                .transform(userProjection, projection);
            circleGeometry = (0,_geom_Polygon_js__WEBPACK_IMPORTED_MODULE_11__.fromCircle)(
            /** @type {import("../geom/Circle.js").default} */ (circleGeometry)).transform(projection, userProjection);
        }
        this.rBush_.insert(circleGeometry.getExtent(), circumferenceSegmentData);
    };
    /**
     * @param {Feature} feature Feature
     * @param {import("../geom/GeometryCollection.js").default} geometry Geometry.
     * @private
     */
    Modify.prototype.writeGeometryCollectionGeometry_ = function (feature, geometry) {
        var geometries = geometry.getGeometriesArray();
        for (var i = 0; i < geometries.length; ++i) {
            var geometry_1 = geometries[i];
            var writer = this.SEGMENT_WRITERS_[geometry_1.getType()];
            writer(feature, geometry_1);
        }
    };
    /**
     * @param {import("../coordinate.js").Coordinate} coordinates Coordinates.
     * @param {Array<Feature>} features The features being modified.
     * @param {Array<import("../geom/SimpleGeometry.js").default>} geometries The geometries being modified.
     * @return {Feature} Vertex feature.
     * @private
     */
    Modify.prototype.createOrUpdateVertexFeature_ = function (coordinates, features, geometries) {
        var vertexFeature = this.vertexFeature_;
        if (!vertexFeature) {
            vertexFeature = new _Feature_js__WEBPACK_IMPORTED_MODULE_12__.default(new _geom_Point_js__WEBPACK_IMPORTED_MODULE_13__.default(coordinates));
            this.vertexFeature_ = vertexFeature;
            this.overlay_.getSource().addFeature(vertexFeature);
        }
        else {
            var geometry = vertexFeature.getGeometry();
            geometry.setCoordinates(coordinates);
        }
        vertexFeature.set('features', features);
        vertexFeature.set('geometries', geometries);
        return vertexFeature;
    };
    /**
     * Handles the {@link module:ol/MapBrowserEvent map browser event} and may modify the geometry.
     * @param {import("../MapBrowserEvent.js").default} mapBrowserEvent Map browser event.
     * @return {boolean} `false` to stop event propagation.
     */
    Modify.prototype.handleEvent = function (mapBrowserEvent) {
        if (!mapBrowserEvent.originalEvent) {
            return true;
        }
        this.lastPointerEvent_ = mapBrowserEvent;
        var handled;
        if (!mapBrowserEvent.map.getView().getInteracting() &&
            mapBrowserEvent.type == _MapBrowserEventType_js__WEBPACK_IMPORTED_MODULE_14__.default.POINTERMOVE &&
            !this.handlingDownUpSequence) {
            this.handlePointerMove_(mapBrowserEvent);
        }
        if (this.vertexFeature_ && this.deleteCondition_(mapBrowserEvent)) {
            if (mapBrowserEvent.type != _MapBrowserEventType_js__WEBPACK_IMPORTED_MODULE_14__.default.SINGLECLICK ||
                !this.ignoreNextSingleClick_) {
                handled = this.removePoint();
            }
            else {
                handled = true;
            }
        }
        if (mapBrowserEvent.type == _MapBrowserEventType_js__WEBPACK_IMPORTED_MODULE_14__.default.SINGLECLICK) {
            this.ignoreNextSingleClick_ = false;
        }
        return _super.prototype.handleEvent.call(this, mapBrowserEvent) && !handled;
    };
    /**
     * Handle pointer drag events.
     * @param {import("../MapBrowserEvent.js").default} evt Event.
     */
    Modify.prototype.handleDragEvent = function (evt) {
        this.ignoreNextSingleClick_ = false;
        this.willModifyFeatures_(evt, this.dragSegments_);
        var vertex = [
            evt.coordinate[0] + this.delta_[0],
            evt.coordinate[1] + this.delta_[1],
        ];
        var features = [];
        var geometries = [];
        for (var i = 0, ii = this.dragSegments_.length; i < ii; ++i) {
            var dragSegment = this.dragSegments_[i];
            var segmentData = dragSegment[0];
            var feature = segmentData.feature;
            if (features.indexOf(feature) === -1) {
                features.push(feature);
            }
            var geometry = segmentData.geometry;
            if (geometries.indexOf(geometry) === -1) {
                geometries.push(geometry);
            }
            var depth = segmentData.depth;
            var coordinates = void 0;
            var segment = segmentData.segment;
            var index = dragSegment[1];
            while (vertex.length < geometry.getStride()) {
                vertex.push(segment[index][vertex.length]);
            }
            switch (geometry.getType()) {
                case _geom_GeometryType_js__WEBPACK_IMPORTED_MODULE_15__.default.POINT:
                    coordinates = vertex;
                    segment[0] = vertex;
                    segment[1] = vertex;
                    break;
                case _geom_GeometryType_js__WEBPACK_IMPORTED_MODULE_15__.default.MULTI_POINT:
                    coordinates = geometry.getCoordinates();
                    coordinates[segmentData.index] = vertex;
                    segment[0] = vertex;
                    segment[1] = vertex;
                    break;
                case _geom_GeometryType_js__WEBPACK_IMPORTED_MODULE_15__.default.LINE_STRING:
                    coordinates = geometry.getCoordinates();
                    coordinates[segmentData.index + index] = vertex;
                    segment[index] = vertex;
                    break;
                case _geom_GeometryType_js__WEBPACK_IMPORTED_MODULE_15__.default.MULTI_LINE_STRING:
                    coordinates = geometry.getCoordinates();
                    coordinates[depth[0]][segmentData.index + index] = vertex;
                    segment[index] = vertex;
                    break;
                case _geom_GeometryType_js__WEBPACK_IMPORTED_MODULE_15__.default.POLYGON:
                    coordinates = geometry.getCoordinates();
                    coordinates[depth[0]][segmentData.index + index] = vertex;
                    segment[index] = vertex;
                    break;
                case _geom_GeometryType_js__WEBPACK_IMPORTED_MODULE_15__.default.MULTI_POLYGON:
                    coordinates = geometry.getCoordinates();
                    coordinates[depth[1]][depth[0]][segmentData.index + index] = vertex;
                    segment[index] = vertex;
                    break;
                case _geom_GeometryType_js__WEBPACK_IMPORTED_MODULE_15__.default.CIRCLE:
                    segment[0] = vertex;
                    segment[1] = vertex;
                    if (segmentData.index === CIRCLE_CENTER_INDEX) {
                        this.changingFeature_ = true;
                        geometry.setCenter(vertex);
                        this.changingFeature_ = false;
                    }
                    else {
                        // We're dragging the circle's circumference:
                        this.changingFeature_ = true;
                        var projection = evt.map.getView().getProjection();
                        var radius = (0,_coordinate_js__WEBPACK_IMPORTED_MODULE_16__.distance)((0,_proj_js__WEBPACK_IMPORTED_MODULE_0__.fromUserCoordinate)(geometry.getCenter(), projection), (0,_proj_js__WEBPACK_IMPORTED_MODULE_0__.fromUserCoordinate)(vertex, projection));
                        var userProjection = (0,_proj_js__WEBPACK_IMPORTED_MODULE_0__.getUserProjection)();
                        if (userProjection) {
                            var circleGeometry = geometry
                                .clone()
                                .transform(userProjection, projection);
                            circleGeometry.setRadius(radius);
                            radius = circleGeometry
                                .transform(projection, userProjection)
                                .getRadius();
                        }
                        geometry.setRadius(radius);
                        this.changingFeature_ = false;
                    }
                    break;
                default:
                // pass
            }
            if (coordinates) {
                this.setGeometryCoordinates_(geometry, coordinates);
            }
        }
        this.createOrUpdateVertexFeature_(vertex, features, geometries);
    };
    /**
     * Handle pointer down events.
     * @param {import("../MapBrowserEvent.js").default} evt Event.
     * @return {boolean} If the event was consumed.
     */
    Modify.prototype.handleDownEvent = function (evt) {
        if (!this.condition_(evt)) {
            return false;
        }
        var pixelCoordinate = evt.coordinate;
        this.handlePointerAtPixel_(evt.pixel, evt.map, pixelCoordinate);
        this.dragSegments_.length = 0;
        this.featuresBeingModified_ = null;
        var vertexFeature = this.vertexFeature_;
        if (vertexFeature) {
            var projection = evt.map.getView().getProjection();
            var insertVertices = [];
            var vertex = vertexFeature.getGeometry().getCoordinates();
            var vertexExtent = (0,_extent_js__WEBPACK_IMPORTED_MODULE_10__.boundingExtent)([vertex]);
            var segmentDataMatches = this.rBush_.getInExtent(vertexExtent);
            var componentSegments = {};
            segmentDataMatches.sort(compareIndexes);
            for (var i = 0, ii = segmentDataMatches.length; i < ii; ++i) {
                var segmentDataMatch = segmentDataMatches[i];
                var segment = segmentDataMatch.segment;
                var uid = (0,_util_js__WEBPACK_IMPORTED_MODULE_17__.getUid)(segmentDataMatch.geometry);
                var depth = segmentDataMatch.depth;
                if (depth) {
                    uid += '-' + depth.join('-'); // separate feature components
                }
                if (!componentSegments[uid]) {
                    componentSegments[uid] = new Array(2);
                }
                if (segmentDataMatch.geometry.getType() === _geom_GeometryType_js__WEBPACK_IMPORTED_MODULE_15__.default.CIRCLE &&
                    segmentDataMatch.index === CIRCLE_CIRCUMFERENCE_INDEX) {
                    var closestVertex = closestOnSegmentData(pixelCoordinate, segmentDataMatch, projection);
                    if ((0,_coordinate_js__WEBPACK_IMPORTED_MODULE_16__.equals)(closestVertex, vertex) &&
                        !componentSegments[uid][0]) {
                        this.dragSegments_.push([segmentDataMatch, 0]);
                        componentSegments[uid][0] = segmentDataMatch;
                    }
                    continue;
                }
                if ((0,_coordinate_js__WEBPACK_IMPORTED_MODULE_16__.equals)(segment[0], vertex) &&
                    !componentSegments[uid][0]) {
                    this.dragSegments_.push([segmentDataMatch, 0]);
                    componentSegments[uid][0] = segmentDataMatch;
                    continue;
                }
                if ((0,_coordinate_js__WEBPACK_IMPORTED_MODULE_16__.equals)(segment[1], vertex) &&
                    !componentSegments[uid][1]) {
                    // prevent dragging closed linestrings by the connecting node
                    if ((segmentDataMatch.geometry.getType() === _geom_GeometryType_js__WEBPACK_IMPORTED_MODULE_15__.default.LINE_STRING ||
                        segmentDataMatch.geometry.getType() ===
                            _geom_GeometryType_js__WEBPACK_IMPORTED_MODULE_15__.default.MULTI_LINE_STRING) &&
                        componentSegments[uid][0] &&
                        componentSegments[uid][0].index === 0) {
                        continue;
                    }
                    this.dragSegments_.push([segmentDataMatch, 1]);
                    componentSegments[uid][1] = segmentDataMatch;
                    continue;
                }
                if ((0,_util_js__WEBPACK_IMPORTED_MODULE_17__.getUid)(segment) in this.vertexSegments_ &&
                    !componentSegments[uid][0] &&
                    !componentSegments[uid][1] &&
                    this.insertVertexCondition_(evt)) {
                    insertVertices.push(segmentDataMatch);
                }
            }
            if (insertVertices.length) {
                this.willModifyFeatures_(evt, [insertVertices]);
            }
            for (var j = insertVertices.length - 1; j >= 0; --j) {
                this.insertVertex_(insertVertices[j], vertex);
            }
        }
        return !!this.vertexFeature_;
    };
    /**
     * Handle pointer up events.
     * @param {import("../MapBrowserEvent.js").default} evt Event.
     * @return {boolean} If the event was consumed.
     */
    Modify.prototype.handleUpEvent = function (evt) {
        for (var i = this.dragSegments_.length - 1; i >= 0; --i) {
            var segmentData = this.dragSegments_[i][0];
            var geometry = segmentData.geometry;
            if (geometry.getType() === _geom_GeometryType_js__WEBPACK_IMPORTED_MODULE_15__.default.CIRCLE) {
                // Update a circle object in the R* bush:
                var coordinates = geometry.getCenter();
                var centerSegmentData = segmentData.featureSegments[0];
                var circumferenceSegmentData = segmentData.featureSegments[1];
                centerSegmentData.segment[0] = coordinates;
                centerSegmentData.segment[1] = coordinates;
                circumferenceSegmentData.segment[0] = coordinates;
                circumferenceSegmentData.segment[1] = coordinates;
                this.rBush_.update((0,_extent_js__WEBPACK_IMPORTED_MODULE_10__.createOrUpdateFromCoordinate)(coordinates), centerSegmentData);
                var circleGeometry = geometry;
                var userProjection = (0,_proj_js__WEBPACK_IMPORTED_MODULE_0__.getUserProjection)();
                if (userProjection) {
                    var projection = evt.map.getView().getProjection();
                    circleGeometry = circleGeometry
                        .clone()
                        .transform(userProjection, projection);
                    circleGeometry = (0,_geom_Polygon_js__WEBPACK_IMPORTED_MODULE_11__.fromCircle)(circleGeometry).transform(projection, userProjection);
                }
                this.rBush_.update(circleGeometry.getExtent(), circumferenceSegmentData);
            }
            else {
                this.rBush_.update((0,_extent_js__WEBPACK_IMPORTED_MODULE_10__.boundingExtent)(segmentData.segment), segmentData);
            }
        }
        if (this.featuresBeingModified_) {
            this.dispatchEvent(new ModifyEvent(ModifyEventType.MODIFYEND, this.featuresBeingModified_, evt));
            this.featuresBeingModified_ = null;
        }
        return false;
    };
    /**
     * @param {import("../MapBrowserEvent.js").default} evt Event.
     * @private
     */
    Modify.prototype.handlePointerMove_ = function (evt) {
        this.lastPixel_ = evt.pixel;
        this.handlePointerAtPixel_(evt.pixel, evt.map, evt.coordinate);
    };
    /**
     * @param {import("../pixel.js").Pixel} pixel Pixel
     * @param {import("../PluggableMap.js").default} map Map.
     * @param {import("../coordinate.js").Coordinate=} opt_coordinate The pixel Coordinate.
     * @private
     */
    Modify.prototype.handlePointerAtPixel_ = function (pixel, map, opt_coordinate) {
        var _this = this;
        var pixelCoordinate = opt_coordinate || map.getCoordinateFromPixel(pixel);
        var projection = map.getView().getProjection();
        var sortByDistance = function (a, b) {
            return (projectedDistanceToSegmentDataSquared(pixelCoordinate, a, projection) -
                projectedDistanceToSegmentDataSquared(pixelCoordinate, b, projection));
        };
        var nodes, hitPointGeometry;
        if (this.hitDetection_) {
            var layerFilter = typeof this.hitDetection_ === 'object'
                ? function (layer) { return layer === _this.hitDetection_; }
                : undefined;
            map.forEachFeatureAtPixel(pixel, function (feature, layer, geometry) {
                geometry = geometry || feature.getGeometry();
                if (geometry.getType() === _geom_GeometryType_js__WEBPACK_IMPORTED_MODULE_15__.default.POINT) {
                    hitPointGeometry = geometry;
                    var coordinate = geometry.getCoordinates();
                    nodes = [
                        {
                            feature: feature,
                            geometry: geometry,
                            segment: [coordinate, coordinate],
                        },
                    ];
                }
                return true;
            }, { layerFilter: layerFilter });
        }
        if (!nodes) {
            var viewExtent = (0,_proj_js__WEBPACK_IMPORTED_MODULE_0__.fromUserExtent)((0,_extent_js__WEBPACK_IMPORTED_MODULE_10__.createOrUpdateFromCoordinate)(pixelCoordinate, tempExtent), projection);
            var buffer = map.getView().getResolution() * this.pixelTolerance_;
            var box = (0,_proj_js__WEBPACK_IMPORTED_MODULE_0__.toUserExtent)((0,_extent_js__WEBPACK_IMPORTED_MODULE_10__.buffer)(viewExtent, buffer, tempExtent), projection);
            nodes = this.rBush_.getInExtent(box);
        }
        if (nodes && nodes.length > 0) {
            var node = nodes.sort(sortByDistance)[0];
            var closestSegment = node.segment;
            var vertex = closestOnSegmentData(pixelCoordinate, node, projection);
            var vertexPixel = map.getPixelFromCoordinate(vertex);
            var dist = (0,_coordinate_js__WEBPACK_IMPORTED_MODULE_16__.distance)(pixel, vertexPixel);
            if (hitPointGeometry || dist <= this.pixelTolerance_) {
                /** @type {Object<string, boolean>} */
                var vertexSegments = {};
                vertexSegments[(0,_util_js__WEBPACK_IMPORTED_MODULE_17__.getUid)(closestSegment)] = true;
                this.delta_[0] = vertex[0] - pixelCoordinate[0];
                this.delta_[1] = vertex[1] - pixelCoordinate[1];
                if (node.geometry.getType() === _geom_GeometryType_js__WEBPACK_IMPORTED_MODULE_15__.default.CIRCLE &&
                    node.index === CIRCLE_CIRCUMFERENCE_INDEX) {
                    this.snappedToVertex_ = true;
                    this.createOrUpdateVertexFeature_(vertex, [node.feature], [node.geometry]);
                }
                else {
                    var pixel1 = map.getPixelFromCoordinate(closestSegment[0]);
                    var pixel2 = map.getPixelFromCoordinate(closestSegment[1]);
                    var squaredDist1 = (0,_coordinate_js__WEBPACK_IMPORTED_MODULE_16__.squaredDistance)(vertexPixel, pixel1);
                    var squaredDist2 = (0,_coordinate_js__WEBPACK_IMPORTED_MODULE_16__.squaredDistance)(vertexPixel, pixel2);
                    dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));
                    this.snappedToVertex_ = dist <= this.pixelTolerance_;
                    if (this.snappedToVertex_) {
                        vertex =
                            squaredDist1 > squaredDist2
                                ? closestSegment[1]
                                : closestSegment[0];
                    }
                    this.createOrUpdateVertexFeature_(vertex, [node.feature], [node.geometry]);
                    var geometries = {};
                    geometries[(0,_util_js__WEBPACK_IMPORTED_MODULE_17__.getUid)(node.geometry)] = true;
                    for (var i = 1, ii = nodes.length; i < ii; ++i) {
                        var segment = nodes[i].segment;
                        if (((0,_coordinate_js__WEBPACK_IMPORTED_MODULE_16__.equals)(closestSegment[0], segment[0]) &&
                            (0,_coordinate_js__WEBPACK_IMPORTED_MODULE_16__.equals)(closestSegment[1], segment[1])) ||
                            ((0,_coordinate_js__WEBPACK_IMPORTED_MODULE_16__.equals)(closestSegment[0], segment[1]) &&
                                (0,_coordinate_js__WEBPACK_IMPORTED_MODULE_16__.equals)(closestSegment[1], segment[0]))) {
                            var geometryUid = (0,_util_js__WEBPACK_IMPORTED_MODULE_17__.getUid)(nodes[i].geometry);
                            if (!(geometryUid in geometries)) {
                                geometries[geometryUid] = true;
                                vertexSegments[(0,_util_js__WEBPACK_IMPORTED_MODULE_17__.getUid)(segment)] = true;
                            }
                        }
                        else {
                            break;
                        }
                    }
                }
                this.vertexSegments_ = vertexSegments;
                return;
            }
        }
        if (this.vertexFeature_) {
            this.overlay_.getSource().removeFeature(this.vertexFeature_);
            this.vertexFeature_ = null;
        }
    };
    /**
     * @param {SegmentData} segmentData Segment data.
     * @param {import("../coordinate.js").Coordinate} vertex Vertex.
     * @private
     */
    Modify.prototype.insertVertex_ = function (segmentData, vertex) {
        var segment = segmentData.segment;
        var feature = segmentData.feature;
        var geometry = segmentData.geometry;
        var depth = segmentData.depth;
        var index = segmentData.index;
        var coordinates;
        while (vertex.length < geometry.getStride()) {
            vertex.push(0);
        }
        switch (geometry.getType()) {
            case _geom_GeometryType_js__WEBPACK_IMPORTED_MODULE_15__.default.MULTI_LINE_STRING:
                coordinates = geometry.getCoordinates();
                coordinates[depth[0]].splice(index + 1, 0, vertex);
                break;
            case _geom_GeometryType_js__WEBPACK_IMPORTED_MODULE_15__.default.POLYGON:
                coordinates = geometry.getCoordinates();
                coordinates[depth[0]].splice(index + 1, 0, vertex);
                break;
            case _geom_GeometryType_js__WEBPACK_IMPORTED_MODULE_15__.default.MULTI_POLYGON:
                coordinates = geometry.getCoordinates();
                coordinates[depth[1]][depth[0]].splice(index + 1, 0, vertex);
                break;
            case _geom_GeometryType_js__WEBPACK_IMPORTED_MODULE_15__.default.LINE_STRING:
                coordinates = geometry.getCoordinates();
                coordinates.splice(index + 1, 0, vertex);
                break;
            default:
                return;
        }
        this.setGeometryCoordinates_(geometry, coordinates);
        var rTree = this.rBush_;
        rTree.remove(segmentData);
        this.updateSegmentIndices_(geometry, index, depth, 1);
        /** @type {SegmentData} */
        var newSegmentData = {
            segment: [segment[0], vertex],
            feature: feature,
            geometry: geometry,
            depth: depth,
            index: index,
        };
        rTree.insert((0,_extent_js__WEBPACK_IMPORTED_MODULE_10__.boundingExtent)(newSegmentData.segment), newSegmentData);
        this.dragSegments_.push([newSegmentData, 1]);
        /** @type {SegmentData} */
        var newSegmentData2 = {
            segment: [vertex, segment[1]],
            feature: feature,
            geometry: geometry,
            depth: depth,
            index: index + 1,
        };
        rTree.insert((0,_extent_js__WEBPACK_IMPORTED_MODULE_10__.boundingExtent)(newSegmentData2.segment), newSegmentData2);
        this.dragSegments_.push([newSegmentData2, 0]);
        this.ignoreNextSingleClick_ = true;
    };
    /**
     * Removes the vertex currently being pointed.
     * @return {boolean} True when a vertex was removed.
     * @api
     */
    Modify.prototype.removePoint = function () {
        if (this.lastPointerEvent_ &&
            this.lastPointerEvent_.type != _MapBrowserEventType_js__WEBPACK_IMPORTED_MODULE_14__.default.POINTERDRAG) {
            var evt = this.lastPointerEvent_;
            this.willModifyFeatures_(evt, this.dragSegments_);
            var removed = this.removeVertex_();
            this.dispatchEvent(new ModifyEvent(ModifyEventType.MODIFYEND, this.featuresBeingModified_, evt));
            this.featuresBeingModified_ = null;
            return removed;
        }
        return false;
    };
    /**
     * Removes a vertex from all matching features.
     * @return {boolean} True when a vertex was removed.
     * @private
     */
    Modify.prototype.removeVertex_ = function () {
        var dragSegments = this.dragSegments_;
        var segmentsByFeature = {};
        var deleted = false;
        var component, coordinates, dragSegment, geometry, i, index, left;
        var newIndex, right, segmentData, uid;
        for (i = dragSegments.length - 1; i >= 0; --i) {
            dragSegment = dragSegments[i];
            segmentData = dragSegment[0];
            uid = (0,_util_js__WEBPACK_IMPORTED_MODULE_17__.getUid)(segmentData.feature);
            if (segmentData.depth) {
                // separate feature components
                uid += '-' + segmentData.depth.join('-');
            }
            if (!(uid in segmentsByFeature)) {
                segmentsByFeature[uid] = {};
            }
            if (dragSegment[1] === 0) {
                segmentsByFeature[uid].right = segmentData;
                segmentsByFeature[uid].index = segmentData.index;
            }
            else if (dragSegment[1] == 1) {
                segmentsByFeature[uid].left = segmentData;
                segmentsByFeature[uid].index = segmentData.index + 1;
            }
        }
        for (uid in segmentsByFeature) {
            right = segmentsByFeature[uid].right;
            left = segmentsByFeature[uid].left;
            index = segmentsByFeature[uid].index;
            newIndex = index - 1;
            if (left !== undefined) {
                segmentData = left;
            }
            else {
                segmentData = right;
            }
            if (newIndex < 0) {
                newIndex = 0;
            }
            geometry = segmentData.geometry;
            coordinates = geometry.getCoordinates();
            component = coordinates;
            deleted = false;
            switch (geometry.getType()) {
                case _geom_GeometryType_js__WEBPACK_IMPORTED_MODULE_15__.default.MULTI_LINE_STRING:
                    if (coordinates[segmentData.depth[0]].length > 2) {
                        coordinates[segmentData.depth[0]].splice(index, 1);
                        deleted = true;
                    }
                    break;
                case _geom_GeometryType_js__WEBPACK_IMPORTED_MODULE_15__.default.LINE_STRING:
                    if (coordinates.length > 2) {
                        coordinates.splice(index, 1);
                        deleted = true;
                    }
                    break;
                case _geom_GeometryType_js__WEBPACK_IMPORTED_MODULE_15__.default.MULTI_POLYGON:
                    component = component[segmentData.depth[1]];
                /* falls through */
                case _geom_GeometryType_js__WEBPACK_IMPORTED_MODULE_15__.default.POLYGON:
                    component = component[segmentData.depth[0]];
                    if (component.length > 4) {
                        if (index == component.length - 1) {
                            index = 0;
                        }
                        component.splice(index, 1);
                        deleted = true;
                        if (index === 0) {
                            // close the ring again
                            component.pop();
                            component.push(component[0]);
                            newIndex = component.length - 1;
                        }
                    }
                    break;
                default:
                // pass
            }
            if (deleted) {
                this.setGeometryCoordinates_(geometry, coordinates);
                var segments = [];
                if (left !== undefined) {
                    this.rBush_.remove(left);
                    segments.push(left.segment[0]);
                }
                if (right !== undefined) {
                    this.rBush_.remove(right);
                    segments.push(right.segment[1]);
                }
                if (left !== undefined && right !== undefined) {
                    /** @type {SegmentData} */
                    var newSegmentData = {
                        depth: segmentData.depth,
                        feature: segmentData.feature,
                        geometry: segmentData.geometry,
                        index: newIndex,
                        segment: segments,
                    };
                    this.rBush_.insert((0,_extent_js__WEBPACK_IMPORTED_MODULE_10__.boundingExtent)(newSegmentData.segment), newSegmentData);
                }
                this.updateSegmentIndices_(geometry, index, segmentData.depth, -1);
                if (this.vertexFeature_) {
                    this.overlay_.getSource().removeFeature(this.vertexFeature_);
                    this.vertexFeature_ = null;
                }
                dragSegments.length = 0;
            }
        }
        return deleted;
    };
    /**
     * @param {import("../geom/SimpleGeometry.js").default} geometry Geometry.
     * @param {Array} coordinates Coordinates.
     * @private
     */
    Modify.prototype.setGeometryCoordinates_ = function (geometry, coordinates) {
        this.changingFeature_ = true;
        geometry.setCoordinates(coordinates);
        this.changingFeature_ = false;
    };
    /**
     * @param {import("../geom/SimpleGeometry.js").default} geometry Geometry.
     * @param {number} index Index.
     * @param {Array<number>|undefined} depth Depth.
     * @param {number} delta Delta (1 or -1).
     * @private
     */
    Modify.prototype.updateSegmentIndices_ = function (geometry, index, depth, delta) {
        this.rBush_.forEachInExtent(geometry.getExtent(), function (segmentDataMatch) {
            if (segmentDataMatch.geometry === geometry &&
                (depth === undefined ||
                    segmentDataMatch.depth === undefined ||
                    (0,_array_js__WEBPACK_IMPORTED_MODULE_18__.equals)(segmentDataMatch.depth, depth)) &&
                segmentDataMatch.index > index) {
                segmentDataMatch.index += delta;
            }
        });
    };
    return Modify;
}(_Pointer_js__WEBPACK_IMPORTED_MODULE_19__.default));
/**
 * @param {SegmentData} a The first segment data.
 * @param {SegmentData} b The second segment data.
 * @return {number} The difference in indexes.
 */
function compareIndexes(a, b) {
    return a.index - b.index;
}
/**
 * Returns the distance from a point to a line segment.
 *
 * @param {import("../coordinate.js").Coordinate} pointCoordinates The coordinates of the point from
 *        which to calculate the distance.
 * @param {SegmentData} segmentData The object describing the line
 *        segment we are calculating the distance to.
 * @param {import("../proj/Projection.js").default} projection The view projection.
 * @return {number} The square of the distance between a point and a line segment.
 */
function projectedDistanceToSegmentDataSquared(pointCoordinates, segmentData, projection) {
    var geometry = segmentData.geometry;
    if (geometry.getType() === _geom_GeometryType_js__WEBPACK_IMPORTED_MODULE_15__.default.CIRCLE) {
        var circleGeometry = /** @type {import("../geom/Circle.js").default} */ (geometry);
        if (segmentData.index === CIRCLE_CIRCUMFERENCE_INDEX) {
            var userProjection = (0,_proj_js__WEBPACK_IMPORTED_MODULE_0__.getUserProjection)();
            if (userProjection) {
                circleGeometry = /** @type {import("../geom/Circle.js").default} */ (circleGeometry
                    .clone()
                    .transform(userProjection, projection));
            }
            var distanceToCenterSquared = (0,_coordinate_js__WEBPACK_IMPORTED_MODULE_16__.squaredDistance)(circleGeometry.getCenter(), (0,_proj_js__WEBPACK_IMPORTED_MODULE_0__.fromUserCoordinate)(pointCoordinates, projection));
            var distanceToCircumference = Math.sqrt(distanceToCenterSquared) - circleGeometry.getRadius();
            return distanceToCircumference * distanceToCircumference;
        }
    }
    var coordinate = (0,_proj_js__WEBPACK_IMPORTED_MODULE_0__.fromUserCoordinate)(pointCoordinates, projection);
    tempSegment[0] = (0,_proj_js__WEBPACK_IMPORTED_MODULE_0__.fromUserCoordinate)(segmentData.segment[0], projection);
    tempSegment[1] = (0,_proj_js__WEBPACK_IMPORTED_MODULE_0__.fromUserCoordinate)(segmentData.segment[1], projection);
    return (0,_coordinate_js__WEBPACK_IMPORTED_MODULE_16__.squaredDistanceToSegment)(coordinate, tempSegment);
}
/**
 * Returns the point closest to a given line segment.
 *
 * @param {import("../coordinate.js").Coordinate} pointCoordinates The point to which a closest point
 *        should be found.
 * @param {SegmentData} segmentData The object describing the line
 *        segment which should contain the closest point.
 * @param {import("../proj/Projection.js").default} projection The view projection.
 * @return {import("../coordinate.js").Coordinate} The point closest to the specified line segment.
 */
function closestOnSegmentData(pointCoordinates, segmentData, projection) {
    var geometry = segmentData.geometry;
    if (geometry.getType() === _geom_GeometryType_js__WEBPACK_IMPORTED_MODULE_15__.default.CIRCLE &&
        segmentData.index === CIRCLE_CIRCUMFERENCE_INDEX) {
        var circleGeometry = /** @type {import("../geom/Circle.js").default} */ (geometry);
        var userProjection = (0,_proj_js__WEBPACK_IMPORTED_MODULE_0__.getUserProjection)();
        if (userProjection) {
            circleGeometry = /** @type {import("../geom/Circle.js").default} */ (circleGeometry
                .clone()
                .transform(userProjection, projection));
        }
        return (0,_proj_js__WEBPACK_IMPORTED_MODULE_0__.toUserCoordinate)(circleGeometry.getClosestPoint((0,_proj_js__WEBPACK_IMPORTED_MODULE_0__.fromUserCoordinate)(pointCoordinates, projection)), projection);
    }
    var coordinate = (0,_proj_js__WEBPACK_IMPORTED_MODULE_0__.fromUserCoordinate)(pointCoordinates, projection);
    tempSegment[0] = (0,_proj_js__WEBPACK_IMPORTED_MODULE_0__.fromUserCoordinate)(segmentData.segment[0], projection);
    tempSegment[1] = (0,_proj_js__WEBPACK_IMPORTED_MODULE_0__.fromUserCoordinate)(segmentData.segment[1], projection);
    return (0,_proj_js__WEBPACK_IMPORTED_MODULE_0__.toUserCoordinate)((0,_coordinate_js__WEBPACK_IMPORTED_MODULE_16__.closestOnSegment)(coordinate, tempSegment), projection);
}
/**
 * @return {import("../style/Style.js").StyleFunction} Styles.
 */
function getDefaultStyleFunction() {
    var style = (0,_style_Style_js__WEBPACK_IMPORTED_MODULE_20__.createEditingStyle)();
    return function (feature, resolution) {
        return style[_geom_GeometryType_js__WEBPACK_IMPORTED_MODULE_15__.default.POINT];
    };
}
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Modify);
//# sourceMappingURL=Modify.js.map

/***/ }),

/***/ "./node_modules/ol/interaction/MouseWheelZoom.js":
/*!*******************************************************!*\
  !*** ./node_modules/ol/interaction/MouseWheelZoom.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Mode": () => (/* binding */ Mode),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _events_EventType_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../events/EventType.js */ "./node_modules/ol/events/EventType.js");
/* harmony import */ var _Interaction_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./Interaction.js */ "./node_modules/ol/interaction/Interaction.js");
/* harmony import */ var _has_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../has.js */ "./node_modules/ol/has.js");
/* harmony import */ var _events_condition_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../events/condition.js */ "./node_modules/ol/events/condition.js");
/* harmony import */ var _math_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../math.js */ "./node_modules/ol/math.js");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
/**
 * @module ol/interaction/MouseWheelZoom
 */





/**
 * @enum {string}
 */
var Mode = {
    TRACKPAD: 'trackpad',
    WHEEL: 'wheel',
};
/**
 * @typedef {Object} Options
 * @property {import("../events/condition.js").Condition} [condition] A function that
 * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a
 * boolean to indicate whether that event should be handled. Default is
 * {@link module:ol/events/condition~always}.
 * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,
 * the interaction will only handle events when the map has the focus.
 * @property {number} [maxDelta=1] Maximum mouse wheel delta.
 * @property {number} [duration=250] Animation duration in milliseconds.
 * @property {number} [timeout=80] Mouse wheel timeout duration in milliseconds.
 * @property {boolean} [useAnchor=true] Enable zooming using the mouse's
 * location as the anchor. When set to `false`, zooming in and out will zoom to
 * the center of the screen instead of zooming on the mouse's location.
 * @property {boolean} [constrainResolution=false] If true, the mouse wheel zoom
 * event will always animate to the closest zoom level after an interaction;
 * false means intermediary zoom levels are allowed.
 */
/**
 * @classdesc
 * Allows the user to zoom the map by scrolling the mouse wheel.
 * @api
 */
var MouseWheelZoom = /** @class */ (function (_super) {
    __extends(MouseWheelZoom, _super);
    /**
     * @param {Options=} opt_options Options.
     */
    function MouseWheelZoom(opt_options) {
        var _this = this;
        var options = opt_options ? opt_options : {};
        _this = _super.call(this, 
        /** @type {import("./Interaction.js").InteractionOptions} */ (options)) || this;
        /**
         * @private
         * @type {number}
         */
        _this.totalDelta_ = 0;
        /**
         * @private
         * @type {number}
         */
        _this.lastDelta_ = 0;
        /**
         * @private
         * @type {number}
         */
        _this.maxDelta_ = options.maxDelta !== undefined ? options.maxDelta : 1;
        /**
         * @private
         * @type {number}
         */
        _this.duration_ = options.duration !== undefined ? options.duration : 250;
        /**
         * @private
         * @type {number}
         */
        _this.timeout_ = options.timeout !== undefined ? options.timeout : 80;
        /**
         * @private
         * @type {boolean}
         */
        _this.useAnchor_ =
            options.useAnchor !== undefined ? options.useAnchor : true;
        /**
         * @private
         * @type {boolean}
         */
        _this.constrainResolution_ =
            options.constrainResolution !== undefined
                ? options.constrainResolution
                : false;
        var condition = options.condition ? options.condition : _events_condition_js__WEBPACK_IMPORTED_MODULE_0__.always;
        /**
         * @private
         * @type {import("../events/condition.js").Condition}
         */
        _this.condition_ = options.onFocusOnly
            ? (0,_events_condition_js__WEBPACK_IMPORTED_MODULE_0__.all)(_events_condition_js__WEBPACK_IMPORTED_MODULE_0__.focusWithTabindex, condition)
            : condition;
        /**
         * @private
         * @type {?import("../coordinate.js").Coordinate}
         */
        _this.lastAnchor_ = null;
        /**
         * @private
         * @type {number|undefined}
         */
        _this.startTime_ = undefined;
        /**
         * @private
         * @type {?}
         */
        _this.timeoutId_;
        /**
         * @private
         * @type {Mode|undefined}
         */
        _this.mode_ = undefined;
        /**
         * Trackpad events separated by this delay will be considered separate
         * interactions.
         * @type {number}
         */
        _this.trackpadEventGap_ = 400;
        /**
         * @type {?}
         */
        _this.trackpadTimeoutId_;
        /**
         * The number of delta values per zoom level
         * @private
         * @type {number}
         */
        _this.deltaPerZoom_ = 300;
        return _this;
    }
    /**
     * @private
     */
    MouseWheelZoom.prototype.endInteraction_ = function () {
        this.trackpadTimeoutId_ = undefined;
        var view = this.getMap().getView();
        view.endInteraction(undefined, this.lastDelta_ ? (this.lastDelta_ > 0 ? 1 : -1) : 0, this.lastAnchor_);
    };
    /**
     * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a mousewheel-event) and eventually
     * zooms the map.
     * @param {import("../MapBrowserEvent.js").default} mapBrowserEvent Map browser event.
     * @return {boolean} `false` to stop event propagation.
     */
    MouseWheelZoom.prototype.handleEvent = function (mapBrowserEvent) {
        if (!this.condition_(mapBrowserEvent)) {
            return true;
        }
        var type = mapBrowserEvent.type;
        if (type !== _events_EventType_js__WEBPACK_IMPORTED_MODULE_1__.default.WHEEL) {
            return true;
        }
        var map = mapBrowserEvent.map;
        var wheelEvent = /** @type {WheelEvent} */ (mapBrowserEvent.originalEvent);
        wheelEvent.preventDefault();
        if (this.useAnchor_) {
            this.lastAnchor_ = mapBrowserEvent.coordinate;
        }
        // Delta normalisation inspired by
        // https://github.com/mapbox/mapbox-gl-js/blob/001c7b9/js/ui/handler/scroll_zoom.js
        var delta;
        if (mapBrowserEvent.type == _events_EventType_js__WEBPACK_IMPORTED_MODULE_1__.default.WHEEL) {
            delta = wheelEvent.deltaY;
            if (_has_js__WEBPACK_IMPORTED_MODULE_2__.FIREFOX && wheelEvent.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {
                delta /= _has_js__WEBPACK_IMPORTED_MODULE_2__.DEVICE_PIXEL_RATIO;
            }
            if (wheelEvent.deltaMode === WheelEvent.DOM_DELTA_LINE) {
                delta *= 40;
            }
        }
        if (delta === 0) {
            return false;
        }
        else {
            this.lastDelta_ = delta;
        }
        var now = Date.now();
        if (this.startTime_ === undefined) {
            this.startTime_ = now;
        }
        if (!this.mode_ || now - this.startTime_ > this.trackpadEventGap_) {
            this.mode_ = Math.abs(delta) < 4 ? Mode.TRACKPAD : Mode.WHEEL;
        }
        var view = map.getView();
        if (this.mode_ === Mode.TRACKPAD &&
            !(view.getConstrainResolution() || this.constrainResolution_)) {
            if (this.trackpadTimeoutId_) {
                clearTimeout(this.trackpadTimeoutId_);
            }
            else {
                if (view.getAnimating()) {
                    view.cancelAnimations();
                }
                view.beginInteraction();
            }
            this.trackpadTimeoutId_ = setTimeout(this.endInteraction_.bind(this), this.timeout_);
            view.adjustZoom(-delta / this.deltaPerZoom_, this.lastAnchor_);
            this.startTime_ = now;
            return false;
        }
        this.totalDelta_ += delta;
        var timeLeft = Math.max(this.timeout_ - (now - this.startTime_), 0);
        clearTimeout(this.timeoutId_);
        this.timeoutId_ = setTimeout(this.handleWheelZoom_.bind(this, map), timeLeft);
        return false;
    };
    /**
     * @private
     * @param {import("../PluggableMap.js").default} map Map.
     */
    MouseWheelZoom.prototype.handleWheelZoom_ = function (map) {
        var view = map.getView();
        if (view.getAnimating()) {
            view.cancelAnimations();
        }
        var delta = -(0,_math_js__WEBPACK_IMPORTED_MODULE_3__.clamp)(this.totalDelta_, -this.maxDelta_ * this.deltaPerZoom_, this.maxDelta_ * this.deltaPerZoom_) / this.deltaPerZoom_;
        if (view.getConstrainResolution() || this.constrainResolution_) {
            // view has a zoom constraint, zoom by 1
            delta = delta ? (delta > 0 ? 1 : -1) : 0;
        }
        (0,_Interaction_js__WEBPACK_IMPORTED_MODULE_4__.zoomByDelta)(view, delta, this.lastAnchor_, this.duration_);
        this.mode_ = undefined;
        this.totalDelta_ = 0;
        this.lastAnchor_ = null;
        this.startTime_ = undefined;
        this.timeoutId_ = undefined;
    };
    /**
     * Enable or disable using the mouse's location as an anchor when zooming
     * @param {boolean} useAnchor true to zoom to the mouse's location, false
     * to zoom to the center of the map
     * @api
     */
    MouseWheelZoom.prototype.setMouseAnchor = function (useAnchor) {
        this.useAnchor_ = useAnchor;
        if (!useAnchor) {
            this.lastAnchor_ = null;
        }
    };
    return MouseWheelZoom;
}(_Interaction_js__WEBPACK_IMPORTED_MODULE_4__.default));
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (MouseWheelZoom);
//# sourceMappingURL=MouseWheelZoom.js.map

/***/ }),

/***/ "./node_modules/ol/interaction/PinchRotate.js":
/*!****************************************************!*\
  !*** ./node_modules/ol/interaction/PinchRotate.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _Pointer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Pointer.js */ "./node_modules/ol/interaction/Pointer.js");
/* harmony import */ var _functions_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../functions.js */ "./node_modules/ol/functions.js");
/* harmony import */ var _rotationconstraint_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../rotationconstraint.js */ "./node_modules/ol/rotationconstraint.js");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
/**
 * @module ol/interaction/PinchRotate
 */



/**
 * @typedef {Object} Options
 * @property {number} [duration=250] The duration of the animation in
 * milliseconds.
 * @property {number} [threshold=0.3] Minimal angle in radians to start a rotation.
 */
/**
 * @classdesc
 * Allows the user to rotate the map by twisting with two fingers
 * on a touch screen.
 * @api
 */
var PinchRotate = /** @class */ (function (_super) {
    __extends(PinchRotate, _super);
    /**
     * @param {Options=} opt_options Options.
     */
    function PinchRotate(opt_options) {
        var _this = this;
        var options = opt_options ? opt_options : {};
        var pointerOptions = /** @type {import("./Pointer.js").Options} */ (options);
        if (!pointerOptions.stopDown) {
            pointerOptions.stopDown = _functions_js__WEBPACK_IMPORTED_MODULE_0__.FALSE;
        }
        _this = _super.call(this, pointerOptions) || this;
        /**
         * @private
         * @type {import("../coordinate.js").Coordinate}
         */
        _this.anchor_ = null;
        /**
         * @private
         * @type {number|undefined}
         */
        _this.lastAngle_ = undefined;
        /**
         * @private
         * @type {boolean}
         */
        _this.rotating_ = false;
        /**
         * @private
         * @type {number}
         */
        _this.rotationDelta_ = 0.0;
        /**
         * @private
         * @type {number}
         */
        _this.threshold_ = options.threshold !== undefined ? options.threshold : 0.3;
        /**
         * @private
         * @type {number}
         */
        _this.duration_ = options.duration !== undefined ? options.duration : 250;
        return _this;
    }
    /**
     * Handle pointer drag events.
     * @param {import("../MapBrowserEvent.js").default} mapBrowserEvent Event.
     */
    PinchRotate.prototype.handleDragEvent = function (mapBrowserEvent) {
        var rotationDelta = 0.0;
        var touch0 = this.targetPointers[0];
        var touch1 = this.targetPointers[1];
        // angle between touches
        var angle = Math.atan2(touch1.clientY - touch0.clientY, touch1.clientX - touch0.clientX);
        if (this.lastAngle_ !== undefined) {
            var delta = angle - this.lastAngle_;
            this.rotationDelta_ += delta;
            if (!this.rotating_ && Math.abs(this.rotationDelta_) > this.threshold_) {
                this.rotating_ = true;
            }
            rotationDelta = delta;
        }
        this.lastAngle_ = angle;
        var map = mapBrowserEvent.map;
        var view = map.getView();
        if (view.getConstraints().rotation === _rotationconstraint_js__WEBPACK_IMPORTED_MODULE_1__.disable) {
            return;
        }
        // rotate anchor point.
        // FIXME: should be the intersection point between the lines:
        //     touch0,touch1 and previousTouch0,previousTouch1
        var viewportPosition = map.getViewport().getBoundingClientRect();
        var centroid = (0,_Pointer_js__WEBPACK_IMPORTED_MODULE_2__.centroid)(this.targetPointers);
        centroid[0] -= viewportPosition.left;
        centroid[1] -= viewportPosition.top;
        this.anchor_ = map.getCoordinateFromPixelInternal(centroid);
        // rotate
        if (this.rotating_) {
            map.render();
            view.adjustRotationInternal(rotationDelta, this.anchor_);
        }
    };
    /**
     * Handle pointer up events.
     * @param {import("../MapBrowserEvent.js").default} mapBrowserEvent Event.
     * @return {boolean} If the event was consumed.
     */
    PinchRotate.prototype.handleUpEvent = function (mapBrowserEvent) {
        if (this.targetPointers.length < 2) {
            var map = mapBrowserEvent.map;
            var view = map.getView();
            view.endInteraction(this.duration_);
            return false;
        }
        else {
            return true;
        }
    };
    /**
     * Handle pointer down events.
     * @param {import("../MapBrowserEvent.js").default} mapBrowserEvent Event.
     * @return {boolean} If the event was consumed.
     */
    PinchRotate.prototype.handleDownEvent = function (mapBrowserEvent) {
        if (this.targetPointers.length >= 2) {
            var map = mapBrowserEvent.map;
            this.anchor_ = null;
            this.lastAngle_ = undefined;
            this.rotating_ = false;
            this.rotationDelta_ = 0.0;
            if (!this.handlingDownUpSequence) {
                map.getView().beginInteraction();
            }
            return true;
        }
        else {
            return false;
        }
    };
    return PinchRotate;
}(_Pointer_js__WEBPACK_IMPORTED_MODULE_2__.default));
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (PinchRotate);
//# sourceMappingURL=PinchRotate.js.map

/***/ }),

/***/ "./node_modules/ol/interaction/PinchZoom.js":
/*!**************************************************!*\
  !*** ./node_modules/ol/interaction/PinchZoom.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _Pointer_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Pointer.js */ "./node_modules/ol/interaction/Pointer.js");
/* harmony import */ var _functions_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../functions.js */ "./node_modules/ol/functions.js");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
/**
 * @module ol/interaction/PinchZoom
 */


/**
 * @typedef {Object} Options
 * @property {number} [duration=400] Animation duration in milliseconds.
 */
/**
 * @classdesc
 * Allows the user to zoom the map by pinching with two fingers
 * on a touch screen.
 * @api
 */
var PinchZoom = /** @class */ (function (_super) {
    __extends(PinchZoom, _super);
    /**
     * @param {Options=} opt_options Options.
     */
    function PinchZoom(opt_options) {
        var _this = this;
        var options = opt_options ? opt_options : {};
        var pointerOptions = /** @type {import("./Pointer.js").Options} */ (options);
        if (!pointerOptions.stopDown) {
            pointerOptions.stopDown = _functions_js__WEBPACK_IMPORTED_MODULE_0__.FALSE;
        }
        _this = _super.call(this, pointerOptions) || this;
        /**
         * @private
         * @type {import("../coordinate.js").Coordinate}
         */
        _this.anchor_ = null;
        /**
         * @private
         * @type {number}
         */
        _this.duration_ = options.duration !== undefined ? options.duration : 400;
        /**
         * @private
         * @type {number|undefined}
         */
        _this.lastDistance_ = undefined;
        /**
         * @private
         * @type {number}
         */
        _this.lastScaleDelta_ = 1;
        return _this;
    }
    /**
     * Handle pointer drag events.
     * @param {import("../MapBrowserEvent.js").default} mapBrowserEvent Event.
     */
    PinchZoom.prototype.handleDragEvent = function (mapBrowserEvent) {
        var scaleDelta = 1.0;
        var touch0 = this.targetPointers[0];
        var touch1 = this.targetPointers[1];
        var dx = touch0.clientX - touch1.clientX;
        var dy = touch0.clientY - touch1.clientY;
        // distance between touches
        var distance = Math.sqrt(dx * dx + dy * dy);
        if (this.lastDistance_ !== undefined) {
            scaleDelta = this.lastDistance_ / distance;
        }
        this.lastDistance_ = distance;
        var map = mapBrowserEvent.map;
        var view = map.getView();
        if (scaleDelta != 1.0) {
            this.lastScaleDelta_ = scaleDelta;
        }
        // scale anchor point.
        var viewportPosition = map.getViewport().getBoundingClientRect();
        var centroid = (0,_Pointer_js__WEBPACK_IMPORTED_MODULE_1__.centroid)(this.targetPointers);
        centroid[0] -= viewportPosition.left;
        centroid[1] -= viewportPosition.top;
        this.anchor_ = map.getCoordinateFromPixelInternal(centroid);
        // scale, bypass the resolution constraint
        map.render();
        view.adjustResolutionInternal(scaleDelta, this.anchor_);
    };
    /**
     * Handle pointer up events.
     * @param {import("../MapBrowserEvent.js").default} mapBrowserEvent Event.
     * @return {boolean} If the event was consumed.
     */
    PinchZoom.prototype.handleUpEvent = function (mapBrowserEvent) {
        if (this.targetPointers.length < 2) {
            var map = mapBrowserEvent.map;
            var view = map.getView();
            var direction = this.lastScaleDelta_ > 1 ? 1 : -1;
            view.endInteraction(this.duration_, direction);
            return false;
        }
        else {
            return true;
        }
    };
    /**
     * Handle pointer down events.
     * @param {import("../MapBrowserEvent.js").default} mapBrowserEvent Event.
     * @return {boolean} If the event was consumed.
     */
    PinchZoom.prototype.handleDownEvent = function (mapBrowserEvent) {
        if (this.targetPointers.length >= 2) {
            var map = mapBrowserEvent.map;
            this.anchor_ = null;
            this.lastDistance_ = undefined;
            this.lastScaleDelta_ = 1;
            if (!this.handlingDownUpSequence) {
                map.getView().beginInteraction();
            }
            return true;
        }
        else {
            return false;
        }
    };
    return PinchZoom;
}(_Pointer_js__WEBPACK_IMPORTED_MODULE_1__.default));
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (PinchZoom);
//# sourceMappingURL=PinchZoom.js.map

/***/ }),

/***/ "./node_modules/ol/interaction/Pointer.js":
/*!************************************************!*\
  !*** ./node_modules/ol/interaction/Pointer.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "centroid": () => (/* binding */ centroid),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _Interaction_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Interaction.js */ "./node_modules/ol/interaction/Interaction.js");
/* harmony import */ var _MapBrowserEventType_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../MapBrowserEventType.js */ "./node_modules/ol/MapBrowserEventType.js");
/* harmony import */ var _obj_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../obj.js */ "./node_modules/ol/obj.js");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
/**
 * @module ol/interaction/Pointer
 */



/**
 * @typedef {Object} Options
 * @property {function(import("../MapBrowserEvent.js").default):boolean} [handleDownEvent]
 * Function handling "down" events. If the function returns `true` then a drag
 * sequence is started.
 * @property {function(import("../MapBrowserEvent.js").default):void} [handleDragEvent]
 * Function handling "drag" events. This function is called on "move" events
 * during a drag sequence.
 * @property {function(import("../MapBrowserEvent.js").default):boolean} [handleEvent]
 * Method called by the map to notify the interaction that a browser event was
 * dispatched to the map. The function may return `false` to prevent the
 * propagation of the event to other interactions in the map's interactions
 * chain.
 * @property {function(import("../MapBrowserEvent.js").default):void} [handleMoveEvent]
 * Function handling "move" events. This function is called on "move" events.
 * This functions is also called during a drag sequence, so during a drag
 * sequence both the `handleDragEvent` function and this function are called.
 * If `handleDownEvent` is defined and it returns true this function will not
 * be called during a drag sequence.
 * @property {function(import("../MapBrowserEvent.js").default):boolean} [handleUpEvent]
 *  Function handling "up" events. If the function returns `false` then the
 * current drag sequence is stopped.
 * @property {function(boolean):boolean} [stopDown]
 * Should the down event be propagated to other interactions, or should be
 * stopped?
 */
/**
 * @classdesc
 * Base class that calls user-defined functions on `down`, `move` and `up`
 * events. This class also manages "drag sequences".
 *
 * When the `handleDownEvent` user function returns `true` a drag sequence is
 * started. During a drag sequence the `handleDragEvent` user function is
 * called on `move` events. The drag sequence ends when the `handleUpEvent`
 * user function is called and returns `false`.
 * @api
 */
var PointerInteraction = /** @class */ (function (_super) {
    __extends(PointerInteraction, _super);
    /**
     * @param {Options=} opt_options Options.
     */
    function PointerInteraction(opt_options) {
        var _this = this;
        var options = opt_options ? opt_options : {};
        _this = _super.call(this, 
        /** @type {import("./Interaction.js").InteractionOptions} */ (options)) || this;
        if (options.handleDownEvent) {
            _this.handleDownEvent = options.handleDownEvent;
        }
        if (options.handleDragEvent) {
            _this.handleDragEvent = options.handleDragEvent;
        }
        if (options.handleMoveEvent) {
            _this.handleMoveEvent = options.handleMoveEvent;
        }
        if (options.handleUpEvent) {
            _this.handleUpEvent = options.handleUpEvent;
        }
        if (options.stopDown) {
            _this.stopDown = options.stopDown;
        }
        /**
         * @type {boolean}
         * @protected
         */
        _this.handlingDownUpSequence = false;
        /**
         * @type {!Object<string, PointerEvent>}
         * @private
         */
        _this.trackedPointers_ = {};
        /**
         * @type {Array<PointerEvent>}
         * @protected
         */
        _this.targetPointers = [];
        return _this;
    }
    /**
     * Returns the current number of pointers involved in the interaction,
     * e.g. `2` when two fingers are used.
     * @return {number} The number of pointers.
     * @api
     */
    PointerInteraction.prototype.getPointerCount = function () {
        return this.targetPointers.length;
    };
    /**
     * Handle pointer down events.
     * @param {import("../MapBrowserEvent.js").default} mapBrowserEvent Event.
     * @return {boolean} If the event was consumed.
     * @protected
     */
    PointerInteraction.prototype.handleDownEvent = function (mapBrowserEvent) {
        return false;
    };
    /**
     * Handle pointer drag events.
     * @param {import("../MapBrowserEvent.js").default} mapBrowserEvent Event.
     * @protected
     */
    PointerInteraction.prototype.handleDragEvent = function (mapBrowserEvent) { };
    /**
     * Handles the {@link module:ol/MapBrowserEvent map browser event} and may call into
     * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are
     * detected.
     * @param {import("../MapBrowserEvent.js").default} mapBrowserEvent Map browser event.
     * @return {boolean} `false` to stop event propagation.
     * @api
     */
    PointerInteraction.prototype.handleEvent = function (mapBrowserEvent) {
        if (!mapBrowserEvent.originalEvent) {
            return true;
        }
        var stopEvent = false;
        this.updateTrackedPointers_(mapBrowserEvent);
        if (this.handlingDownUpSequence) {
            if (mapBrowserEvent.type == _MapBrowserEventType_js__WEBPACK_IMPORTED_MODULE_0__.default.POINTERDRAG) {
                this.handleDragEvent(mapBrowserEvent);
                // prevent page scrolling during dragging
                mapBrowserEvent.originalEvent.preventDefault();
            }
            else if (mapBrowserEvent.type == _MapBrowserEventType_js__WEBPACK_IMPORTED_MODULE_0__.default.POINTERUP) {
                var handledUp = this.handleUpEvent(mapBrowserEvent);
                this.handlingDownUpSequence =
                    handledUp && this.targetPointers.length > 0;
            }
        }
        else {
            if (mapBrowserEvent.type == _MapBrowserEventType_js__WEBPACK_IMPORTED_MODULE_0__.default.POINTERDOWN) {
                var handled = this.handleDownEvent(mapBrowserEvent);
                this.handlingDownUpSequence = handled;
                stopEvent = this.stopDown(handled);
            }
            else if (mapBrowserEvent.type == _MapBrowserEventType_js__WEBPACK_IMPORTED_MODULE_0__.default.POINTERMOVE) {
                this.handleMoveEvent(mapBrowserEvent);
            }
        }
        return !stopEvent;
    };
    /**
     * Handle pointer move events.
     * @param {import("../MapBrowserEvent.js").default} mapBrowserEvent Event.
     * @protected
     */
    PointerInteraction.prototype.handleMoveEvent = function (mapBrowserEvent) { };
    /**
     * Handle pointer up events.
     * @param {import("../MapBrowserEvent.js").default} mapBrowserEvent Event.
     * @return {boolean} If the event was consumed.
     * @protected
     */
    PointerInteraction.prototype.handleUpEvent = function (mapBrowserEvent) {
        return false;
    };
    /**
     * This function is used to determine if "down" events should be propagated
     * to other interactions or should be stopped.
     * @param {boolean} handled Was the event handled by the interaction?
     * @return {boolean} Should the `down` event be stopped?
     */
    PointerInteraction.prototype.stopDown = function (handled) {
        return handled;
    };
    /**
     * @param {import("../MapBrowserEvent.js").default} mapBrowserEvent Event.
     * @private
     */
    PointerInteraction.prototype.updateTrackedPointers_ = function (mapBrowserEvent) {
        if (isPointerDraggingEvent(mapBrowserEvent)) {
            var event_1 = mapBrowserEvent.originalEvent;
            var id = event_1.pointerId.toString();
            if (mapBrowserEvent.type == _MapBrowserEventType_js__WEBPACK_IMPORTED_MODULE_0__.default.POINTERUP) {
                delete this.trackedPointers_[id];
            }
            else if (mapBrowserEvent.type == _MapBrowserEventType_js__WEBPACK_IMPORTED_MODULE_0__.default.POINTERDOWN) {
                this.trackedPointers_[id] = event_1;
            }
            else if (id in this.trackedPointers_) {
                // update only when there was a pointerdown event for this pointer
                this.trackedPointers_[id] = event_1;
            }
            this.targetPointers = (0,_obj_js__WEBPACK_IMPORTED_MODULE_1__.getValues)(this.trackedPointers_);
        }
    };
    return PointerInteraction;
}(_Interaction_js__WEBPACK_IMPORTED_MODULE_2__.default));
/**
 * @param {Array<PointerEvent>} pointerEvents List of events.
 * @return {import("../pixel.js").Pixel} Centroid pixel.
 */
function centroid(pointerEvents) {
    var length = pointerEvents.length;
    var clientX = 0;
    var clientY = 0;
    for (var i = 0; i < length; i++) {
        clientX += pointerEvents[i].clientX;
        clientY += pointerEvents[i].clientY;
    }
    return [clientX / length, clientY / length];
}
/**
 * @param {import("../MapBrowserEvent.js").default} mapBrowserEvent Event.
 * @return {boolean} Whether the event is a pointerdown, pointerdrag
 *     or pointerup event.
 */
function isPointerDraggingEvent(mapBrowserEvent) {
    var type = mapBrowserEvent.type;
    return (type === _MapBrowserEventType_js__WEBPACK_IMPORTED_MODULE_0__.default.POINTERDOWN ||
        type === _MapBrowserEventType_js__WEBPACK_IMPORTED_MODULE_0__.default.POINTERDRAG ||
        type === _MapBrowserEventType_js__WEBPACK_IMPORTED_MODULE_0__.default.POINTERUP);
}
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (PointerInteraction);
//# sourceMappingURL=Pointer.js.map

/***/ }),

/***/ "./node_modules/ol/interaction/Property.js":
/*!*************************************************!*\
  !*** ./node_modules/ol/interaction/Property.js ***!
  \*************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/**
 * @module ol/interaction/Property
 */
/**
 * @enum {string}
 */
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
    ACTIVE: 'active',
});
//# sourceMappingURL=Property.js.map

/***/ }),

/***/ "./node_modules/ol/interaction/Select.js":
/*!***********************************************!*\
  !*** ./node_modules/ol/interaction/Select.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "SelectEvent": () => (/* binding */ SelectEvent),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _Collection_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../Collection.js */ "./node_modules/ol/Collection.js");
/* harmony import */ var _CollectionEventType_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../CollectionEventType.js */ "./node_modules/ol/CollectionEventType.js");
/* harmony import */ var _events_Event_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../events/Event.js */ "./node_modules/ol/events/Event.js");
/* harmony import */ var _geom_GeometryType_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../geom/GeometryType.js */ "./node_modules/ol/geom/GeometryType.js");
/* harmony import */ var _Interaction_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./Interaction.js */ "./node_modules/ol/interaction/Interaction.js");
/* harmony import */ var _functions_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../functions.js */ "./node_modules/ol/functions.js");
/* harmony import */ var _obj_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../obj.js */ "./node_modules/ol/obj.js");
/* harmony import */ var _style_Style_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../style/Style.js */ "./node_modules/ol/style/Style.js");
/* harmony import */ var _array_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../array.js */ "./node_modules/ol/array.js");
/* harmony import */ var _util_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../util.js */ "./node_modules/ol/util.js");
/* harmony import */ var _events_condition_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../events/condition.js */ "./node_modules/ol/events/condition.js");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
/**
 * @module ol/interaction/Select
 */











/**
 * @enum {string}
 */
var SelectEventType = {
    /**
     * Triggered when feature(s) has been (de)selected.
     * @event SelectEvent#select
     * @api
     */
    SELECT: 'select',
};
/**
 * A function that takes an {@link module:ol/Feature} or
 * {@link module:ol/render/Feature} and an
 * {@link module:ol/layer/Layer} and returns `true` if the feature may be
 * selected or `false` otherwise.
 * @typedef {function(import("../Feature.js").FeatureLike, import("../layer/Layer.js").default):boolean} FilterFunction
 */
/**
 * @typedef {Object} Options
 * @property {import("../events/condition.js").Condition} [addCondition] A function
 * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a
 * boolean to indicate whether that event should be handled.
 * By default, this is {@link module:ol/events/condition~never}. Use this if you
 * want to use different events for add and remove instead of `toggle`.
 * @property {import("../events/condition.js").Condition} [condition] A function that
 * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a
 * boolean to indicate whether that event should be handled. This is the event
 * for the selected features as a whole. By default, this is
 * {@link module:ol/events/condition~singleClick}. Clicking on a feature selects that
 * feature and removes any that were in the selection. Clicking outside any
 * feature removes all from the selection.
 * See `toggle`, `add`, `remove` options for adding/removing extra features to/
 * from the selection.
 * @property {Array<import("../layer/Layer.js").default>|function(import("../layer/Layer.js").default): boolean} [layers]
 * A list of layers from which features should be selected. Alternatively, a
 * filter function can be provided. The function will be called for each layer
 * in the map and should return `true` for layers that you want to be
 * selectable. If the option is absent, all visible layers will be considered
 * selectable.
 * @property {import("../style/Style.js").StyleLike|null} [style]
 * Style for the selected features. By default the default edit style is used
 * (see {@link module:ol/style}). Set to `null` if this interaction should not apply
 * any style changes for selected features.
 * If set to a falsey value, the selected feature's style will not change.
 * @property {import("../events/condition.js").Condition} [removeCondition] A function
 * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a
 * boolean to indicate whether that event should be handled.
 * By default, this is {@link module:ol/events/condition~never}. Use this if you
 * want to use different events for add and remove instead of `toggle`.
 * @property {import("../events/condition.js").Condition} [toggleCondition] A function
 * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a
 * boolean to indicate whether that event should be handled. This is in addition
 * to the `condition` event. By default,
 * {@link module:ol/events/condition~shiftKeyOnly}, i.e. pressing `shift` as
 * well as the `condition` event, adds that feature to the current selection if
 * it is not currently selected, and removes it if it is. See `add` and `remove`
 * if you want to use different events instead of a toggle.
 * @property {boolean} [multi=false] A boolean that determines if the default
 * behaviour should select only single features or all (overlapping) features at
 * the clicked map position. The default of `false` means single select.
 * @property {import("../Collection.js").default<import("../Feature.js").default>} [features]
 * Collection where the interaction will place selected features. Optional. If
 * not set the interaction will create a collection. In any case the collection
 * used by the interaction is returned by
 * {@link module:ol/interaction/Select~Select#getFeatures}.
 * @property {FilterFunction} [filter] A function
 * that takes an {@link module:ol/Feature} and an
 * {@link module:ol/layer/Layer} and returns `true` if the feature may be
 * selected or `false` otherwise.
 * @property {number} [hitTolerance=0] Hit-detection tolerance. Pixels inside
 * the radius around the given position will be checked for features.
 */
/**
 * @classdesc
 * Events emitted by {@link module:ol/interaction/Select~Select} instances are instances of
 * this type.
 */
var SelectEvent = /** @class */ (function (_super) {
    __extends(SelectEvent, _super);
    /**
     * @param {SelectEventType} type The event type.
     * @param {Array<import("../Feature.js").default>} selected Selected features.
     * @param {Array<import("../Feature.js").default>} deselected Deselected features.
     * @param {import("../MapBrowserEvent.js").default} mapBrowserEvent Associated
     *     {@link module:ol/MapBrowserEvent}.
     */
    function SelectEvent(type, selected, deselected, mapBrowserEvent) {
        var _this = _super.call(this, type) || this;
        /**
         * Selected features array.
         * @type {Array<import("../Feature.js").default>}
         * @api
         */
        _this.selected = selected;
        /**
         * Deselected features array.
         * @type {Array<import("../Feature.js").default>}
         * @api
         */
        _this.deselected = deselected;
        /**
         * Associated {@link module:ol/MapBrowserEvent}.
         * @type {import("../MapBrowserEvent.js").default}
         * @api
         */
        _this.mapBrowserEvent = mapBrowserEvent;
        return _this;
    }
    return SelectEvent;
}(_events_Event_js__WEBPACK_IMPORTED_MODULE_0__.default));

/**
 * Original feature styles to reset to when features are no longer selected.
 * @type {Object.<number, import("../style/Style.js").default|Array.<import("../style/Style.js").default>|import("../style/Style.js").StyleFunction>}
 */
var originalFeatureStyles = {};
/**
 * @classdesc
 * Interaction for selecting vector features. By default, selected features are
 * styled differently, so this interaction can be used for visual highlighting,
 * as well as selecting features for other actions, such as modification or
 * output. There are three ways of controlling which features are selected:
 * using the browser event as defined by the `condition` and optionally the
 * `toggle`, `add`/`remove`, and `multi` options; a `layers` filter; and a
 * further feature filter using the `filter` option.
 *
 * Selected features are added to an internal unmanaged layer.
 *
 * @fires SelectEvent
 * @api
 */
var Select = /** @class */ (function (_super) {
    __extends(Select, _super);
    /**
     * @param {Options=} opt_options Options.
     */
    function Select(opt_options) {
        var _this = _super.call(this) || this;
        var options = opt_options ? opt_options : {};
        /**
         * @private
         */
        _this.boundAddFeature_ = _this.addFeature_.bind(_this);
        /**
         * @private
         */
        _this.boundRemoveFeature_ = _this.removeFeature_.bind(_this);
        /**
         * @private
         * @type {import("../events/condition.js").Condition}
         */
        _this.condition_ = options.condition ? options.condition : _events_condition_js__WEBPACK_IMPORTED_MODULE_1__.singleClick;
        /**
         * @private
         * @type {import("../events/condition.js").Condition}
         */
        _this.addCondition_ = options.addCondition ? options.addCondition : _events_condition_js__WEBPACK_IMPORTED_MODULE_1__.never;
        /**
         * @private
         * @type {import("../events/condition.js").Condition}
         */
        _this.removeCondition_ = options.removeCondition
            ? options.removeCondition
            : _events_condition_js__WEBPACK_IMPORTED_MODULE_1__.never;
        /**
         * @private
         * @type {import("../events/condition.js").Condition}
         */
        _this.toggleCondition_ = options.toggleCondition
            ? options.toggleCondition
            : _events_condition_js__WEBPACK_IMPORTED_MODULE_1__.shiftKeyOnly;
        /**
         * @private
         * @type {boolean}
         */
        _this.multi_ = options.multi ? options.multi : false;
        /**
         * @private
         * @type {FilterFunction}
         */
        _this.filter_ = options.filter ? options.filter : _functions_js__WEBPACK_IMPORTED_MODULE_2__.TRUE;
        /**
         * @private
         * @type {number}
         */
        _this.hitTolerance_ = options.hitTolerance ? options.hitTolerance : 0;
        /**
         * @private
         * @type {import("../style/Style.js").default|Array.<import("../style/Style.js").default>|import("../style/Style.js").StyleFunction|null}
         */
        _this.style_ =
            options.style !== undefined ? options.style : getDefaultStyleFunction();
        /**
         * @private
         * @type {import("../Collection.js").default}
         */
        _this.features_ = options.features || new _Collection_js__WEBPACK_IMPORTED_MODULE_3__.default();
        /** @type {function(import("../layer/Layer.js").default): boolean} */
        var layerFilter;
        if (options.layers) {
            if (typeof options.layers === 'function') {
                layerFilter = options.layers;
            }
            else {
                var layers_1 = options.layers;
                layerFilter = function (layer) {
                    return (0,_array_js__WEBPACK_IMPORTED_MODULE_4__.includes)(layers_1, layer);
                };
            }
        }
        else {
            layerFilter = _functions_js__WEBPACK_IMPORTED_MODULE_2__.TRUE;
        }
        /**
         * @private
         * @type {function(import("../layer/Layer.js").default): boolean}
         */
        _this.layerFilter_ = layerFilter;
        /**
         * An association between selected feature (key)
         * and layer (value)
         * @private
         * @type {Object<string, import("../layer/Layer.js").default>}
         */
        _this.featureLayerAssociation_ = {};
        return _this;
    }
    /**
     * @param {import("../Feature.js").FeatureLike} feature Feature.
     * @param {import("../layer/Layer.js").default} layer Layer.
     * @private
     */
    Select.prototype.addFeatureLayerAssociation_ = function (feature, layer) {
        this.featureLayerAssociation_[(0,_util_js__WEBPACK_IMPORTED_MODULE_5__.getUid)(feature)] = layer;
    };
    /**
     * Get the selected features.
     * @return {import("../Collection.js").default<import("../Feature.js").default>} Features collection.
     * @api
     */
    Select.prototype.getFeatures = function () {
        return this.features_;
    };
    /**
     * Returns the Hit-detection tolerance.
     * @returns {number} Hit tolerance in pixels.
     * @api
     */
    Select.prototype.getHitTolerance = function () {
        return this.hitTolerance_;
    };
    /**
     * Returns the associated {@link module:ol/layer/Vector~Vector vectorlayer} of
     * the (last) selected feature. Note that this will not work with any
     * programmatic method like pushing features to
     * {@link module:ol/interaction/Select~Select#getFeatures collection}.
     * @param {import("../Feature.js").FeatureLike} feature Feature
     * @return {import('../layer/Vector.js').default} Layer.
     * @api
     */
    Select.prototype.getLayer = function (feature) {
        return /** @type {import('../layer/Vector.js').default} */ (this
            .featureLayerAssociation_[(0,_util_js__WEBPACK_IMPORTED_MODULE_5__.getUid)(feature)]);
    };
    /**
     * Hit-detection tolerance. Pixels inside the radius around the given position
     * will be checked for features.
     * @param {number} hitTolerance Hit tolerance in pixels.
     * @api
     */
    Select.prototype.setHitTolerance = function (hitTolerance) {
        this.hitTolerance_ = hitTolerance;
    };
    /**
     * Remove the interaction from its current map, if any,  and attach it to a new
     * map, if any. Pass `null` to just remove the interaction from the current map.
     * @param {import("../PluggableMap.js").default} map Map.
     * @api
     */
    Select.prototype.setMap = function (map) {
        var currentMap = this.getMap();
        if (currentMap && this.style_) {
            this.features_.forEach(this.restorePreviousStyle_.bind(this));
        }
        _super.prototype.setMap.call(this, map);
        if (map) {
            this.features_.addEventListener(_CollectionEventType_js__WEBPACK_IMPORTED_MODULE_6__.default.ADD, this.boundAddFeature_);
            this.features_.addEventListener(_CollectionEventType_js__WEBPACK_IMPORTED_MODULE_6__.default.REMOVE, this.boundRemoveFeature_);
            if (this.style_) {
                this.features_.forEach(this.applySelectedStyle_.bind(this));
            }
        }
        else {
            this.features_.removeEventListener(_CollectionEventType_js__WEBPACK_IMPORTED_MODULE_6__.default.ADD, this.boundAddFeature_);
            this.features_.removeEventListener(_CollectionEventType_js__WEBPACK_IMPORTED_MODULE_6__.default.REMOVE, this.boundRemoveFeature_);
        }
    };
    /**
     * @param {import("../Collection.js").CollectionEvent} evt Event.
     * @private
     */
    Select.prototype.addFeature_ = function (evt) {
        var feature = evt.element;
        if (this.style_) {
            this.applySelectedStyle_(feature);
        }
    };
    /**
     * @param {import("../Collection.js").CollectionEvent} evt Event.
     * @private
     */
    Select.prototype.removeFeature_ = function (evt) {
        var feature = evt.element;
        if (this.style_) {
            this.restorePreviousStyle_(feature);
        }
    };
    /**
     * @return {import("../style/Style.js").StyleLike|null} Select style.
     */
    Select.prototype.getStyle = function () {
        return this.style_;
    };
    /**
     * @param {import("../Feature.js").default} feature Feature
     * @private
     */
    Select.prototype.applySelectedStyle_ = function (feature) {
        var key = (0,_util_js__WEBPACK_IMPORTED_MODULE_5__.getUid)(feature);
        if (!(key in originalFeatureStyles)) {
            originalFeatureStyles[key] = feature.getStyle();
        }
        feature.setStyle(this.style_);
    };
    /**
     * @param {import("../Feature.js").default} feature Feature
     * @private
     */
    Select.prototype.restorePreviousStyle_ = function (feature) {
        var interactions = this.getMap().getInteractions().getArray();
        for (var i = interactions.length - 1; i >= 0; --i) {
            var interaction = interactions[i];
            if (interaction !== this &&
                interaction instanceof Select &&
                interaction.getStyle() &&
                interaction.getFeatures().getArray().lastIndexOf(feature) !== -1) {
                feature.setStyle(interaction.getStyle());
                return;
            }
        }
        var key = (0,_util_js__WEBPACK_IMPORTED_MODULE_5__.getUid)(feature);
        feature.setStyle(originalFeatureStyles[key]);
        delete originalFeatureStyles[key];
    };
    /**
     * @param {import("../Feature.js").FeatureLike} feature Feature.
     * @private
     */
    Select.prototype.removeFeatureLayerAssociation_ = function (feature) {
        delete this.featureLayerAssociation_[(0,_util_js__WEBPACK_IMPORTED_MODULE_5__.getUid)(feature)];
    };
    /**
     * Handles the {@link module:ol/MapBrowserEvent map browser event} and may change the
     * selected state of features.
     * @param {import("../MapBrowserEvent.js").default} mapBrowserEvent Map browser event.
     * @return {boolean} `false` to stop event propagation.
     * @this {Select}
     */
    Select.prototype.handleEvent = function (mapBrowserEvent) {
        if (!this.condition_(mapBrowserEvent)) {
            return true;
        }
        var add = this.addCondition_(mapBrowserEvent);
        var remove = this.removeCondition_(mapBrowserEvent);
        var toggle = this.toggleCondition_(mapBrowserEvent);
        var set = !add && !remove && !toggle;
        var map = mapBrowserEvent.map;
        var features = this.getFeatures();
        var deselected = [];
        var selected = [];
        if (set) {
            // Replace the currently selected feature(s) with the feature(s) at the
            // pixel, or clear the selected feature(s) if there is no feature at
            // the pixel.
            (0,_obj_js__WEBPACK_IMPORTED_MODULE_7__.clear)(this.featureLayerAssociation_);
            map.forEachFeatureAtPixel(mapBrowserEvent.pixel, 
            /**
             * @param {import("../Feature.js").FeatureLike} feature Feature.
             * @param {import("../layer/Layer.js").default} layer Layer.
             * @return {boolean|undefined} Continue to iterate over the features.
             */
            function (feature, layer) {
                if (this.filter_(feature, layer)) {
                    selected.push(feature);
                    this.addFeatureLayerAssociation_(feature, layer);
                    return !this.multi_;
                }
            }.bind(this), {
                layerFilter: this.layerFilter_,
                hitTolerance: this.hitTolerance_,
            });
            for (var i = features.getLength() - 1; i >= 0; --i) {
                var feature = features.item(i);
                var index = selected.indexOf(feature);
                if (index > -1) {
                    // feature is already selected
                    selected.splice(index, 1);
                }
                else {
                    features.remove(feature);
                    deselected.push(feature);
                }
            }
            if (selected.length !== 0) {
                features.extend(selected);
            }
        }
        else {
            // Modify the currently selected feature(s).
            map.forEachFeatureAtPixel(mapBrowserEvent.pixel, 
            /**
             * @param {import("../Feature.js").FeatureLike} feature Feature.
             * @param {import("../layer/Layer.js").default} layer Layer.
             * @return {boolean|undefined} Continue to iterate over the features.
             */
            function (feature, layer) {
                if (this.filter_(feature, layer)) {
                    if ((add || toggle) && !(0,_array_js__WEBPACK_IMPORTED_MODULE_4__.includes)(features.getArray(), feature)) {
                        selected.push(feature);
                        this.addFeatureLayerAssociation_(feature, layer);
                    }
                    else if ((remove || toggle) &&
                        (0,_array_js__WEBPACK_IMPORTED_MODULE_4__.includes)(features.getArray(), feature)) {
                        deselected.push(feature);
                        this.removeFeatureLayerAssociation_(feature);
                    }
                    return !this.multi_;
                }
            }.bind(this), {
                layerFilter: this.layerFilter_,
                hitTolerance: this.hitTolerance_,
            });
            for (var j = deselected.length - 1; j >= 0; --j) {
                features.remove(deselected[j]);
            }
            features.extend(selected);
        }
        if (selected.length > 0 || deselected.length > 0) {
            this.dispatchEvent(new SelectEvent(SelectEventType.SELECT, selected, deselected, mapBrowserEvent));
        }
        return true;
    };
    return Select;
}(_Interaction_js__WEBPACK_IMPORTED_MODULE_8__.default));
/**
 * @return {import("../style/Style.js").StyleFunction} Styles.
 */
function getDefaultStyleFunction() {
    var styles = (0,_style_Style_js__WEBPACK_IMPORTED_MODULE_9__.createEditingStyle)();
    (0,_array_js__WEBPACK_IMPORTED_MODULE_4__.extend)(styles[_geom_GeometryType_js__WEBPACK_IMPORTED_MODULE_10__.default.POLYGON], styles[_geom_GeometryType_js__WEBPACK_IMPORTED_MODULE_10__.default.LINE_STRING]);
    (0,_array_js__WEBPACK_IMPORTED_MODULE_4__.extend)(styles[_geom_GeometryType_js__WEBPACK_IMPORTED_MODULE_10__.default.GEOMETRY_COLLECTION], styles[_geom_GeometryType_js__WEBPACK_IMPORTED_MODULE_10__.default.LINE_STRING]);
    return function (feature) {
        if (!feature.getGeometry()) {
            return null;
        }
        return styles[feature.getGeometry().getType()];
    };
}
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Select);
//# sourceMappingURL=Select.js.map

/***/ }),

/***/ "./node_modules/ol/interaction/Snap.js":
/*!*********************************************!*\
  !*** ./node_modules/ol/interaction/Snap.js ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _CollectionEventType_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../CollectionEventType.js */ "./node_modules/ol/CollectionEventType.js");
/* harmony import */ var _events_EventType_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../events/EventType.js */ "./node_modules/ol/events/EventType.js");
/* harmony import */ var _geom_GeometryType_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../geom/GeometryType.js */ "./node_modules/ol/geom/GeometryType.js");
/* harmony import */ var _Pointer_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./Pointer.js */ "./node_modules/ol/interaction/Pointer.js");
/* harmony import */ var _structs_RBush_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../structs/RBush.js */ "./node_modules/ol/structs/RBush.js");
/* harmony import */ var _source_VectorEventType_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../source/VectorEventType.js */ "./node_modules/ol/source/VectorEventType.js");
/* harmony import */ var _functions_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../functions.js */ "./node_modules/ol/functions.js");
/* harmony import */ var _extent_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../extent.js */ "./node_modules/ol/extent.js");
/* harmony import */ var _coordinate_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../coordinate.js */ "./node_modules/ol/coordinate.js");
/* harmony import */ var _geom_Polygon_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../geom/Polygon.js */ "./node_modules/ol/geom/Polygon.js");
/* harmony import */ var _proj_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../proj.js */ "./node_modules/ol/proj.js");
/* harmony import */ var _util_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../util.js */ "./node_modules/ol/util.js");
/* harmony import */ var _obj_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../obj.js */ "./node_modules/ol/obj.js");
/* harmony import */ var _events_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../events.js */ "./node_modules/ol/events.js");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
/**
 * @module ol/interaction/Snap
 */














/**
 * @typedef {Object} Result
 * @property {boolean} snapped
 * @property {import("../coordinate.js").Coordinate|null} vertex
 * @property {import("../pixel.js").Pixel|null} vertexPixel
 */
/**
 * @typedef {Object} SegmentData
 * @property {import("../Feature.js").default} feature
 * @property {Array<import("../coordinate.js").Coordinate>} segment
 */
/**
 * @typedef {Object} Options
 * @property {import("../Collection.js").default<import("../Feature.js").default>} [features] Snap to these features. Either this option or source should be provided.
 * @property {boolean} [edge=true] Snap to edges.
 * @property {boolean} [vertex=true] Snap to vertices.
 * @property {number} [pixelTolerance=10] Pixel tolerance for considering the pointer close enough to a segment or
 * vertex for snapping.
 * @property {import("../source/Vector.js").default} [source] Snap to features from this source. Either this option or features should be provided
 */
/**
 * @param  {import("../source/Vector.js").VectorSourceEvent|import("../Collection.js").CollectionEvent} evt Event.
 * @return {import("../Feature.js").default} Feature.
 */
function getFeatureFromEvent(evt) {
    if (
    /** @type {import("../source/Vector.js").VectorSourceEvent} */ (evt).feature) {
        return /** @type {import("../source/Vector.js").VectorSourceEvent} */ (evt)
            .feature;
    }
    else if (
    /** @type {import("../Collection.js").CollectionEvent} */ (evt).element) {
        return /** @type {import("../Feature.js").default} */ (
        /** @type {import("../Collection.js").CollectionEvent} */ (evt).element);
    }
}
var tempSegment = [];
/**
 * @classdesc
 * Handles snapping of vector features while modifying or drawing them.  The
 * features can come from a {@link module:ol/source/Vector} or {@link module:ol/Collection~Collection}
 * Any interaction object that allows the user to interact
 * with the features using the mouse can benefit from the snapping, as long
 * as it is added before.
 *
 * The snap interaction modifies map browser event `coordinate` and `pixel`
 * properties to force the snap to occur to any interaction that them.
 *
 * Example:
 *
 *     import Snap from 'ol/interaction/Snap';
 *
 *     const snap = new Snap({
 *       source: source
 *     });
 *
 *     map.addInteraction(snap);
 *
 * @api
 */
var Snap = /** @class */ (function (_super) {
    __extends(Snap, _super);
    /**
     * @param {Options=} opt_options Options.
     */
    function Snap(opt_options) {
        var _this = this;
        var options = opt_options ? opt_options : {};
        var pointerOptions = /** @type {import("./Pointer.js").Options} */ (options);
        if (!pointerOptions.handleDownEvent) {
            pointerOptions.handleDownEvent = _functions_js__WEBPACK_IMPORTED_MODULE_1__.TRUE;
        }
        if (!pointerOptions.stopDown) {
            pointerOptions.stopDown = _functions_js__WEBPACK_IMPORTED_MODULE_1__.FALSE;
        }
        _this = _super.call(this, pointerOptions) || this;
        /**
         * @type {import("../source/Vector.js").default}
         * @private
         */
        _this.source_ = options.source ? options.source : null;
        /**
         * @private
         * @type {boolean}
         */
        _this.vertex_ = options.vertex !== undefined ? options.vertex : true;
        /**
         * @private
         * @type {boolean}
         */
        _this.edge_ = options.edge !== undefined ? options.edge : true;
        /**
         * @type {import("../Collection.js").default<import("../Feature.js").default>}
         * @private
         */
        _this.features_ = options.features ? options.features : null;
        /**
         * @type {Array<import("../events.js").EventsKey>}
         * @private
         */
        _this.featuresListenerKeys_ = [];
        /**
         * @type {Object<string, import("../events.js").EventsKey>}
         * @private
         */
        _this.featureChangeListenerKeys_ = {};
        /**
         * Extents are preserved so indexed segment can be quickly removed
         * when its feature geometry changes
         * @type {Object<string, import("../extent.js").Extent>}
         * @private
         */
        _this.indexedFeaturesExtents_ = {};
        /**
         * If a feature geometry changes while a pointer drag|move event occurs, the
         * feature doesn't get updated right away.  It will be at the next 'pointerup'
         * event fired.
         * @type {!Object<string, import("../Feature.js").default>}
         * @private
         */
        _this.pendingFeatures_ = {};
        /**
         * @type {number}
         * @private
         */
        _this.pixelTolerance_ =
            options.pixelTolerance !== undefined ? options.pixelTolerance : 10;
        /**
         * Segment RTree for each layer
         * @type {import("../structs/RBush.js").default<SegmentData>}
         * @private
         */
        _this.rBush_ = new _structs_RBush_js__WEBPACK_IMPORTED_MODULE_2__.default();
        /**
         * @const
         * @private
         * @type {Object<string, function(import("../Feature.js").default, import("../geom/Geometry.js").default): void>}
         */
        _this.SEGMENT_WRITERS_ = {
            'Point': _this.writePointGeometry_.bind(_this),
            'LineString': _this.writeLineStringGeometry_.bind(_this),
            'LinearRing': _this.writeLineStringGeometry_.bind(_this),
            'Polygon': _this.writePolygonGeometry_.bind(_this),
            'MultiPoint': _this.writeMultiPointGeometry_.bind(_this),
            'MultiLineString': _this.writeMultiLineStringGeometry_.bind(_this),
            'MultiPolygon': _this.writeMultiPolygonGeometry_.bind(_this),
            'GeometryCollection': _this.writeGeometryCollectionGeometry_.bind(_this),
            'Circle': _this.writeCircleGeometry_.bind(_this),
        };
        return _this;
    }
    /**
     * Add a feature to the collection of features that we may snap to.
     * @param {import("../Feature.js").default} feature Feature.
     * @param {boolean=} opt_listen Whether to listen to the feature change or not
     *     Defaults to `true`.
     * @api
     */
    Snap.prototype.addFeature = function (feature, opt_listen) {
        var register = opt_listen !== undefined ? opt_listen : true;
        var feature_uid = (0,_util_js__WEBPACK_IMPORTED_MODULE_3__.getUid)(feature);
        var geometry = feature.getGeometry();
        if (geometry) {
            var segmentWriter = this.SEGMENT_WRITERS_[geometry.getType()];
            if (segmentWriter) {
                this.indexedFeaturesExtents_[feature_uid] = geometry.getExtent((0,_extent_js__WEBPACK_IMPORTED_MODULE_4__.createEmpty)());
                segmentWriter(feature, geometry);
            }
        }
        if (register) {
            this.featureChangeListenerKeys_[feature_uid] = (0,_events_js__WEBPACK_IMPORTED_MODULE_5__.listen)(feature, _events_EventType_js__WEBPACK_IMPORTED_MODULE_6__.default.CHANGE, this.handleFeatureChange_, this);
        }
    };
    /**
     * @param {import("../Feature.js").default} feature Feature.
     * @private
     */
    Snap.prototype.forEachFeatureAdd_ = function (feature) {
        this.addFeature(feature);
    };
    /**
     * @param {import("../Feature.js").default} feature Feature.
     * @private
     */
    Snap.prototype.forEachFeatureRemove_ = function (feature) {
        this.removeFeature(feature);
    };
    /**
     * @return {import("../Collection.js").default<import("../Feature.js").default>|Array<import("../Feature.js").default>} Features.
     * @private
     */
    Snap.prototype.getFeatures_ = function () {
        var features;
        if (this.features_) {
            features = this.features_;
        }
        else if (this.source_) {
            features = this.source_.getFeatures();
        }
        return features;
    };
    /**
     * @param {import("../MapBrowserEvent.js").default} evt Map browser event.
     * @return {boolean} `false` to stop event propagation.
     */
    Snap.prototype.handleEvent = function (evt) {
        var result = this.snapTo(evt.pixel, evt.coordinate, evt.map);
        if (result.snapped) {
            evt.coordinate = result.vertex.slice(0, 2);
            evt.pixel = result.vertexPixel;
        }
        return _super.prototype.handleEvent.call(this, evt);
    };
    /**
     * @param {import("../source/Vector.js").VectorSourceEvent|import("../Collection.js").CollectionEvent} evt Event.
     * @private
     */
    Snap.prototype.handleFeatureAdd_ = function (evt) {
        var feature = getFeatureFromEvent(evt);
        this.addFeature(feature);
    };
    /**
     * @param {import("../source/Vector.js").VectorSourceEvent|import("../Collection.js").CollectionEvent} evt Event.
     * @private
     */
    Snap.prototype.handleFeatureRemove_ = function (evt) {
        var feature = getFeatureFromEvent(evt);
        this.removeFeature(feature);
    };
    /**
     * @param {import("../events/Event.js").default} evt Event.
     * @private
     */
    Snap.prototype.handleFeatureChange_ = function (evt) {
        var feature = /** @type {import("../Feature.js").default} */ (evt.target);
        if (this.handlingDownUpSequence) {
            var uid = (0,_util_js__WEBPACK_IMPORTED_MODULE_3__.getUid)(feature);
            if (!(uid in this.pendingFeatures_)) {
                this.pendingFeatures_[uid] = feature;
            }
        }
        else {
            this.updateFeature_(feature);
        }
    };
    /**
     * Handle pointer up events.
     * @param {import("../MapBrowserEvent.js").default} evt Event.
     * @return {boolean} If the event was consumed.
     */
    Snap.prototype.handleUpEvent = function (evt) {
        var featuresToUpdate = (0,_obj_js__WEBPACK_IMPORTED_MODULE_7__.getValues)(this.pendingFeatures_);
        if (featuresToUpdate.length) {
            featuresToUpdate.forEach(this.updateFeature_.bind(this));
            this.pendingFeatures_ = {};
        }
        return false;
    };
    /**
     * Remove a feature from the collection of features that we may snap to.
     * @param {import("../Feature.js").default} feature Feature
     * @param {boolean=} opt_unlisten Whether to unlisten to the feature change
     *     or not. Defaults to `true`.
     * @api
     */
    Snap.prototype.removeFeature = function (feature, opt_unlisten) {
        var unregister = opt_unlisten !== undefined ? opt_unlisten : true;
        var feature_uid = (0,_util_js__WEBPACK_IMPORTED_MODULE_3__.getUid)(feature);
        var extent = this.indexedFeaturesExtents_[feature_uid];
        if (extent) {
            var rBush = this.rBush_;
            var nodesToRemove_1 = [];
            rBush.forEachInExtent(extent, function (node) {
                if (feature === node.feature) {
                    nodesToRemove_1.push(node);
                }
            });
            for (var i = nodesToRemove_1.length - 1; i >= 0; --i) {
                rBush.remove(nodesToRemove_1[i]);
            }
        }
        if (unregister) {
            (0,_events_js__WEBPACK_IMPORTED_MODULE_5__.unlistenByKey)(this.featureChangeListenerKeys_[feature_uid]);
            delete this.featureChangeListenerKeys_[feature_uid];
        }
    };
    /**
     * Remove the interaction from its current map and attach it to the new map.
     * Subclasses may set up event handlers to get notified about changes to
     * the map here.
     * @param {import("../PluggableMap.js").default} map Map.
     */
    Snap.prototype.setMap = function (map) {
        var currentMap = this.getMap();
        var keys = this.featuresListenerKeys_;
        var features = /** @type {Array<import("../Feature.js").default>} */ (this.getFeatures_());
        if (currentMap) {
            keys.forEach(_events_js__WEBPACK_IMPORTED_MODULE_5__.unlistenByKey);
            keys.length = 0;
            features.forEach(this.forEachFeatureRemove_.bind(this));
        }
        _super.prototype.setMap.call(this, map);
        if (map) {
            if (this.features_) {
                keys.push((0,_events_js__WEBPACK_IMPORTED_MODULE_5__.listen)(this.features_, _CollectionEventType_js__WEBPACK_IMPORTED_MODULE_8__.default.ADD, this.handleFeatureAdd_, this), (0,_events_js__WEBPACK_IMPORTED_MODULE_5__.listen)(this.features_, _CollectionEventType_js__WEBPACK_IMPORTED_MODULE_8__.default.REMOVE, this.handleFeatureRemove_, this));
            }
            else if (this.source_) {
                keys.push((0,_events_js__WEBPACK_IMPORTED_MODULE_5__.listen)(this.source_, _source_VectorEventType_js__WEBPACK_IMPORTED_MODULE_9__.default.ADDFEATURE, this.handleFeatureAdd_, this), (0,_events_js__WEBPACK_IMPORTED_MODULE_5__.listen)(this.source_, _source_VectorEventType_js__WEBPACK_IMPORTED_MODULE_9__.default.REMOVEFEATURE, this.handleFeatureRemove_, this));
            }
            features.forEach(this.forEachFeatureAdd_.bind(this));
        }
    };
    /**
     * @param {import("../pixel.js").Pixel} pixel Pixel
     * @param {import("../coordinate.js").Coordinate} pixelCoordinate Coordinate
     * @param {import("../PluggableMap.js").default} map Map.
     * @return {Result} Snap result
     */
    Snap.prototype.snapTo = function (pixel, pixelCoordinate, map) {
        var lowerLeft = map.getCoordinateFromPixel([
            pixel[0] - this.pixelTolerance_,
            pixel[1] + this.pixelTolerance_,
        ]);
        var upperRight = map.getCoordinateFromPixel([
            pixel[0] + this.pixelTolerance_,
            pixel[1] - this.pixelTolerance_,
        ]);
        var box = (0,_extent_js__WEBPACK_IMPORTED_MODULE_4__.boundingExtent)([lowerLeft, upperRight]);
        var segments = this.rBush_.getInExtent(box);
        // If snapping on vertices only, don't consider circles
        if (this.vertex_ && !this.edge_) {
            segments = segments.filter(function (segment) {
                return segment.feature.getGeometry().getType() !== _geom_GeometryType_js__WEBPACK_IMPORTED_MODULE_10__.default.CIRCLE;
            });
        }
        var snapped = false;
        var vertex = null;
        var vertexPixel = null;
        if (segments.length === 0) {
            return {
                snapped: snapped,
                vertex: vertex,
                vertexPixel: vertexPixel,
            };
        }
        var projection = map.getView().getProjection();
        var projectedCoordinate = (0,_proj_js__WEBPACK_IMPORTED_MODULE_0__.fromUserCoordinate)(pixelCoordinate, projection);
        var closestSegmentData;
        var minSquaredDistance = Infinity;
        for (var i = 0; i < segments.length; ++i) {
            var segmentData = segments[i];
            tempSegment[0] = (0,_proj_js__WEBPACK_IMPORTED_MODULE_0__.fromUserCoordinate)(segmentData.segment[0], projection);
            tempSegment[1] = (0,_proj_js__WEBPACK_IMPORTED_MODULE_0__.fromUserCoordinate)(segmentData.segment[1], projection);
            var delta = (0,_coordinate_js__WEBPACK_IMPORTED_MODULE_11__.squaredDistanceToSegment)(projectedCoordinate, tempSegment);
            if (delta < minSquaredDistance) {
                closestSegmentData = segmentData;
                minSquaredDistance = delta;
            }
        }
        var closestSegment = closestSegmentData.segment;
        if (this.vertex_ && !this.edge_) {
            var pixel1 = map.getPixelFromCoordinate(closestSegment[0]);
            var pixel2 = map.getPixelFromCoordinate(closestSegment[1]);
            var squaredDist1 = (0,_coordinate_js__WEBPACK_IMPORTED_MODULE_11__.squaredDistance)(pixel, pixel1);
            var squaredDist2 = (0,_coordinate_js__WEBPACK_IMPORTED_MODULE_11__.squaredDistance)(pixel, pixel2);
            var dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));
            if (dist <= this.pixelTolerance_) {
                snapped = true;
                vertex =
                    squaredDist1 > squaredDist2 ? closestSegment[1] : closestSegment[0];
                vertexPixel = map.getPixelFromCoordinate(vertex);
            }
        }
        else if (this.edge_) {
            var isCircle = closestSegmentData.feature.getGeometry().getType() ===
                _geom_GeometryType_js__WEBPACK_IMPORTED_MODULE_10__.default.CIRCLE;
            if (isCircle) {
                var circleGeometry = closestSegmentData.feature.getGeometry();
                var userProjection = (0,_proj_js__WEBPACK_IMPORTED_MODULE_0__.getUserProjection)();
                if (userProjection) {
                    circleGeometry = circleGeometry
                        .clone()
                        .transform(userProjection, projection);
                }
                vertex = (0,_proj_js__WEBPACK_IMPORTED_MODULE_0__.toUserCoordinate)((0,_coordinate_js__WEBPACK_IMPORTED_MODULE_11__.closestOnCircle)(projectedCoordinate, 
                /** @type {import("../geom/Circle.js").default} */ (circleGeometry)), projection);
            }
            else {
                tempSegment[0] = (0,_proj_js__WEBPACK_IMPORTED_MODULE_0__.fromUserCoordinate)(closestSegment[0], projection);
                tempSegment[1] = (0,_proj_js__WEBPACK_IMPORTED_MODULE_0__.fromUserCoordinate)(closestSegment[1], projection);
                vertex = (0,_proj_js__WEBPACK_IMPORTED_MODULE_0__.toUserCoordinate)((0,_coordinate_js__WEBPACK_IMPORTED_MODULE_11__.closestOnSegment)(projectedCoordinate, tempSegment), projection);
            }
            vertexPixel = map.getPixelFromCoordinate(vertex);
            if ((0,_coordinate_js__WEBPACK_IMPORTED_MODULE_11__.distance)(pixel, vertexPixel) <= this.pixelTolerance_) {
                snapped = true;
                if (this.vertex_ && !isCircle) {
                    var pixel1 = map.getPixelFromCoordinate(closestSegment[0]);
                    var pixel2 = map.getPixelFromCoordinate(closestSegment[1]);
                    var squaredDist1 = (0,_coordinate_js__WEBPACK_IMPORTED_MODULE_11__.squaredDistance)(vertexPixel, pixel1);
                    var squaredDist2 = (0,_coordinate_js__WEBPACK_IMPORTED_MODULE_11__.squaredDistance)(vertexPixel, pixel2);
                    var dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));
                    if (dist <= this.pixelTolerance_) {
                        vertex =
                            squaredDist1 > squaredDist2
                                ? closestSegment[1]
                                : closestSegment[0];
                        vertexPixel = map.getPixelFromCoordinate(vertex);
                    }
                }
            }
        }
        if (snapped) {
            vertexPixel = [Math.round(vertexPixel[0]), Math.round(vertexPixel[1])];
        }
        return {
            snapped: snapped,
            vertex: vertex,
            vertexPixel: vertexPixel,
        };
    };
    /**
     * @param {import("../Feature.js").default} feature Feature
     * @private
     */
    Snap.prototype.updateFeature_ = function (feature) {
        this.removeFeature(feature, false);
        this.addFeature(feature, false);
    };
    /**
     * @param {import("../Feature.js").default} feature Feature
     * @param {import("../geom/Circle.js").default} geometry Geometry.
     * @private
     */
    Snap.prototype.writeCircleGeometry_ = function (feature, geometry) {
        var projection = this.getMap().getView().getProjection();
        var circleGeometry = geometry;
        var userProjection = (0,_proj_js__WEBPACK_IMPORTED_MODULE_0__.getUserProjection)();
        if (userProjection) {
            circleGeometry = /** @type {import("../geom/Circle.js").default} */ (circleGeometry
                .clone()
                .transform(userProjection, projection));
        }
        var polygon = (0,_geom_Polygon_js__WEBPACK_IMPORTED_MODULE_12__.fromCircle)(circleGeometry);
        if (userProjection) {
            polygon.transform(projection, userProjection);
        }
        var coordinates = polygon.getCoordinates()[0];
        for (var i = 0, ii = coordinates.length - 1; i < ii; ++i) {
            var segment = coordinates.slice(i, i + 2);
            var segmentData = {
                feature: feature,
                segment: segment,
            };
            this.rBush_.insert((0,_extent_js__WEBPACK_IMPORTED_MODULE_4__.boundingExtent)(segment), segmentData);
        }
    };
    /**
     * @param {import("../Feature.js").default} feature Feature
     * @param {import("../geom/GeometryCollection.js").default} geometry Geometry.
     * @private
     */
    Snap.prototype.writeGeometryCollectionGeometry_ = function (feature, geometry) {
        var geometries = geometry.getGeometriesArray();
        for (var i = 0; i < geometries.length; ++i) {
            var segmentWriter = this.SEGMENT_WRITERS_[geometries[i].getType()];
            if (segmentWriter) {
                segmentWriter(feature, geometries[i]);
            }
        }
    };
    /**
     * @param {import("../Feature.js").default} feature Feature
     * @param {import("../geom/LineString.js").default} geometry Geometry.
     * @private
     */
    Snap.prototype.writeLineStringGeometry_ = function (feature, geometry) {
        var coordinates = geometry.getCoordinates();
        for (var i = 0, ii = coordinates.length - 1; i < ii; ++i) {
            var segment = coordinates.slice(i, i + 2);
            var segmentData = {
                feature: feature,
                segment: segment,
            };
            this.rBush_.insert((0,_extent_js__WEBPACK_IMPORTED_MODULE_4__.boundingExtent)(segment), segmentData);
        }
    };
    /**
     * @param {import("../Feature.js").default} feature Feature
     * @param {import("../geom/MultiLineString.js").default} geometry Geometry.
     * @private
     */
    Snap.prototype.writeMultiLineStringGeometry_ = function (feature, geometry) {
        var lines = geometry.getCoordinates();
        for (var j = 0, jj = lines.length; j < jj; ++j) {
            var coordinates = lines[j];
            for (var i = 0, ii = coordinates.length - 1; i < ii; ++i) {
                var segment = coordinates.slice(i, i + 2);
                var segmentData = {
                    feature: feature,
                    segment: segment,
                };
                this.rBush_.insert((0,_extent_js__WEBPACK_IMPORTED_MODULE_4__.boundingExtent)(segment), segmentData);
            }
        }
    };
    /**
     * @param {import("../Feature.js").default} feature Feature
     * @param {import("../geom/MultiPoint.js").default} geometry Geometry.
     * @private
     */
    Snap.prototype.writeMultiPointGeometry_ = function (feature, geometry) {
        var points = geometry.getCoordinates();
        for (var i = 0, ii = points.length; i < ii; ++i) {
            var coordinates = points[i];
            var segmentData = {
                feature: feature,
                segment: [coordinates, coordinates],
            };
            this.rBush_.insert(geometry.getExtent(), segmentData);
        }
    };
    /**
     * @param {import("../Feature.js").default} feature Feature
     * @param {import("../geom/MultiPolygon.js").default} geometry Geometry.
     * @private
     */
    Snap.prototype.writeMultiPolygonGeometry_ = function (feature, geometry) {
        var polygons = geometry.getCoordinates();
        for (var k = 0, kk = polygons.length; k < kk; ++k) {
            var rings = polygons[k];
            for (var j = 0, jj = rings.length; j < jj; ++j) {
                var coordinates = rings[j];
                for (var i = 0, ii = coordinates.length - 1; i < ii; ++i) {
                    var segment = coordinates.slice(i, i + 2);
                    var segmentData = {
                        feature: feature,
                        segment: segment,
                    };
                    this.rBush_.insert((0,_extent_js__WEBPACK_IMPORTED_MODULE_4__.boundingExtent)(segment), segmentData);
                }
            }
        }
    };
    /**
     * @param {import("../Feature.js").default} feature Feature
     * @param {import("../geom/Point.js").default} geometry Geometry.
     * @private
     */
    Snap.prototype.writePointGeometry_ = function (feature, geometry) {
        var coordinates = geometry.getCoordinates();
        var segmentData = {
            feature: feature,
            segment: [coordinates, coordinates],
        };
        this.rBush_.insert(geometry.getExtent(), segmentData);
    };
    /**
     * @param {import("../Feature.js").default} feature Feature
     * @param {import("../geom/Polygon.js").default} geometry Geometry.
     * @private
     */
    Snap.prototype.writePolygonGeometry_ = function (feature, geometry) {
        var rings = geometry.getCoordinates();
        for (var j = 0, jj = rings.length; j < jj; ++j) {
            var coordinates = rings[j];
            for (var i = 0, ii = coordinates.length - 1; i < ii; ++i) {
                var segment = coordinates.slice(i, i + 2);
                var segmentData = {
                    feature: feature,
                    segment: segment,
                };
                this.rBush_.insert((0,_extent_js__WEBPACK_IMPORTED_MODULE_4__.boundingExtent)(segment), segmentData);
            }
        }
    };
    return Snap;
}(_Pointer_js__WEBPACK_IMPORTED_MODULE_13__.default));
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Snap);
//# sourceMappingURL=Snap.js.map

/***/ }),

/***/ "./node_modules/ol/interaction/Translate.js":
/*!**************************************************!*\
  !*** ./node_modules/ol/interaction/Translate.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "TranslateEvent": () => (/* binding */ TranslateEvent),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _Collection_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../Collection.js */ "./node_modules/ol/Collection.js");
/* harmony import */ var _events_Event_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../events/Event.js */ "./node_modules/ol/events/Event.js");
/* harmony import */ var _Property_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./Property.js */ "./node_modules/ol/interaction/Property.js");
/* harmony import */ var _Pointer_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./Pointer.js */ "./node_modules/ol/interaction/Pointer.js");
/* harmony import */ var _functions_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../functions.js */ "./node_modules/ol/functions.js");
/* harmony import */ var _Object_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../Object.js */ "./node_modules/ol/Object.js");
/* harmony import */ var _array_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../array.js */ "./node_modules/ol/array.js");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
/**
 * @module ol/interaction/Translate
 */







/**
 * @enum {string}
 */
var TranslateEventType = {
    /**
     * Triggered upon feature translation start.
     * @event TranslateEvent#translatestart
     * @api
     */
    TRANSLATESTART: 'translatestart',
    /**
     * Triggered upon feature translation.
     * @event TranslateEvent#translating
     * @api
     */
    TRANSLATING: 'translating',
    /**
     * Triggered upon feature translation end.
     * @event TranslateEvent#translateend
     * @api
     */
    TRANSLATEEND: 'translateend',
};
/**
 * A function that takes an {@link module:ol/Feature} or
 * {@link module:ol/render/Feature} and an
 * {@link module:ol/layer/Layer} and returns `true` if the feature may be
 * translated or `false` otherwise.
 * @typedef {function(import("../Feature.js").FeatureLike, import("../layer/Layer.js").default):boolean} FilterFunction
 */
/**
 * @typedef {Object} Options
 * @property {Collection<import("../Feature.js").default>} [features] Only features contained in this collection will be able to be translated. If
 * not specified, all features on the map will be able to be translated.
 * @property {Array<import("../layer/Layer.js").default>|function(import("../layer/Layer.js").default): boolean} [layers] A list of layers from which features should be
 * translated. Alternatively, a filter function can be provided. The
 * function will be called for each layer in the map and should return
 * `true` for layers that you want to be translatable. If the option is
 * absent, all visible layers will be considered translatable.
 * @property {FilterFunction} [filter] A function
 * that takes an {@link module:ol/Feature} and an
 * {@link module:ol/layer/Layer} and returns `true` if the feature may be
 * translated or `false` otherwise.
 * @property {number} [hitTolerance=0] Hit-detection tolerance. Pixels inside the radius around the given position
 * will be checked for features.
 */
/**
 * @classdesc
 * Events emitted by {@link module:ol/interaction/Translate~Translate} instances
 * are instances of this type.
 */
var TranslateEvent = /** @class */ (function (_super) {
    __extends(TranslateEvent, _super);
    /**
     * @param {TranslateEventType} type Type.
     * @param {Collection<import("../Feature.js").default>} features The features translated.
     * @param {import("../coordinate.js").Coordinate} coordinate The event coordinate.
     * @param {import("../coordinate.js").Coordinate} startCoordinate The original coordinates before.translation started
     * @param {import("../MapBrowserEvent.js").default} mapBrowserEvent Map browser event.
     */
    function TranslateEvent(type, features, coordinate, startCoordinate, mapBrowserEvent) {
        var _this = _super.call(this, type) || this;
        /**
         * The features being translated.
         * @type {Collection<import("../Feature.js").default>}
         * @api
         */
        _this.features = features;
        /**
         * The coordinate of the drag event.
         * @const
         * @type {import("../coordinate.js").Coordinate}
         * @api
         */
        _this.coordinate = coordinate;
        /**
         * The coordinate of the start position before translation started.
         * @const
         * @type {import("../coordinate.js").Coordinate}
         * @api
         */
        _this.startCoordinate = startCoordinate;
        /**
         * Associated {@link module:ol/MapBrowserEvent}.
         * @type {import("../MapBrowserEvent.js").default}
         * @api
         */
        _this.mapBrowserEvent = mapBrowserEvent;
        return _this;
    }
    return TranslateEvent;
}(_events_Event_js__WEBPACK_IMPORTED_MODULE_0__.default));

/**
 * @classdesc
 * Interaction for translating (moving) features.
 *
 * @fires TranslateEvent
 * @api
 */
var Translate = /** @class */ (function (_super) {
    __extends(Translate, _super);
    /**
     * @param {Options=} opt_options Options.
     */
    function Translate(opt_options) {
        var _this = this;
        var options = opt_options ? opt_options : {};
        _this = _super.call(this, /** @type {import("./Pointer.js").Options} */ (options)) || this;
        /**
         * The last position we translated to.
         * @type {import("../coordinate.js").Coordinate}
         * @private
         */
        _this.lastCoordinate_ = null;
        /**
         * The start position before translation started.
         * @type {import("../coordinate.js").Coordinate}
         * @private
         */
        _this.startCoordinate_ = null;
        /**
         * @type {Collection<import("../Feature.js").default>}
         * @private
         */
        _this.features_ = options.features !== undefined ? options.features : null;
        /** @type {function(import("../layer/Layer.js").default): boolean} */
        var layerFilter;
        if (options.layers) {
            if (typeof options.layers === 'function') {
                layerFilter = options.layers;
            }
            else {
                var layers_1 = options.layers;
                layerFilter = function (layer) {
                    return (0,_array_js__WEBPACK_IMPORTED_MODULE_1__.includes)(layers_1, layer);
                };
            }
        }
        else {
            layerFilter = _functions_js__WEBPACK_IMPORTED_MODULE_2__.TRUE;
        }
        /**
         * @private
         * @type {function(import("../layer/Layer.js").default): boolean}
         */
        _this.layerFilter_ = layerFilter;
        /**
         * @private
         * @type {FilterFunction}
         */
        _this.filter_ = options.filter ? options.filter : _functions_js__WEBPACK_IMPORTED_MODULE_2__.TRUE;
        /**
         * @private
         * @type {number}
         */
        _this.hitTolerance_ = options.hitTolerance ? options.hitTolerance : 0;
        /**
         * @type {import("../Feature.js").default}
         * @private
         */
        _this.lastFeature_ = null;
        _this.addEventListener((0,_Object_js__WEBPACK_IMPORTED_MODULE_3__.getChangeEventType)(_Property_js__WEBPACK_IMPORTED_MODULE_4__.default.ACTIVE), _this.handleActiveChanged_);
        return _this;
    }
    /**
     * Handle pointer down events.
     * @param {import("../MapBrowserEvent.js").default} event Event.
     * @return {boolean} If the event was consumed.
     */
    Translate.prototype.handleDownEvent = function (event) {
        this.lastFeature_ = this.featuresAtPixel_(event.pixel, event.map);
        if (!this.lastCoordinate_ && this.lastFeature_) {
            this.startCoordinate_ = event.coordinate;
            this.lastCoordinate_ = event.coordinate;
            this.handleMoveEvent(event);
            var features = this.features_ || new _Collection_js__WEBPACK_IMPORTED_MODULE_5__.default([this.lastFeature_]);
            this.dispatchEvent(new TranslateEvent(TranslateEventType.TRANSLATESTART, features, event.coordinate, this.startCoordinate_, event));
            return true;
        }
        return false;
    };
    /**
     * Handle pointer up events.
     * @param {import("../MapBrowserEvent.js").default} event Event.
     * @return {boolean} If the event was consumed.
     */
    Translate.prototype.handleUpEvent = function (event) {
        if (this.lastCoordinate_) {
            this.lastCoordinate_ = null;
            this.handleMoveEvent(event);
            var features = this.features_ || new _Collection_js__WEBPACK_IMPORTED_MODULE_5__.default([this.lastFeature_]);
            this.dispatchEvent(new TranslateEvent(TranslateEventType.TRANSLATEEND, features, event.coordinate, this.startCoordinate_, event));
            // cleanup
            this.startCoordinate_ = null;
            return true;
        }
        return false;
    };
    /**
     * Handle pointer drag events.
     * @param {import("../MapBrowserEvent.js").default} event Event.
     */
    Translate.prototype.handleDragEvent = function (event) {
        if (this.lastCoordinate_) {
            var newCoordinate = event.coordinate;
            var deltaX_1 = newCoordinate[0] - this.lastCoordinate_[0];
            var deltaY_1 = newCoordinate[1] - this.lastCoordinate_[1];
            var features = this.features_ || new _Collection_js__WEBPACK_IMPORTED_MODULE_5__.default([this.lastFeature_]);
            features.forEach(function (feature) {
                var geom = feature.getGeometry();
                geom.translate(deltaX_1, deltaY_1);
                feature.setGeometry(geom);
            });
            this.lastCoordinate_ = newCoordinate;
            this.dispatchEvent(new TranslateEvent(TranslateEventType.TRANSLATING, features, newCoordinate, this.startCoordinate_, event));
        }
    };
    /**
     * Handle pointer move events.
     * @param {import("../MapBrowserEvent.js").default} event Event.
     */
    Translate.prototype.handleMoveEvent = function (event) {
        var elem = event.map.getViewport();
        // Change the cursor to grab/grabbing if hovering any of the features managed
        // by the interaction
        if (this.featuresAtPixel_(event.pixel, event.map)) {
            elem.classList.remove(this.lastCoordinate_ ? 'ol-grab' : 'ol-grabbing');
            elem.classList.add(this.lastCoordinate_ ? 'ol-grabbing' : 'ol-grab');
        }
        else {
            elem.classList.remove('ol-grab', 'ol-grabbing');
        }
    };
    /**
     * Tests to see if the given coordinates intersects any of our selected
     * features.
     * @param {import("../pixel.js").Pixel} pixel Pixel coordinate to test for intersection.
     * @param {import("../PluggableMap.js").default} map Map to test the intersection on.
     * @return {import("../Feature.js").default} Returns the feature found at the specified pixel
     * coordinates.
     * @private
     */
    Translate.prototype.featuresAtPixel_ = function (pixel, map) {
        return map.forEachFeatureAtPixel(pixel, function (feature, layer) {
            if (this.filter_(feature, layer)) {
                if (!this.features_ || (0,_array_js__WEBPACK_IMPORTED_MODULE_1__.includes)(this.features_.getArray(), feature)) {
                    return feature;
                }
            }
        }.bind(this), {
            layerFilter: this.layerFilter_,
            hitTolerance: this.hitTolerance_,
        });
    };
    /**
     * Returns the Hit-detection tolerance.
     * @returns {number} Hit tolerance in pixels.
     * @api
     */
    Translate.prototype.getHitTolerance = function () {
        return this.hitTolerance_;
    };
    /**
     * Hit-detection tolerance. Pixels inside the radius around the given position
     * will be checked for features.
     * @param {number} hitTolerance Hit tolerance in pixels.
     * @api
     */
    Translate.prototype.setHitTolerance = function (hitTolerance) {
        this.hitTolerance_ = hitTolerance;
    };
    /**
     * Remove the interaction from its current map and attach it to the new map.
     * Subclasses may set up event handlers to get notified about changes to
     * the map here.
     * @param {import("../PluggableMap.js").default} map Map.
     */
    Translate.prototype.setMap = function (map) {
        var oldMap = this.getMap();
        _super.prototype.setMap.call(this, map);
        this.updateState_(oldMap);
    };
    /**
     * @private
     */
    Translate.prototype.handleActiveChanged_ = function () {
        this.updateState_(null);
    };
    /**
     * @param {import("../PluggableMap.js").default} oldMap Old map.
     * @private
     */
    Translate.prototype.updateState_ = function (oldMap) {
        var map = this.getMap();
        var active = this.getActive();
        if (!map || !active) {
            map = map || oldMap;
            if (map) {
                var elem = map.getViewport();
                elem.classList.remove('ol-grab', 'ol-grabbing');
            }
        }
    };
    return Translate;
}(_Pointer_js__WEBPACK_IMPORTED_MODULE_6__.default));
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Translate);
//# sourceMappingURL=Translate.js.map

/***/ }),

/***/ "./node_modules/ol/layer/Base.js":
/*!***************************************!*\
  !*** ./node_modules/ol/layer/Base.js ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _Object_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../Object.js */ "./node_modules/ol/Object.js");
/* harmony import */ var _Property_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Property.js */ "./node_modules/ol/layer/Property.js");
/* harmony import */ var _util_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../util.js */ "./node_modules/ol/util.js");
/* harmony import */ var _asserts_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../asserts.js */ "./node_modules/ol/asserts.js");
/* harmony import */ var _obj_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../obj.js */ "./node_modules/ol/obj.js");
/* harmony import */ var _math_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../math.js */ "./node_modules/ol/math.js");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
/**
 * @module ol/layer/Base
 */






/**
 * @typedef {Object} Options
 * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.
 * @property {number} [opacity=1] Opacity (0, 1).
 * @property {boolean} [visible=true] Visibility.
 * @property {import("../extent.js").Extent} [extent] The bounding extent for layer rendering.  The layer will not be
 * rendered outside of this extent.
 * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers
 * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed
 * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`
 * method was used.
 * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be
 * visible.
 * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will
 * be visible.
 * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be
 * visible.
 * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will
 * be visible.
 */
/**
 * @classdesc
 * Abstract base class; normally only used for creating subclasses and not
 * instantiated in apps.
 * Note that with {@link module:ol/layer/Base} and all its subclasses, any property set in
 * the options is set as a {@link module:ol/Object} property on the layer object, so
 * is observable, and has get/set accessors.
 *
 * @api
 */
var BaseLayer = /** @class */ (function (_super) {
    __extends(BaseLayer, _super);
    /**
     * @param {Options} options Layer options.
     */
    function BaseLayer(options) {
        var _this = _super.call(this) || this;
        /**
         * @type {Object<string, *>}
         */
        var properties = (0,_obj_js__WEBPACK_IMPORTED_MODULE_0__.assign)({}, options);
        properties[_Property_js__WEBPACK_IMPORTED_MODULE_1__.default.OPACITY] =
            options.opacity !== undefined ? options.opacity : 1;
        (0,_asserts_js__WEBPACK_IMPORTED_MODULE_2__.assert)(typeof properties[_Property_js__WEBPACK_IMPORTED_MODULE_1__.default.OPACITY] === 'number', 64); // Layer opacity must be a number
        properties[_Property_js__WEBPACK_IMPORTED_MODULE_1__.default.VISIBLE] =
            options.visible !== undefined ? options.visible : true;
        properties[_Property_js__WEBPACK_IMPORTED_MODULE_1__.default.Z_INDEX] = options.zIndex;
        properties[_Property_js__WEBPACK_IMPORTED_MODULE_1__.default.MAX_RESOLUTION] =
            options.maxResolution !== undefined ? options.maxResolution : Infinity;
        properties[_Property_js__WEBPACK_IMPORTED_MODULE_1__.default.MIN_RESOLUTION] =
            options.minResolution !== undefined ? options.minResolution : 0;
        properties[_Property_js__WEBPACK_IMPORTED_MODULE_1__.default.MIN_ZOOM] =
            options.minZoom !== undefined ? options.minZoom : -Infinity;
        properties[_Property_js__WEBPACK_IMPORTED_MODULE_1__.default.MAX_ZOOM] =
            options.maxZoom !== undefined ? options.maxZoom : Infinity;
        /**
         * @type {string}
         * @private
         */
        _this.className_ =
            properties.className !== undefined ? options.className : 'ol-layer';
        delete properties.className;
        _this.setProperties(properties);
        /**
         * @type {import("./Layer.js").State}
         * @private
         */
        _this.state_ = null;
        return _this;
    }
    /**
     * @return {string} CSS class name.
     */
    BaseLayer.prototype.getClassName = function () {
        return this.className_;
    };
    /**
     * This method is not meant to be called by layers or layer renderers because the state
     * is incorrect if the layer is included in a layer group.
     *
     * @param {boolean=} opt_managed Layer is managed.
     * @return {import("./Layer.js").State} Layer state.
     */
    BaseLayer.prototype.getLayerState = function (opt_managed) {
        /** @type {import("./Layer.js").State} */
        var state = this.state_ ||
            /** @type {?} */ ({
                layer: this,
                managed: opt_managed === undefined ? true : opt_managed,
            });
        var zIndex = this.getZIndex();
        state.opacity = (0,_math_js__WEBPACK_IMPORTED_MODULE_3__.clamp)(Math.round(this.getOpacity() * 100) / 100, 0, 1);
        state.sourceState = this.getSourceState();
        state.visible = this.getVisible();
        state.extent = this.getExtent();
        state.zIndex =
            zIndex !== undefined ? zIndex : state.managed === false ? Infinity : 0;
        state.maxResolution = this.getMaxResolution();
        state.minResolution = Math.max(this.getMinResolution(), 0);
        state.minZoom = this.getMinZoom();
        state.maxZoom = this.getMaxZoom();
        this.state_ = state;
        return state;
    };
    /**
     * @abstract
     * @param {Array<import("./Layer.js").default>=} opt_array Array of layers (to be
     *     modified in place).
     * @return {Array<import("./Layer.js").default>} Array of layers.
     */
    BaseLayer.prototype.getLayersArray = function (opt_array) {
        return (0,_util_js__WEBPACK_IMPORTED_MODULE_4__.abstract)();
    };
    /**
     * @abstract
     * @param {Array<import("./Layer.js").State>=} opt_states Optional list of layer
     *     states (to be modified in place).
     * @return {Array<import("./Layer.js").State>} List of layer states.
     */
    BaseLayer.prototype.getLayerStatesArray = function (opt_states) {
        return (0,_util_js__WEBPACK_IMPORTED_MODULE_4__.abstract)();
    };
    /**
     * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it
     * will be visible regardless of extent.
     * @return {import("../extent.js").Extent|undefined} The layer extent.
     * @observable
     * @api
     */
    BaseLayer.prototype.getExtent = function () {
        return /** @type {import("../extent.js").Extent|undefined} */ (this.get(_Property_js__WEBPACK_IMPORTED_MODULE_1__.default.EXTENT));
    };
    /**
     * Return the maximum resolution of the layer.
     * @return {number} The maximum resolution of the layer.
     * @observable
     * @api
     */
    BaseLayer.prototype.getMaxResolution = function () {
        return /** @type {number} */ (this.get(_Property_js__WEBPACK_IMPORTED_MODULE_1__.default.MAX_RESOLUTION));
    };
    /**
     * Return the minimum resolution of the layer.
     * @return {number} The minimum resolution of the layer.
     * @observable
     * @api
     */
    BaseLayer.prototype.getMinResolution = function () {
        return /** @type {number} */ (this.get(_Property_js__WEBPACK_IMPORTED_MODULE_1__.default.MIN_RESOLUTION));
    };
    /**
     * Return the minimum zoom level of the layer.
     * @return {number} The minimum zoom level of the layer.
     * @observable
     * @api
     */
    BaseLayer.prototype.getMinZoom = function () {
        return /** @type {number} */ (this.get(_Property_js__WEBPACK_IMPORTED_MODULE_1__.default.MIN_ZOOM));
    };
    /**
     * Return the maximum zoom level of the layer.
     * @return {number} The maximum zoom level of the layer.
     * @observable
     * @api
     */
    BaseLayer.prototype.getMaxZoom = function () {
        return /** @type {number} */ (this.get(_Property_js__WEBPACK_IMPORTED_MODULE_1__.default.MAX_ZOOM));
    };
    /**
     * Return the opacity of the layer (between 0 and 1).
     * @return {number} The opacity of the layer.
     * @observable
     * @api
     */
    BaseLayer.prototype.getOpacity = function () {
        return /** @type {number} */ (this.get(_Property_js__WEBPACK_IMPORTED_MODULE_1__.default.OPACITY));
    };
    /**
     * @abstract
     * @return {import("../source/State.js").default} Source state.
     */
    BaseLayer.prototype.getSourceState = function () {
        return (0,_util_js__WEBPACK_IMPORTED_MODULE_4__.abstract)();
    };
    /**
     * Return the visibility of the layer (`true` or `false`).
     * @return {boolean} The visibility of the layer.
     * @observable
     * @api
     */
    BaseLayer.prototype.getVisible = function () {
        return /** @type {boolean} */ (this.get(_Property_js__WEBPACK_IMPORTED_MODULE_1__.default.VISIBLE));
    };
    /**
     * Return the Z-index of the layer, which is used to order layers before
     * rendering. The default Z-index is 0.
     * @return {number} The Z-index of the layer.
     * @observable
     * @api
     */
    BaseLayer.prototype.getZIndex = function () {
        return /** @type {number} */ (this.get(_Property_js__WEBPACK_IMPORTED_MODULE_1__.default.Z_INDEX));
    };
    /**
     * Set the extent at which the layer is visible.  If `undefined`, the layer
     * will be visible at all extents.
     * @param {import("../extent.js").Extent|undefined} extent The extent of the layer.
     * @observable
     * @api
     */
    BaseLayer.prototype.setExtent = function (extent) {
        this.set(_Property_js__WEBPACK_IMPORTED_MODULE_1__.default.EXTENT, extent);
    };
    /**
     * Set the maximum resolution at which the layer is visible.
     * @param {number} maxResolution The maximum resolution of the layer.
     * @observable
     * @api
     */
    BaseLayer.prototype.setMaxResolution = function (maxResolution) {
        this.set(_Property_js__WEBPACK_IMPORTED_MODULE_1__.default.MAX_RESOLUTION, maxResolution);
    };
    /**
     * Set the minimum resolution at which the layer is visible.
     * @param {number} minResolution The minimum resolution of the layer.
     * @observable
     * @api
     */
    BaseLayer.prototype.setMinResolution = function (minResolution) {
        this.set(_Property_js__WEBPACK_IMPORTED_MODULE_1__.default.MIN_RESOLUTION, minResolution);
    };
    /**
     * Set the maximum zoom (exclusive) at which the layer is visible.
     * Note that the zoom levels for layer visibility are based on the
     * view zoom level, which may be different from a tile source zoom level.
     * @param {number} maxZoom The maximum zoom of the layer.
     * @observable
     * @api
     */
    BaseLayer.prototype.setMaxZoom = function (maxZoom) {
        this.set(_Property_js__WEBPACK_IMPORTED_MODULE_1__.default.MAX_ZOOM, maxZoom);
    };
    /**
     * Set the minimum zoom (inclusive) at which the layer is visible.
     * Note that the zoom levels for layer visibility are based on the
     * view zoom level, which may be different from a tile source zoom level.
     * @param {number} minZoom The minimum zoom of the layer.
     * @observable
     * @api
     */
    BaseLayer.prototype.setMinZoom = function (minZoom) {
        this.set(_Property_js__WEBPACK_IMPORTED_MODULE_1__.default.MIN_ZOOM, minZoom);
    };
    /**
     * Set the opacity of the layer, allowed values range from 0 to 1.
     * @param {number} opacity The opacity of the layer.
     * @observable
     * @api
     */
    BaseLayer.prototype.setOpacity = function (opacity) {
        (0,_asserts_js__WEBPACK_IMPORTED_MODULE_2__.assert)(typeof opacity === 'number', 64); // Layer opacity must be a number
        this.set(_Property_js__WEBPACK_IMPORTED_MODULE_1__.default.OPACITY, opacity);
    };
    /**
     * Set the visibility of the layer (`true` or `false`).
     * @param {boolean} visible The visibility of the layer.
     * @observable
     * @api
     */
    BaseLayer.prototype.setVisible = function (visible) {
        this.set(_Property_js__WEBPACK_IMPORTED_MODULE_1__.default.VISIBLE, visible);
    };
    /**
     * Set Z-index of the layer, which is used to order layers before rendering.
     * The default Z-index is 0.
     * @param {number} zindex The z-index of the layer.
     * @observable
     * @api
     */
    BaseLayer.prototype.setZIndex = function (zindex) {
        this.set(_Property_js__WEBPACK_IMPORTED_MODULE_1__.default.Z_INDEX, zindex);
    };
    /**
     * Clean up.
     */
    BaseLayer.prototype.disposeInternal = function () {
        if (this.state_) {
            this.state_.layer = null;
            this.state_ = null;
        }
        _super.prototype.disposeInternal.call(this);
    };
    return BaseLayer;
}(_Object_js__WEBPACK_IMPORTED_MODULE_5__.default));
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (BaseLayer);
//# sourceMappingURL=Base.js.map

/***/ }),

/***/ "./node_modules/ol/layer/BaseTile.js":
/*!*******************************************!*\
  !*** ./node_modules/ol/layer/BaseTile.js ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _Layer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Layer.js */ "./node_modules/ol/layer/Layer.js");
/* harmony import */ var _TileProperty_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./TileProperty.js */ "./node_modules/ol/layer/TileProperty.js");
/* harmony import */ var _obj_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../obj.js */ "./node_modules/ol/obj.js");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
/**
 * @module ol/layer/BaseTile
 */



/**
 * @typedef {Object} Options
 * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.
 * @property {number} [opacity=1] Opacity (0, 1).
 * @property {boolean} [visible=true] Visibility.
 * @property {import("../extent.js").Extent} [extent] The bounding extent for layer rendering.  The layer will not be
 * rendered outside of this extent.
 * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers
 * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed
 * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`
 * method was used.
 * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be
 * visible.
 * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will
 * be visible.
 * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be
 * visible.
 * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will
 * be visible.
 * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`
 * means no preloading.
 * @property {import("../source/Tile.js").default} [source] Source for this layer.
 * @property {import("../PluggableMap.js").default} [map] Sets the layer as overlay on a map. The map will not manage
 * this layer in its layers collection, and the layer will be rendered on top. This is useful for
 * temporary layers. The standard way to add a layer to a map and have it managed by the map is to
 * use {@link module:ol/Map#addLayer}.
 * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.
 */
/**
 * @classdesc
 * For layer sources that provide pre-rendered, tiled images in grids that are
 * organized by zoom levels for specific resolutions.
 * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}
 * property on the layer object; for example, setting `title: 'My Title'` in the
 * options means that `title` is observable, and has get/set accessors.
 *
 * @extends {Layer<import("../source/Tile.js").default>}
 * @api
 */
var BaseTileLayer = /** @class */ (function (_super) {
    __extends(BaseTileLayer, _super);
    /**
     * @param {Options=} opt_options Tile layer options.
     */
    function BaseTileLayer(opt_options) {
        var _this = this;
        var options = opt_options ? opt_options : {};
        var baseOptions = (0,_obj_js__WEBPACK_IMPORTED_MODULE_0__.assign)({}, options);
        delete baseOptions.preload;
        delete baseOptions.useInterimTilesOnError;
        _this = _super.call(this, baseOptions) || this;
        _this.setPreload(options.preload !== undefined ? options.preload : 0);
        _this.setUseInterimTilesOnError(options.useInterimTilesOnError !== undefined
            ? options.useInterimTilesOnError
            : true);
        return _this;
    }
    /**
     * Return the level as number to which we will preload tiles up to.
     * @return {number} The level to preload tiles up to.
     * @observable
     * @api
     */
    BaseTileLayer.prototype.getPreload = function () {
        return /** @type {number} */ (this.get(_TileProperty_js__WEBPACK_IMPORTED_MODULE_1__.default.PRELOAD));
    };
    /**
     * Set the level as number to which we will preload tiles up to.
     * @param {number} preload The level to preload tiles up to.
     * @observable
     * @api
     */
    BaseTileLayer.prototype.setPreload = function (preload) {
        this.set(_TileProperty_js__WEBPACK_IMPORTED_MODULE_1__.default.PRELOAD, preload);
    };
    /**
     * Whether we use interim tiles on error.
     * @return {boolean} Use interim tiles on error.
     * @observable
     * @api
     */
    BaseTileLayer.prototype.getUseInterimTilesOnError = function () {
        return /** @type {boolean} */ (this.get(_TileProperty_js__WEBPACK_IMPORTED_MODULE_1__.default.USE_INTERIM_TILES_ON_ERROR));
    };
    /**
     * Set whether we use interim tiles on error.
     * @param {boolean} useInterimTilesOnError Use interim tiles on error.
     * @observable
     * @api
     */
    BaseTileLayer.prototype.setUseInterimTilesOnError = function (useInterimTilesOnError) {
        this.set(_TileProperty_js__WEBPACK_IMPORTED_MODULE_1__.default.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);
    };
    return BaseTileLayer;
}(_Layer_js__WEBPACK_IMPORTED_MODULE_2__.default));
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (BaseTileLayer);
//# sourceMappingURL=BaseTile.js.map

/***/ }),

/***/ "./node_modules/ol/layer/BaseVector.js":
/*!*********************************************!*\
  !*** ./node_modules/ol/layer/BaseVector.js ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _Layer_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Layer.js */ "./node_modules/ol/layer/Layer.js");
/* harmony import */ var rbush__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! rbush */ "./node_modules/rbush/rbush.min.js");
/* harmony import */ var rbush__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(rbush__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _obj_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../obj.js */ "./node_modules/ol/obj.js");
/* harmony import */ var _style_Style_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../style/Style.js */ "./node_modules/ol/style/Style.js");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
/**
 * @module ol/layer/BaseVector
 */




/**
 * @typedef {Object} Options
 * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.
 * @property {number} [opacity=1] Opacity (0, 1).
 * @property {boolean} [visible=true] Visibility.
 * @property {import("../extent.js").Extent} [extent] The bounding extent for layer rendering.  The layer will not be
 * rendered outside of this extent.
 * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers
 * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed
 * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`
 * method was used.
 * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be
 * visible.
 * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will
 * be visible.
 * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be
 * visible.
 * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will
 * be visible.
 * @property {import("../render.js").OrderFunction} [renderOrder] Render order. Function to be used when sorting
 * features before rendering. By default features are drawn in the order that they are created. Use
 * `null` to avoid the sort, but get an undefined draw order.
 * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the
 * renderer when getting features from the vector source for the rendering or hit-detection.
 * Recommended value: the size of the largest symbol, line width or label.
 * @property {import("../source/Vector.js").default} [source] Source.
 * @property {import("../PluggableMap.js").default} [map] Sets the layer as overlay on a map. The map will not manage
 * this layer in its layers collection, and the layer will be rendered on top. This is useful for
 * temporary layers. The standard way to add a layer to a map and have it managed by the map is to
 * use {@link module:ol/Map#addLayer}.
 * @property {boolean} [declutter=false] Declutter images and text. Decluttering is applied to all
 * image and text styles of all Vector and VectorTile layers that have set this to `true`. The priority
 * is defined by the z-index of the layer, the `zIndex` of the style and the render order of features.
 * Higher z-index means higher priority. Within the same z-index, a feature rendered before another has
 * higher priority.
 * @property {import("../style/Style.js").StyleLike|null} [style] Layer style. When set to `null`, only
 * features that have their own style will be rendered. See {@link module:ol/style} for default style
 * which will be used if this is not set.
 * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will
 * be recreated during animations. This means that no vectors will be shown clipped, but the
 * setting will have a performance impact for large amounts of vector data. When set to `false`,
 * batches will be recreated when no animation is active.
 * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will
 * be recreated during interactions. See also `updateWhileAnimating`.
 */
/**
 * @enum {string}
 * @private
 */
var Property = {
    RENDER_ORDER: 'renderOrder',
};
/**
 * @classdesc
 * Vector data that is rendered client-side.
 * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}
 * property on the layer object; for example, setting `title: 'My Title'` in the
 * options means that `title` is observable, and has get/set accessors.
 *
 * @template {import("../source/Vector.js").default|import("../source/VectorTile.js").default} VectorSourceType
 * @extends {Layer<VectorSourceType>}
 * @api
 */
var BaseVectorLayer = /** @class */ (function (_super) {
    __extends(BaseVectorLayer, _super);
    /**
     * @param {Options=} opt_options Options.
     */
    function BaseVectorLayer(opt_options) {
        var _this = this;
        var options = opt_options ? opt_options : {};
        var baseOptions = (0,_obj_js__WEBPACK_IMPORTED_MODULE_1__.assign)({}, options);
        delete baseOptions.style;
        delete baseOptions.renderBuffer;
        delete baseOptions.updateWhileAnimating;
        delete baseOptions.updateWhileInteracting;
        _this = _super.call(this, baseOptions) || this;
        /**
         * @private
         * @type {boolean}
         */
        _this.declutter_ =
            options.declutter !== undefined ? options.declutter : false;
        /**
         * @type {number}
         * @private
         */
        _this.renderBuffer_ =
            options.renderBuffer !== undefined ? options.renderBuffer : 100;
        /**
         * User provided style.
         * @type {import("../style/Style.js").StyleLike}
         * @private
         */
        _this.style_ = null;
        /**
         * Style function for use within the library.
         * @type {import("../style/Style.js").StyleFunction|undefined}
         * @private
         */
        _this.styleFunction_ = undefined;
        _this.setStyle(options.style);
        /**
         * @type {boolean}
         * @private
         */
        _this.updateWhileAnimating_ =
            options.updateWhileAnimating !== undefined
                ? options.updateWhileAnimating
                : false;
        /**
         * @type {boolean}
         * @private
         */
        _this.updateWhileInteracting_ =
            options.updateWhileInteracting !== undefined
                ? options.updateWhileInteracting
                : false;
        return _this;
    }
    /**
     * @return {boolean} Declutter.
     */
    BaseVectorLayer.prototype.getDeclutter = function () {
        return this.declutter_;
    };
    /**
     * Get the topmost feature that intersects the given pixel on the viewport. Returns a promise
     * that resolves with an array of features. The array will either contain the topmost feature
     * when a hit was detected, or it will be empty.
     *
     * The hit detection algorithm used for this method is optimized for performance, but is less
     * accurate than the one used in {@link import("../PluggableMap.js").default#getFeaturesAtPixel}: Text
     * is not considered, and icons are only represented by their bounding box instead of the exact
     * image.
     *
     * @param {import("../pixel.js").Pixel} pixel Pixel.
     * @return {Promise<Array<import("../Feature").default>>} Promise that resolves with an array of features.
     * @api
     */
    BaseVectorLayer.prototype.getFeatures = function (pixel) {
        return _super.prototype.getFeatures.call(this, pixel);
    };
    /**
     * @return {number|undefined} Render buffer.
     */
    BaseVectorLayer.prototype.getRenderBuffer = function () {
        return this.renderBuffer_;
    };
    /**
     * @return {function(import("../Feature.js").default, import("../Feature.js").default): number|null|undefined} Render
     *     order.
     */
    BaseVectorLayer.prototype.getRenderOrder = function () {
        return /** @type {import("../render.js").OrderFunction|null|undefined} */ (this.get(Property.RENDER_ORDER));
    };
    /**
     * Get the style for features.  This returns whatever was passed to the `style`
     * option at construction or to the `setStyle` method.
     * @return {import("../style/Style.js").StyleLike|null|undefined} Layer style.
     * @api
     */
    BaseVectorLayer.prototype.getStyle = function () {
        return this.style_;
    };
    /**
     * Get the style function.
     * @return {import("../style/Style.js").StyleFunction|undefined} Layer style function.
     * @api
     */
    BaseVectorLayer.prototype.getStyleFunction = function () {
        return this.styleFunction_;
    };
    /**
     * @return {boolean} Whether the rendered layer should be updated while
     *     animating.
     */
    BaseVectorLayer.prototype.getUpdateWhileAnimating = function () {
        return this.updateWhileAnimating_;
    };
    /**
     * @return {boolean} Whether the rendered layer should be updated while
     *     interacting.
     */
    BaseVectorLayer.prototype.getUpdateWhileInteracting = function () {
        return this.updateWhileInteracting_;
    };
    /**
     * Render declutter items for this layer
     * @param {import("../PluggableMap.js").FrameState} frameState Frame state.
     */
    BaseVectorLayer.prototype.renderDeclutter = function (frameState) {
        if (!frameState.declutterTree) {
            frameState.declutterTree = new (rbush__WEBPACK_IMPORTED_MODULE_0___default())(9);
        }
        /** @type {*} */ (this.getRenderer()).renderDeclutter(frameState);
    };
    /**
     * @param {import("../render.js").OrderFunction|null|undefined} renderOrder
     *     Render order.
     */
    BaseVectorLayer.prototype.setRenderOrder = function (renderOrder) {
        this.set(Property.RENDER_ORDER, renderOrder);
    };
    /**
     * Set the style for features.  This can be a single style object, an array
     * of styles, or a function that takes a feature and resolution and returns
     * an array of styles. If set to `null`, the layer has no style (a `null` style),
     * so only features that have their own styles will be rendered in the layer. Call
     * `setStyle()` without arguments to reset to the default style. See
     * {@link module:ol/style} for information on the default style.
     * @param {(import("../style/Style.js").StyleLike|null)=} opt_style Layer style.
     * @api
     */
    BaseVectorLayer.prototype.setStyle = function (opt_style) {
        this.style_ = opt_style !== undefined ? opt_style : _style_Style_js__WEBPACK_IMPORTED_MODULE_2__.createDefaultStyle;
        this.styleFunction_ =
            opt_style === null ? undefined : (0,_style_Style_js__WEBPACK_IMPORTED_MODULE_2__.toFunction)(this.style_);
        this.changed();
    };
    return BaseVectorLayer;
}(_Layer_js__WEBPACK_IMPORTED_MODULE_3__.default));
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (BaseVectorLayer);
//# sourceMappingURL=BaseVector.js.map

/***/ }),

/***/ "./node_modules/ol/layer/Group.js":
/*!****************************************!*\
  !*** ./node_modules/ol/layer/Group.js ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _Base_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./Base.js */ "./node_modules/ol/layer/Base.js");
/* harmony import */ var _Collection_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Collection.js */ "./node_modules/ol/Collection.js");
/* harmony import */ var _CollectionEventType_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../CollectionEventType.js */ "./node_modules/ol/CollectionEventType.js");
/* harmony import */ var _events_EventType_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../events/EventType.js */ "./node_modules/ol/events/EventType.js");
/* harmony import */ var _ObjectEventType_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../ObjectEventType.js */ "./node_modules/ol/ObjectEventType.js");
/* harmony import */ var _source_State_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../source/State.js */ "./node_modules/ol/source/State.js");
/* harmony import */ var _asserts_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../asserts.js */ "./node_modules/ol/asserts.js");
/* harmony import */ var _obj_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../obj.js */ "./node_modules/ol/obj.js");
/* harmony import */ var _Object_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Object.js */ "./node_modules/ol/Object.js");
/* harmony import */ var _extent_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../extent.js */ "./node_modules/ol/extent.js");
/* harmony import */ var _util_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../util.js */ "./node_modules/ol/util.js");
/* harmony import */ var _events_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../events.js */ "./node_modules/ol/events.js");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
/**
 * @module ol/layer/Group
 */












/**
 * @typedef {Object} Options
 * @property {number} [opacity=1] Opacity (0, 1).
 * @property {boolean} [visible=true] Visibility.
 * @property {import("../extent.js").Extent} [extent] The bounding extent for layer rendering.  The layer will not be
 * rendered outside of this extent.
 * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers
 * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed
 * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`
 * method was used.
 * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be
 * visible.
 * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will
 * be visible.
 * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be
 * visible.
 * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will
 * be visible.
 * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be
 * visible.
 * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will
 * be visible.
 * @property {Array<import("./Base.js").default>|import("../Collection.js").default<import("./Base.js").default>} [layers] Child layers.
 */
/**
 * @enum {string}
 * @private
 */
var Property = {
    LAYERS: 'layers',
};
/**
 * @classdesc
 * A {@link module:ol/Collection~Collection} of layers that are handled together.
 *
 * A generic `change` event is triggered when the group/Collection changes.
 *
 * @api
 */
var LayerGroup = /** @class */ (function (_super) {
    __extends(LayerGroup, _super);
    /**
     * @param {Options=} opt_options Layer options.
     */
    function LayerGroup(opt_options) {
        var _this = this;
        var options = opt_options || {};
        var baseOptions = /** @type {Options} */ ((0,_obj_js__WEBPACK_IMPORTED_MODULE_0__.assign)({}, options));
        delete baseOptions.layers;
        var layers = options.layers;
        _this = _super.call(this, baseOptions) || this;
        /**
         * @private
         * @type {Array<import("../events.js").EventsKey>}
         */
        _this.layersListenerKeys_ = [];
        /**
         * @private
         * @type {Object<string, Array<import("../events.js").EventsKey>>}
         */
        _this.listenerKeys_ = {};
        _this.addEventListener((0,_Object_js__WEBPACK_IMPORTED_MODULE_1__.getChangeEventType)(Property.LAYERS), _this.handleLayersChanged_);
        if (layers) {
            if (Array.isArray(layers)) {
                layers = new _Collection_js__WEBPACK_IMPORTED_MODULE_2__.default(layers.slice(), { unique: true });
            }
            else {
                (0,_asserts_js__WEBPACK_IMPORTED_MODULE_3__.assert)(typeof ( /** @type {?} */(layers).getArray) === 'function', 43); // Expected `layers` to be an array or a `Collection`
            }
        }
        else {
            layers = new _Collection_js__WEBPACK_IMPORTED_MODULE_2__.default(undefined, { unique: true });
        }
        _this.setLayers(layers);
        return _this;
    }
    /**
     * @private
     */
    LayerGroup.prototype.handleLayerChange_ = function () {
        this.changed();
    };
    /**
     * @private
     */
    LayerGroup.prototype.handleLayersChanged_ = function () {
        this.layersListenerKeys_.forEach(_events_js__WEBPACK_IMPORTED_MODULE_4__.unlistenByKey);
        this.layersListenerKeys_.length = 0;
        var layers = this.getLayers();
        this.layersListenerKeys_.push((0,_events_js__WEBPACK_IMPORTED_MODULE_4__.listen)(layers, _CollectionEventType_js__WEBPACK_IMPORTED_MODULE_5__.default.ADD, this.handleLayersAdd_, this), (0,_events_js__WEBPACK_IMPORTED_MODULE_4__.listen)(layers, _CollectionEventType_js__WEBPACK_IMPORTED_MODULE_5__.default.REMOVE, this.handleLayersRemove_, this));
        for (var id in this.listenerKeys_) {
            this.listenerKeys_[id].forEach(_events_js__WEBPACK_IMPORTED_MODULE_4__.unlistenByKey);
        }
        (0,_obj_js__WEBPACK_IMPORTED_MODULE_0__.clear)(this.listenerKeys_);
        var layersArray = layers.getArray();
        for (var i = 0, ii = layersArray.length; i < ii; i++) {
            var layer = layersArray[i];
            this.listenerKeys_[(0,_util_js__WEBPACK_IMPORTED_MODULE_6__.getUid)(layer)] = [
                (0,_events_js__WEBPACK_IMPORTED_MODULE_4__.listen)(layer, _ObjectEventType_js__WEBPACK_IMPORTED_MODULE_7__.default.PROPERTYCHANGE, this.handleLayerChange_, this),
                (0,_events_js__WEBPACK_IMPORTED_MODULE_4__.listen)(layer, _events_EventType_js__WEBPACK_IMPORTED_MODULE_8__.default.CHANGE, this.handleLayerChange_, this),
            ];
        }
        this.changed();
    };
    /**
     * @param {import("../Collection.js").CollectionEvent} collectionEvent CollectionEvent.
     * @private
     */
    LayerGroup.prototype.handleLayersAdd_ = function (collectionEvent) {
        var layer = /** @type {import("./Base.js").default} */ (collectionEvent.element);
        this.listenerKeys_[(0,_util_js__WEBPACK_IMPORTED_MODULE_6__.getUid)(layer)] = [
            (0,_events_js__WEBPACK_IMPORTED_MODULE_4__.listen)(layer, _ObjectEventType_js__WEBPACK_IMPORTED_MODULE_7__.default.PROPERTYCHANGE, this.handleLayerChange_, this),
            (0,_events_js__WEBPACK_IMPORTED_MODULE_4__.listen)(layer, _events_EventType_js__WEBPACK_IMPORTED_MODULE_8__.default.CHANGE, this.handleLayerChange_, this),
        ];
        this.changed();
    };
    /**
     * @param {import("../Collection.js").CollectionEvent} collectionEvent CollectionEvent.
     * @private
     */
    LayerGroup.prototype.handleLayersRemove_ = function (collectionEvent) {
        var layer = /** @type {import("./Base.js").default} */ (collectionEvent.element);
        var key = (0,_util_js__WEBPACK_IMPORTED_MODULE_6__.getUid)(layer);
        this.listenerKeys_[key].forEach(_events_js__WEBPACK_IMPORTED_MODULE_4__.unlistenByKey);
        delete this.listenerKeys_[key];
        this.changed();
    };
    /**
     * Returns the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}
     * in this group.
     * @return {!import("../Collection.js").default<import("./Base.js").default>} Collection of
     *   {@link module:ol/layer/Base layers} that are part of this group.
     * @observable
     * @api
     */
    LayerGroup.prototype.getLayers = function () {
        return /** @type {!import("../Collection.js").default<import("./Base.js").default>} */ (this.get(Property.LAYERS));
    };
    /**
     * Set the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}
     * in this group.
     * @param {!import("../Collection.js").default<import("./Base.js").default>} layers Collection of
     *   {@link module:ol/layer/Base layers} that are part of this group.
     * @observable
     * @api
     */
    LayerGroup.prototype.setLayers = function (layers) {
        this.set(Property.LAYERS, layers);
    };
    /**
     * @param {Array<import("./Layer.js").default>=} opt_array Array of layers (to be modified in place).
     * @return {Array<import("./Layer.js").default>} Array of layers.
     */
    LayerGroup.prototype.getLayersArray = function (opt_array) {
        var array = opt_array !== undefined ? opt_array : [];
        this.getLayers().forEach(function (layer) {
            layer.getLayersArray(array);
        });
        return array;
    };
    /**
     * @param {Array<import("./Layer.js").State>=} opt_states Optional list of layer states (to be modified in place).
     * @return {Array<import("./Layer.js").State>} List of layer states.
     */
    LayerGroup.prototype.getLayerStatesArray = function (opt_states) {
        var states = opt_states !== undefined ? opt_states : [];
        var pos = states.length;
        this.getLayers().forEach(function (layer) {
            layer.getLayerStatesArray(states);
        });
        var ownLayerState = this.getLayerState();
        for (var i = pos, ii = states.length; i < ii; i++) {
            var layerState = states[i];
            layerState.opacity *= ownLayerState.opacity;
            layerState.visible = layerState.visible && ownLayerState.visible;
            layerState.maxResolution = Math.min(layerState.maxResolution, ownLayerState.maxResolution);
            layerState.minResolution = Math.max(layerState.minResolution, ownLayerState.minResolution);
            layerState.minZoom = Math.max(layerState.minZoom, ownLayerState.minZoom);
            layerState.maxZoom = Math.min(layerState.maxZoom, ownLayerState.maxZoom);
            if (ownLayerState.extent !== undefined) {
                if (layerState.extent !== undefined) {
                    layerState.extent = (0,_extent_js__WEBPACK_IMPORTED_MODULE_9__.getIntersection)(layerState.extent, ownLayerState.extent);
                }
                else {
                    layerState.extent = ownLayerState.extent;
                }
            }
        }
        return states;
    };
    /**
     * @return {import("../source/State.js").default} Source state.
     */
    LayerGroup.prototype.getSourceState = function () {
        return _source_State_js__WEBPACK_IMPORTED_MODULE_10__.default.READY;
    };
    return LayerGroup;
}(_Base_js__WEBPACK_IMPORTED_MODULE_11__.default));
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (LayerGroup);
//# sourceMappingURL=Group.js.map

/***/ }),

/***/ "./node_modules/ol/layer/Layer.js":
/*!****************************************!*\
  !*** ./node_modules/ol/layer/Layer.js ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "inView": () => (/* binding */ inView),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _Base_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./Base.js */ "./node_modules/ol/layer/Base.js");
/* harmony import */ var _events_EventType_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../events/EventType.js */ "./node_modules/ol/events/EventType.js");
/* harmony import */ var _Property_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Property.js */ "./node_modules/ol/layer/Property.js");
/* harmony import */ var _render_EventType_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../render/EventType.js */ "./node_modules/ol/render/EventType.js");
/* harmony import */ var _source_State_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../source/State.js */ "./node_modules/ol/source/State.js");
/* harmony import */ var _asserts_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../asserts.js */ "./node_modules/ol/asserts.js");
/* harmony import */ var _obj_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../obj.js */ "./node_modules/ol/obj.js");
/* harmony import */ var _Object_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Object.js */ "./node_modules/ol/Object.js");
/* harmony import */ var _events_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../events.js */ "./node_modules/ol/events.js");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
/**
 * @module ol/layer/Layer
 */









/**
 * @typedef {function(import("../PluggableMap.js").FrameState):HTMLElement} RenderFunction
 */
/**
 * @typedef {Object} Options
 * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.
 * @property {number} [opacity=1] Opacity (0, 1).
 * @property {boolean} [visible=true] Visibility.
 * @property {import("../extent.js").Extent} [extent] The bounding extent for layer rendering.  The layer will not be
 * rendered outside of this extent.
 * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers
 * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed
 * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`
 * method was used.
 * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be
 * visible.
 * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will
 * be visible.
 * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be
 * visible.
 * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will
 * be visible.
 * @property {import("../source/Source.js").default} [source] Source for this layer.  If not provided to the constructor,
 * the source can be set by calling {@link module:ol/layer/Layer#setSource layer.setSource(source)} after
 * construction.
 * @property {import("../PluggableMap.js").default} [map] Map.
 * @property {RenderFunction} [render] Render function. Takes the frame state as input and is expected to return an
 * HTML element. Will overwrite the default rendering for the layer.
 */
/**
 * @typedef {Object} State
 * @property {import("./Layer.js").default} layer
 * @property {number} opacity Opacity, the value is rounded to two digits to appear after the decimal point.
 * @property {import("../source/State.js").default} sourceState
 * @property {boolean} visible
 * @property {boolean} managed
 * @property {import("../extent.js").Extent} [extent]
 * @property {number} zIndex
 * @property {number} maxResolution
 * @property {number} minResolution
 * @property {number} minZoom
 * @property {number} maxZoom
 */
/**
 * @classdesc
 * Base class from which all layer types are derived. This should only be instantiated
 * in the case where a custom layer is be added to the map with a custom `render` function.
 * Such a function can be specified in the `options` object, and is expected to return an HTML element.
 *
 * A visual representation of raster or vector map data.
 * Layers group together those properties that pertain to how the data is to be
 * displayed, irrespective of the source of that data.
 *
 * Layers are usually added to a map with {@link module:ol/Map#addLayer}. Components
 * like {@link module:ol/interaction/Select~Select} use unmanaged layers
 * internally. These unmanaged layers are associated with the map using
 * {@link module:ol/layer/Layer~Layer#setMap} instead.
 *
 * A generic `change` event is fired when the state of the source changes.
 *
 * Please note that for performance reasons several layers might get rendered to
 * the same HTML element, which will cause {@link module:ol/Map~Map#forEachLayerAtPixel} to
 * give false positives. To avoid this, apply different `className` properties to the
 * layers at creation time.
 *
 * @fires import("../render/Event.js").RenderEvent#prerender
 * @fires import("../render/Event.js").RenderEvent#postrender
 *
 * @template {import("../source/Source.js").default} SourceType
 * @api
 */
var Layer = /** @class */ (function (_super) {
    __extends(Layer, _super);
    /**
     * @param {Options} options Layer options.
     */
    function Layer(options) {
        var _this = this;
        var baseOptions = (0,_obj_js__WEBPACK_IMPORTED_MODULE_0__.assign)({}, options);
        delete baseOptions.source;
        _this = _super.call(this, baseOptions) || this;
        /**
         * @private
         * @type {?import("../events.js").EventsKey}
         */
        _this.mapPrecomposeKey_ = null;
        /**
         * @private
         * @type {?import("../events.js").EventsKey}
         */
        _this.mapRenderKey_ = null;
        /**
         * @private
         * @type {?import("../events.js").EventsKey}
         */
        _this.sourceChangeKey_ = null;
        /**
         * @private
         * @type {import("../renderer/Layer.js").default}
         */
        _this.renderer_ = null;
        // Overwrite default render method with a custom one
        if (options.render) {
            _this.render = options.render;
        }
        if (options.map) {
            _this.setMap(options.map);
        }
        _this.addEventListener((0,_Object_js__WEBPACK_IMPORTED_MODULE_1__.getChangeEventType)(_Property_js__WEBPACK_IMPORTED_MODULE_2__.default.SOURCE), _this.handleSourcePropertyChange_);
        var source = options.source
            ? /** @type {SourceType} */ (options.source)
            : null;
        _this.setSource(source);
        return _this;
    }
    /**
     * @param {Array<import("./Layer.js").default>=} opt_array Array of layers (to be modified in place).
     * @return {Array<import("./Layer.js").default>} Array of layers.
     */
    Layer.prototype.getLayersArray = function (opt_array) {
        var array = opt_array ? opt_array : [];
        array.push(this);
        return array;
    };
    /**
     * @param {Array<import("./Layer.js").State>=} opt_states Optional list of layer states (to be modified in place).
     * @return {Array<import("./Layer.js").State>} List of layer states.
     */
    Layer.prototype.getLayerStatesArray = function (opt_states) {
        var states = opt_states ? opt_states : [];
        states.push(this.getLayerState());
        return states;
    };
    /**
     * Get the layer source.
     * @return {SourceType} The layer source (or `null` if not yet set).
     * @observable
     * @api
     */
    Layer.prototype.getSource = function () {
        return /** @type {SourceType} */ (this.get(_Property_js__WEBPACK_IMPORTED_MODULE_2__.default.SOURCE)) || null;
    };
    /**
     * @return {import("../source/State.js").default} Source state.
     */
    Layer.prototype.getSourceState = function () {
        var source = this.getSource();
        return !source ? _source_State_js__WEBPACK_IMPORTED_MODULE_3__.default.UNDEFINED : source.getState();
    };
    /**
     * @private
     */
    Layer.prototype.handleSourceChange_ = function () {
        this.changed();
    };
    /**
     * @private
     */
    Layer.prototype.handleSourcePropertyChange_ = function () {
        if (this.sourceChangeKey_) {
            (0,_events_js__WEBPACK_IMPORTED_MODULE_4__.unlistenByKey)(this.sourceChangeKey_);
            this.sourceChangeKey_ = null;
        }
        var source = this.getSource();
        if (source) {
            this.sourceChangeKey_ = (0,_events_js__WEBPACK_IMPORTED_MODULE_4__.listen)(source, _events_EventType_js__WEBPACK_IMPORTED_MODULE_5__.default.CHANGE, this.handleSourceChange_, this);
        }
        this.changed();
    };
    /**
     * @param {import("../pixel").Pixel} pixel Pixel.
     * @return {Promise<Array<import("../Feature").default>>} Promise that resolves with
     * an array of features.
     */
    Layer.prototype.getFeatures = function (pixel) {
        return this.renderer_.getFeatures(pixel);
    };
    /**
     * In charge to manage the rendering of the layer. One layer type is
     * bounded with one layer renderer.
     * @param {?import("../PluggableMap.js").FrameState} frameState Frame state.
     * @param {HTMLElement} target Target which the renderer may (but need not) use
     * for rendering its content.
     * @return {HTMLElement} The rendered element.
     */
    Layer.prototype.render = function (frameState, target) {
        var layerRenderer = this.getRenderer();
        if (layerRenderer.prepareFrame(frameState)) {
            return layerRenderer.renderFrame(frameState, target);
        }
    };
    /**
     * Sets the layer to be rendered on top of other layers on a map. The map will
     * not manage this layer in its layers collection, and the callback in
     * {@link module:ol/Map#forEachLayerAtPixel} will receive `null` as layer. This
     * is useful for temporary layers. To remove an unmanaged layer from the map,
     * use `#setMap(null)`.
     *
     * To add the layer to a map and have it managed by the map, use
     * {@link module:ol/Map#addLayer} instead.
     * @param {import("../PluggableMap.js").default} map Map.
     * @api
     */
    Layer.prototype.setMap = function (map) {
        if (this.mapPrecomposeKey_) {
            (0,_events_js__WEBPACK_IMPORTED_MODULE_4__.unlistenByKey)(this.mapPrecomposeKey_);
            this.mapPrecomposeKey_ = null;
        }
        if (!map) {
            this.changed();
        }
        if (this.mapRenderKey_) {
            (0,_events_js__WEBPACK_IMPORTED_MODULE_4__.unlistenByKey)(this.mapRenderKey_);
            this.mapRenderKey_ = null;
        }
        if (map) {
            this.mapPrecomposeKey_ = (0,_events_js__WEBPACK_IMPORTED_MODULE_4__.listen)(map, _render_EventType_js__WEBPACK_IMPORTED_MODULE_6__.default.PRECOMPOSE, function (evt) {
                var renderEvent = /** @type {import("../render/Event.js").default} */ (evt);
                var layerStatesArray = renderEvent.frameState.layerStatesArray;
                var layerState = this.getLayerState(false);
                // A layer can only be added to the map once. Use either `layer.setMap()` or `map.addLayer()`, not both.
                (0,_asserts_js__WEBPACK_IMPORTED_MODULE_7__.assert)(!layerStatesArray.some(function (arrayLayerState) {
                    return arrayLayerState.layer === layerState.layer;
                }), 67);
                layerStatesArray.push(layerState);
            }, this);
            this.mapRenderKey_ = (0,_events_js__WEBPACK_IMPORTED_MODULE_4__.listen)(this, _events_EventType_js__WEBPACK_IMPORTED_MODULE_5__.default.CHANGE, map.render, map);
            this.changed();
        }
    };
    /**
     * Set the layer source.
     * @param {SourceType} source The layer source.
     * @observable
     * @api
     */
    Layer.prototype.setSource = function (source) {
        this.set(_Property_js__WEBPACK_IMPORTED_MODULE_2__.default.SOURCE, source);
    };
    /**
     * Get the renderer for this layer.
     * @return {import("../renderer/Layer.js").default} The layer renderer.
     */
    Layer.prototype.getRenderer = function () {
        if (!this.renderer_) {
            this.renderer_ = this.createRenderer();
        }
        return this.renderer_;
    };
    /**
     * @return {boolean} The layer has a renderer.
     */
    Layer.prototype.hasRenderer = function () {
        return !!this.renderer_;
    };
    /**
     * Create a renderer for this layer.
     * @return {import("../renderer/Layer.js").default} A layer renderer.
     * @protected
     */
    Layer.prototype.createRenderer = function () {
        return null;
    };
    /**
     * Clean up.
     */
    Layer.prototype.disposeInternal = function () {
        this.setSource(null);
        _super.prototype.disposeInternal.call(this);
    };
    return Layer;
}(_Base_js__WEBPACK_IMPORTED_MODULE_8__.default));
/**
 * Return `true` if the layer is visible and if the provided view state
 * has resolution and zoom levels that are in range of the layer's min/max.
 * @param {State} layerState Layer state.
 * @param {import("../View.js").State} viewState View state.
 * @return {boolean} The layer is visible at the given view state.
 */
function inView(layerState, viewState) {
    if (!layerState.visible) {
        return false;
    }
    var resolution = viewState.resolution;
    if (resolution < layerState.minResolution ||
        resolution >= layerState.maxResolution) {
        return false;
    }
    var zoom = viewState.zoom;
    return zoom > layerState.minZoom && zoom <= layerState.maxZoom;
}
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Layer);
//# sourceMappingURL=Layer.js.map

/***/ }),

/***/ "./node_modules/ol/layer/Property.js":
/*!*******************************************!*\
  !*** ./node_modules/ol/layer/Property.js ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/**
 * @module ol/layer/Property
 */
/**
 * @enum {string}
 */
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
    OPACITY: 'opacity',
    VISIBLE: 'visible',
    EXTENT: 'extent',
    Z_INDEX: 'zIndex',
    MAX_RESOLUTION: 'maxResolution',
    MIN_RESOLUTION: 'minResolution',
    MAX_ZOOM: 'maxZoom',
    MIN_ZOOM: 'minZoom',
    SOURCE: 'source',
});
//# sourceMappingURL=Property.js.map

/***/ }),

/***/ "./node_modules/ol/layer/Tile.js":
/*!***************************************!*\
  !*** ./node_modules/ol/layer/Tile.js ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _BaseTile_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./BaseTile.js */ "./node_modules/ol/layer/BaseTile.js");
/* harmony import */ var _renderer_canvas_TileLayer_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../renderer/canvas/TileLayer.js */ "./node_modules/ol/renderer/canvas/TileLayer.js");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
/**
 * @module ol/layer/Tile
 */


/**
 * @classdesc
 * For layer sources that provide pre-rendered, tiled images in grids that are
 * organized by zoom levels for specific resolutions.
 * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}
 * property on the layer object; for example, setting `title: 'My Title'` in the
 * options means that `title` is observable, and has get/set accessors.
 *
 * @api
 */
var TileLayer = /** @class */ (function (_super) {
    __extends(TileLayer, _super);
    /**
     * @param {import("./BaseTile.js").Options=} opt_options Tile layer options.
     */
    function TileLayer(opt_options) {
        return _super.call(this, opt_options) || this;
    }
    /**
     * Create a renderer for this layer.
     * @return {import("../renderer/Layer.js").default} A layer renderer.
     * @protected
     */
    TileLayer.prototype.createRenderer = function () {
        return new _renderer_canvas_TileLayer_js__WEBPACK_IMPORTED_MODULE_0__.default(this);
    };
    return TileLayer;
}(_BaseTile_js__WEBPACK_IMPORTED_MODULE_1__.default));
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (TileLayer);
//# sourceMappingURL=Tile.js.map

/***/ }),

/***/ "./node_modules/ol/layer/TileProperty.js":
/*!***********************************************!*\
  !*** ./node_modules/ol/layer/TileProperty.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/**
 * @module ol/layer/TileProperty
 */
/**
 * @enum {string}
 */
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
    PRELOAD: 'preload',
    USE_INTERIM_TILES_ON_ERROR: 'useInterimTilesOnError',
});
//# sourceMappingURL=TileProperty.js.map

/***/ }),

/***/ "./node_modules/ol/layer/Vector.js":
/*!*****************************************!*\
  !*** ./node_modules/ol/layer/Vector.js ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _BaseVector_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./BaseVector.js */ "./node_modules/ol/layer/BaseVector.js");
/* harmony import */ var _renderer_canvas_VectorLayer_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../renderer/canvas/VectorLayer.js */ "./node_modules/ol/renderer/canvas/VectorLayer.js");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
/**
 * @module ol/layer/Vector
 */


/**
 * @classdesc
 * Vector data that is rendered client-side.
 * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}
 * property on the layer object; for example, setting `title: 'My Title'` in the
 * options means that `title` is observable, and has get/set accessors.
 *
 * @extends {BaseVectorLayer<import("../source/Vector.js").default>}
 * @api
 */
var VectorLayer = /** @class */ (function (_super) {
    __extends(VectorLayer, _super);
    /**
     * @param {import("./BaseVector.js").Options=} opt_options Options.
     */
    function VectorLayer(opt_options) {
        return _super.call(this, opt_options) || this;
    }
    /**
     * Create a renderer for this layer.
     * @return {import("../renderer/Layer.js").default} A layer renderer.
     */
    VectorLayer.prototype.createRenderer = function () {
        return new _renderer_canvas_VectorLayer_js__WEBPACK_IMPORTED_MODULE_0__.default(this);
    };
    return VectorLayer;
}(_BaseVector_js__WEBPACK_IMPORTED_MODULE_1__.default));
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (VectorLayer);
//# sourceMappingURL=Vector.js.map

/***/ }),

/***/ "./node_modules/ol/loadingstrategy.js":
/*!********************************************!*\
  !*** ./node_modules/ol/loadingstrategy.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "all": () => (/* binding */ all),
/* harmony export */   "bbox": () => (/* binding */ bbox),
/* harmony export */   "tile": () => (/* binding */ tile)
/* harmony export */ });
/**
 * @module ol/loadingstrategy
 */
/**
 * Strategy function for loading all features with a single request.
 * @param {import("./extent.js").Extent} extent Extent.
 * @param {number} resolution Resolution.
 * @return {Array<import("./extent.js").Extent>} Extents.
 * @api
 */
function all(extent, resolution) {
    return [[-Infinity, -Infinity, Infinity, Infinity]];
}
/**
 * Strategy function for loading features based on the view's extent and
 * resolution.
 * @param {import("./extent.js").Extent} extent Extent.
 * @param {number} resolution Resolution.
 * @return {Array<import("./extent.js").Extent>} Extents.
 * @api
 */
function bbox(extent, resolution) {
    return [extent];
}
/**
 * Creates a strategy function for loading features based on a tile grid.
 * @param {import("./tilegrid/TileGrid.js").default} tileGrid Tile grid.
 * @return {function(import("./extent.js").Extent, number): Array<import("./extent.js").Extent>} Loading strategy.
 * @api
 */
function tile(tileGrid) {
    return (
    /**
     * @param {import("./extent.js").Extent} extent Extent.
     * @param {number} resolution Resolution.
     * @return {Array<import("./extent.js").Extent>} Extents.
     */
    function (extent, resolution) {
        var z = tileGrid.getZForResolution(resolution);
        var tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);
        /** @type {Array<import("./extent.js").Extent>} */
        var extents = [];
        /** @type {import("./tilecoord.js").TileCoord} */
        var tileCoord = [z, 0, 0];
        for (tileCoord[1] = tileRange.minX; tileCoord[1] <= tileRange.maxX; ++tileCoord[1]) {
            for (tileCoord[2] = tileRange.minY; tileCoord[2] <= tileRange.maxY; ++tileCoord[2]) {
                extents.push(tileGrid.getTileCoordExtent(tileCoord));
            }
        }
        return extents;
    });
}
//# sourceMappingURL=loadingstrategy.js.map

/***/ }),

/***/ "./node_modules/ol/math.js":
/*!*********************************!*\
  !*** ./node_modules/ol/math.js ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "clamp": () => (/* binding */ clamp),
/* harmony export */   "cosh": () => (/* binding */ cosh),
/* harmony export */   "log2": () => (/* binding */ log2),
/* harmony export */   "squaredSegmentDistance": () => (/* binding */ squaredSegmentDistance),
/* harmony export */   "squaredDistance": () => (/* binding */ squaredDistance),
/* harmony export */   "solveLinearSystem": () => (/* binding */ solveLinearSystem),
/* harmony export */   "toDegrees": () => (/* binding */ toDegrees),
/* harmony export */   "toRadians": () => (/* binding */ toRadians),
/* harmony export */   "modulo": () => (/* binding */ modulo),
/* harmony export */   "lerp": () => (/* binding */ lerp)
/* harmony export */ });
/**
 * @module ol/math
 */
/**
 * Takes a number and clamps it to within the provided bounds.
 * @param {number} value The input number.
 * @param {number} min The minimum value to return.
 * @param {number} max The maximum value to return.
 * @return {number} The input number if it is within bounds, or the nearest
 *     number within the bounds.
 */
function clamp(value, min, max) {
    return Math.min(Math.max(value, min), max);
}
/**
 * Return the hyperbolic cosine of a given number. The method will use the
 * native `Math.cosh` function if it is available, otherwise the hyperbolic
 * cosine will be calculated via the reference implementation of the Mozilla
 * developer network.
 *
 * @param {number} x X.
 * @return {number} Hyperbolic cosine of x.
 */
var cosh = (function () {
    // Wrapped in a iife, to save the overhead of checking for the native
    // implementation on every invocation.
    var cosh;
    if ('cosh' in Math) {
        // The environment supports the native Math.cosh function, use it…
        cosh = Math.cosh;
    }
    else {
        // … else, use the reference implementation of MDN:
        cosh = function (x) {
            var y = /** @type {Math} */ (Math).exp(x);
            return (y + 1 / y) / 2;
        };
    }
    return cosh;
})();
/**
 * Return the base 2 logarithm of a given number. The method will use the
 * native `Math.log2` function if it is available, otherwise the base 2
 * logarithm will be calculated via the reference implementation of the
 * Mozilla developer network.
 *
 * @param {number} x X.
 * @return {number} Base 2 logarithm of x.
 */
var log2 = (function () {
    // Wrapped in a iife, to save the overhead of checking for the native
    // implementation on every invocation.
    var log2;
    if ('log2' in Math) {
        // The environment supports the native Math.log2 function, use it…
        log2 = Math.log2;
    }
    else {
        // … else, use the reference implementation of MDN:
        log2 = function (x) {
            return Math.log(x) * Math.LOG2E;
        };
    }
    return log2;
})();
/**
 * Returns the square of the closest distance between the point (x, y) and the
 * line segment (x1, y1) to (x2, y2).
 * @param {number} x X.
 * @param {number} y Y.
 * @param {number} x1 X1.
 * @param {number} y1 Y1.
 * @param {number} x2 X2.
 * @param {number} y2 Y2.
 * @return {number} Squared distance.
 */
function squaredSegmentDistance(x, y, x1, y1, x2, y2) {
    var dx = x2 - x1;
    var dy = y2 - y1;
    if (dx !== 0 || dy !== 0) {
        var t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);
        if (t > 1) {
            x1 = x2;
            y1 = y2;
        }
        else if (t > 0) {
            x1 += dx * t;
            y1 += dy * t;
        }
    }
    return squaredDistance(x, y, x1, y1);
}
/**
 * Returns the square of the distance between the points (x1, y1) and (x2, y2).
 * @param {number} x1 X1.
 * @param {number} y1 Y1.
 * @param {number} x2 X2.
 * @param {number} y2 Y2.
 * @return {number} Squared distance.
 */
function squaredDistance(x1, y1, x2, y2) {
    var dx = x2 - x1;
    var dy = y2 - y1;
    return dx * dx + dy * dy;
}
/**
 * Solves system of linear equations using Gaussian elimination method.
 *
 * @param {Array<Array<number>>} mat Augmented matrix (n x n + 1 column)
 *                                     in row-major order.
 * @return {Array<number>} The resulting vector.
 */
function solveLinearSystem(mat) {
    var n = mat.length;
    for (var i = 0; i < n; i++) {
        // Find max in the i-th column (ignoring i - 1 first rows)
        var maxRow = i;
        var maxEl = Math.abs(mat[i][i]);
        for (var r = i + 1; r < n; r++) {
            var absValue = Math.abs(mat[r][i]);
            if (absValue > maxEl) {
                maxEl = absValue;
                maxRow = r;
            }
        }
        if (maxEl === 0) {
            return null; // matrix is singular
        }
        // Swap max row with i-th (current) row
        var tmp = mat[maxRow];
        mat[maxRow] = mat[i];
        mat[i] = tmp;
        // Subtract the i-th row to make all the remaining rows 0 in the i-th column
        for (var j = i + 1; j < n; j++) {
            var coef = -mat[j][i] / mat[i][i];
            for (var k = i; k < n + 1; k++) {
                if (i == k) {
                    mat[j][k] = 0;
                }
                else {
                    mat[j][k] += coef * mat[i][k];
                }
            }
        }
    }
    // Solve Ax=b for upper triangular matrix A (mat)
    var x = new Array(n);
    for (var l = n - 1; l >= 0; l--) {
        x[l] = mat[l][n] / mat[l][l];
        for (var m = l - 1; m >= 0; m--) {
            mat[m][n] -= mat[m][l] * x[l];
        }
    }
    return x;
}
/**
 * Converts radians to to degrees.
 *
 * @param {number} angleInRadians Angle in radians.
 * @return {number} Angle in degrees.
 */
function toDegrees(angleInRadians) {
    return (angleInRadians * 180) / Math.PI;
}
/**
 * Converts degrees to radians.
 *
 * @param {number} angleInDegrees Angle in degrees.
 * @return {number} Angle in radians.
 */
function toRadians(angleInDegrees) {
    return (angleInDegrees * Math.PI) / 180;
}
/**
 * Returns the modulo of a / b, depending on the sign of b.
 *
 * @param {number} a Dividend.
 * @param {number} b Divisor.
 * @return {number} Modulo.
 */
function modulo(a, b) {
    var r = a % b;
    return r * b < 0 ? r + b : r;
}
/**
 * Calculates the linearly interpolated value of x between a and b.
 *
 * @param {number} a Number
 * @param {number} b Number
 * @param {number} x Value to be interpolated.
 * @return {number} Interpolated value.
 */
function lerp(a, b, x) {
    return a + x * (b - a);
}
//# sourceMappingURL=math.js.map

/***/ }),

/***/ "./node_modules/ol/obj.js":
/*!********************************!*\
  !*** ./node_modules/ol/obj.js ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "assign": () => (/* binding */ assign),
/* harmony export */   "clear": () => (/* binding */ clear),
/* harmony export */   "getValues": () => (/* binding */ getValues),
/* harmony export */   "isEmpty": () => (/* binding */ isEmpty)
/* harmony export */ });
/**
 * @module ol/obj
 */
/**
 * Polyfill for Object.assign().  Assigns enumerable and own properties from
 * one or more source objects to a target object.
 * See https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign.
 *
 * @param {!Object} target The target object.
 * @param {...Object} var_sources The source object(s).
 * @return {!Object} The modified target object.
 */
var assign = typeof Object.assign === 'function'
    ? Object.assign
    : function (target, var_sources) {
        if (target === undefined || target === null) {
            throw new TypeError('Cannot convert undefined or null to object');
        }
        var output = Object(target);
        for (var i = 1, ii = arguments.length; i < ii; ++i) {
            var source = arguments[i];
            if (source !== undefined && source !== null) {
                for (var key in source) {
                    if (source.hasOwnProperty(key)) {
                        output[key] = source[key];
                    }
                }
            }
        }
        return output;
    };
/**
 * Removes all properties from an object.
 * @param {Object} object The object to clear.
 */
function clear(object) {
    for (var property in object) {
        delete object[property];
    }
}
/**
 * Polyfill for Object.values().  Get an array of property values from an object.
 * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/values
 *
 * @param {!Object<K,V>} object The object from which to get the values.
 * @return {!Array<V>} The property values.
 * @template K,V
 */
var getValues = typeof Object.values === 'function'
    ? Object.values
    : function (object) {
        var values = [];
        for (var property in object) {
            values.push(object[property]);
        }
        return values;
    };
/**
 * Determine if an object has any properties.
 * @param {Object} object The object to check.
 * @return {boolean} The object is empty.
 */
function isEmpty(object) {
    var property;
    for (property in object) {
        return false;
    }
    return !property;
}
//# sourceMappingURL=obj.js.map

/***/ }),

/***/ "./node_modules/ol/pointer/EventType.js":
/*!**********************************************!*\
  !*** ./node_modules/ol/pointer/EventType.js ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/**
 * @module ol/pointer/EventType
 */
/**
 * Constants for event names.
 * @enum {string}
 */
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
    POINTERMOVE: 'pointermove',
    POINTERDOWN: 'pointerdown',
    POINTERUP: 'pointerup',
    POINTEROVER: 'pointerover',
    POINTEROUT: 'pointerout',
    POINTERENTER: 'pointerenter',
    POINTERLEAVE: 'pointerleave',
    POINTERCANCEL: 'pointercancel',
});
//# sourceMappingURL=EventType.js.map

/***/ }),

/***/ "./node_modules/ol/proj.js":
/*!*********************************!*\
  !*** ./node_modules/ol/proj.js ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "METERS_PER_UNIT": () => (/* reexport safe */ _proj_Units_js__WEBPACK_IMPORTED_MODULE_0__.METERS_PER_UNIT),
/* harmony export */   "Projection": () => (/* reexport safe */ _proj_Projection_js__WEBPACK_IMPORTED_MODULE_1__.default),
/* harmony export */   "cloneTransform": () => (/* binding */ cloneTransform),
/* harmony export */   "identityTransform": () => (/* binding */ identityTransform),
/* harmony export */   "addProjection": () => (/* binding */ addProjection),
/* harmony export */   "addProjections": () => (/* binding */ addProjections),
/* harmony export */   "get": () => (/* binding */ get),
/* harmony export */   "getPointResolution": () => (/* binding */ getPointResolution),
/* harmony export */   "addEquivalentProjections": () => (/* binding */ addEquivalentProjections),
/* harmony export */   "addEquivalentTransforms": () => (/* binding */ addEquivalentTransforms),
/* harmony export */   "clearAllProjections": () => (/* binding */ clearAllProjections),
/* harmony export */   "createProjection": () => (/* binding */ createProjection),
/* harmony export */   "createTransformFromCoordinateTransform": () => (/* binding */ createTransformFromCoordinateTransform),
/* harmony export */   "addCoordinateTransforms": () => (/* binding */ addCoordinateTransforms),
/* harmony export */   "fromLonLat": () => (/* binding */ fromLonLat),
/* harmony export */   "toLonLat": () => (/* binding */ toLonLat),
/* harmony export */   "equivalent": () => (/* binding */ equivalent),
/* harmony export */   "getTransformFromProjections": () => (/* binding */ getTransformFromProjections),
/* harmony export */   "getTransform": () => (/* binding */ getTransform),
/* harmony export */   "transform": () => (/* binding */ transform),
/* harmony export */   "transformExtent": () => (/* binding */ transformExtent),
/* harmony export */   "transformWithProjections": () => (/* binding */ transformWithProjections),
/* harmony export */   "setUserProjection": () => (/* binding */ setUserProjection),
/* harmony export */   "clearUserProjection": () => (/* binding */ clearUserProjection),
/* harmony export */   "getUserProjection": () => (/* binding */ getUserProjection),
/* harmony export */   "useGeographic": () => (/* binding */ useGeographic),
/* harmony export */   "toUserCoordinate": () => (/* binding */ toUserCoordinate),
/* harmony export */   "fromUserCoordinate": () => (/* binding */ fromUserCoordinate),
/* harmony export */   "toUserExtent": () => (/* binding */ toUserExtent),
/* harmony export */   "fromUserExtent": () => (/* binding */ fromUserExtent),
/* harmony export */   "createSafeCoordinateTransform": () => (/* binding */ createSafeCoordinateTransform),
/* harmony export */   "addCommon": () => (/* binding */ addCommon)
/* harmony export */ });
/* harmony import */ var _proj_Projection_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./proj/Projection.js */ "./node_modules/ol/proj/Projection.js");
/* harmony import */ var _proj_Units_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./proj/Units.js */ "./node_modules/ol/proj/Units.js");
/* harmony import */ var _proj_epsg3857_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./proj/epsg3857.js */ "./node_modules/ol/proj/epsg3857.js");
/* harmony import */ var _proj_epsg4326_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./proj/epsg4326.js */ "./node_modules/ol/proj/epsg4326.js");
/* harmony import */ var _proj_projections_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./proj/projections.js */ "./node_modules/ol/proj/projections.js");
/* harmony import */ var _proj_transforms_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./proj/transforms.js */ "./node_modules/ol/proj/transforms.js");
/* harmony import */ var _extent_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./extent.js */ "./node_modules/ol/extent.js");
/* harmony import */ var _math_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./math.js */ "./node_modules/ol/math.js");
/* harmony import */ var _sphere_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./sphere.js */ "./node_modules/ol/sphere.js");
/* harmony import */ var _coordinate_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./coordinate.js */ "./node_modules/ol/coordinate.js");
/**
 * @module ol/proj
 */
/**
 * The ol/proj module stores:
 * * a list of {@link module:ol/proj/Projection}
 * objects, one for each projection supported by the application
 * * a list of transform functions needed to convert coordinates in one projection
 * into another.
 *
 * The static functions are the methods used to maintain these.
 * Each transform function can handle not only simple coordinate pairs, but also
 * large arrays of coordinates such as vector geometries.
 *
 * When loaded, the library adds projection objects for EPSG:4326 (WGS84
 * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used
 * for example by Bing Maps or OpenStreetMap), together with the relevant
 * transform functions.
 *
 * Additional transforms may be added by using the http://proj4js.org/
 * library (version 2.2 or later). You can use the full build supplied by
 * Proj4js, or create a custom build to support those projections you need; see
 * the Proj4js website for how to do this. You also need the Proj4js definitions
 * for the required projections. These definitions can be obtained from
 * https://epsg.io/, and are a JS function, so can be loaded in a script
 * tag (as in the examples) or pasted into your application.
 *
 * After all required projection definitions are added to proj4's registry (by
 * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`
 * package. Existing transforms are not changed by this function. See
 * examples/wms-image-custom-proj for an example of this.
 *
 * Additional projection definitions can be registered with `proj4.defs()` any
 * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't
 * know in advance what projections are needed, you can initially load minimal
 * support and then load whichever are requested.
 *
 * Note that Proj4js does not support projection extents. If you want to add
 * one for creating default tile grids, you can add it after the Projection
 * object has been created with `setExtent`, for example,
 * `get('EPSG:1234').setExtent(extent)`.
 *
 * In addition to Proj4js support, any transform functions can be added with
 * {@link module:ol/proj~addCoordinateTransforms}. To use this, you must first create
 * a {@link module:ol/proj/Projection} object for the new projection and add it with
 * {@link module:ol/proj~addProjection}. You can then add the forward and inverse
 * functions with {@link module:ol/proj~addCoordinateTransforms}. See
 * examples/wms-custom-proj for an example of this.
 *
 * Note that if no transforms are needed and you only need to define the
 * projection, just add a {@link module:ol/proj/Projection} with
 * {@link module:ol/proj~addProjection}. See examples/wms-no-proj for an example of
 * this.
 */










/**
 * A projection as {@link module:ol/proj/Projection}, SRS identifier
 * string or undefined.
 * @typedef {Projection|string|undefined} ProjectionLike
 * @api
 */
/**
 * A transform function accepts an array of input coordinate values, an optional
 * output array, and an optional dimension (default should be 2).  The function
 * transforms the input coordinate values, populates the output array, and
 * returns the output array.
 *
 * @typedef {function(Array<number>, Array<number>=, number=): Array<number>} TransformFunction
 * @api
 */


/**
 * @param {Array<number>} input Input coordinate array.
 * @param {Array<number>=} opt_output Output array of coordinate values.
 * @param {number=} opt_dimension Dimension.
 * @return {Array<number>} Output coordinate array (new array, same coordinate
 *     values).
 */
function cloneTransform(input, opt_output, opt_dimension) {
    var output;
    if (opt_output !== undefined) {
        for (var i = 0, ii = input.length; i < ii; ++i) {
            opt_output[i] = input[i];
        }
        output = opt_output;
    }
    else {
        output = input.slice();
    }
    return output;
}
/**
 * @param {Array<number>} input Input coordinate array.
 * @param {Array<number>=} opt_output Output array of coordinate values.
 * @param {number=} opt_dimension Dimension.
 * @return {Array<number>} Input coordinate array (same array as input).
 */
function identityTransform(input, opt_output, opt_dimension) {
    if (opt_output !== undefined && input !== opt_output) {
        for (var i = 0, ii = input.length; i < ii; ++i) {
            opt_output[i] = input[i];
        }
        input = opt_output;
    }
    return input;
}
/**
 * Add a Projection object to the list of supported projections that can be
 * looked up by their code.
 *
 * @param {Projection} projection Projection instance.
 * @api
 */
function addProjection(projection) {
    (0,_proj_projections_js__WEBPACK_IMPORTED_MODULE_2__.add)(projection.getCode(), projection);
    (0,_proj_transforms_js__WEBPACK_IMPORTED_MODULE_3__.add)(projection, projection, cloneTransform);
}
/**
 * @param {Array<Projection>} projections Projections.
 */
function addProjections(projections) {
    projections.forEach(addProjection);
}
/**
 * Fetches a Projection object for the code specified.
 *
 * @param {ProjectionLike} projectionLike Either a code string which is
 *     a combination of authority and identifier such as "EPSG:4326", or an
 *     existing projection object, or undefined.
 * @return {Projection} Projection object, or null if not in list.
 * @api
 */
function get(projectionLike) {
    return typeof projectionLike === 'string'
        ? (0,_proj_projections_js__WEBPACK_IMPORTED_MODULE_2__.get)(/** @type {string} */ (projectionLike))
        : /** @type {Projection} */ (projectionLike) || null;
}
/**
 * Get the resolution of the point in degrees or distance units.
 * For projections with degrees as the unit this will simply return the
 * provided resolution. For other projections the point resolution is
 * by default estimated by transforming the 'point' pixel to EPSG:4326,
 * measuring its width and height on the normal sphere,
 * and taking the average of the width and height.
 * A custom function can be provided for a specific projection, either
 * by setting the `getPointResolution` option in the
 * {@link module:ol/proj/Projection~Projection} constructor or by using
 * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing
 * projection object.
 * @param {ProjectionLike} projection The projection.
 * @param {number} resolution Nominal resolution in projection units.
 * @param {import("./coordinate.js").Coordinate} point Point to find adjusted resolution at.
 * @param {import("./proj/Units.js").default=} opt_units Units to get the point resolution in.
 * Default is the projection's units.
 * @return {number} Point resolution.
 * @api
 */
function getPointResolution(projection, resolution, point, opt_units) {
    projection = get(projection);
    var pointResolution;
    var getter = projection.getPointResolutionFunc();
    if (getter) {
        pointResolution = getter(resolution, point);
        if (opt_units && opt_units !== projection.getUnits()) {
            var metersPerUnit = projection.getMetersPerUnit();
            if (metersPerUnit) {
                pointResolution =
                    (pointResolution * metersPerUnit) / _proj_Units_js__WEBPACK_IMPORTED_MODULE_0__.METERS_PER_UNIT[opt_units];
            }
        }
    }
    else {
        var units = projection.getUnits();
        if ((units == _proj_Units_js__WEBPACK_IMPORTED_MODULE_0__.default.DEGREES && !opt_units) || opt_units == _proj_Units_js__WEBPACK_IMPORTED_MODULE_0__.default.DEGREES) {
            pointResolution = resolution;
        }
        else {
            // Estimate point resolution by transforming the center pixel to EPSG:4326,
            // measuring its width and height on the normal sphere, and taking the
            // average of the width and height.
            var toEPSG4326_1 = getTransformFromProjections(projection, get('EPSG:4326'));
            if (toEPSG4326_1 === identityTransform && units !== _proj_Units_js__WEBPACK_IMPORTED_MODULE_0__.default.DEGREES) {
                // no transform is available
                pointResolution = resolution * projection.getMetersPerUnit();
            }
            else {
                var vertices = [
                    point[0] - resolution / 2,
                    point[1],
                    point[0] + resolution / 2,
                    point[1],
                    point[0],
                    point[1] - resolution / 2,
                    point[0],
                    point[1] + resolution / 2,
                ];
                vertices = toEPSG4326_1(vertices, vertices, 2);
                var width = (0,_sphere_js__WEBPACK_IMPORTED_MODULE_4__.getDistance)(vertices.slice(0, 2), vertices.slice(2, 4));
                var height = (0,_sphere_js__WEBPACK_IMPORTED_MODULE_4__.getDistance)(vertices.slice(4, 6), vertices.slice(6, 8));
                pointResolution = (width + height) / 2;
            }
            var metersPerUnit = opt_units
                ? _proj_Units_js__WEBPACK_IMPORTED_MODULE_0__.METERS_PER_UNIT[opt_units]
                : projection.getMetersPerUnit();
            if (metersPerUnit !== undefined) {
                pointResolution /= metersPerUnit;
            }
        }
    }
    return pointResolution;
}
/**
 * Registers transformation functions that don't alter coordinates. Those allow
 * to transform between projections with equal meaning.
 *
 * @param {Array<Projection>} projections Projections.
 * @api
 */
function addEquivalentProjections(projections) {
    addProjections(projections);
    projections.forEach(function (source) {
        projections.forEach(function (destination) {
            if (source !== destination) {
                (0,_proj_transforms_js__WEBPACK_IMPORTED_MODULE_3__.add)(source, destination, cloneTransform);
            }
        });
    });
}
/**
 * Registers transformation functions to convert coordinates in any projection
 * in projection1 to any projection in projection2.
 *
 * @param {Array<Projection>} projections1 Projections with equal
 *     meaning.
 * @param {Array<Projection>} projections2 Projections with equal
 *     meaning.
 * @param {TransformFunction} forwardTransform Transformation from any
 *   projection in projection1 to any projection in projection2.
 * @param {TransformFunction} inverseTransform Transform from any projection
 *   in projection2 to any projection in projection1..
 */
function addEquivalentTransforms(projections1, projections2, forwardTransform, inverseTransform) {
    projections1.forEach(function (projection1) {
        projections2.forEach(function (projection2) {
            (0,_proj_transforms_js__WEBPACK_IMPORTED_MODULE_3__.add)(projection1, projection2, forwardTransform);
            (0,_proj_transforms_js__WEBPACK_IMPORTED_MODULE_3__.add)(projection2, projection1, inverseTransform);
        });
    });
}
/**
 * Clear all cached projections and transforms.
 */
function clearAllProjections() {
    (0,_proj_projections_js__WEBPACK_IMPORTED_MODULE_2__.clear)();
    (0,_proj_transforms_js__WEBPACK_IMPORTED_MODULE_3__.clear)();
}
/**
 * @param {Projection|string|undefined} projection Projection.
 * @param {string} defaultCode Default code.
 * @return {Projection} Projection.
 */
function createProjection(projection, defaultCode) {
    if (!projection) {
        return get(defaultCode);
    }
    else if (typeof projection === 'string') {
        return get(projection);
    }
    else {
        return /** @type {Projection} */ (projection);
    }
}
/**
 * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform
 * function.
 * @param {function(import("./coordinate.js").Coordinate): import("./coordinate.js").Coordinate} coordTransform Coordinate
 *     transform.
 * @return {TransformFunction} Transform function.
 */
function createTransformFromCoordinateTransform(coordTransform) {
    return (
    /**
     * @param {Array<number>} input Input.
     * @param {Array<number>=} opt_output Output.
     * @param {number=} opt_dimension Dimension.
     * @return {Array<number>} Output.
     */
    function (input, opt_output, opt_dimension) {
        var length = input.length;
        var dimension = opt_dimension !== undefined ? opt_dimension : 2;
        var output = opt_output !== undefined ? opt_output : new Array(length);
        for (var i = 0; i < length; i += dimension) {
            var point = coordTransform([input[i], input[i + 1]]);
            output[i] = point[0];
            output[i + 1] = point[1];
            for (var j = dimension - 1; j >= 2; --j) {
                output[i + j] = input[i + j];
            }
        }
        return output;
    });
}
/**
 * Registers coordinate transform functions to convert coordinates between the
 * source projection and the destination projection.
 * The forward and inverse functions convert coordinate pairs; this function
 * converts these into the functions used internally which also handle
 * extents and coordinate arrays.
 *
 * @param {ProjectionLike} source Source projection.
 * @param {ProjectionLike} destination Destination projection.
 * @param {function(import("./coordinate.js").Coordinate): import("./coordinate.js").Coordinate} forward The forward transform
 *     function (that is, from the source projection to the destination
 *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns
 *     the transformed {@link module:ol/coordinate~Coordinate}.
 * @param {function(import("./coordinate.js").Coordinate): import("./coordinate.js").Coordinate} inverse The inverse transform
 *     function (that is, from the destination projection to the source
 *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns
 *     the transformed {@link module:ol/coordinate~Coordinate}.
 * @api
 */
function addCoordinateTransforms(source, destination, forward, inverse) {
    var sourceProj = get(source);
    var destProj = get(destination);
    (0,_proj_transforms_js__WEBPACK_IMPORTED_MODULE_3__.add)(sourceProj, destProj, createTransformFromCoordinateTransform(forward));
    (0,_proj_transforms_js__WEBPACK_IMPORTED_MODULE_3__.add)(destProj, sourceProj, createTransformFromCoordinateTransform(inverse));
}
/**
 * Transforms a coordinate from longitude/latitude to a different projection.
 * @param {import("./coordinate.js").Coordinate} coordinate Coordinate as longitude and latitude, i.e.
 *     an array with longitude as 1st and latitude as 2nd element.
 * @param {ProjectionLike=} opt_projection Target projection. The
 *     default is Web Mercator, i.e. 'EPSG:3857'.
 * @return {import("./coordinate.js").Coordinate} Coordinate projected to the target projection.
 * @api
 */
function fromLonLat(coordinate, opt_projection) {
    return transform(coordinate, 'EPSG:4326', opt_projection !== undefined ? opt_projection : 'EPSG:3857');
}
/**
 * Transforms a coordinate to longitude/latitude.
 * @param {import("./coordinate.js").Coordinate} coordinate Projected coordinate.
 * @param {ProjectionLike=} opt_projection Projection of the coordinate.
 *     The default is Web Mercator, i.e. 'EPSG:3857'.
 * @return {import("./coordinate.js").Coordinate} Coordinate as longitude and latitude, i.e. an array
 *     with longitude as 1st and latitude as 2nd element.
 * @api
 */
function toLonLat(coordinate, opt_projection) {
    var lonLat = transform(coordinate, opt_projection !== undefined ? opt_projection : 'EPSG:3857', 'EPSG:4326');
    var lon = lonLat[0];
    if (lon < -180 || lon > 180) {
        lonLat[0] = (0,_math_js__WEBPACK_IMPORTED_MODULE_5__.modulo)(lon + 180, 360) - 180;
    }
    return lonLat;
}
/**
 * Checks if two projections are the same, that is every coordinate in one
 * projection does represent the same geographic point as the same coordinate in
 * the other projection.
 *
 * @param {Projection} projection1 Projection 1.
 * @param {Projection} projection2 Projection 2.
 * @return {boolean} Equivalent.
 * @api
 */
function equivalent(projection1, projection2) {
    if (projection1 === projection2) {
        return true;
    }
    var equalUnits = projection1.getUnits() === projection2.getUnits();
    if (projection1.getCode() === projection2.getCode()) {
        return equalUnits;
    }
    else {
        var transformFunc = getTransformFromProjections(projection1, projection2);
        return transformFunc === cloneTransform && equalUnits;
    }
}
/**
 * Searches in the list of transform functions for the function for converting
 * coordinates from the source projection to the destination projection.
 *
 * @param {Projection} sourceProjection Source Projection object.
 * @param {Projection} destinationProjection Destination Projection
 *     object.
 * @return {TransformFunction} Transform function.
 */
function getTransformFromProjections(sourceProjection, destinationProjection) {
    var sourceCode = sourceProjection.getCode();
    var destinationCode = destinationProjection.getCode();
    var transformFunc = (0,_proj_transforms_js__WEBPACK_IMPORTED_MODULE_3__.get)(sourceCode, destinationCode);
    if (!transformFunc) {
        transformFunc = identityTransform;
    }
    return transformFunc;
}
/**
 * Given the projection-like objects, searches for a transformation
 * function to convert a coordinates array from the source projection to the
 * destination projection.
 *
 * @param {ProjectionLike} source Source.
 * @param {ProjectionLike} destination Destination.
 * @return {TransformFunction} Transform function.
 * @api
 */
function getTransform(source, destination) {
    var sourceProjection = get(source);
    var destinationProjection = get(destination);
    return getTransformFromProjections(sourceProjection, destinationProjection);
}
/**
 * Transforms a coordinate from source projection to destination projection.
 * This returns a new coordinate (and does not modify the original).
 *
 * See {@link module:ol/proj~transformExtent} for extent transformation.
 * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its
 * subclasses for geometry transforms.
 *
 * @param {import("./coordinate.js").Coordinate} coordinate Coordinate.
 * @param {ProjectionLike} source Source projection-like.
 * @param {ProjectionLike} destination Destination projection-like.
 * @return {import("./coordinate.js").Coordinate} Coordinate.
 * @api
 */
function transform(coordinate, source, destination) {
    var transformFunc = getTransform(source, destination);
    return transformFunc(coordinate, undefined, coordinate.length);
}
/**
 * Transforms an extent from source projection to destination projection.  This
 * returns a new extent (and does not modify the original).
 *
 * @param {import("./extent.js").Extent} extent The extent to transform.
 * @param {ProjectionLike} source Source projection-like.
 * @param {ProjectionLike} destination Destination projection-like.
 * @param {number=} opt_stops Number of stops per side used for the transform.
 * By default only the corners are used.
 * @return {import("./extent.js").Extent} The transformed extent.
 * @api
 */
function transformExtent(extent, source, destination, opt_stops) {
    var transformFunc = getTransform(source, destination);
    return (0,_extent_js__WEBPACK_IMPORTED_MODULE_6__.applyTransform)(extent, transformFunc, undefined, opt_stops);
}
/**
 * Transforms the given point to the destination projection.
 *
 * @param {import("./coordinate.js").Coordinate} point Point.
 * @param {Projection} sourceProjection Source projection.
 * @param {Projection} destinationProjection Destination projection.
 * @return {import("./coordinate.js").Coordinate} Point.
 */
function transformWithProjections(point, sourceProjection, destinationProjection) {
    var transformFunc = getTransformFromProjections(sourceProjection, destinationProjection);
    return transformFunc(point);
}
/**
 * @type {?Projection}
 */
var userProjection = null;
/**
 * Set the projection for coordinates supplied from and returned by API methods.
 * Note that this method is not yet a part of the stable API.  Support for user
 * projections is not yet complete and should be considered experimental.
 * @param {ProjectionLike} projection The user projection.
 */
function setUserProjection(projection) {
    userProjection = get(projection);
}
/**
 * Clear the user projection if set.  Note that this method is not yet a part of
 * the stable API.  Support for user projections is not yet complete and should
 * be considered experimental.
 */
function clearUserProjection() {
    userProjection = null;
}
/**
 * Get the projection for coordinates supplied from and returned by API methods.
 * Note that this method is not yet a part of the stable API.  Support for user
 * projections is not yet complete and should be considered experimental.
 * @returns {?Projection} The user projection (or null if not set).
 */
function getUserProjection() {
    return userProjection;
}
/**
 * Use geographic coordinates (WGS-84 datum) in API methods.  Note that this
 * method is not yet a part of the stable API.  Support for user projections is
 * not yet complete and should be considered experimental.
 */
function useGeographic() {
    setUserProjection('EPSG:4326');
}
/**
 * Return a coordinate transformed into the user projection.  If no user projection
 * is set, the original coordinate is returned.
 * @param {Array<number>} coordinate Input coordinate.
 * @param {ProjectionLike} sourceProjection The input coordinate projection.
 * @returns {Array<number>} The input coordinate in the user projection.
 */
function toUserCoordinate(coordinate, sourceProjection) {
    if (!userProjection) {
        return coordinate;
    }
    return transform(coordinate, sourceProjection, userProjection);
}
/**
 * Return a coordinate transformed from the user projection.  If no user projection
 * is set, the original coordinate is returned.
 * @param {Array<number>} coordinate Input coordinate.
 * @param {ProjectionLike} destProjection The destination projection.
 * @returns {Array<number>} The input coordinate transformed.
 */
function fromUserCoordinate(coordinate, destProjection) {
    if (!userProjection) {
        return coordinate;
    }
    return transform(coordinate, userProjection, destProjection);
}
/**
 * Return an extent transformed into the user projection.  If no user projection
 * is set, the original extent is returned.
 * @param {import("./extent.js").Extent} extent Input extent.
 * @param {ProjectionLike} sourceProjection The input extent projection.
 * @returns {import("./extent.js").Extent} The input extent in the user projection.
 */
function toUserExtent(extent, sourceProjection) {
    if (!userProjection) {
        return extent;
    }
    return transformExtent(extent, sourceProjection, userProjection);
}
/**
 * Return an extent transformed from the user projection.  If no user projection
 * is set, the original extent is returned.
 * @param {import("./extent.js").Extent} extent Input extent.
 * @param {ProjectionLike} destProjection The destination projection.
 * @returns {import("./extent.js").Extent} The input extent transformed.
 */
function fromUserExtent(extent, destProjection) {
    if (!userProjection) {
        return extent;
    }
    return transformExtent(extent, userProjection, destProjection);
}
/**
 * Creates a safe coordinate transform function from a coordinate transform function.
 * "Safe" means that it can handle wrapping of x-coordinates for global projections,
 * and that coordinates exceeding the source projection validity extent's range will be
 * clamped to the validity range.
 * @param {Projection} sourceProj Source projection.
 * @param {Projection} destProj Destination projection.
 * @param {function(import("./coordinate.js").Coordinate): import("./coordinate.js").Coordinate} transform Transform function (source to destiation).
 * @return {function(import("./coordinate.js").Coordinate): import("./coordinate.js").Coordinate} Safe transform function (source to destiation).
 */
function createSafeCoordinateTransform(sourceProj, destProj, transform) {
    return function (coord) {
        var sourceX = coord[0];
        var sourceY = coord[1];
        var transformed, worldsAway;
        if (sourceProj.canWrapX()) {
            var sourceExtent = sourceProj.getExtent();
            var sourceExtentWidth = (0,_extent_js__WEBPACK_IMPORTED_MODULE_6__.getWidth)(sourceExtent);
            worldsAway = (0,_coordinate_js__WEBPACK_IMPORTED_MODULE_7__.getWorldsAway)(coord, sourceProj, sourceExtentWidth);
            if (worldsAway) {
                // Move x to the real world
                sourceX = sourceX - worldsAway * sourceExtentWidth;
            }
            sourceX = (0,_math_js__WEBPACK_IMPORTED_MODULE_5__.clamp)(sourceX, sourceExtent[0], sourceExtent[2]);
            sourceY = (0,_math_js__WEBPACK_IMPORTED_MODULE_5__.clamp)(sourceY, sourceExtent[1], sourceExtent[3]);
            transformed = transform([sourceX, sourceY]);
        }
        else {
            transformed = transform(coord);
        }
        if (worldsAway && destProj.canWrapX()) {
            // Move transformed coordinate back to the offset world
            transformed[0] += worldsAway * (0,_extent_js__WEBPACK_IMPORTED_MODULE_6__.getWidth)(destProj.getExtent());
        }
        return transformed;
    };
}
/**
 * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called
 * by when this module is executed and should only need to be called again after
 * `clearAllProjections()` is called (e.g. in tests).
 */
function addCommon() {
    // Add transformations that don't alter coordinates to convert within set of
    // projections with equal meaning.
    addEquivalentProjections(_proj_epsg3857_js__WEBPACK_IMPORTED_MODULE_8__.PROJECTIONS);
    addEquivalentProjections(_proj_epsg4326_js__WEBPACK_IMPORTED_MODULE_9__.PROJECTIONS);
    // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like
    // coordinates and back.
    addEquivalentTransforms(_proj_epsg4326_js__WEBPACK_IMPORTED_MODULE_9__.PROJECTIONS, _proj_epsg3857_js__WEBPACK_IMPORTED_MODULE_8__.PROJECTIONS, _proj_epsg3857_js__WEBPACK_IMPORTED_MODULE_8__.fromEPSG4326, _proj_epsg3857_js__WEBPACK_IMPORTED_MODULE_8__.toEPSG4326);
}
addCommon();
//# sourceMappingURL=proj.js.map

/***/ }),

/***/ "./node_modules/ol/proj/Projection.js":
/*!********************************************!*\
  !*** ./node_modules/ol/proj/Projection.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _Units_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Units.js */ "./node_modules/ol/proj/Units.js");
/**
 * @module ol/proj/Projection
 */

/**
 * @typedef {Object} Options
 * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.
 * @property {import("./Units.js").default|string} [units] Units. Required unless a
 * proj4 projection is defined for `code`.
 * @property {import("../extent.js").Extent} [extent] The validity extent for the SRS.
 * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.
 * @property {boolean} [global=false] Whether the projection is valid for the whole globe.
 * @property {number} [metersPerUnit] The meters per unit for the SRS.
 * If not provided, the `units` are used to get the meters per unit from the {@link module:ol/proj/Units~METERS_PER_UNIT}
 * lookup table.
 * @property {import("../extent.js").Extent} [worldExtent] The world extent for the SRS.
 * @property {function(number, import("../coordinate.js").Coordinate):number} [getPointResolution]
 * Function to determine resolution at a point. The function is called with a
 * `{number}` view resolution and an `{import("../coordinate.js").Coordinate}` as arguments, and returns
 * the `{number}` resolution in projection units at the passed coordinate. If this is `undefined`,
 * the default {@link module:ol/proj#getPointResolution} function will be used.
 */
/**
 * @classdesc
 * Projection definition class. One of these is created for each projection
 * supported in the application and stored in the {@link module:ol/proj} namespace.
 * You can use these in applications, but this is not required, as API params
 * and options use {@link module:ol/proj~ProjectionLike} which means the simple string
 * code will suffice.
 *
 * You can use {@link module:ol/proj~get} to retrieve the object for a particular
 * projection.
 *
 * The library includes definitions for `EPSG:4326` and `EPSG:3857`, together
 * with the following aliases:
 * * `EPSG:4326`: CRS:84, urn:ogc:def:crs:EPSG:6.6:4326,
 *     urn:ogc:def:crs:OGC:1.3:CRS84, urn:ogc:def:crs:OGC:2:84,
 *     http://www.opengis.net/gml/srs/epsg.xml#4326,
 *     urn:x-ogc:def:crs:EPSG:4326
 * * `EPSG:3857`: EPSG:102100, EPSG:102113, EPSG:900913,
 *     urn:ogc:def:crs:EPSG:6.18:3:3857,
 *     http://www.opengis.net/gml/srs/epsg.xml#3857
 *
 * If you use [proj4js](https://github.com/proj4js/proj4js), aliases can
 * be added using `proj4.defs()`. After all required projection definitions are
 * added, call the {@link module:ol/proj/proj4~register} function.
 *
 * @api
 */
var Projection = /** @class */ (function () {
    /**
     * @param {Options} options Projection options.
     */
    function Projection(options) {
        /**
         * @private
         * @type {string}
         */
        this.code_ = options.code;
        /**
         * Units of projected coordinates. When set to `TILE_PIXELS`, a
         * `this.extent_` and `this.worldExtent_` must be configured properly for each
         * tile.
         * @private
         * @type {import("./Units.js").default}
         */
        this.units_ = /** @type {import("./Units.js").default} */ (options.units);
        /**
         * Validity extent of the projection in projected coordinates. For projections
         * with `TILE_PIXELS` units, this is the extent of the tile in
         * tile pixel space.
         * @private
         * @type {import("../extent.js").Extent}
         */
        this.extent_ = options.extent !== undefined ? options.extent : null;
        /**
         * Extent of the world in EPSG:4326. For projections with
         * `TILE_PIXELS` units, this is the extent of the tile in
         * projected coordinate space.
         * @private
         * @type {import("../extent.js").Extent}
         */
        this.worldExtent_ =
            options.worldExtent !== undefined ? options.worldExtent : null;
        /**
         * @private
         * @type {string}
         */
        this.axisOrientation_ =
            options.axisOrientation !== undefined ? options.axisOrientation : 'enu';
        /**
         * @private
         * @type {boolean}
         */
        this.global_ = options.global !== undefined ? options.global : false;
        /**
         * @private
         * @type {boolean}
         */
        this.canWrapX_ = !!(this.global_ && this.extent_);
        /**
         * @private
         * @type {function(number, import("../coordinate.js").Coordinate):number|undefined}
         */
        this.getPointResolutionFunc_ = options.getPointResolution;
        /**
         * @private
         * @type {import("../tilegrid/TileGrid.js").default}
         */
        this.defaultTileGrid_ = null;
        /**
         * @private
         * @type {number|undefined}
         */
        this.metersPerUnit_ = options.metersPerUnit;
    }
    /**
     * @return {boolean} The projection is suitable for wrapping the x-axis
     */
    Projection.prototype.canWrapX = function () {
        return this.canWrapX_;
    };
    /**
     * Get the code for this projection, e.g. 'EPSG:4326'.
     * @return {string} Code.
     * @api
     */
    Projection.prototype.getCode = function () {
        return this.code_;
    };
    /**
     * Get the validity extent for this projection.
     * @return {import("../extent.js").Extent} Extent.
     * @api
     */
    Projection.prototype.getExtent = function () {
        return this.extent_;
    };
    /**
     * Get the units of this projection.
     * @return {import("./Units.js").default} Units.
     * @api
     */
    Projection.prototype.getUnits = function () {
        return this.units_;
    };
    /**
     * Get the amount of meters per unit of this projection.  If the projection is
     * not configured with `metersPerUnit` or a units identifier, the return is
     * `undefined`.
     * @return {number|undefined} Meters.
     * @api
     */
    Projection.prototype.getMetersPerUnit = function () {
        return this.metersPerUnit_ || _Units_js__WEBPACK_IMPORTED_MODULE_0__.METERS_PER_UNIT[this.units_];
    };
    /**
     * Get the world extent for this projection.
     * @return {import("../extent.js").Extent} Extent.
     * @api
     */
    Projection.prototype.getWorldExtent = function () {
        return this.worldExtent_;
    };
    /**
     * Get the axis orientation of this projection.
     * Example values are:
     * enu - the default easting, northing, elevation.
     * neu - northing, easting, up - useful for "lat/long" geographic coordinates,
     *     or south orientated transverse mercator.
     * wnu - westing, northing, up - some planetary coordinate systems have
     *     "west positive" coordinate systems
     * @return {string} Axis orientation.
     * @api
     */
    Projection.prototype.getAxisOrientation = function () {
        return this.axisOrientation_;
    };
    /**
     * Is this projection a global projection which spans the whole world?
     * @return {boolean} Whether the projection is global.
     * @api
     */
    Projection.prototype.isGlobal = function () {
        return this.global_;
    };
    /**
     * Set if the projection is a global projection which spans the whole world
     * @param {boolean} global Whether the projection is global.
     * @api
     */
    Projection.prototype.setGlobal = function (global) {
        this.global_ = global;
        this.canWrapX_ = !!(global && this.extent_);
    };
    /**
     * @return {import("../tilegrid/TileGrid.js").default} The default tile grid.
     */
    Projection.prototype.getDefaultTileGrid = function () {
        return this.defaultTileGrid_;
    };
    /**
     * @param {import("../tilegrid/TileGrid.js").default} tileGrid The default tile grid.
     */
    Projection.prototype.setDefaultTileGrid = function (tileGrid) {
        this.defaultTileGrid_ = tileGrid;
    };
    /**
     * Set the validity extent for this projection.
     * @param {import("../extent.js").Extent} extent Extent.
     * @api
     */
    Projection.prototype.setExtent = function (extent) {
        this.extent_ = extent;
        this.canWrapX_ = !!(this.global_ && extent);
    };
    /**
     * Set the world extent for this projection.
     * @param {import("../extent.js").Extent} worldExtent World extent
     *     [minlon, minlat, maxlon, maxlat].
     * @api
     */
    Projection.prototype.setWorldExtent = function (worldExtent) {
        this.worldExtent_ = worldExtent;
    };
    /**
     * Set the getPointResolution function (see {@link module:ol/proj~getPointResolution}
     * for this projection.
     * @param {function(number, import("../coordinate.js").Coordinate):number} func Function
     * @api
     */
    Projection.prototype.setGetPointResolution = function (func) {
        this.getPointResolutionFunc_ = func;
    };
    /**
     * Get the custom point resolution function for this projection (if set).
     * @return {function(number, import("../coordinate.js").Coordinate):number|undefined} The custom point
     * resolution function (if set).
     */
    Projection.prototype.getPointResolutionFunc = function () {
        return this.getPointResolutionFunc_;
    };
    return Projection;
}());
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Projection);
//# sourceMappingURL=Projection.js.map

/***/ }),

/***/ "./node_modules/ol/proj/Units.js":
/*!***************************************!*\
  !*** ./node_modules/ol/proj/Units.js ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "METERS_PER_UNIT": () => (/* binding */ METERS_PER_UNIT),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/**
 * @module ol/proj/Units
 */
/**
 * Projection units: `'degrees'`, `'ft'`, `'m'`, `'pixels'`, `'tile-pixels'` or
 * `'us-ft'`.
 * @enum {string}
 */
var Units = {
    /**
     * Degrees
     * @api
     */
    DEGREES: 'degrees',
    /**
     * Feet
     * @api
     */
    FEET: 'ft',
    /**
     * Meters
     * @api
     */
    METERS: 'm',
    /**
     * Pixels
     * @api
     */
    PIXELS: 'pixels',
    /**
     * Tile Pixels
     * @api
     */
    TILE_PIXELS: 'tile-pixels',
    /**
     * US Feet
     * @api
     */
    USFEET: 'us-ft',
};
/**
 * Meters per unit lookup table.
 * @const
 * @type {Object<Units, number>}
 * @api
 */
var METERS_PER_UNIT = {};
// use the radius of the Normal sphere
METERS_PER_UNIT[Units.DEGREES] = (2 * Math.PI * 6370997) / 360;
METERS_PER_UNIT[Units.FEET] = 0.3048;
METERS_PER_UNIT[Units.METERS] = 1;
METERS_PER_UNIT[Units.USFEET] = 1200 / 3937;
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Units);
//# sourceMappingURL=Units.js.map

/***/ }),

/***/ "./node_modules/ol/proj/epsg3857.js":
/*!******************************************!*\
  !*** ./node_modules/ol/proj/epsg3857.js ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "RADIUS": () => (/* binding */ RADIUS),
/* harmony export */   "HALF_SIZE": () => (/* binding */ HALF_SIZE),
/* harmony export */   "EXTENT": () => (/* binding */ EXTENT),
/* harmony export */   "WORLD_EXTENT": () => (/* binding */ WORLD_EXTENT),
/* harmony export */   "MAX_SAFE_Y": () => (/* binding */ MAX_SAFE_Y),
/* harmony export */   "PROJECTIONS": () => (/* binding */ PROJECTIONS),
/* harmony export */   "fromEPSG4326": () => (/* binding */ fromEPSG4326),
/* harmony export */   "toEPSG4326": () => (/* binding */ toEPSG4326)
/* harmony export */ });
/* harmony import */ var _Projection_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Projection.js */ "./node_modules/ol/proj/Projection.js");
/* harmony import */ var _Units_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Units.js */ "./node_modules/ol/proj/Units.js");
/* harmony import */ var _math_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../math.js */ "./node_modules/ol/math.js");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
/**
 * @module ol/proj/epsg3857
 */



/**
 * Radius of WGS84 sphere
 *
 * @const
 * @type {number}
 */
var RADIUS = 6378137;
/**
 * @const
 * @type {number}
 */
var HALF_SIZE = Math.PI * RADIUS;
/**
 * @const
 * @type {import("../extent.js").Extent}
 */
var EXTENT = [-HALF_SIZE, -HALF_SIZE, HALF_SIZE, HALF_SIZE];
/**
 * @const
 * @type {import("../extent.js").Extent}
 */
var WORLD_EXTENT = [-180, -85, 180, 85];
/**
 * Maximum safe value in y direction
 * @const
 * @type {number}
 */
var MAX_SAFE_Y = RADIUS * Math.log(Math.tan(Math.PI / 2));
/**
 * @classdesc
 * Projection object for web/spherical Mercator (EPSG:3857).
 */
var EPSG3857Projection = /** @class */ (function (_super) {
    __extends(EPSG3857Projection, _super);
    /**
     * @param {string} code Code.
     */
    function EPSG3857Projection(code) {
        return _super.call(this, {
            code: code,
            units: _Units_js__WEBPACK_IMPORTED_MODULE_0__.default.METERS,
            extent: EXTENT,
            global: true,
            worldExtent: WORLD_EXTENT,
            getPointResolution: function (resolution, point) {
                return resolution / (0,_math_js__WEBPACK_IMPORTED_MODULE_1__.cosh)(point[1] / RADIUS);
            },
        }) || this;
    }
    return EPSG3857Projection;
}(_Projection_js__WEBPACK_IMPORTED_MODULE_2__.default));
/**
 * Projections equal to EPSG:3857.
 *
 * @const
 * @type {Array<import("./Projection.js").default>}
 */
var PROJECTIONS = [
    new EPSG3857Projection('EPSG:3857'),
    new EPSG3857Projection('EPSG:102100'),
    new EPSG3857Projection('EPSG:102113'),
    new EPSG3857Projection('EPSG:900913'),
    new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857'),
];
/**
 * Transformation from EPSG:4326 to EPSG:3857.
 *
 * @param {Array<number>} input Input array of coordinate values.
 * @param {Array<number>=} opt_output Output array of coordinate values.
 * @param {number=} opt_dimension Dimension (default is `2`).
 * @return {Array<number>} Output array of coordinate values.
 */
function fromEPSG4326(input, opt_output, opt_dimension) {
    var length = input.length;
    var dimension = opt_dimension > 1 ? opt_dimension : 2;
    var output = opt_output;
    if (output === undefined) {
        if (dimension > 2) {
            // preserve values beyond second dimension
            output = input.slice();
        }
        else {
            output = new Array(length);
        }
    }
    for (var i = 0; i < length; i += dimension) {
        output[i] = (HALF_SIZE * input[i]) / 180;
        var y = RADIUS * Math.log(Math.tan((Math.PI * (+input[i + 1] + 90)) / 360));
        if (y > MAX_SAFE_Y) {
            y = MAX_SAFE_Y;
        }
        else if (y < -MAX_SAFE_Y) {
            y = -MAX_SAFE_Y;
        }
        output[i + 1] = y;
    }
    return output;
}
/**
 * Transformation from EPSG:3857 to EPSG:4326.
 *
 * @param {Array<number>} input Input array of coordinate values.
 * @param {Array<number>=} opt_output Output array of coordinate values.
 * @param {number=} opt_dimension Dimension (default is `2`).
 * @return {Array<number>} Output array of coordinate values.
 */
function toEPSG4326(input, opt_output, opt_dimension) {
    var length = input.length;
    var dimension = opt_dimension > 1 ? opt_dimension : 2;
    var output = opt_output;
    if (output === undefined) {
        if (dimension > 2) {
            // preserve values beyond second dimension
            output = input.slice();
        }
        else {
            output = new Array(length);
        }
    }
    for (var i = 0; i < length; i += dimension) {
        output[i] = (180 * input[i]) / HALF_SIZE;
        output[i + 1] =
            (360 * Math.atan(Math.exp(input[i + 1] / RADIUS))) / Math.PI - 90;
    }
    return output;
}
//# sourceMappingURL=epsg3857.js.map

/***/ }),

/***/ "./node_modules/ol/proj/epsg4326.js":
/*!******************************************!*\
  !*** ./node_modules/ol/proj/epsg4326.js ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "RADIUS": () => (/* binding */ RADIUS),
/* harmony export */   "EXTENT": () => (/* binding */ EXTENT),
/* harmony export */   "METERS_PER_UNIT": () => (/* binding */ METERS_PER_UNIT),
/* harmony export */   "PROJECTIONS": () => (/* binding */ PROJECTIONS)
/* harmony export */ });
/* harmony import */ var _Projection_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Projection.js */ "./node_modules/ol/proj/Projection.js");
/* harmony import */ var _Units_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Units.js */ "./node_modules/ol/proj/Units.js");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
/**
 * @module ol/proj/epsg4326
 */


/**
 * Semi-major radius of the WGS84 ellipsoid.
 *
 * @const
 * @type {number}
 */
var RADIUS = 6378137;
/**
 * Extent of the EPSG:4326 projection which is the whole world.
 *
 * @const
 * @type {import("../extent.js").Extent}
 */
var EXTENT = [-180, -90, 180, 90];
/**
 * @const
 * @type {number}
 */
var METERS_PER_UNIT = (Math.PI * RADIUS) / 180;
/**
 * @classdesc
 * Projection object for WGS84 geographic coordinates (EPSG:4326).
 *
 * Note that OpenLayers does not strictly comply with the EPSG definition.
 * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).
 * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.
 */
var EPSG4326Projection = /** @class */ (function (_super) {
    __extends(EPSG4326Projection, _super);
    /**
     * @param {string} code Code.
     * @param {string=} opt_axisOrientation Axis orientation.
     */
    function EPSG4326Projection(code, opt_axisOrientation) {
        return _super.call(this, {
            code: code,
            units: _Units_js__WEBPACK_IMPORTED_MODULE_0__.default.DEGREES,
            extent: EXTENT,
            axisOrientation: opt_axisOrientation,
            global: true,
            metersPerUnit: METERS_PER_UNIT,
            worldExtent: EXTENT,
        }) || this;
    }
    return EPSG4326Projection;
}(_Projection_js__WEBPACK_IMPORTED_MODULE_1__.default));
/**
 * Projections equal to EPSG:4326.
 *
 * @const
 * @type {Array<import("./Projection.js").default>}
 */
var PROJECTIONS = [
    new EPSG4326Projection('CRS:84'),
    new EPSG4326Projection('EPSG:4326', 'neu'),
    new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),
    new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),
    new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),
];
//# sourceMappingURL=epsg4326.js.map

/***/ }),

/***/ "./node_modules/ol/proj/proj4.js":
/*!***************************************!*\
  !*** ./node_modules/ol/proj/proj4.js ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "register": () => (/* binding */ register)
/* harmony export */ });
/* harmony import */ var _Projection_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Projection.js */ "./node_modules/ol/proj/Projection.js");
/* harmony import */ var _Units_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Units.js */ "./node_modules/ol/proj/Units.js");
/* harmony import */ var _proj_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../proj.js */ "./node_modules/ol/proj.js");
/* harmony import */ var _obj_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../obj.js */ "./node_modules/ol/obj.js");
/* harmony import */ var _transforms_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./transforms.js */ "./node_modules/ol/proj/transforms.js");
/**
 * @module ol/proj/proj4
 */





/**
 * Make projections defined in proj4 (with `proj4.defs()`) available in
 * OpenLayers.
 *
 * This function should be called whenever changes are made to the proj4
 * registry, e.g. after calling `proj4.defs()`. Existing transforms will not be
 * modified by this function.
 *
 * @param {?} proj4 Proj4.
 * @api
 */
function register(proj4) {
    var projCodes = Object.keys(proj4.defs);
    var len = projCodes.length;
    var i, j;
    for (i = 0; i < len; ++i) {
        var code = projCodes[i];
        if (!(0,_proj_js__WEBPACK_IMPORTED_MODULE_0__.get)(code)) {
            var def = proj4.defs(code);
            var units = def.units;
            if (!units && def.projName === 'longlat') {
                units = _Units_js__WEBPACK_IMPORTED_MODULE_1__.default.DEGREES;
            }
            (0,_proj_js__WEBPACK_IMPORTED_MODULE_0__.addProjection)(new _Projection_js__WEBPACK_IMPORTED_MODULE_2__.default({
                code: code,
                axisOrientation: def.axis,
                metersPerUnit: def.to_meter,
                units: units,
            }));
        }
    }
    for (i = 0; i < len; ++i) {
        var code1 = projCodes[i];
        var proj1 = (0,_proj_js__WEBPACK_IMPORTED_MODULE_0__.get)(code1);
        for (j = 0; j < len; ++j) {
            var code2 = projCodes[j];
            var proj2 = (0,_proj_js__WEBPACK_IMPORTED_MODULE_0__.get)(code2);
            if (!(0,_transforms_js__WEBPACK_IMPORTED_MODULE_3__.get)(code1, code2)) {
                var def1 = proj4.defs(code1);
                var def2 = proj4.defs(code2);
                if (def1 === def2) {
                    (0,_proj_js__WEBPACK_IMPORTED_MODULE_0__.addEquivalentProjections)([proj1, proj2]);
                }
                else {
                    // Reset axis because OpenLayers always uses x, y axis order
                    var transform = proj4((0,_obj_js__WEBPACK_IMPORTED_MODULE_4__.assign)({}, def1, { axis: undefined }), (0,_obj_js__WEBPACK_IMPORTED_MODULE_4__.assign)({}, def2, { axis: undefined }));
                    (0,_proj_js__WEBPACK_IMPORTED_MODULE_0__.addCoordinateTransforms)(proj1, proj2, (0,_proj_js__WEBPACK_IMPORTED_MODULE_0__.createSafeCoordinateTransform)(proj1, proj2, transform.forward), (0,_proj_js__WEBPACK_IMPORTED_MODULE_0__.createSafeCoordinateTransform)(proj2, proj1, transform.inverse));
                }
            }
        }
    }
}
//# sourceMappingURL=proj4.js.map

/***/ }),

/***/ "./node_modules/ol/proj/projections.js":
/*!*********************************************!*\
  !*** ./node_modules/ol/proj/projections.js ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "clear": () => (/* binding */ clear),
/* harmony export */   "get": () => (/* binding */ get),
/* harmony export */   "add": () => (/* binding */ add)
/* harmony export */ });
/**
 * @module ol/proj/projections
 */
/**
 * @type {Object<string, import("./Projection.js").default>}
 */
var cache = {};
/**
 * Clear the projections cache.
 */
function clear() {
    cache = {};
}
/**
 * Get a cached projection by code.
 * @param {string} code The code for the projection.
 * @return {import("./Projection.js").default} The projection (if cached).
 */
function get(code) {
    return (cache[code] ||
        cache[code.replace(/urn:(x-)?ogc:def:crs:EPSG:(.*:)?(\w+)$/, 'EPSG:$3')] ||
        null);
}
/**
 * Add a projection to the cache.
 * @param {string} code The projection code.
 * @param {import("./Projection.js").default} projection The projection to cache.
 */
function add(code, projection) {
    cache[code] = projection;
}
//# sourceMappingURL=projections.js.map

/***/ }),

/***/ "./node_modules/ol/proj/transforms.js":
/*!********************************************!*\
  !*** ./node_modules/ol/proj/transforms.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "clear": () => (/* binding */ clear),
/* harmony export */   "add": () => (/* binding */ add),
/* harmony export */   "remove": () => (/* binding */ remove),
/* harmony export */   "get": () => (/* binding */ get)
/* harmony export */ });
/* harmony import */ var _obj_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../obj.js */ "./node_modules/ol/obj.js");
/**
 * @module ol/proj/transforms
 */

/**
 * @private
 * @type {!Object<string, Object<string, import("../proj.js").TransformFunction>>}
 */
var transforms = {};
/**
 * Clear the transform cache.
 */
function clear() {
    transforms = {};
}
/**
 * Registers a conversion function to convert coordinates from the source
 * projection to the destination projection.
 *
 * @param {import("./Projection.js").default} source Source.
 * @param {import("./Projection.js").default} destination Destination.
 * @param {import("../proj.js").TransformFunction} transformFn Transform.
 */
function add(source, destination, transformFn) {
    var sourceCode = source.getCode();
    var destinationCode = destination.getCode();
    if (!(sourceCode in transforms)) {
        transforms[sourceCode] = {};
    }
    transforms[sourceCode][destinationCode] = transformFn;
}
/**
 * Unregisters the conversion function to convert coordinates from the source
 * projection to the destination projection.  This method is used to clean up
 * cached transforms during testing.
 *
 * @param {import("./Projection.js").default} source Source projection.
 * @param {import("./Projection.js").default} destination Destination projection.
 * @return {import("../proj.js").TransformFunction} transformFn The unregistered transform.
 */
function remove(source, destination) {
    var sourceCode = source.getCode();
    var destinationCode = destination.getCode();
    var transform = transforms[sourceCode][destinationCode];
    delete transforms[sourceCode][destinationCode];
    if ((0,_obj_js__WEBPACK_IMPORTED_MODULE_0__.isEmpty)(transforms[sourceCode])) {
        delete transforms[sourceCode];
    }
    return transform;
}
/**
 * Get a transform given a source code and a destination code.
 * @param {string} sourceCode The code for the source projection.
 * @param {string} destinationCode The code for the destination projection.
 * @return {import("../proj.js").TransformFunction|undefined} The transform function (if found).
 */
function get(sourceCode, destinationCode) {
    var transform;
    if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {
        transform = transforms[sourceCode][destinationCode];
    }
    return transform;
}
//# sourceMappingURL=transforms.js.map

/***/ }),

/***/ "./node_modules/ol/render/Box.js":
/*!***************************************!*\
  !*** ./node_modules/ol/render/Box.js ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _Disposable_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Disposable.js */ "./node_modules/ol/Disposable.js");
/* harmony import */ var _geom_Polygon_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../geom/Polygon.js */ "./node_modules/ol/geom/Polygon.js");
/**
 * @module ol/render/Box
 */
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();


var RenderBox = /** @class */ (function (_super) {
    __extends(RenderBox, _super);
    /**
     * @param {string} className CSS class name.
     */
    function RenderBox(className) {
        var _this = _super.call(this) || this;
        /**
         * @type {import("../geom/Polygon.js").default}
         * @private
         */
        _this.geometry_ = null;
        /**
         * @type {HTMLDivElement}
         * @private
         */
        _this.element_ = document.createElement('div');
        _this.element_.style.position = 'absolute';
        _this.element_.style.pointerEvents = 'auto';
        _this.element_.className = 'ol-box ' + className;
        /**
         * @private
         * @type {import("../PluggableMap.js").default}
         */
        _this.map_ = null;
        /**
         * @private
         * @type {import("../pixel.js").Pixel}
         */
        _this.startPixel_ = null;
        /**
         * @private
         * @type {import("../pixel.js").Pixel}
         */
        _this.endPixel_ = null;
        return _this;
    }
    /**
     * Clean up.
     */
    RenderBox.prototype.disposeInternal = function () {
        this.setMap(null);
    };
    /**
     * @private
     */
    RenderBox.prototype.render_ = function () {
        var startPixel = this.startPixel_;
        var endPixel = this.endPixel_;
        var px = 'px';
        var style = this.element_.style;
        style.left = Math.min(startPixel[0], endPixel[0]) + px;
        style.top = Math.min(startPixel[1], endPixel[1]) + px;
        style.width = Math.abs(endPixel[0] - startPixel[0]) + px;
        style.height = Math.abs(endPixel[1] - startPixel[1]) + px;
    };
    /**
     * @param {import("../PluggableMap.js").default} map Map.
     */
    RenderBox.prototype.setMap = function (map) {
        if (this.map_) {
            this.map_.getOverlayContainer().removeChild(this.element_);
            var style = this.element_.style;
            style.left = 'inherit';
            style.top = 'inherit';
            style.width = 'inherit';
            style.height = 'inherit';
        }
        this.map_ = map;
        if (this.map_) {
            this.map_.getOverlayContainer().appendChild(this.element_);
        }
    };
    /**
     * @param {import("../pixel.js").Pixel} startPixel Start pixel.
     * @param {import("../pixel.js").Pixel} endPixel End pixel.
     */
    RenderBox.prototype.setPixels = function (startPixel, endPixel) {
        this.startPixel_ = startPixel;
        this.endPixel_ = endPixel;
        this.createOrUpdateGeometry();
        this.render_();
    };
    /**
     * Creates or updates the cached geometry.
     */
    RenderBox.prototype.createOrUpdateGeometry = function () {
        var startPixel = this.startPixel_;
        var endPixel = this.endPixel_;
        var pixels = [
            startPixel,
            [startPixel[0], endPixel[1]],
            endPixel,
            [endPixel[0], startPixel[1]],
        ];
        var coordinates = pixels.map(this.map_.getCoordinateFromPixelInternal, this.map_);
        // close the polygon
        coordinates[4] = coordinates[0].slice();
        if (!this.geometry_) {
            this.geometry_ = new _geom_Polygon_js__WEBPACK_IMPORTED_MODULE_0__.default([coordinates]);
        }
        else {
            this.geometry_.setCoordinates([coordinates]);
        }
    };
    /**
     * @return {import("../geom/Polygon.js").default} Geometry.
     */
    RenderBox.prototype.getGeometry = function () {
        return this.geometry_;
    };
    return RenderBox;
}(_Disposable_js__WEBPACK_IMPORTED_MODULE_1__.default));
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (RenderBox);
//# sourceMappingURL=Box.js.map

/***/ }),

/***/ "./node_modules/ol/render/Event.js":
/*!*****************************************!*\
  !*** ./node_modules/ol/render/Event.js ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _events_Event_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../events/Event.js */ "./node_modules/ol/events/Event.js");
/**
 * @module ol/render/Event
 */
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();

var RenderEvent = /** @class */ (function (_super) {
    __extends(RenderEvent, _super);
    /**
     * @param {import("./EventType.js").default} type Type.
     * @param {import("../transform.js").Transform=} opt_inversePixelTransform Transform for
     *     CSS pixels to rendered pixels.
     * @param {import("../PluggableMap.js").FrameState=} opt_frameState Frame state.
     * @param {?CanvasRenderingContext2D=} opt_context Context.
     */
    function RenderEvent(type, opt_inversePixelTransform, opt_frameState, opt_context) {
        var _this = _super.call(this, type) || this;
        /**
         * Transform from CSS pixels (relative to the top-left corner of the map viewport)
         * to rendered pixels on this event's `context`. Only available when a Canvas renderer is used, null otherwise.
         * @type {import("../transform.js").Transform|undefined}
         * @api
         */
        _this.inversePixelTransform = opt_inversePixelTransform;
        /**
         * An object representing the current render frame state.
         * @type {import("../PluggableMap.js").FrameState|undefined}
         * @api
         */
        _this.frameState = opt_frameState;
        /**
         * Canvas context. Not available when the event is dispatched by the map. Only available
         * when a Canvas renderer is used, null otherwise.
         * @type {CanvasRenderingContext2D|null|undefined}
         * @api
         */
        _this.context = opt_context;
        return _this;
    }
    return RenderEvent;
}(_events_Event_js__WEBPACK_IMPORTED_MODULE_0__.default));
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (RenderEvent);
//# sourceMappingURL=Event.js.map

/***/ }),

/***/ "./node_modules/ol/render/EventType.js":
/*!*********************************************!*\
  !*** ./node_modules/ol/render/EventType.js ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/**
 * @module ol/render/EventType
 */
/**
 * @enum {string}
 */
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
    /**
     * Triggered before a layer is rendered.
     * @event module:ol/render/Event~RenderEvent#prerender
     * @api
     */
    PRERENDER: 'prerender',
    /**
     * Triggered after a layer is rendered.
     * @event module:ol/render/Event~RenderEvent#postrender
     * @api
     */
    POSTRENDER: 'postrender',
    /**
     * Triggered before layers are rendered.
     * The event object will not have a `context` set.
     * @event module:ol/render/Event~RenderEvent#precompose
     * @api
     */
    PRECOMPOSE: 'precompose',
    /**
     * Triggered after all layers are rendered.
     * The event object will not have a `context` set.
     * @event module:ol/render/Event~RenderEvent#postcompose
     * @api
     */
    POSTCOMPOSE: 'postcompose',
    /**
     * Triggered when rendering is complete, i.e. all sources and tiles have
     * finished loading for the current viewport, and all tiles are faded in.
     * The event object will not have a `context` set.
     * @event module:ol/render/Event~RenderEvent#rendercomplete
     * @api
     */
    RENDERCOMPLETE: 'rendercomplete',
});
//# sourceMappingURL=EventType.js.map

/***/ }),

/***/ "./node_modules/ol/render/VectorContext.js":
/*!*************************************************!*\
  !*** ./node_modules/ol/render/VectorContext.js ***!
  \*************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/**
 * @module ol/render/VectorContext
 */
/**
 * @classdesc
 * Context for drawing geometries.  A vector context is available on render
 * events and does not need to be constructed directly.
 * @api
 */
var VectorContext = /** @class */ (function () {
    function VectorContext() {
    }
    /**
     * Render a geometry with a custom renderer.
     *
     * @param {import("../geom/SimpleGeometry.js").default} geometry Geometry.
     * @param {import("../Feature.js").FeatureLike} feature Feature.
     * @param {Function} renderer Renderer.
     */
    VectorContext.prototype.drawCustom = function (geometry, feature, renderer) { };
    /**
     * Render a geometry.
     *
     * @param {import("../geom/Geometry.js").default} geometry The geometry to render.
     */
    VectorContext.prototype.drawGeometry = function (geometry) { };
    /**
     * Set the rendering style.
     *
     * @param {import("../style/Style.js").default} style The rendering style.
     */
    VectorContext.prototype.setStyle = function (style) { };
    /**
     * @param {import("../geom/Circle.js").default} circleGeometry Circle geometry.
     * @param {import("../Feature.js").default} feature Feature.
     */
    VectorContext.prototype.drawCircle = function (circleGeometry, feature) { };
    /**
     * @param {import("../Feature.js").default} feature Feature.
     * @param {import("../style/Style.js").default} style Style.
     */
    VectorContext.prototype.drawFeature = function (feature, style) { };
    /**
     * @param {import("../geom/GeometryCollection.js").default} geometryCollectionGeometry Geometry collection.
     * @param {import("../Feature.js").default} feature Feature.
     */
    VectorContext.prototype.drawGeometryCollection = function (geometryCollectionGeometry, feature) { };
    /**
     * @param {import("../geom/LineString.js").default|import("./Feature.js").default} lineStringGeometry Line string geometry.
     * @param {import("../Feature.js").FeatureLike} feature Feature.
     */
    VectorContext.prototype.drawLineString = function (lineStringGeometry, feature) { };
    /**
     * @param {import("../geom/MultiLineString.js").default|import("./Feature.js").default} multiLineStringGeometry MultiLineString geometry.
     * @param {import("../Feature.js").FeatureLike} feature Feature.
     */
    VectorContext.prototype.drawMultiLineString = function (multiLineStringGeometry, feature) { };
    /**
     * @param {import("../geom/MultiPoint.js").default|import("./Feature.js").default} multiPointGeometry MultiPoint geometry.
     * @param {import("../Feature.js").FeatureLike} feature Feature.
     */
    VectorContext.prototype.drawMultiPoint = function (multiPointGeometry, feature) { };
    /**
     * @param {import("../geom/MultiPolygon.js").default} multiPolygonGeometry MultiPolygon geometry.
     * @param {import("../Feature.js").FeatureLike} feature Feature.
     */
    VectorContext.prototype.drawMultiPolygon = function (multiPolygonGeometry, feature) { };
    /**
     * @param {import("../geom/Point.js").default|import("./Feature.js").default} pointGeometry Point geometry.
     * @param {import("../Feature.js").FeatureLike} feature Feature.
     */
    VectorContext.prototype.drawPoint = function (pointGeometry, feature) { };
    /**
     * @param {import("../geom/Polygon.js").default|import("./Feature.js").default} polygonGeometry Polygon geometry.
     * @param {import("../Feature.js").FeatureLike} feature Feature.
     */
    VectorContext.prototype.drawPolygon = function (polygonGeometry, feature) { };
    /**
     * @param {import("../geom/SimpleGeometry.js").default|import("./Feature.js").default} geometry Geometry.
     * @param {import("../Feature.js").FeatureLike} feature Feature.
     */
    VectorContext.prototype.drawText = function (geometry, feature) { };
    /**
     * @param {import("../style/Fill.js").default} fillStyle Fill style.
     * @param {import("../style/Stroke.js").default} strokeStyle Stroke style.
     */
    VectorContext.prototype.setFillStrokeStyle = function (fillStyle, strokeStyle) { };
    /**
     * @param {import("../style/Image.js").default} imageStyle Image style.
     * @param {import("../render/canvas.js").DeclutterImageWithText=} opt_declutterImageWithText Shared data for combined decluttering with a text style.
     */
    VectorContext.prototype.setImageStyle = function (imageStyle, opt_declutterImageWithText) { };
    /**
     * @param {import("../style/Text.js").default} textStyle Text style.
     * @param {import("../render/canvas.js").DeclutterImageWithText=} opt_declutterImageWithText Shared data for combined decluttering with an image style.
     */
    VectorContext.prototype.setTextStyle = function (textStyle, opt_declutterImageWithText) { };
    return VectorContext;
}());
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (VectorContext);
//# sourceMappingURL=VectorContext.js.map

/***/ }),

/***/ "./node_modules/ol/render/canvas.js":
/*!******************************************!*\
  !*** ./node_modules/ol/render/canvas.js ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "defaultFont": () => (/* binding */ defaultFont),
/* harmony export */   "defaultFillStyle": () => (/* binding */ defaultFillStyle),
/* harmony export */   "defaultLineCap": () => (/* binding */ defaultLineCap),
/* harmony export */   "defaultLineDash": () => (/* binding */ defaultLineDash),
/* harmony export */   "defaultLineDashOffset": () => (/* binding */ defaultLineDashOffset),
/* harmony export */   "defaultLineJoin": () => (/* binding */ defaultLineJoin),
/* harmony export */   "defaultMiterLimit": () => (/* binding */ defaultMiterLimit),
/* harmony export */   "defaultStrokeStyle": () => (/* binding */ defaultStrokeStyle),
/* harmony export */   "defaultTextAlign": () => (/* binding */ defaultTextAlign),
/* harmony export */   "defaultTextBaseline": () => (/* binding */ defaultTextBaseline),
/* harmony export */   "defaultPadding": () => (/* binding */ defaultPadding),
/* harmony export */   "defaultLineWidth": () => (/* binding */ defaultLineWidth),
/* harmony export */   "checkedFonts": () => (/* binding */ checkedFonts),
/* harmony export */   "labelCache": () => (/* binding */ labelCache),
/* harmony export */   "textHeights": () => (/* binding */ textHeights),
/* harmony export */   "registerFont": () => (/* binding */ registerFont),
/* harmony export */   "measureTextHeight": () => (/* binding */ measureTextHeight),
/* harmony export */   "measureTextWidth": () => (/* binding */ measureTextWidth),
/* harmony export */   "measureAndCacheTextWidth": () => (/* binding */ measureAndCacheTextWidth),
/* harmony export */   "measureTextWidths": () => (/* binding */ measureTextWidths),
/* harmony export */   "rotateAtOffset": () => (/* binding */ rotateAtOffset),
/* harmony export */   "drawImageOrLabel": () => (/* binding */ drawImageOrLabel),
/* harmony export */   "createTransformString": () => (/* binding */ createTransformString)
/* harmony export */ });
/* harmony import */ var _Object_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Object.js */ "./node_modules/ol/Object.js");
/* harmony import */ var _events_Target_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../events/Target.js */ "./node_modules/ol/events/Target.js");
/* harmony import */ var _has_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../has.js */ "./node_modules/ol/has.js");
/* harmony import */ var _obj_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../obj.js */ "./node_modules/ol/obj.js");
/* harmony import */ var _dom_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../dom.js */ "./node_modules/ol/dom.js");
/* harmony import */ var _css_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../css.js */ "./node_modules/ol/css.js");
/* harmony import */ var _transform_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../transform.js */ "./node_modules/ol/transform.js");
/**
 * @module ol/render/canvas
 */







/**
 * @typedef {Object} FillState
 * @property {import("../colorlike.js").ColorLike} fillStyle
 */
/**
 * @typedef Label
 * @property {number} width
 * @property {number} height
 * @property {Array<string|number>} contextInstructions
 */
/**
 * @typedef {Object} FillStrokeState
 * @property {import("../colorlike.js").ColorLike} [currentFillStyle]
 * @property {import("../colorlike.js").ColorLike} [currentStrokeStyle]
 * @property {CanvasLineCap} [currentLineCap]
 * @property {Array<number>} currentLineDash
 * @property {number} [currentLineDashOffset]
 * @property {CanvasLineJoin} [currentLineJoin]
 * @property {number} [currentLineWidth]
 * @property {number} [currentMiterLimit]
 * @property {number} [lastStroke]
 * @property {import("../colorlike.js").ColorLike} [fillStyle]
 * @property {import("../colorlike.js").ColorLike} [strokeStyle]
 * @property {CanvasLineCap} [lineCap]
 * @property {Array<number>} lineDash
 * @property {number} [lineDashOffset]
 * @property {CanvasLineJoin} [lineJoin]
 * @property {number} [lineWidth]
 * @property {number} [miterLimit]
 */
/**
 * @typedef {Object} StrokeState
 * @property {CanvasLineCap} lineCap
 * @property {Array<number>} lineDash
 * @property {number} lineDashOffset
 * @property {CanvasLineJoin} lineJoin
 * @property {number} lineWidth
 * @property {number} miterLimit
 * @property {import("../colorlike.js").ColorLike} strokeStyle
 */
/**
 * @typedef {Object} TextState
 * @property {string} font
 * @property {string} [textAlign]
 * @property {string} textBaseline
 * @property {string} [placement]
 * @property {number} [maxAngle]
 * @property {boolean} [overflow]
 * @property {import("../style/Fill.js").default} [backgroundFill]
 * @property {import("../style/Stroke.js").default} [backgroundStroke]
 * @property {import("../size.js").Size} [scale]
 * @property {Array<number>} [padding]
 */
/**
 * @typedef {Object} SerializableInstructions
 * @property {Array<*>} instructions The rendering instructions.
 * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.
 * @property {Array<number>} coordinates The array of all coordinates.
 * @property {!Object<string, TextState>} [textStates] The text states (decluttering).
 * @property {!Object<string, FillState>} [fillStates] The fill states (decluttering).
 * @property {!Object<string, StrokeState>} [strokeStates] The stroke states (decluttering).
 */
/**
 * @typedef {Object<number, import("./canvas/Executor.js").ReplayImageOrLabelArgs>} DeclutterImageWithText
 */
/**
 * @const
 * @type {string}
 */
var defaultFont = '10px sans-serif';
/**
 * @const
 * @type {import("../colorlike.js").ColorLike}
 */
var defaultFillStyle = '#000';
/**
 * @const
 * @type {CanvasLineCap}
 */
var defaultLineCap = 'round';
/**
 * @const
 * @type {Array<number>}
 */
var defaultLineDash = [];
/**
 * @const
 * @type {number}
 */
var defaultLineDashOffset = 0;
/**
 * @const
 * @type {CanvasLineJoin}
 */
var defaultLineJoin = 'round';
/**
 * @const
 * @type {number}
 */
var defaultMiterLimit = 10;
/**
 * @const
 * @type {import("../colorlike.js").ColorLike}
 */
var defaultStrokeStyle = '#000';
/**
 * @const
 * @type {string}
 */
var defaultTextAlign = 'center';
/**
 * @const
 * @type {string}
 */
var defaultTextBaseline = 'middle';
/**
 * @const
 * @type {Array<number>}
 */
var defaultPadding = [0, 0, 0, 0];
/**
 * @const
 * @type {number}
 */
var defaultLineWidth = 1;
/**
 * @type {BaseObject}
 */
var checkedFonts = new _Object_js__WEBPACK_IMPORTED_MODULE_0__.default();
/**
 * The label cache for text rendering. To change the default cache size of 2048
 * entries, use {@link module:ol/structs/LRUCache#setSize}.
 * Deprecated - there is no label cache any more.
 * @type {?}
 * @api
 * @deprecated
 */
var labelCache = new _events_Target_js__WEBPACK_IMPORTED_MODULE_1__.default();
labelCache.setSize = function () {
    console.warn('labelCache is deprecated.'); //eslint-disable-line
};
/**
 * @type {CanvasRenderingContext2D}
 */
var measureContext = null;
/**
 * @type {string}
 */
var measureFont;
/**
 * @type {!Object<string, number>}
 */
var textHeights = {};
/**
 * Clears the label cache when a font becomes available.
 * @param {string} fontSpec CSS font spec.
 */
var registerFont = (function () {
    var retries = 100;
    var size = '32px ';
    var referenceFonts = ['monospace', 'serif'];
    var len = referenceFonts.length;
    var text = 'wmytzilWMYTZIL@#/&?$%10\uF013';
    var interval, referenceWidth;
    /**
     * @param {string} fontStyle Css font-style
     * @param {string} fontWeight Css font-weight
     * @param {*} fontFamily Css font-family
     * @return {boolean} Font with style and weight is available
     */
    function isAvailable(fontStyle, fontWeight, fontFamily) {
        var available = true;
        for (var i = 0; i < len; ++i) {
            var referenceFont = referenceFonts[i];
            referenceWidth = measureTextWidth(fontStyle + ' ' + fontWeight + ' ' + size + referenceFont, text);
            if (fontFamily != referenceFont) {
                var width = measureTextWidth(fontStyle +
                    ' ' +
                    fontWeight +
                    ' ' +
                    size +
                    fontFamily +
                    ',' +
                    referenceFont, text);
                // If width and referenceWidth are the same, then the fallback was used
                // instead of the font we wanted, so the font is not available.
                available = available && width != referenceWidth;
            }
        }
        if (available) {
            return true;
        }
        return false;
    }
    function check() {
        var done = true;
        var fonts = checkedFonts.getKeys();
        for (var i = 0, ii = fonts.length; i < ii; ++i) {
            var font = fonts[i];
            if (checkedFonts.get(font) < retries) {
                if (isAvailable.apply(this, font.split('\n'))) {
                    (0,_obj_js__WEBPACK_IMPORTED_MODULE_2__.clear)(textHeights);
                    // Make sure that loaded fonts are picked up by Safari
                    measureContext = null;
                    measureFont = undefined;
                    checkedFonts.set(font, retries);
                }
                else {
                    checkedFonts.set(font, checkedFonts.get(font) + 1, true);
                    done = false;
                }
            }
        }
        if (done) {
            clearInterval(interval);
            interval = undefined;
        }
    }
    return function (fontSpec) {
        var font = (0,_css_js__WEBPACK_IMPORTED_MODULE_3__.getFontParameters)(fontSpec);
        if (!font) {
            return;
        }
        var families = font.families;
        for (var i = 0, ii = families.length; i < ii; ++i) {
            var family = families[i];
            var key = font.style + '\n' + font.weight + '\n' + family;
            if (checkedFonts.get(key) === undefined) {
                checkedFonts.set(key, retries, true);
                if (!isAvailable(font.style, font.weight, family)) {
                    checkedFonts.set(key, 0, true);
                    if (interval === undefined) {
                        interval = setInterval(check, 32);
                    }
                }
            }
        }
    };
})();
/**
 * @param {string} font Font to use for measuring.
 * @return {import("../size.js").Size} Measurement.
 */
var measureTextHeight = (function () {
    /**
     * @type {HTMLDivElement}
     */
    var div;
    return function (fontSpec) {
        var height = textHeights[fontSpec];
        if (height == undefined) {
            if (_has_js__WEBPACK_IMPORTED_MODULE_4__.WORKER_OFFSCREEN_CANVAS) {
                var font = (0,_css_js__WEBPACK_IMPORTED_MODULE_3__.getFontParameters)(fontSpec);
                var metrics = measureText(fontSpec, 'Žg');
                var lineHeight = isNaN(Number(font.lineHeight))
                    ? 1.2
                    : Number(font.lineHeight);
                height =
                    lineHeight *
                        (metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent);
            }
            else {
                if (!div) {
                    div = document.createElement('div');
                    div.innerHTML = 'M';
                    div.style.margin = '0 !important';
                    div.style.padding = '0 !important';
                    div.style.position = 'absolute !important';
                    div.style.left = '-99999px !important';
                }
                div.style.font = fontSpec;
                document.body.appendChild(div);
                height = div.offsetHeight;
                document.body.removeChild(div);
            }
            textHeights[fontSpec] = height;
        }
        return height;
    };
})();
/**
 * @param {string} font Font.
 * @param {string} text Text.
 * @return {TextMetrics} Text metrics.
 */
function measureText(font, text) {
    if (!measureContext) {
        measureContext = (0,_dom_js__WEBPACK_IMPORTED_MODULE_5__.createCanvasContext2D)(1, 1);
    }
    if (font != measureFont) {
        measureContext.font = font;
        measureFont = measureContext.font;
    }
    return measureContext.measureText(text);
}
/**
 * @param {string} font Font.
 * @param {string} text Text.
 * @return {number} Width.
 */
function measureTextWidth(font, text) {
    return measureText(font, text).width;
}
/**
 * Measure text width using a cache.
 * @param {string} font The font.
 * @param {string} text The text to measure.
 * @param {Object<string, number>} cache A lookup of cached widths by text.
 * @returns {number} The text width.
 */
function measureAndCacheTextWidth(font, text, cache) {
    if (text in cache) {
        return cache[text];
    }
    var width = measureTextWidth(font, text);
    cache[text] = width;
    return width;
}
/**
 * @param {string} font Font to use for measuring.
 * @param {Array<string>} lines Lines to measure.
 * @param {Array<number>} widths Array will be populated with the widths of
 * each line.
 * @return {number} Width of the whole text.
 */
function measureTextWidths(font, lines, widths) {
    var numLines = lines.length;
    var width = 0;
    for (var i = 0; i < numLines; ++i) {
        var currentWidth = measureTextWidth(font, lines[i]);
        width = Math.max(width, currentWidth);
        widths.push(currentWidth);
    }
    return width;
}
/**
 * @param {CanvasRenderingContext2D} context Context.
 * @param {number} rotation Rotation.
 * @param {number} offsetX X offset.
 * @param {number} offsetY Y offset.
 */
function rotateAtOffset(context, rotation, offsetX, offsetY) {
    if (rotation !== 0) {
        context.translate(offsetX, offsetY);
        context.rotate(rotation);
        context.translate(-offsetX, -offsetY);
    }
}
/**
 * @param {CanvasRenderingContext2D} context Context.
 * @param {import("../transform.js").Transform|null} transform Transform.
 * @param {number} opacity Opacity.
 * @param {Label|HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} labelOrImage Label.
 * @param {number} originX Origin X.
 * @param {number} originY Origin Y.
 * @param {number} w Width.
 * @param {number} h Height.
 * @param {number} x X.
 * @param {number} y Y.
 * @param {import("../size.js").Size} scale Scale.
 */
function drawImageOrLabel(context, transform, opacity, labelOrImage, originX, originY, w, h, x, y, scale) {
    context.save();
    if (opacity !== 1) {
        context.globalAlpha *= opacity;
    }
    if (transform) {
        context.setTransform.apply(context, transform);
    }
    if ( /** @type {*} */(labelOrImage).contextInstructions) {
        // label
        context.translate(x, y);
        context.scale(scale[0], scale[1]);
        executeLabelInstructions(/** @type {Label} */ (labelOrImage), context);
    }
    else if (scale[0] < 0 || scale[1] < 0) {
        // flipped image
        context.translate(x, y);
        context.scale(scale[0], scale[1]);
        context.drawImage(
        /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (labelOrImage), originX, originY, w, h, 0, 0, w, h);
    }
    else {
        // if image not flipped translate and scale can be avoided
        context.drawImage(
        /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (labelOrImage), originX, originY, w, h, x, y, w * scale[0], h * scale[1]);
    }
    context.restore();
}
/**
 * @param {Label} label Label.
 * @param {CanvasRenderingContext2D} context Context.
 */
function executeLabelInstructions(label, context) {
    var contextInstructions = label.contextInstructions;
    for (var i = 0, ii = contextInstructions.length; i < ii; i += 2) {
        if (Array.isArray(contextInstructions[i + 1])) {
            context[contextInstructions[i]].apply(context, contextInstructions[i + 1]);
        }
        else {
            context[contextInstructions[i]] = contextInstructions[i + 1];
        }
    }
}
/**
 * @type {HTMLCanvasElement}
 * @private
 */
var createTransformStringCanvas = null;
/**
 * @param {import("../transform.js").Transform} transform Transform.
 * @return {string} CSS transform.
 */
function createTransformString(transform) {
    if (_has_js__WEBPACK_IMPORTED_MODULE_4__.WORKER_OFFSCREEN_CANVAS) {
        return (0,_transform_js__WEBPACK_IMPORTED_MODULE_6__.toString)(transform);
    }
    else {
        if (!createTransformStringCanvas) {
            createTransformStringCanvas = (0,_dom_js__WEBPACK_IMPORTED_MODULE_5__.createCanvasContext2D)(1, 1).canvas;
        }
        createTransformStringCanvas.style.transform = (0,_transform_js__WEBPACK_IMPORTED_MODULE_6__.toString)(transform);
        return createTransformStringCanvas.style.transform;
    }
}
//# sourceMappingURL=canvas.js.map

/***/ }),

/***/ "./node_modules/ol/render/canvas/Builder.js":
/*!**************************************************!*\
  !*** ./node_modules/ol/render/canvas/Builder.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _Instruction_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Instruction.js */ "./node_modules/ol/render/canvas/Instruction.js");
/* harmony import */ var _geom_GeometryType_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../geom/GeometryType.js */ "./node_modules/ol/geom/GeometryType.js");
/* harmony import */ var _extent_Relationship_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../extent/Relationship.js */ "./node_modules/ol/extent/Relationship.js");
/* harmony import */ var _VectorContext_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../VectorContext.js */ "./node_modules/ol/render/VectorContext.js");
/* harmony import */ var _colorlike_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../colorlike.js */ "./node_modules/ol/colorlike.js");
/* harmony import */ var _extent_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../extent.js */ "./node_modules/ol/extent.js");
/* harmony import */ var _canvas_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../canvas.js */ "./node_modules/ol/render/canvas.js");
/* harmony import */ var _array_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../array.js */ "./node_modules/ol/array.js");
/* harmony import */ var _geom_flat_inflate_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../geom/flat/inflate.js */ "./node_modules/ol/geom/flat/inflate.js");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
/**
 * @module ol/render/canvas/Builder
 */









var CanvasBuilder = /** @class */ (function (_super) {
    __extends(CanvasBuilder, _super);
    /**
     * @param {number} tolerance Tolerance.
     * @param {import("../../extent.js").Extent} maxExtent Maximum extent.
     * @param {number} resolution Resolution.
     * @param {number} pixelRatio Pixel ratio.
     */
    function CanvasBuilder(tolerance, maxExtent, resolution, pixelRatio) {
        var _this = _super.call(this) || this;
        /**
         * @protected
         * @type {number}
         */
        _this.tolerance = tolerance;
        /**
         * @protected
         * @const
         * @type {import("../../extent.js").Extent}
         */
        _this.maxExtent = maxExtent;
        /**
         * @protected
         * @type {number}
         */
        _this.pixelRatio = pixelRatio;
        /**
         * @protected
         * @type {number}
         */
        _this.maxLineWidth = 0;
        /**
         * @protected
         * @const
         * @type {number}
         */
        _this.resolution = resolution;
        /**
         * @private
         * @type {Array<*>}
         */
        _this.beginGeometryInstruction1_ = null;
        /**
         * @private
         * @type {Array<*>}
         */
        _this.beginGeometryInstruction2_ = null;
        /**
         * @private
         * @type {import("../../extent.js").Extent}
         */
        _this.bufferedMaxExtent_ = null;
        /**
         * @protected
         * @type {Array<*>}
         */
        _this.instructions = [];
        /**
         * @protected
         * @type {Array<number>}
         */
        _this.coordinates = [];
        /**
         * @private
         * @type {import("../../coordinate.js").Coordinate}
         */
        _this.tmpCoordinate_ = [];
        /**
         * @protected
         * @type {Array<*>}
         */
        _this.hitDetectionInstructions = [];
        /**
         * @protected
         * @type {import("../canvas.js").FillStrokeState}
         */
        _this.state = /** @type {import("../canvas.js").FillStrokeState} */ ({});
        return _this;
    }
    /**
     * @protected
     * @param {Array<number>} dashArray Dash array.
     * @return {Array<number>} Dash array with pixel ratio applied
     */
    CanvasBuilder.prototype.applyPixelRatio = function (dashArray) {
        var pixelRatio = this.pixelRatio;
        return pixelRatio == 1
            ? dashArray
            : dashArray.map(function (dash) {
                return dash * pixelRatio;
            });
    };
    /**
     * @param {Array<number>} flatCoordinates Flat coordinates.
     * @param {number} stride Stride.
     * @protected
     * @return {number} My end
     */
    CanvasBuilder.prototype.appendFlatPointCoordinates = function (flatCoordinates, stride) {
        var extent = this.getBufferedMaxExtent();
        var tmpCoord = this.tmpCoordinate_;
        var coordinates = this.coordinates;
        var myEnd = coordinates.length;
        for (var i = 0, ii = flatCoordinates.length; i < ii; i += stride) {
            tmpCoord[0] = flatCoordinates[i];
            tmpCoord[1] = flatCoordinates[i + 1];
            if ((0,_extent_js__WEBPACK_IMPORTED_MODULE_0__.containsCoordinate)(extent, tmpCoord)) {
                coordinates[myEnd++] = tmpCoord[0];
                coordinates[myEnd++] = tmpCoord[1];
            }
        }
        return myEnd;
    };
    /**
     * @param {Array<number>} flatCoordinates Flat coordinates.
     * @param {number} offset Offset.
     * @param {number} end End.
     * @param {number} stride Stride.
     * @param {boolean} closed Last input coordinate equals first.
     * @param {boolean} skipFirst Skip first coordinate.
     * @protected
     * @return {number} My end.
     */
    CanvasBuilder.prototype.appendFlatLineCoordinates = function (flatCoordinates, offset, end, stride, closed, skipFirst) {
        var coordinates = this.coordinates;
        var myEnd = coordinates.length;
        var extent = this.getBufferedMaxExtent();
        if (skipFirst) {
            offset += stride;
        }
        var lastXCoord = flatCoordinates[offset];
        var lastYCoord = flatCoordinates[offset + 1];
        var nextCoord = this.tmpCoordinate_;
        var skipped = true;
        var i, lastRel, nextRel;
        for (i = offset + stride; i < end; i += stride) {
            nextCoord[0] = flatCoordinates[i];
            nextCoord[1] = flatCoordinates[i + 1];
            nextRel = (0,_extent_js__WEBPACK_IMPORTED_MODULE_0__.coordinateRelationship)(extent, nextCoord);
            if (nextRel !== lastRel) {
                if (skipped) {
                    coordinates[myEnd++] = lastXCoord;
                    coordinates[myEnd++] = lastYCoord;
                    skipped = false;
                }
                coordinates[myEnd++] = nextCoord[0];
                coordinates[myEnd++] = nextCoord[1];
            }
            else if (nextRel === _extent_Relationship_js__WEBPACK_IMPORTED_MODULE_1__.default.INTERSECTING) {
                coordinates[myEnd++] = nextCoord[0];
                coordinates[myEnd++] = nextCoord[1];
                skipped = false;
            }
            else {
                skipped = true;
            }
            lastXCoord = nextCoord[0];
            lastYCoord = nextCoord[1];
            lastRel = nextRel;
        }
        // Last coordinate equals first or only one point to append:
        if ((closed && skipped) || i === offset + stride) {
            coordinates[myEnd++] = lastXCoord;
            coordinates[myEnd++] = lastYCoord;
        }
        return myEnd;
    };
    /**
     * @param {Array<number>} flatCoordinates Flat coordinates.
     * @param {number} offset Offset.
     * @param {Array<number>} ends Ends.
     * @param {number} stride Stride.
     * @param {Array<number>} builderEnds Builder ends.
     * @return {number} Offset.
     */
    CanvasBuilder.prototype.drawCustomCoordinates_ = function (flatCoordinates, offset, ends, stride, builderEnds) {
        for (var i = 0, ii = ends.length; i < ii; ++i) {
            var end = ends[i];
            var builderEnd = this.appendFlatLineCoordinates(flatCoordinates, offset, end, stride, false, false);
            builderEnds.push(builderEnd);
            offset = end;
        }
        return offset;
    };
    /**
     * @param {import("../../geom/SimpleGeometry.js").default} geometry Geometry.
     * @param {import("../../Feature.js").FeatureLike} feature Feature.
     * @param {Function} renderer Renderer.
     */
    CanvasBuilder.prototype.drawCustom = function (geometry, feature, renderer) {
        this.beginGeometry(geometry, feature);
        var type = geometry.getType();
        var stride = geometry.getStride();
        var builderBegin = this.coordinates.length;
        var flatCoordinates, builderEnd, builderEnds, builderEndss;
        var offset;
        if (type == _geom_GeometryType_js__WEBPACK_IMPORTED_MODULE_2__.default.MULTI_POLYGON) {
            flatCoordinates = /** @type {import("../../geom/MultiPolygon.js").default} */ (geometry).getOrientedFlatCoordinates();
            builderEndss = [];
            var endss = /** @type {import("../../geom/MultiPolygon.js").default} */ (geometry).getEndss();
            offset = 0;
            for (var i = 0, ii = endss.length; i < ii; ++i) {
                var myEnds = [];
                offset = this.drawCustomCoordinates_(flatCoordinates, offset, endss[i], stride, myEnds);
                builderEndss.push(myEnds);
            }
            this.instructions.push([
                _Instruction_js__WEBPACK_IMPORTED_MODULE_3__.default.CUSTOM,
                builderBegin,
                builderEndss,
                geometry,
                renderer,
                _geom_flat_inflate_js__WEBPACK_IMPORTED_MODULE_4__.inflateMultiCoordinatesArray,
            ]);
        }
        else if (type == _geom_GeometryType_js__WEBPACK_IMPORTED_MODULE_2__.default.POLYGON ||
            type == _geom_GeometryType_js__WEBPACK_IMPORTED_MODULE_2__.default.MULTI_LINE_STRING) {
            builderEnds = [];
            flatCoordinates =
                type == _geom_GeometryType_js__WEBPACK_IMPORTED_MODULE_2__.default.POLYGON
                    ? /** @type {import("../../geom/Polygon.js").default} */ (geometry).getOrientedFlatCoordinates()
                    : geometry.getFlatCoordinates();
            offset = this.drawCustomCoordinates_(flatCoordinates, 0, 
            /** @type {import("../../geom/Polygon.js").default|import("../../geom/MultiLineString.js").default} */ (geometry).getEnds(), stride, builderEnds);
            this.instructions.push([
                _Instruction_js__WEBPACK_IMPORTED_MODULE_3__.default.CUSTOM,
                builderBegin,
                builderEnds,
                geometry,
                renderer,
                _geom_flat_inflate_js__WEBPACK_IMPORTED_MODULE_4__.inflateCoordinatesArray,
            ]);
        }
        else if (type == _geom_GeometryType_js__WEBPACK_IMPORTED_MODULE_2__.default.LINE_STRING ||
            type == _geom_GeometryType_js__WEBPACK_IMPORTED_MODULE_2__.default.CIRCLE) {
            flatCoordinates = geometry.getFlatCoordinates();
            builderEnd = this.appendFlatLineCoordinates(flatCoordinates, 0, flatCoordinates.length, stride, false, false);
            this.instructions.push([
                _Instruction_js__WEBPACK_IMPORTED_MODULE_3__.default.CUSTOM,
                builderBegin,
                builderEnd,
                geometry,
                renderer,
                _geom_flat_inflate_js__WEBPACK_IMPORTED_MODULE_4__.inflateCoordinates,
            ]);
        }
        else if (type == _geom_GeometryType_js__WEBPACK_IMPORTED_MODULE_2__.default.MULTI_POINT) {
            flatCoordinates = geometry.getFlatCoordinates();
            builderEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);
            if (builderEnd > builderBegin) {
                this.instructions.push([
                    _Instruction_js__WEBPACK_IMPORTED_MODULE_3__.default.CUSTOM,
                    builderBegin,
                    builderEnd,
                    geometry,
                    renderer,
                    _geom_flat_inflate_js__WEBPACK_IMPORTED_MODULE_4__.inflateCoordinates,
                ]);
            }
        }
        else if (type == _geom_GeometryType_js__WEBPACK_IMPORTED_MODULE_2__.default.POINT) {
            flatCoordinates = geometry.getFlatCoordinates();
            this.coordinates.push(flatCoordinates[0], flatCoordinates[1]);
            builderEnd = this.coordinates.length;
            this.instructions.push([
                _Instruction_js__WEBPACK_IMPORTED_MODULE_3__.default.CUSTOM,
                builderBegin,
                builderEnd,
                geometry,
                renderer,
            ]);
        }
        this.endGeometry(feature);
    };
    /**
     * @protected
     * @param {import("../../geom/Geometry").default|import("../Feature.js").default} geometry The geometry.
     * @param {import("../../Feature.js").FeatureLike} feature Feature.
     */
    CanvasBuilder.prototype.beginGeometry = function (geometry, feature) {
        this.beginGeometryInstruction1_ = [
            _Instruction_js__WEBPACK_IMPORTED_MODULE_3__.default.BEGIN_GEOMETRY,
            feature,
            0,
            geometry,
        ];
        this.instructions.push(this.beginGeometryInstruction1_);
        this.beginGeometryInstruction2_ = [
            _Instruction_js__WEBPACK_IMPORTED_MODULE_3__.default.BEGIN_GEOMETRY,
            feature,
            0,
            geometry,
        ];
        this.hitDetectionInstructions.push(this.beginGeometryInstruction2_);
    };
    /**
     * @return {import("../canvas.js").SerializableInstructions} the serializable instructions.
     */
    CanvasBuilder.prototype.finish = function () {
        return {
            instructions: this.instructions,
            hitDetectionInstructions: this.hitDetectionInstructions,
            coordinates: this.coordinates,
        };
    };
    /**
     * Reverse the hit detection instructions.
     */
    CanvasBuilder.prototype.reverseHitDetectionInstructions = function () {
        var hitDetectionInstructions = this.hitDetectionInstructions;
        // step 1 - reverse array
        hitDetectionInstructions.reverse();
        // step 2 - reverse instructions within geometry blocks
        var i;
        var n = hitDetectionInstructions.length;
        var instruction;
        var type;
        var begin = -1;
        for (i = 0; i < n; ++i) {
            instruction = hitDetectionInstructions[i];
            type = /** @type {import("./Instruction.js").default} */ (instruction[0]);
            if (type == _Instruction_js__WEBPACK_IMPORTED_MODULE_3__.default.END_GEOMETRY) {
                begin = i;
            }
            else if (type == _Instruction_js__WEBPACK_IMPORTED_MODULE_3__.default.BEGIN_GEOMETRY) {
                instruction[2] = i;
                (0,_array_js__WEBPACK_IMPORTED_MODULE_5__.reverseSubArray)(this.hitDetectionInstructions, begin, i);
                begin = -1;
            }
        }
    };
    /**
     * @param {import("../../style/Fill.js").default} fillStyle Fill style.
     * @param {import("../../style/Stroke.js").default} strokeStyle Stroke style.
     */
    CanvasBuilder.prototype.setFillStrokeStyle = function (fillStyle, strokeStyle) {
        var state = this.state;
        if (fillStyle) {
            var fillStyleColor = fillStyle.getColor();
            state.fillStyle = (0,_colorlike_js__WEBPACK_IMPORTED_MODULE_6__.asColorLike)(fillStyleColor ? fillStyleColor : _canvas_js__WEBPACK_IMPORTED_MODULE_7__.defaultFillStyle);
        }
        else {
            state.fillStyle = undefined;
        }
        if (strokeStyle) {
            var strokeStyleColor = strokeStyle.getColor();
            state.strokeStyle = (0,_colorlike_js__WEBPACK_IMPORTED_MODULE_6__.asColorLike)(strokeStyleColor ? strokeStyleColor : _canvas_js__WEBPACK_IMPORTED_MODULE_7__.defaultStrokeStyle);
            var strokeStyleLineCap = strokeStyle.getLineCap();
            state.lineCap =
                strokeStyleLineCap !== undefined ? strokeStyleLineCap : _canvas_js__WEBPACK_IMPORTED_MODULE_7__.defaultLineCap;
            var strokeStyleLineDash = strokeStyle.getLineDash();
            state.lineDash = strokeStyleLineDash
                ? strokeStyleLineDash.slice()
                : _canvas_js__WEBPACK_IMPORTED_MODULE_7__.defaultLineDash;
            var strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();
            state.lineDashOffset = strokeStyleLineDashOffset
                ? strokeStyleLineDashOffset
                : _canvas_js__WEBPACK_IMPORTED_MODULE_7__.defaultLineDashOffset;
            var strokeStyleLineJoin = strokeStyle.getLineJoin();
            state.lineJoin =
                strokeStyleLineJoin !== undefined
                    ? strokeStyleLineJoin
                    : _canvas_js__WEBPACK_IMPORTED_MODULE_7__.defaultLineJoin;
            var strokeStyleWidth = strokeStyle.getWidth();
            state.lineWidth =
                strokeStyleWidth !== undefined ? strokeStyleWidth : _canvas_js__WEBPACK_IMPORTED_MODULE_7__.defaultLineWidth;
            var strokeStyleMiterLimit = strokeStyle.getMiterLimit();
            state.miterLimit =
                strokeStyleMiterLimit !== undefined
                    ? strokeStyleMiterLimit
                    : _canvas_js__WEBPACK_IMPORTED_MODULE_7__.defaultMiterLimit;
            if (state.lineWidth > this.maxLineWidth) {
                this.maxLineWidth = state.lineWidth;
                // invalidate the buffered max extent cache
                this.bufferedMaxExtent_ = null;
            }
        }
        else {
            state.strokeStyle = undefined;
            state.lineCap = undefined;
            state.lineDash = null;
            state.lineDashOffset = undefined;
            state.lineJoin = undefined;
            state.lineWidth = undefined;
            state.miterLimit = undefined;
        }
    };
    /**
     * @param {import("../canvas.js").FillStrokeState} state State.
     * @return {Array<*>} Fill instruction.
     */
    CanvasBuilder.prototype.createFill = function (state) {
        var fillStyle = state.fillStyle;
        /** @type {Array<*>} */
        var fillInstruction = [_Instruction_js__WEBPACK_IMPORTED_MODULE_3__.default.SET_FILL_STYLE, fillStyle];
        if (typeof fillStyle !== 'string') {
            // Fill is a pattern or gradient - align it!
            fillInstruction.push(true);
        }
        return fillInstruction;
    };
    /**
     * @param {import("../canvas.js").FillStrokeState} state State.
     */
    CanvasBuilder.prototype.applyStroke = function (state) {
        this.instructions.push(this.createStroke(state));
    };
    /**
     * @param {import("../canvas.js").FillStrokeState} state State.
     * @return {Array<*>} Stroke instruction.
     */
    CanvasBuilder.prototype.createStroke = function (state) {
        return [
            _Instruction_js__WEBPACK_IMPORTED_MODULE_3__.default.SET_STROKE_STYLE,
            state.strokeStyle,
            state.lineWidth * this.pixelRatio,
            state.lineCap,
            state.lineJoin,
            state.miterLimit,
            this.applyPixelRatio(state.lineDash),
            state.lineDashOffset * this.pixelRatio,
        ];
    };
    /**
     * @param {import("../canvas.js").FillStrokeState} state State.
     * @param {function(this:CanvasBuilder, import("../canvas.js").FillStrokeState):Array<*>} createFill Create fill.
     */
    CanvasBuilder.prototype.updateFillStyle = function (state, createFill) {
        var fillStyle = state.fillStyle;
        if (typeof fillStyle !== 'string' || state.currentFillStyle != fillStyle) {
            if (fillStyle !== undefined) {
                this.instructions.push(createFill.call(this, state));
            }
            state.currentFillStyle = fillStyle;
        }
    };
    /**
     * @param {import("../canvas.js").FillStrokeState} state State.
     * @param {function(this:CanvasBuilder, import("../canvas.js").FillStrokeState): void} applyStroke Apply stroke.
     */
    CanvasBuilder.prototype.updateStrokeStyle = function (state, applyStroke) {
        var strokeStyle = state.strokeStyle;
        var lineCap = state.lineCap;
        var lineDash = state.lineDash;
        var lineDashOffset = state.lineDashOffset;
        var lineJoin = state.lineJoin;
        var lineWidth = state.lineWidth;
        var miterLimit = state.miterLimit;
        if (state.currentStrokeStyle != strokeStyle ||
            state.currentLineCap != lineCap ||
            (lineDash != state.currentLineDash &&
                !(0,_array_js__WEBPACK_IMPORTED_MODULE_5__.equals)(state.currentLineDash, lineDash)) ||
            state.currentLineDashOffset != lineDashOffset ||
            state.currentLineJoin != lineJoin ||
            state.currentLineWidth != lineWidth ||
            state.currentMiterLimit != miterLimit) {
            if (strokeStyle !== undefined) {
                applyStroke.call(this, state);
            }
            state.currentStrokeStyle = strokeStyle;
            state.currentLineCap = lineCap;
            state.currentLineDash = lineDash;
            state.currentLineDashOffset = lineDashOffset;
            state.currentLineJoin = lineJoin;
            state.currentLineWidth = lineWidth;
            state.currentMiterLimit = miterLimit;
        }
    };
    /**
     * @param {import("../../Feature.js").FeatureLike} feature Feature.
     */
    CanvasBuilder.prototype.endGeometry = function (feature) {
        this.beginGeometryInstruction1_[2] = this.instructions.length;
        this.beginGeometryInstruction1_ = null;
        this.beginGeometryInstruction2_[2] = this.hitDetectionInstructions.length;
        this.beginGeometryInstruction2_ = null;
        var endGeometryInstruction = [_Instruction_js__WEBPACK_IMPORTED_MODULE_3__.default.END_GEOMETRY, feature];
        this.instructions.push(endGeometryInstruction);
        this.hitDetectionInstructions.push(endGeometryInstruction);
    };
    /**
     * Get the buffered rendering extent.  Rendering will be clipped to the extent
     * provided to the constructor.  To account for symbolizers that may intersect
     * this extent, we calculate a buffered extent (e.g. based on stroke width).
     * @return {import("../../extent.js").Extent} The buffered rendering extent.
     * @protected
     */
    CanvasBuilder.prototype.getBufferedMaxExtent = function () {
        if (!this.bufferedMaxExtent_) {
            this.bufferedMaxExtent_ = (0,_extent_js__WEBPACK_IMPORTED_MODULE_0__.clone)(this.maxExtent);
            if (this.maxLineWidth > 0) {
                var width = (this.resolution * (this.maxLineWidth + 1)) / 2;
                (0,_extent_js__WEBPACK_IMPORTED_MODULE_0__.buffer)(this.bufferedMaxExtent_, width, this.bufferedMaxExtent_);
            }
        }
        return this.bufferedMaxExtent_;
    };
    return CanvasBuilder;
}(_VectorContext_js__WEBPACK_IMPORTED_MODULE_8__.default));
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (CanvasBuilder);
//# sourceMappingURL=Builder.js.map

/***/ }),

/***/ "./node_modules/ol/render/canvas/BuilderGroup.js":
/*!*******************************************************!*\
  !*** ./node_modules/ol/render/canvas/BuilderGroup.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _Builder_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Builder.js */ "./node_modules/ol/render/canvas/Builder.js");
/* harmony import */ var _ImageBuilder_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./ImageBuilder.js */ "./node_modules/ol/render/canvas/ImageBuilder.js");
/* harmony import */ var _LineStringBuilder_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./LineStringBuilder.js */ "./node_modules/ol/render/canvas/LineStringBuilder.js");
/* harmony import */ var _PolygonBuilder_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./PolygonBuilder.js */ "./node_modules/ol/render/canvas/PolygonBuilder.js");
/* harmony import */ var _TextBuilder_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./TextBuilder.js */ "./node_modules/ol/render/canvas/TextBuilder.js");
/**
 * @module ol/render/canvas/BuilderGroup
 */





/**
 * @type {Object<import("./BuilderType").default, typeof Builder>}
 */
var BATCH_CONSTRUCTORS = {
    'Circle': _PolygonBuilder_js__WEBPACK_IMPORTED_MODULE_0__.default,
    'Default': _Builder_js__WEBPACK_IMPORTED_MODULE_1__.default,
    'Image': _ImageBuilder_js__WEBPACK_IMPORTED_MODULE_2__.default,
    'LineString': _LineStringBuilder_js__WEBPACK_IMPORTED_MODULE_3__.default,
    'Polygon': _PolygonBuilder_js__WEBPACK_IMPORTED_MODULE_0__.default,
    'Text': _TextBuilder_js__WEBPACK_IMPORTED_MODULE_4__.default,
};
var BuilderGroup = /** @class */ (function () {
    /**
     * @param {number} tolerance Tolerance.
     * @param {import("../../extent.js").Extent} maxExtent Max extent.
     * @param {number} resolution Resolution.
     * @param {number} pixelRatio Pixel ratio.
     */
    function BuilderGroup(tolerance, maxExtent, resolution, pixelRatio) {
        /**
         * @private
         * @type {number}
         */
        this.tolerance_ = tolerance;
        /**
         * @private
         * @type {import("../../extent.js").Extent}
         */
        this.maxExtent_ = maxExtent;
        /**
         * @private
         * @type {number}
         */
        this.pixelRatio_ = pixelRatio;
        /**
         * @private
         * @type {number}
         */
        this.resolution_ = resolution;
        /**
         * @private
         * @type {!Object<string, !Object<import("./BuilderType").default, Builder>>}
         */
        this.buildersByZIndex_ = {};
    }
    /**
     * @return {!Object<string, !Object<import("./BuilderType").default, import("./Builder.js").SerializableInstructions>>} The serializable instructions
     */
    BuilderGroup.prototype.finish = function () {
        var builderInstructions = {};
        for (var zKey in this.buildersByZIndex_) {
            builderInstructions[zKey] = builderInstructions[zKey] || {};
            var builders = this.buildersByZIndex_[zKey];
            for (var builderKey in builders) {
                var builderInstruction = builders[builderKey].finish();
                builderInstructions[zKey][builderKey] = builderInstruction;
            }
        }
        return builderInstructions;
    };
    /**
     * @param {number|undefined} zIndex Z index.
     * @param {import("./BuilderType.js").default} builderType Replay type.
     * @return {import("../VectorContext.js").default} Replay.
     */
    BuilderGroup.prototype.getBuilder = function (zIndex, builderType) {
        var zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';
        var replays = this.buildersByZIndex_[zIndexKey];
        if (replays === undefined) {
            replays = {};
            this.buildersByZIndex_[zIndexKey] = replays;
        }
        var replay = replays[builderType];
        if (replay === undefined) {
            var Constructor = BATCH_CONSTRUCTORS[builderType];
            replay = new Constructor(this.tolerance_, this.maxExtent_, this.resolution_, this.pixelRatio_);
            replays[builderType] = replay;
        }
        return replay;
    };
    return BuilderGroup;
}());
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (BuilderGroup);
//# sourceMappingURL=BuilderGroup.js.map

/***/ }),

/***/ "./node_modules/ol/render/canvas/BuilderType.js":
/*!******************************************************!*\
  !*** ./node_modules/ol/render/canvas/BuilderType.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/**
 * @module ol/render/canvas/BuilderType
 */
/**
 * @enum {string}
 */
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
    CIRCLE: 'Circle',
    DEFAULT: 'Default',
    IMAGE: 'Image',
    LINE_STRING: 'LineString',
    POLYGON: 'Polygon',
    TEXT: 'Text',
});
//# sourceMappingURL=BuilderType.js.map

/***/ }),

/***/ "./node_modules/ol/render/canvas/Executor.js":
/*!***************************************************!*\
  !*** ./node_modules/ol/render/canvas/Executor.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _Instruction_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./Instruction.js */ "./node_modules/ol/render/canvas/Instruction.js");
/* harmony import */ var _TextBuilder_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./TextBuilder.js */ "./node_modules/ol/render/canvas/TextBuilder.js");
/* harmony import */ var _has_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../has.js */ "./node_modules/ol/has.js");
/* harmony import */ var _transform_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../transform.js */ "./node_modules/ol/transform.js");
/* harmony import */ var _extent_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../extent.js */ "./node_modules/ol/extent.js");
/* harmony import */ var _canvas_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../canvas.js */ "./node_modules/ol/render/canvas.js");
/* harmony import */ var _geom_flat_textpath_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../geom/flat/textpath.js */ "./node_modules/ol/geom/flat/textpath.js");
/* harmony import */ var _array_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../array.js */ "./node_modules/ol/array.js");
/* harmony import */ var _geom_flat_length_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../geom/flat/length.js */ "./node_modules/ol/geom/flat/length.js");
/* harmony import */ var _geom_flat_transform_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../geom/flat/transform.js */ "./node_modules/ol/geom/flat/transform.js");
/**
 * @module ol/render/canvas/Executor
 */











/**
 * @typedef {Object} BBox
 * @property {number} minX
 * @property {number} minY
 * @property {number} maxX
 * @property {number} maxY
 * @property {*} value
 */
/**
 * @typedef {Object} ImageOrLabelDimensions
 * @property {number} drawImageX
 * @property {number} drawImageY
 * @property {number} drawImageW
 * @property {number} drawImageH
 * @property {number} originX
 * @property {number} originY
 * @property {Array<number>} scale
 * @property {BBox} declutterBox
 * @property {import("../../transform.js").Transform} canvasTransform
 */
/**
 * @typedef {{0: CanvasRenderingContext2D, 1: number, 2: import("../canvas.js").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement, 3: ImageOrLabelDimensions, 4: number, 5: Array<*>, 6: Array<*>}} ReplayImageOrLabelArgs
 */
/**
 * @template T
 * @typedef {function(import("../../Feature.js").FeatureLike, import("../../geom/SimpleGeometry.js").default): T} FeatureCallback
 */
/**
 * @type {import("../../extent.js").Extent}
 */
var tmpExtent = (0,_extent_js__WEBPACK_IMPORTED_MODULE_0__.createEmpty)();
/** @type {import("../../coordinate.js").Coordinate} */
var p1 = [];
/** @type {import("../../coordinate.js").Coordinate} */
var p2 = [];
/** @type {import("../../coordinate.js").Coordinate} */
var p3 = [];
/** @type {import("../../coordinate.js").Coordinate} */
var p4 = [];
/**
 * @param {ReplayImageOrLabelArgs} replayImageOrLabelArgs Arguments to replayImageOrLabel
 * @return {BBox} Declutter bbox.
 */
function getDeclutterBox(replayImageOrLabelArgs) {
    return replayImageOrLabelArgs[3].declutterBox;
}
var rtlRegEx = new RegExp(
/* eslint-disable prettier/prettier */
'[' +
    String.fromCharCode(0x00591) + '-' + String.fromCharCode(0x008ff) +
    String.fromCharCode(0x0fb1d) + '-' + String.fromCharCode(0x0fdff) +
    String.fromCharCode(0x0fe70) + '-' + String.fromCharCode(0x0fefc) +
    String.fromCharCode(0x10800) + '-' + String.fromCharCode(0x10fff) +
    String.fromCharCode(0x1e800) + '-' + String.fromCharCode(0x1efff) +
    ']'
/* eslint-enable prettier/prettier */
);
/**
 * @param {string} text Text.
 * @param {string} align Alignment.
 * @return {number} Text alignment.
 */
function horizontalTextAlign(text, align) {
    if ((align === 'start' || align === 'end') && !rtlRegEx.test(text)) {
        align = align === 'start' ? 'left' : 'right';
    }
    return _TextBuilder_js__WEBPACK_IMPORTED_MODULE_1__.TEXT_ALIGN[align];
}
var Executor = /** @class */ (function () {
    /**
     * @param {number} resolution Resolution.
     * @param {number} pixelRatio Pixel ratio.
     * @param {boolean} overlaps The replay can have overlapping geometries.
     * @param {import("../canvas.js").SerializableInstructions} instructions The serializable instructions
     * @param {import("../../size.js").Size} renderBuffer Render buffer (width/height) in pixels.
     */
    function Executor(resolution, pixelRatio, overlaps, instructions, renderBuffer) {
        /**
         * @protected
         * @type {boolean}
         */
        this.overlaps = overlaps;
        /**
         * @protected
         * @type {number}
         */
        this.pixelRatio = pixelRatio;
        /**
         * @protected
         * @const
         * @type {number}
         */
        this.resolution = resolution;
        /**
         * @private
         * @type {boolean}
         */
        this.alignFill_;
        /**
         * @protected
         * @type {Array<*>}
         */
        this.instructions = instructions.instructions;
        /**
         * @protected
         * @type {Array<number>}
         */
        this.coordinates = instructions.coordinates;
        /**
         * @private
         * @type {!Object<number,import("../../coordinate.js").Coordinate|Array<import("../../coordinate.js").Coordinate>|Array<Array<import("../../coordinate.js").Coordinate>>>}
         */
        this.coordinateCache_ = {};
        /**
         * @private
         * @type {import("../../size.js").Size}
         */
        this.renderBuffer_ = renderBuffer;
        /**
         * @private
         * @type {!import("../../transform.js").Transform}
         */
        this.renderedTransform_ = (0,_transform_js__WEBPACK_IMPORTED_MODULE_2__.create)();
        /**
         * @protected
         * @type {Array<*>}
         */
        this.hitDetectionInstructions = instructions.hitDetectionInstructions;
        /**
         * @private
         * @type {Array<number>}
         */
        this.pixelCoordinates_ = null;
        /**
         * @private
         * @type {number}
         */
        this.viewRotation_ = 0;
        /**
         * @type {!Object<string, import("../canvas.js").FillState>}
         */
        this.fillStates = instructions.fillStates || {};
        /**
         * @type {!Object<string, import("../canvas.js").StrokeState>}
         */
        this.strokeStates = instructions.strokeStates || {};
        /**
         * @type {!Object<string, import("../canvas.js").TextState>}
         */
        this.textStates = instructions.textStates || {};
        /**
         * @private
         * @type {Object<string, Object<string, number>>}
         */
        this.widths_ = {};
        /**
         * @private
         * @type {Object<string, import("../canvas.js").Label>}
         */
        this.labels_ = {};
    }
    /**
     * @param {string} text Text.
     * @param {string} textKey Text style key.
     * @param {string} fillKey Fill style key.
     * @param {string} strokeKey Stroke style key.
     * @return {import("../canvas.js").Label} Label.
     */
    Executor.prototype.createLabel = function (text, textKey, fillKey, strokeKey) {
        var key = text + textKey + fillKey + strokeKey;
        if (this.labels_[key]) {
            return this.labels_[key];
        }
        var strokeState = strokeKey ? this.strokeStates[strokeKey] : null;
        var fillState = fillKey ? this.fillStates[fillKey] : null;
        var textState = this.textStates[textKey];
        var pixelRatio = this.pixelRatio;
        var scale = [
            textState.scale[0] * pixelRatio,
            textState.scale[1] * pixelRatio,
        ];
        var align = horizontalTextAlign(text, textState.textAlign || _canvas_js__WEBPACK_IMPORTED_MODULE_3__.defaultTextAlign);
        var strokeWidth = strokeKey && strokeState.lineWidth ? strokeState.lineWidth : 0;
        var lines = text.split('\n');
        var numLines = lines.length;
        var widths = [];
        var width = (0,_canvas_js__WEBPACK_IMPORTED_MODULE_3__.measureTextWidths)(textState.font, lines, widths);
        var lineHeight = (0,_canvas_js__WEBPACK_IMPORTED_MODULE_3__.measureTextHeight)(textState.font);
        var height = lineHeight * numLines;
        var renderWidth = width + strokeWidth;
        var contextInstructions = [];
        // make canvas 2 pixels wider to account for italic text width measurement errors
        var w = (renderWidth + 2) * scale[0];
        var h = (height + strokeWidth) * scale[1];
        /** @type {import("../canvas.js").Label} */
        var label = {
            width: w < 0 ? Math.floor(w) : Math.ceil(w),
            height: h < 0 ? Math.floor(h) : Math.ceil(h),
            contextInstructions: contextInstructions,
        };
        if (scale[0] != 1 || scale[1] != 1) {
            contextInstructions.push('scale', scale);
        }
        contextInstructions.push('font', textState.font);
        if (strokeKey) {
            contextInstructions.push('strokeStyle', strokeState.strokeStyle);
            contextInstructions.push('lineWidth', strokeWidth);
            contextInstructions.push('lineCap', strokeState.lineCap);
            contextInstructions.push('lineJoin', strokeState.lineJoin);
            contextInstructions.push('miterLimit', strokeState.miterLimit);
            // eslint-disable-next-line
            var Context = _has_js__WEBPACK_IMPORTED_MODULE_4__.WORKER_OFFSCREEN_CANVAS ? OffscreenCanvasRenderingContext2D : CanvasRenderingContext2D;
            if (Context.prototype.setLineDash) {
                contextInstructions.push('setLineDash', [strokeState.lineDash]);
                contextInstructions.push('lineDashOffset', strokeState.lineDashOffset);
            }
        }
        if (fillKey) {
            contextInstructions.push('fillStyle', fillState.fillStyle);
        }
        contextInstructions.push('textBaseline', 'middle');
        contextInstructions.push('textAlign', 'center');
        var leftRight = 0.5 - align;
        var x = align * renderWidth + leftRight * strokeWidth;
        var i;
        if (strokeKey) {
            for (i = 0; i < numLines; ++i) {
                contextInstructions.push('strokeText', [
                    lines[i],
                    x + leftRight * widths[i],
                    0.5 * (strokeWidth + lineHeight) + i * lineHeight,
                ]);
            }
        }
        if (fillKey) {
            for (i = 0; i < numLines; ++i) {
                contextInstructions.push('fillText', [
                    lines[i],
                    x + leftRight * widths[i],
                    0.5 * (strokeWidth + lineHeight) + i * lineHeight,
                ]);
            }
        }
        this.labels_[key] = label;
        return label;
    };
    /**
     * @param {CanvasRenderingContext2D} context Context.
     * @param {import("../../coordinate.js").Coordinate} p1 1st point of the background box.
     * @param {import("../../coordinate.js").Coordinate} p2 2nd point of the background box.
     * @param {import("../../coordinate.js").Coordinate} p3 3rd point of the background box.
     * @param {import("../../coordinate.js").Coordinate} p4 4th point of the background box.
     * @param {Array<*>} fillInstruction Fill instruction.
     * @param {Array<*>} strokeInstruction Stroke instruction.
     */
    Executor.prototype.replayTextBackground_ = function (context, p1, p2, p3, p4, fillInstruction, strokeInstruction) {
        context.beginPath();
        context.moveTo.apply(context, p1);
        context.lineTo.apply(context, p2);
        context.lineTo.apply(context, p3);
        context.lineTo.apply(context, p4);
        context.lineTo.apply(context, p1);
        if (fillInstruction) {
            this.alignFill_ = /** @type {boolean} */ (fillInstruction[2]);
            this.fill_(context);
        }
        if (strokeInstruction) {
            this.setStrokeStyle_(context, 
            /** @type {Array<*>} */ (strokeInstruction));
            context.stroke();
        }
    };
    /**
     * @private
     * @param {number} sheetWidth Width of the sprite sheet.
     * @param {number} sheetHeight Height of the sprite sheet.
     * @param {number} centerX X.
     * @param {number} centerY Y.
     * @param {number} width Width.
     * @param {number} height Height.
     * @param {number} anchorX Anchor X.
     * @param {number} anchorY Anchor Y.
     * @param {number} originX Origin X.
     * @param {number} originY Origin Y.
     * @param {number} rotation Rotation.
     * @param {import("../../size.js").Size} scale Scale.
     * @param {boolean} snapToPixel Snap to pixel.
     * @param {Array<number>} padding Padding.
     * @param {boolean} fillStroke Background fill or stroke.
     * @param {import("../../Feature.js").FeatureLike} feature Feature.
     * @return {ImageOrLabelDimensions} Dimensions for positioning and decluttering the image or label.
     */
    Executor.prototype.calculateImageOrLabelDimensions_ = function (sheetWidth, sheetHeight, centerX, centerY, width, height, anchorX, anchorY, originX, originY, rotation, scale, snapToPixel, padding, fillStroke, feature) {
        anchorX *= scale[0];
        anchorY *= scale[1];
        var x = centerX - anchorX;
        var y = centerY - anchorY;
        var w = width + originX > sheetWidth ? sheetWidth - originX : width;
        var h = height + originY > sheetHeight ? sheetHeight - originY : height;
        var boxW = padding[3] + w * scale[0] + padding[1];
        var boxH = padding[0] + h * scale[1] + padding[2];
        var boxX = x - padding[3];
        var boxY = y - padding[0];
        if (fillStroke || rotation !== 0) {
            p1[0] = boxX;
            p4[0] = boxX;
            p1[1] = boxY;
            p2[1] = boxY;
            p2[0] = boxX + boxW;
            p3[0] = p2[0];
            p3[1] = boxY + boxH;
            p4[1] = p3[1];
        }
        var transform;
        if (rotation !== 0) {
            transform = (0,_transform_js__WEBPACK_IMPORTED_MODULE_2__.compose)((0,_transform_js__WEBPACK_IMPORTED_MODULE_2__.create)(), centerX, centerY, 1, 1, rotation, -centerX, -centerY);
            (0,_transform_js__WEBPACK_IMPORTED_MODULE_2__.apply)(transform, p1);
            (0,_transform_js__WEBPACK_IMPORTED_MODULE_2__.apply)(transform, p2);
            (0,_transform_js__WEBPACK_IMPORTED_MODULE_2__.apply)(transform, p3);
            (0,_transform_js__WEBPACK_IMPORTED_MODULE_2__.apply)(transform, p4);
            (0,_extent_js__WEBPACK_IMPORTED_MODULE_0__.createOrUpdate)(Math.min(p1[0], p2[0], p3[0], p4[0]), Math.min(p1[1], p2[1], p3[1], p4[1]), Math.max(p1[0], p2[0], p3[0], p4[0]), Math.max(p1[1], p2[1], p3[1], p4[1]), tmpExtent);
        }
        else {
            (0,_extent_js__WEBPACK_IMPORTED_MODULE_0__.createOrUpdate)(Math.min(boxX, boxX + boxW), Math.min(boxY, boxY + boxH), Math.max(boxX, boxX + boxW), Math.max(boxY, boxY + boxH), tmpExtent);
        }
        if (snapToPixel) {
            x = Math.round(x);
            y = Math.round(y);
        }
        return {
            drawImageX: x,
            drawImageY: y,
            drawImageW: w,
            drawImageH: h,
            originX: originX,
            originY: originY,
            declutterBox: {
                minX: tmpExtent[0],
                minY: tmpExtent[1],
                maxX: tmpExtent[2],
                maxY: tmpExtent[3],
                value: feature,
            },
            canvasTransform: transform,
            scale: scale,
        };
    };
    /**
     * @private
     * @param {CanvasRenderingContext2D} context Context.
     * @param {number} contextScale Scale of the context.
     * @param {import("../canvas.js").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} imageOrLabel Image.
     * @param {ImageOrLabelDimensions} dimensions Dimensions.
     * @param {number} opacity Opacity.
     * @param {Array<*>} fillInstruction Fill instruction.
     * @param {Array<*>} strokeInstruction Stroke instruction.
     * @return {boolean} The image or label was rendered.
     */
    Executor.prototype.replayImageOrLabel_ = function (context, contextScale, imageOrLabel, dimensions, opacity, fillInstruction, strokeInstruction) {
        var fillStroke = !!(fillInstruction || strokeInstruction);
        var box = dimensions.declutterBox;
        var canvas = context.canvas;
        var strokePadding = strokeInstruction
            ? (strokeInstruction[2] * dimensions.scale[0]) / 2
            : 0;
        var intersects = box.minX - strokePadding <= canvas.width / contextScale &&
            box.maxX + strokePadding >= 0 &&
            box.minY - strokePadding <= canvas.height / contextScale &&
            box.maxY + strokePadding >= 0;
        if (intersects) {
            if (fillStroke) {
                this.replayTextBackground_(context, p1, p2, p3, p4, 
                /** @type {Array<*>} */ (fillInstruction), 
                /** @type {Array<*>} */ (strokeInstruction));
            }
            (0,_canvas_js__WEBPACK_IMPORTED_MODULE_3__.drawImageOrLabel)(context, dimensions.canvasTransform, opacity, imageOrLabel, dimensions.originX, dimensions.originY, dimensions.drawImageW, dimensions.drawImageH, dimensions.drawImageX, dimensions.drawImageY, dimensions.scale);
        }
        return true;
    };
    /**
     * @private
     * @param {CanvasRenderingContext2D} context Context.
     */
    Executor.prototype.fill_ = function (context) {
        if (this.alignFill_) {
            var origin_1 = (0,_transform_js__WEBPACK_IMPORTED_MODULE_2__.apply)(this.renderedTransform_, [0, 0]);
            var repeatSize = 512 * this.pixelRatio;
            context.save();
            context.translate(origin_1[0] % repeatSize, origin_1[1] % repeatSize);
            context.rotate(this.viewRotation_);
        }
        context.fill();
        if (this.alignFill_) {
            context.restore();
        }
    };
    /**
     * @private
     * @param {CanvasRenderingContext2D} context Context.
     * @param {Array<*>} instruction Instruction.
     */
    Executor.prototype.setStrokeStyle_ = function (context, instruction) {
        context['strokeStyle'] = /** @type {import("../../colorlike.js").ColorLike} */ (instruction[1]);
        context.lineWidth = /** @type {number} */ (instruction[2]);
        context.lineCap = /** @type {CanvasLineCap} */ (instruction[3]);
        context.lineJoin = /** @type {CanvasLineJoin} */ (instruction[4]);
        context.miterLimit = /** @type {number} */ (instruction[5]);
        if (context.setLineDash) {
            context.lineDashOffset = /** @type {number} */ (instruction[7]);
            context.setLineDash(/** @type {Array<number>} */ (instruction[6]));
        }
    };
    /**
     * @private
     * @param {string} text The text to draw.
     * @param {string} textKey The key of the text state.
     * @param {string} strokeKey The key for the stroke state.
     * @param {string} fillKey The key for the fill state.
     * @return {{label: import("../canvas.js").Label, anchorX: number, anchorY: number}} The text image and its anchor.
     */
    Executor.prototype.drawLabelWithPointPlacement_ = function (text, textKey, strokeKey, fillKey) {
        var textState = this.textStates[textKey];
        var label = this.createLabel(text, textKey, fillKey, strokeKey);
        var strokeState = this.strokeStates[strokeKey];
        var pixelRatio = this.pixelRatio;
        var align = horizontalTextAlign(text, textState.textAlign || _canvas_js__WEBPACK_IMPORTED_MODULE_3__.defaultTextAlign);
        var baseline = _TextBuilder_js__WEBPACK_IMPORTED_MODULE_1__.TEXT_ALIGN[textState.textBaseline || _canvas_js__WEBPACK_IMPORTED_MODULE_3__.defaultTextBaseline];
        var strokeWidth = strokeState && strokeState.lineWidth ? strokeState.lineWidth : 0;
        // Remove the 2 pixels we added in createLabel() for the anchor
        var width = label.width / pixelRatio - 2 * textState.scale[0];
        var anchorX = align * width + 2 * (0.5 - align) * strokeWidth;
        var anchorY = (baseline * label.height) / pixelRatio +
            2 * (0.5 - baseline) * strokeWidth;
        return {
            label: label,
            anchorX: anchorX,
            anchorY: anchorY,
        };
    };
    /**
     * @private
     * @param {CanvasRenderingContext2D} context Context.
     * @param {number} contextScale Scale of the context.
     * @param {import("../../transform.js").Transform} transform Transform.
     * @param {Array<*>} instructions Instructions array.
     * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.
     * @param {FeatureCallback<T>=} opt_featureCallback Feature callback.
     * @param {import("../../extent.js").Extent=} opt_hitExtent Only check
     *     features that intersect this extent.
     * @param {import("rbush").default=} opt_declutterTree Declutter tree.
     * @return {T|undefined} Callback result.
     * @template T
     */
    Executor.prototype.execute_ = function (context, contextScale, transform, instructions, snapToPixel, opt_featureCallback, opt_hitExtent, opt_declutterTree) {
        /** @type {Array<number>} */
        var pixelCoordinates;
        if (this.pixelCoordinates_ && (0,_array_js__WEBPACK_IMPORTED_MODULE_5__.equals)(transform, this.renderedTransform_)) {
            pixelCoordinates = this.pixelCoordinates_;
        }
        else {
            if (!this.pixelCoordinates_) {
                this.pixelCoordinates_ = [];
            }
            pixelCoordinates = (0,_geom_flat_transform_js__WEBPACK_IMPORTED_MODULE_6__.transform2D)(this.coordinates, 0, this.coordinates.length, 2, transform, this.pixelCoordinates_);
            (0,_transform_js__WEBPACK_IMPORTED_MODULE_2__.setFromArray)(this.renderedTransform_, transform);
        }
        var i = 0; // instruction index
        var ii = instructions.length; // end of instructions
        var d = 0; // data index
        var dd; // end of per-instruction data
        var anchorX, anchorY, prevX, prevY, roundX, roundY, image, text, textKey, strokeKey, fillKey;
        var pendingFill = 0;
        var pendingStroke = 0;
        var lastFillInstruction = null;
        var lastStrokeInstruction = null;
        var coordinateCache = this.coordinateCache_;
        var viewRotation = this.viewRotation_;
        var viewRotationFromTransform = Math.round(Math.atan2(-transform[1], transform[0]) * 1e12) / 1e12;
        var state = /** @type {import("../../render.js").State} */ ({
            context: context,
            pixelRatio: this.pixelRatio,
            resolution: this.resolution,
            rotation: viewRotation,
        });
        // When the batch size gets too big, performance decreases. 200 is a good
        // balance between batch size and number of fill/stroke instructions.
        var batchSize = this.instructions != instructions || this.overlaps ? 0 : 200;
        var /** @type {import("../../Feature.js").FeatureLike} */ feature;
        var x, y, currentGeometry;
        while (i < ii) {
            var instruction = instructions[i];
            var type = /** @type {import("./Instruction.js").default} */ (instruction[0]);
            switch (type) {
                case _Instruction_js__WEBPACK_IMPORTED_MODULE_7__.default.BEGIN_GEOMETRY:
                    feature = /** @type {import("../../Feature.js").FeatureLike} */ (instruction[1]);
                    currentGeometry = instruction[3];
                    if (!feature.getGeometry()) {
                        i = /** @type {number} */ (instruction[2]);
                    }
                    else if (opt_hitExtent !== undefined &&
                        !(0,_extent_js__WEBPACK_IMPORTED_MODULE_0__.intersects)(opt_hitExtent, currentGeometry.getExtent())) {
                        i = /** @type {number} */ (instruction[2]) + 1;
                    }
                    else {
                        ++i;
                    }
                    break;
                case _Instruction_js__WEBPACK_IMPORTED_MODULE_7__.default.BEGIN_PATH:
                    if (pendingFill > batchSize) {
                        this.fill_(context);
                        pendingFill = 0;
                    }
                    if (pendingStroke > batchSize) {
                        context.stroke();
                        pendingStroke = 0;
                    }
                    if (!pendingFill && !pendingStroke) {
                        context.beginPath();
                        prevX = NaN;
                        prevY = NaN;
                    }
                    ++i;
                    break;
                case _Instruction_js__WEBPACK_IMPORTED_MODULE_7__.default.CIRCLE:
                    d = /** @type {number} */ (instruction[1]);
                    var x1 = pixelCoordinates[d];
                    var y1 = pixelCoordinates[d + 1];
                    var x2 = pixelCoordinates[d + 2];
                    var y2 = pixelCoordinates[d + 3];
                    var dx = x2 - x1;
                    var dy = y2 - y1;
                    var r = Math.sqrt(dx * dx + dy * dy);
                    context.moveTo(x1 + r, y1);
                    context.arc(x1, y1, r, 0, 2 * Math.PI, true);
                    ++i;
                    break;
                case _Instruction_js__WEBPACK_IMPORTED_MODULE_7__.default.CLOSE_PATH:
                    context.closePath();
                    ++i;
                    break;
                case _Instruction_js__WEBPACK_IMPORTED_MODULE_7__.default.CUSTOM:
                    d = /** @type {number} */ (instruction[1]);
                    dd = instruction[2];
                    var geometry = /** @type {import("../../geom/SimpleGeometry.js").default} */ (instruction[3]);
                    var renderer = instruction[4];
                    var fn = instruction.length == 6 ? instruction[5] : undefined;
                    state.geometry = geometry;
                    state.feature = feature;
                    if (!(i in coordinateCache)) {
                        coordinateCache[i] = [];
                    }
                    var coords = coordinateCache[i];
                    if (fn) {
                        fn(pixelCoordinates, d, dd, 2, coords);
                    }
                    else {
                        coords[0] = pixelCoordinates[d];
                        coords[1] = pixelCoordinates[d + 1];
                        coords.length = 2;
                    }
                    renderer(coords, state);
                    ++i;
                    break;
                case _Instruction_js__WEBPACK_IMPORTED_MODULE_7__.default.DRAW_IMAGE:
                    d = /** @type {number} */ (instruction[1]);
                    dd = /** @type {number} */ (instruction[2]);
                    image = /** @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} */ (instruction[3]);
                    // Remaining arguments in DRAW_IMAGE are in alphabetical order
                    anchorX = /** @type {number} */ (instruction[4]);
                    anchorY = /** @type {number} */ (instruction[5]);
                    var height = /** @type {number} */ (instruction[6]);
                    var opacity = /** @type {number} */ (instruction[7]);
                    var originX = /** @type {number} */ (instruction[8]);
                    var originY = /** @type {number} */ (instruction[9]);
                    var rotateWithView = /** @type {boolean} */ (instruction[10]);
                    var rotation = /** @type {number} */ (instruction[11]);
                    var scale = /** @type {import("../../size.js").Size} */ (instruction[12]);
                    var width = /** @type {number} */ (instruction[13]);
                    var declutterImageWithText = /** @type {import("../canvas.js").DeclutterImageWithText} */ (instruction[14]);
                    if (!image && instruction.length >= 19) {
                        // create label images
                        text = /** @type {string} */ (instruction[18]);
                        textKey = /** @type {string} */ (instruction[19]);
                        strokeKey = /** @type {string} */ (instruction[20]);
                        fillKey = /** @type {string} */ (instruction[21]);
                        var labelWithAnchor = this.drawLabelWithPointPlacement_(text, textKey, strokeKey, fillKey);
                        image = labelWithAnchor.label;
                        instruction[3] = image;
                        var textOffsetX = /** @type {number} */ (instruction[22]);
                        anchorX = (labelWithAnchor.anchorX - textOffsetX) * this.pixelRatio;
                        instruction[4] = anchorX;
                        var textOffsetY = /** @type {number} */ (instruction[23]);
                        anchorY = (labelWithAnchor.anchorY - textOffsetY) * this.pixelRatio;
                        instruction[5] = anchorY;
                        height = image.height;
                        instruction[6] = height;
                        width = image.width;
                        instruction[13] = width;
                    }
                    var geometryWidths = void 0;
                    if (instruction.length > 24) {
                        geometryWidths = /** @type {number} */ (instruction[24]);
                    }
                    var padding = void 0, backgroundFill = void 0, backgroundStroke = void 0;
                    if (instruction.length > 16) {
                        padding = /** @type {Array<number>} */ (instruction[15]);
                        backgroundFill = /** @type {boolean} */ (instruction[16]);
                        backgroundStroke = /** @type {boolean} */ (instruction[17]);
                    }
                    else {
                        padding = _canvas_js__WEBPACK_IMPORTED_MODULE_3__.defaultPadding;
                        backgroundFill = false;
                        backgroundStroke = false;
                    }
                    if (rotateWithView && viewRotationFromTransform) {
                        // Canvas is expected to be rotated to reverse view rotation.
                        rotation += viewRotation;
                    }
                    else if (!rotateWithView && !viewRotationFromTransform) {
                        // Canvas is not rotated, images need to be rotated back to be north-up.
                        rotation -= viewRotation;
                    }
                    var widthIndex = 0;
                    for (; d < dd; d += 2) {
                        if (geometryWidths &&
                            geometryWidths[widthIndex++] < width / this.pixelRatio) {
                            continue;
                        }
                        var dimensions = this.calculateImageOrLabelDimensions_(image.width, image.height, pixelCoordinates[d], pixelCoordinates[d + 1], width, height, anchorX, anchorY, originX, originY, rotation, scale, snapToPixel, padding, backgroundFill || backgroundStroke, feature);
                        /** @type {ReplayImageOrLabelArgs} */
                        var args = [
                            context,
                            contextScale,
                            image,
                            dimensions,
                            opacity,
                            backgroundFill
                                ? /** @type {Array<*>} */ (lastFillInstruction)
                                : null,
                            backgroundStroke
                                ? /** @type {Array<*>} */ (lastStrokeInstruction)
                                : null,
                        ];
                        var imageArgs = void 0;
                        var imageDeclutterBox = void 0;
                        if (opt_declutterTree && declutterImageWithText) {
                            if (!declutterImageWithText[d]) {
                                // We now have the image for an image+text combination.
                                declutterImageWithText[d] = args;
                                // Don't render anything for now, wait for the text.
                                continue;
                            }
                            imageArgs = declutterImageWithText[d];
                            delete declutterImageWithText[d];
                            imageDeclutterBox = getDeclutterBox(imageArgs);
                            if (opt_declutterTree.collides(imageDeclutterBox)) {
                                continue;
                            }
                        }
                        if (opt_declutterTree &&
                            opt_declutterTree.collides(dimensions.declutterBox)) {
                            continue;
                        }
                        if (imageArgs) {
                            // We now have image and text for an image+text combination.
                            if (opt_declutterTree) {
                                opt_declutterTree.insert(imageDeclutterBox);
                            }
                            // Render the image before we render the text.
                            this.replayImageOrLabel_.apply(this, imageArgs);
                        }
                        if (opt_declutterTree) {
                            opt_declutterTree.insert(dimensions.declutterBox);
                        }
                        this.replayImageOrLabel_.apply(this, args);
                    }
                    ++i;
                    break;
                case _Instruction_js__WEBPACK_IMPORTED_MODULE_7__.default.DRAW_CHARS:
                    var begin = /** @type {number} */ (instruction[1]);
                    var end = /** @type {number} */ (instruction[2]);
                    var baseline = /** @type {number} */ (instruction[3]);
                    var overflow = /** @type {number} */ (instruction[4]);
                    fillKey = /** @type {string} */ (instruction[5]);
                    var maxAngle = /** @type {number} */ (instruction[6]);
                    var measurePixelRatio = /** @type {number} */ (instruction[7]);
                    var offsetY = /** @type {number} */ (instruction[8]);
                    strokeKey = /** @type {string} */ (instruction[9]);
                    var strokeWidth = /** @type {number} */ (instruction[10]);
                    text = /** @type {string} */ (instruction[11]);
                    textKey = /** @type {string} */ (instruction[12]);
                    var pixelRatioScale = [
                        /** @type {number} */ (instruction[13]),
                        /** @type {number} */ (instruction[13]),
                    ];
                    var textState = this.textStates[textKey];
                    var font = textState.font;
                    var textScale = [
                        textState.scale[0] * measurePixelRatio,
                        textState.scale[1] * measurePixelRatio,
                    ];
                    var cachedWidths = void 0;
                    if (font in this.widths_) {
                        cachedWidths = this.widths_[font];
                    }
                    else {
                        cachedWidths = {};
                        this.widths_[font] = cachedWidths;
                    }
                    var pathLength = (0,_geom_flat_length_js__WEBPACK_IMPORTED_MODULE_8__.lineStringLength)(pixelCoordinates, begin, end, 2);
                    var textLength = Math.abs(textScale[0]) *
                        (0,_canvas_js__WEBPACK_IMPORTED_MODULE_3__.measureAndCacheTextWidth)(font, text, cachedWidths);
                    if (overflow || textLength <= pathLength) {
                        var textAlign = this.textStates[textKey].textAlign;
                        var startM = (pathLength - textLength) * _TextBuilder_js__WEBPACK_IMPORTED_MODULE_1__.TEXT_ALIGN[textAlign];
                        var parts = (0,_geom_flat_textpath_js__WEBPACK_IMPORTED_MODULE_9__.drawTextOnPath)(pixelCoordinates, begin, end, 2, text, startM, maxAngle, Math.abs(textScale[0]), _canvas_js__WEBPACK_IMPORTED_MODULE_3__.measureAndCacheTextWidth, font, cachedWidths, viewRotationFromTransform ? 0 : this.viewRotation_);
                        drawChars: if (parts) {
                            /** @type {Array<ReplayImageOrLabelArgs>} */
                            var replayImageOrLabelArgs = [];
                            var c = void 0, cc = void 0, chars = void 0, label = void 0, part = void 0;
                            if (strokeKey) {
                                for (c = 0, cc = parts.length; c < cc; ++c) {
                                    part = parts[c]; // x, y, anchorX, rotation, chunk
                                    chars = /** @type {string} */ (part[4]);
                                    label = this.createLabel(chars, textKey, '', strokeKey);
                                    anchorX =
                                        /** @type {number} */ (part[2]) +
                                            (textScale[0] < 0 ? -strokeWidth : strokeWidth);
                                    anchorY =
                                        baseline * label.height +
                                            ((0.5 - baseline) * 2 * strokeWidth * textScale[1]) /
                                                textScale[0] -
                                            offsetY;
                                    var dimensions = this.calculateImageOrLabelDimensions_(label.width, label.height, part[0], part[1], label.width, label.height, anchorX, anchorY, 0, 0, part[3], pixelRatioScale, false, _canvas_js__WEBPACK_IMPORTED_MODULE_3__.defaultPadding, false, feature);
                                    if (opt_declutterTree &&
                                        opt_declutterTree.collides(dimensions.declutterBox)) {
                                        break drawChars;
                                    }
                                    replayImageOrLabelArgs.push([
                                        context,
                                        contextScale,
                                        label,
                                        dimensions,
                                        1,
                                        null,
                                        null,
                                    ]);
                                }
                            }
                            if (fillKey) {
                                for (c = 0, cc = parts.length; c < cc; ++c) {
                                    part = parts[c]; // x, y, anchorX, rotation, chunk
                                    chars = /** @type {string} */ (part[4]);
                                    label = this.createLabel(chars, textKey, fillKey, '');
                                    anchorX = /** @type {number} */ (part[2]);
                                    anchorY = baseline * label.height - offsetY;
                                    var dimensions = this.calculateImageOrLabelDimensions_(label.width, label.height, part[0], part[1], label.width, label.height, anchorX, anchorY, 0, 0, part[3], pixelRatioScale, false, _canvas_js__WEBPACK_IMPORTED_MODULE_3__.defaultPadding, false, feature);
                                    if (opt_declutterTree &&
                                        opt_declutterTree.collides(dimensions.declutterBox)) {
                                        break drawChars;
                                    }
                                    replayImageOrLabelArgs.push([
                                        context,
                                        contextScale,
                                        label,
                                        dimensions,
                                        1,
                                        null,
                                        null,
                                    ]);
                                }
                            }
                            if (opt_declutterTree) {
                                opt_declutterTree.load(replayImageOrLabelArgs.map(getDeclutterBox));
                            }
                            for (var i_1 = 0, ii_1 = replayImageOrLabelArgs.length; i_1 < ii_1; ++i_1) {
                                this.replayImageOrLabel_.apply(this, replayImageOrLabelArgs[i_1]);
                            }
                        }
                    }
                    ++i;
                    break;
                case _Instruction_js__WEBPACK_IMPORTED_MODULE_7__.default.END_GEOMETRY:
                    if (opt_featureCallback !== undefined) {
                        feature = /** @type {import("../../Feature.js").FeatureLike} */ (instruction[1]);
                        var result = opt_featureCallback(feature, currentGeometry);
                        if (result) {
                            return result;
                        }
                    }
                    ++i;
                    break;
                case _Instruction_js__WEBPACK_IMPORTED_MODULE_7__.default.FILL:
                    if (batchSize) {
                        pendingFill++;
                    }
                    else {
                        this.fill_(context);
                    }
                    ++i;
                    break;
                case _Instruction_js__WEBPACK_IMPORTED_MODULE_7__.default.MOVE_TO_LINE_TO:
                    d = /** @type {number} */ (instruction[1]);
                    dd = /** @type {number} */ (instruction[2]);
                    x = pixelCoordinates[d];
                    y = pixelCoordinates[d + 1];
                    roundX = (x + 0.5) | 0;
                    roundY = (y + 0.5) | 0;
                    if (roundX !== prevX || roundY !== prevY) {
                        context.moveTo(x, y);
                        prevX = roundX;
                        prevY = roundY;
                    }
                    for (d += 2; d < dd; d += 2) {
                        x = pixelCoordinates[d];
                        y = pixelCoordinates[d + 1];
                        roundX = (x + 0.5) | 0;
                        roundY = (y + 0.5) | 0;
                        if (d == dd - 2 || roundX !== prevX || roundY !== prevY) {
                            context.lineTo(x, y);
                            prevX = roundX;
                            prevY = roundY;
                        }
                    }
                    ++i;
                    break;
                case _Instruction_js__WEBPACK_IMPORTED_MODULE_7__.default.SET_FILL_STYLE:
                    lastFillInstruction = instruction;
                    this.alignFill_ = instruction[2];
                    if (pendingFill) {
                        this.fill_(context);
                        pendingFill = 0;
                        if (pendingStroke) {
                            context.stroke();
                            pendingStroke = 0;
                        }
                    }
                    context.fillStyle = /** @type {import("../../colorlike.js").ColorLike} */ (instruction[1]);
                    ++i;
                    break;
                case _Instruction_js__WEBPACK_IMPORTED_MODULE_7__.default.SET_STROKE_STYLE:
                    lastStrokeInstruction = instruction;
                    if (pendingStroke) {
                        context.stroke();
                        pendingStroke = 0;
                    }
                    this.setStrokeStyle_(context, /** @type {Array<*>} */ (instruction));
                    ++i;
                    break;
                case _Instruction_js__WEBPACK_IMPORTED_MODULE_7__.default.STROKE:
                    if (batchSize) {
                        pendingStroke++;
                    }
                    else {
                        context.stroke();
                    }
                    ++i;
                    break;
                default:
                    ++i; // consume the instruction anyway, to avoid an infinite loop
                    break;
            }
        }
        if (pendingFill) {
            this.fill_(context);
        }
        if (pendingStroke) {
            context.stroke();
        }
        return undefined;
    };
    /**
     * @param {CanvasRenderingContext2D} context Context.
     * @param {number} contextScale Scale of the context.
     * @param {import("../../transform.js").Transform} transform Transform.
     * @param {number} viewRotation View rotation.
     * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.
     * @param {import("rbush").default=} opt_declutterTree Declutter tree.
     */
    Executor.prototype.execute = function (context, contextScale, transform, viewRotation, snapToPixel, opt_declutterTree) {
        this.viewRotation_ = viewRotation;
        this.execute_(context, contextScale, transform, this.instructions, snapToPixel, undefined, undefined, opt_declutterTree);
    };
    /**
     * @param {CanvasRenderingContext2D} context Context.
     * @param {import("../../transform.js").Transform} transform Transform.
     * @param {number} viewRotation View rotation.
     * @param {FeatureCallback<T>=} opt_featureCallback Feature callback.
     * @param {import("../../extent.js").Extent=} opt_hitExtent Only check
     *     features that intersect this extent.
     * @return {T|undefined} Callback result.
     * @template T
     */
    Executor.prototype.executeHitDetection = function (context, transform, viewRotation, opt_featureCallback, opt_hitExtent) {
        this.viewRotation_ = viewRotation;
        return this.execute_(context, 1, transform, this.hitDetectionInstructions, true, opt_featureCallback, opt_hitExtent);
    };
    return Executor;
}());
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Executor);
//# sourceMappingURL=Executor.js.map

/***/ }),

/***/ "./node_modules/ol/render/canvas/ExecutorGroup.js":
/*!********************************************************!*\
  !*** ./node_modules/ol/render/canvas/ExecutorGroup.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "getPixelIndexArray": () => (/* binding */ getPixelIndexArray),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _BuilderType_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./BuilderType.js */ "./node_modules/ol/render/canvas/BuilderType.js");
/* harmony import */ var _Executor_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Executor.js */ "./node_modules/ol/render/canvas/Executor.js");
/* harmony import */ var _extent_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../extent.js */ "./node_modules/ol/extent.js");
/* harmony import */ var _transform_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../transform.js */ "./node_modules/ol/transform.js");
/* harmony import */ var _dom_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../dom.js */ "./node_modules/ol/dom.js");
/* harmony import */ var _obj_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../obj.js */ "./node_modules/ol/obj.js");
/* harmony import */ var _array_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../array.js */ "./node_modules/ol/array.js");
/* harmony import */ var _geom_flat_transform_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../geom/flat/transform.js */ "./node_modules/ol/geom/flat/transform.js");
/**
 * @module ol/render/canvas/ExecutorGroup
 */








/**
 * @const
 * @type {Array<import("./BuilderType.js").default>}
 */
var ORDER = [
    _BuilderType_js__WEBPACK_IMPORTED_MODULE_0__.default.POLYGON,
    _BuilderType_js__WEBPACK_IMPORTED_MODULE_0__.default.CIRCLE,
    _BuilderType_js__WEBPACK_IMPORTED_MODULE_0__.default.LINE_STRING,
    _BuilderType_js__WEBPACK_IMPORTED_MODULE_0__.default.IMAGE,
    _BuilderType_js__WEBPACK_IMPORTED_MODULE_0__.default.TEXT,
    _BuilderType_js__WEBPACK_IMPORTED_MODULE_0__.default.DEFAULT,
];
var ExecutorGroup = /** @class */ (function () {
    /**
     * @param {import("../../extent.js").Extent} maxExtent Max extent for clipping. When a
     * `maxExtent` was set on the Buillder for this executor group, the same `maxExtent`
     * should be set here, unless the target context does not exceet that extent (which
     * can be the case when rendering to tiles).
     * @param {number} resolution Resolution.
     * @param {number} pixelRatio Pixel ratio.
     * @param {boolean} overlaps The executor group can have overlapping geometries.
     * @param {!Object<string, !Object<import("./BuilderType.js").default, import("../canvas.js").SerializableInstructions>>} allInstructions
     * The serializable instructions.
     * @param {number=} opt_renderBuffer Optional rendering buffer.
     */
    function ExecutorGroup(maxExtent, resolution, pixelRatio, overlaps, allInstructions, opt_renderBuffer) {
        /**
         * @private
         * @type {import("../../extent.js").Extent}
         */
        this.maxExtent_ = maxExtent;
        /**
         * @private
         * @type {boolean}
         */
        this.overlaps_ = overlaps;
        /**
         * @private
         * @type {number}
         */
        this.pixelRatio_ = pixelRatio;
        /**
         * @private
         * @type {number}
         */
        this.resolution_ = resolution;
        /**
         * @private
         * @type {number|undefined}
         */
        this.renderBuffer_ = opt_renderBuffer;
        /**
         * @private
         * @type {!Object<string, !Object<import("./BuilderType.js").default, import("./Executor").default>>}
         */
        this.executorsByZIndex_ = {};
        /**
         * @private
         * @type {CanvasRenderingContext2D}
         */
        this.hitDetectionContext_ = null;
        /**
         * @private
         * @type {import("../../transform.js").Transform}
         */
        this.hitDetectionTransform_ = (0,_transform_js__WEBPACK_IMPORTED_MODULE_1__.create)();
        this.createExecutors_(allInstructions);
    }
    /**
     * @param {CanvasRenderingContext2D} context Context.
     * @param {import("../../transform.js").Transform} transform Transform.
     */
    ExecutorGroup.prototype.clip = function (context, transform) {
        var flatClipCoords = this.getClipCoords(transform);
        context.beginPath();
        context.moveTo(flatClipCoords[0], flatClipCoords[1]);
        context.lineTo(flatClipCoords[2], flatClipCoords[3]);
        context.lineTo(flatClipCoords[4], flatClipCoords[5]);
        context.lineTo(flatClipCoords[6], flatClipCoords[7]);
        context.clip();
    };
    /**
     * Create executors and populate them using the provided instructions.
     * @private
     * @param {!Object<string, !Object<import("./BuilderType.js").default, import("../canvas.js").SerializableInstructions>>} allInstructions The serializable instructions
     */
    ExecutorGroup.prototype.createExecutors_ = function (allInstructions) {
        for (var zIndex in allInstructions) {
            var executors = this.executorsByZIndex_[zIndex];
            if (executors === undefined) {
                executors = {};
                this.executorsByZIndex_[zIndex] = executors;
            }
            var instructionByZindex = allInstructions[zIndex];
            var renderBuffer = [this.renderBuffer_ || 0, this.renderBuffer_ || 0];
            for (var builderType in instructionByZindex) {
                var instructions = instructionByZindex[builderType];
                executors[builderType] = new _Executor_js__WEBPACK_IMPORTED_MODULE_2__.default(this.resolution_, this.pixelRatio_, this.overlaps_, instructions, renderBuffer);
            }
        }
    };
    /**
     * @param {Array<import("./BuilderType.js").default>} executors Executors.
     * @return {boolean} Has executors of the provided types.
     */
    ExecutorGroup.prototype.hasExecutors = function (executors) {
        for (var zIndex in this.executorsByZIndex_) {
            var candidates = this.executorsByZIndex_[zIndex];
            for (var i = 0, ii = executors.length; i < ii; ++i) {
                if (executors[i] in candidates) {
                    return true;
                }
            }
        }
        return false;
    };
    /**
     * @param {import("../../coordinate.js").Coordinate} coordinate Coordinate.
     * @param {number} resolution Resolution.
     * @param {number} rotation Rotation.
     * @param {number} hitTolerance Hit tolerance in pixels.
     * @param {function(import("../../Feature.js").FeatureLike, import("../../geom/SimpleGeometry.js").default, number): T} callback Feature callback.
     * @param {Array<import("../../Feature.js").FeatureLike>} declutteredFeatures Decluttered features.
     * @return {T|undefined} Callback result.
     * @template T
     */
    ExecutorGroup.prototype.forEachFeatureAtCoordinate = function (coordinate, resolution, rotation, hitTolerance, callback, declutteredFeatures) {
        hitTolerance = Math.round(hitTolerance);
        var contextSize = hitTolerance * 2 + 1;
        var transform = (0,_transform_js__WEBPACK_IMPORTED_MODULE_1__.compose)(this.hitDetectionTransform_, hitTolerance + 0.5, hitTolerance + 0.5, 1 / resolution, -1 / resolution, -rotation, -coordinate[0], -coordinate[1]);
        var newContext = !this.hitDetectionContext_;
        if (newContext) {
            this.hitDetectionContext_ = (0,_dom_js__WEBPACK_IMPORTED_MODULE_3__.createCanvasContext2D)(contextSize, contextSize);
        }
        var context = this.hitDetectionContext_;
        if (context.canvas.width !== contextSize ||
            context.canvas.height !== contextSize) {
            context.canvas.width = contextSize;
            context.canvas.height = contextSize;
        }
        else if (!newContext) {
            context.clearRect(0, 0, contextSize, contextSize);
        }
        /**
         * @type {import("../../extent.js").Extent}
         */
        var hitExtent;
        if (this.renderBuffer_ !== undefined) {
            hitExtent = (0,_extent_js__WEBPACK_IMPORTED_MODULE_4__.createEmpty)();
            (0,_extent_js__WEBPACK_IMPORTED_MODULE_4__.extendCoordinate)(hitExtent, coordinate);
            (0,_extent_js__WEBPACK_IMPORTED_MODULE_4__.buffer)(hitExtent, resolution * (this.renderBuffer_ + hitTolerance), hitExtent);
        }
        var indexes = getPixelIndexArray(hitTolerance);
        var builderType;
        /**
         * @param {import("../../Feature.js").FeatureLike} feature Feature.
         * @param {import("../../geom/SimpleGeometry.js").default} geometry Geometry.
         * @return {T|undefined} Callback result.
         */
        function featureCallback(feature, geometry) {
            var imageData = context.getImageData(0, 0, contextSize, contextSize)
                .data;
            for (var i_1 = 0, ii = indexes.length; i_1 < ii; i_1++) {
                if (imageData[indexes[i_1]] > 0) {
                    if (!declutteredFeatures ||
                        (builderType !== _BuilderType_js__WEBPACK_IMPORTED_MODULE_0__.default.IMAGE &&
                            builderType !== _BuilderType_js__WEBPACK_IMPORTED_MODULE_0__.default.TEXT) ||
                        declutteredFeatures.indexOf(feature) !== -1) {
                        var idx = (indexes[i_1] - 3) / 4;
                        var x = hitTolerance - (idx % contextSize);
                        var y = hitTolerance - ((idx / contextSize) | 0);
                        var result_1 = callback(feature, geometry, x * x + y * y);
                        if (result_1) {
                            return result_1;
                        }
                    }
                    context.clearRect(0, 0, contextSize, contextSize);
                    break;
                }
            }
            return undefined;
        }
        /** @type {Array<number>} */
        var zs = Object.keys(this.executorsByZIndex_).map(Number);
        zs.sort(_array_js__WEBPACK_IMPORTED_MODULE_5__.numberSafeCompareFunction);
        var i, j, executors, executor, result;
        for (i = zs.length - 1; i >= 0; --i) {
            var zIndexKey = zs[i].toString();
            executors = this.executorsByZIndex_[zIndexKey];
            for (j = ORDER.length - 1; j >= 0; --j) {
                builderType = ORDER[j];
                executor = executors[builderType];
                if (executor !== undefined) {
                    result = executor.executeHitDetection(context, transform, rotation, featureCallback, hitExtent);
                    if (result) {
                        return result;
                    }
                }
            }
        }
        return undefined;
    };
    /**
     * @param {import("../../transform.js").Transform} transform Transform.
     * @return {Array<number>} Clip coordinates.
     */
    ExecutorGroup.prototype.getClipCoords = function (transform) {
        var maxExtent = this.maxExtent_;
        if (!maxExtent) {
            return null;
        }
        var minX = maxExtent[0];
        var minY = maxExtent[1];
        var maxX = maxExtent[2];
        var maxY = maxExtent[3];
        var flatClipCoords = [minX, minY, minX, maxY, maxX, maxY, maxX, minY];
        (0,_geom_flat_transform_js__WEBPACK_IMPORTED_MODULE_6__.transform2D)(flatClipCoords, 0, 8, 2, transform, flatClipCoords);
        return flatClipCoords;
    };
    /**
     * @return {boolean} Is empty.
     */
    ExecutorGroup.prototype.isEmpty = function () {
        return (0,_obj_js__WEBPACK_IMPORTED_MODULE_7__.isEmpty)(this.executorsByZIndex_);
    };
    /**
     * @param {CanvasRenderingContext2D} context Context.
     * @param {number} contextScale Scale of the context.
     * @param {import("../../transform.js").Transform} transform Transform.
     * @param {number} viewRotation View rotation.
     * @param {boolean} snapToPixel Snap point symbols and test to integer pixel.
     * @param {Array<import("./BuilderType.js").default>=} opt_builderTypes Ordered replay types to replay.
     *     Default is {@link module:ol/render/replay~ORDER}
     * @param {import("rbush").default=} opt_declutterTree Declutter tree.
     */
    ExecutorGroup.prototype.execute = function (context, contextScale, transform, viewRotation, snapToPixel, opt_builderTypes, opt_declutterTree) {
        /** @type {Array<number>} */
        var zs = Object.keys(this.executorsByZIndex_).map(Number);
        zs.sort(_array_js__WEBPACK_IMPORTED_MODULE_5__.numberSafeCompareFunction);
        // setup clipping so that the parts of over-simplified geometries are not
        // visible outside the current extent when panning
        if (this.maxExtent_) {
            context.save();
            this.clip(context, transform);
        }
        var builderTypes = opt_builderTypes ? opt_builderTypes : ORDER;
        var i, ii, j, jj, replays, replay;
        if (opt_declutterTree) {
            zs.reverse();
        }
        for (i = 0, ii = zs.length; i < ii; ++i) {
            var zIndexKey = zs[i].toString();
            replays = this.executorsByZIndex_[zIndexKey];
            for (j = 0, jj = builderTypes.length; j < jj; ++j) {
                var builderType = builderTypes[j];
                replay = replays[builderType];
                if (replay !== undefined) {
                    replay.execute(context, contextScale, transform, viewRotation, snapToPixel, opt_declutterTree);
                }
            }
        }
        if (this.maxExtent_) {
            context.restore();
        }
    };
    return ExecutorGroup;
}());
/**
 * This cache is used to store arrays of indexes for calculated pixel circles
 * to increase performance.
 * It is a static property to allow each Replaygroup to access it.
 * @type {Object<number, Array<number>>}
 */
var circlePixelIndexArrayCache = {};
/**
 * This methods creates an array with indexes of all pixels within a circle,
 * ordered by how close they are to the center.
 * A cache is used to increase performance.
 * @param {number} radius Radius.
 * @returns {Array<number>} An array with indexes within a circle.
 */
function getPixelIndexArray(radius) {
    if (circlePixelIndexArrayCache[radius] !== undefined) {
        return circlePixelIndexArrayCache[radius];
    }
    var size = radius * 2 + 1;
    var maxDistanceSq = radius * radius;
    var distances = new Array(maxDistanceSq + 1);
    for (var i = 0; i <= radius; ++i) {
        for (var j = 0; j <= radius; ++j) {
            var distanceSq = i * i + j * j;
            if (distanceSq > maxDistanceSq) {
                break;
            }
            var distance = distances[distanceSq];
            if (!distance) {
                distance = [];
                distances[distanceSq] = distance;
            }
            distance.push(((radius + i) * size + (radius + j)) * 4 + 3);
            if (i > 0) {
                distance.push(((radius - i) * size + (radius + j)) * 4 + 3);
            }
            if (j > 0) {
                distance.push(((radius + i) * size + (radius - j)) * 4 + 3);
                if (i > 0) {
                    distance.push(((radius - i) * size + (radius - j)) * 4 + 3);
                }
            }
        }
    }
    var pixelIndex = [];
    for (var i = 0, ii = distances.length; i < ii; ++i) {
        if (distances[i]) {
            pixelIndex.push.apply(pixelIndex, distances[i]);
        }
    }
    circlePixelIndexArrayCache[radius] = pixelIndex;
    return pixelIndex;
}
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (ExecutorGroup);
//# sourceMappingURL=ExecutorGroup.js.map

/***/ }),

/***/ "./node_modules/ol/render/canvas/ImageBuilder.js":
/*!*******************************************************!*\
  !*** ./node_modules/ol/render/canvas/ImageBuilder.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _Builder_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Builder.js */ "./node_modules/ol/render/canvas/Builder.js");
/* harmony import */ var _Instruction_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Instruction.js */ "./node_modules/ol/render/canvas/Instruction.js");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
/**
 * @module ol/render/canvas/ImageBuilder
 */


var CanvasImageBuilder = /** @class */ (function (_super) {
    __extends(CanvasImageBuilder, _super);
    /**
     * @param {number} tolerance Tolerance.
     * @param {import("../../extent.js").Extent} maxExtent Maximum extent.
     * @param {number} resolution Resolution.
     * @param {number} pixelRatio Pixel ratio.
     */
    function CanvasImageBuilder(tolerance, maxExtent, resolution, pixelRatio) {
        var _this = _super.call(this, tolerance, maxExtent, resolution, pixelRatio) || this;
        /**
         * @private
         * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}
         */
        _this.hitDetectionImage_ = null;
        /**
         * @private
         * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}
         */
        _this.image_ = null;
        /**
         * @private
         * @type {number|undefined}
         */
        _this.imagePixelRatio_ = undefined;
        /**
         * @private
         * @type {number|undefined}
         */
        _this.anchorX_ = undefined;
        /**
         * @private
         * @type {number|undefined}
         */
        _this.anchorY_ = undefined;
        /**
         * @private
         * @type {number|undefined}
         */
        _this.height_ = undefined;
        /**
         * @private
         * @type {number|undefined}
         */
        _this.opacity_ = undefined;
        /**
         * @private
         * @type {number|undefined}
         */
        _this.originX_ = undefined;
        /**
         * @private
         * @type {number|undefined}
         */
        _this.originY_ = undefined;
        /**
         * @private
         * @type {boolean|undefined}
         */
        _this.rotateWithView_ = undefined;
        /**
         * @private
         * @type {number|undefined}
         */
        _this.rotation_ = undefined;
        /**
         * @private
         * @type {import("../../size.js").Size|undefined}
         */
        _this.scale_ = undefined;
        /**
         * @private
         * @type {number|undefined}
         */
        _this.width_ = undefined;
        /**
         * Data shared with a text builder for combined decluttering.
         * @private
         * @type {import("../canvas.js").DeclutterImageWithText}
         */
        _this.declutterImageWithText_ = undefined;
        return _this;
    }
    /**
     * @param {import("../../geom/Point.js").default|import("../Feature.js").default} pointGeometry Point geometry.
     * @param {import("../../Feature.js").FeatureLike} feature Feature.
     */
    CanvasImageBuilder.prototype.drawPoint = function (pointGeometry, feature) {
        if (!this.image_) {
            return;
        }
        this.beginGeometry(pointGeometry, feature);
        var flatCoordinates = pointGeometry.getFlatCoordinates();
        var stride = pointGeometry.getStride();
        var myBegin = this.coordinates.length;
        var myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);
        this.instructions.push([
            _Instruction_js__WEBPACK_IMPORTED_MODULE_0__.default.DRAW_IMAGE,
            myBegin,
            myEnd,
            this.image_,
            // Remaining arguments to DRAW_IMAGE are in alphabetical order
            this.anchorX_ * this.imagePixelRatio_,
            this.anchorY_ * this.imagePixelRatio_,
            Math.ceil(this.height_ * this.imagePixelRatio_),
            this.opacity_,
            this.originX_,
            this.originY_,
            this.rotateWithView_,
            this.rotation_,
            [
                (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,
                (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,
            ],
            Math.ceil(this.width_ * this.imagePixelRatio_),
            this.declutterImageWithText_,
        ]);
        this.hitDetectionInstructions.push([
            _Instruction_js__WEBPACK_IMPORTED_MODULE_0__.default.DRAW_IMAGE,
            myBegin,
            myEnd,
            this.hitDetectionImage_,
            // Remaining arguments to DRAW_IMAGE are in alphabetical order
            this.anchorX_,
            this.anchorY_,
            this.height_,
            this.opacity_,
            this.originX_,
            this.originY_,
            this.rotateWithView_,
            this.rotation_,
            this.scale_,
            this.width_,
            this.declutterImageWithText_,
        ]);
        this.endGeometry(feature);
    };
    /**
     * @param {import("../../geom/MultiPoint.js").default|import("../Feature.js").default} multiPointGeometry MultiPoint geometry.
     * @param {import("../../Feature.js").FeatureLike} feature Feature.
     */
    CanvasImageBuilder.prototype.drawMultiPoint = function (multiPointGeometry, feature) {
        if (!this.image_) {
            return;
        }
        this.beginGeometry(multiPointGeometry, feature);
        var flatCoordinates = multiPointGeometry.getFlatCoordinates();
        var stride = multiPointGeometry.getStride();
        var myBegin = this.coordinates.length;
        var myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);
        this.instructions.push([
            _Instruction_js__WEBPACK_IMPORTED_MODULE_0__.default.DRAW_IMAGE,
            myBegin,
            myEnd,
            this.image_,
            // Remaining arguments to DRAW_IMAGE are in alphabetical order
            this.anchorX_ * this.imagePixelRatio_,
            this.anchorY_ * this.imagePixelRatio_,
            Math.ceil(this.height_ * this.imagePixelRatio_),
            this.opacity_,
            this.originX_,
            this.originY_,
            this.rotateWithView_,
            this.rotation_,
            [
                (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,
                (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,
            ],
            Math.ceil(this.width_ * this.imagePixelRatio_),
            this.declutterImageWithText_,
        ]);
        this.hitDetectionInstructions.push([
            _Instruction_js__WEBPACK_IMPORTED_MODULE_0__.default.DRAW_IMAGE,
            myBegin,
            myEnd,
            this.hitDetectionImage_,
            // Remaining arguments to DRAW_IMAGE are in alphabetical order
            this.anchorX_,
            this.anchorY_,
            this.height_,
            this.opacity_,
            this.originX_,
            this.originY_,
            this.rotateWithView_,
            this.rotation_,
            this.scale_,
            this.width_,
            this.declutterImageWithText_,
        ]);
        this.endGeometry(feature);
    };
    /**
     * @return {import("../canvas.js").SerializableInstructions} the serializable instructions.
     */
    CanvasImageBuilder.prototype.finish = function () {
        this.reverseHitDetectionInstructions();
        // FIXME this doesn't really protect us against further calls to draw*Geometry
        this.anchorX_ = undefined;
        this.anchorY_ = undefined;
        this.hitDetectionImage_ = null;
        this.image_ = null;
        this.imagePixelRatio_ = undefined;
        this.height_ = undefined;
        this.scale_ = undefined;
        this.opacity_ = undefined;
        this.originX_ = undefined;
        this.originY_ = undefined;
        this.rotateWithView_ = undefined;
        this.rotation_ = undefined;
        this.width_ = undefined;
        return _super.prototype.finish.call(this);
    };
    /**
     * @param {import("../../style/Image.js").default} imageStyle Image style.
     * @param {Object=} opt_sharedData Shared data.
     */
    CanvasImageBuilder.prototype.setImageStyle = function (imageStyle, opt_sharedData) {
        var anchor = imageStyle.getAnchor();
        var size = imageStyle.getSize();
        var hitDetectionImage = imageStyle.getHitDetectionImage();
        var image = imageStyle.getImage(this.pixelRatio);
        var origin = imageStyle.getOrigin();
        this.imagePixelRatio_ = imageStyle.getPixelRatio(this.pixelRatio);
        this.anchorX_ = anchor[0];
        this.anchorY_ = anchor[1];
        this.hitDetectionImage_ = hitDetectionImage;
        this.image_ = image;
        this.height_ = size[1];
        this.opacity_ = imageStyle.getOpacity();
        this.originX_ = origin[0];
        this.originY_ = origin[1];
        this.rotateWithView_ = imageStyle.getRotateWithView();
        this.rotation_ = imageStyle.getRotation();
        this.scale_ = imageStyle.getScaleArray();
        this.width_ = size[0];
        this.declutterImageWithText_ = opt_sharedData;
    };
    return CanvasImageBuilder;
}(_Builder_js__WEBPACK_IMPORTED_MODULE_1__.default));
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (CanvasImageBuilder);
//# sourceMappingURL=ImageBuilder.js.map

/***/ }),

/***/ "./node_modules/ol/render/canvas/Immediate.js":
/*!****************************************************!*\
  !*** ./node_modules/ol/render/canvas/Immediate.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _geom_GeometryType_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../geom/GeometryType.js */ "./node_modules/ol/geom/GeometryType.js");
/* harmony import */ var _VectorContext_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../VectorContext.js */ "./node_modules/ol/render/VectorContext.js");
/* harmony import */ var _colorlike_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../colorlike.js */ "./node_modules/ol/colorlike.js");
/* harmony import */ var _transform_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../transform.js */ "./node_modules/ol/transform.js");
/* harmony import */ var _canvas_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../canvas.js */ "./node_modules/ol/render/canvas.js");
/* harmony import */ var _array_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../array.js */ "./node_modules/ol/array.js");
/* harmony import */ var _extent_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../extent.js */ "./node_modules/ol/extent.js");
/* harmony import */ var _geom_flat_transform_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../geom/flat/transform.js */ "./node_modules/ol/geom/flat/transform.js");
/* harmony import */ var _geom_SimpleGeometry_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../geom/SimpleGeometry.js */ "./node_modules/ol/geom/SimpleGeometry.js");
/**
 * @module ol/render/canvas/Immediate
 */
// FIXME test, especially polygons with holes and multipolygons
// FIXME need to handle large thick features (where pixel size matters)
// FIXME add offset and end to ol/geom/flat/transform~transform2D?
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();









/**
 * @classdesc
 * A concrete subclass of {@link module:ol/render/VectorContext} that implements
 * direct rendering of features and geometries to an HTML5 Canvas context.
 * Instances of this class are created internally by the library and
 * provided to application code as vectorContext member of the
 * {@link module:ol/render/Event~RenderEvent} object associated with postcompose, precompose and
 * render events emitted by layers and maps.
 */
var CanvasImmediateRenderer = /** @class */ (function (_super) {
    __extends(CanvasImmediateRenderer, _super);
    /**
     * @param {CanvasRenderingContext2D} context Context.
     * @param {number} pixelRatio Pixel ratio.
     * @param {import("../../extent.js").Extent} extent Extent.
     * @param {import("../../transform.js").Transform} transform Transform.
     * @param {number} viewRotation View rotation.
     * @param {number=} opt_squaredTolerance Optional squared tolerance for simplification.
     * @param {import("../../proj.js").TransformFunction=} opt_userTransform Transform from user to view projection.
     */
    function CanvasImmediateRenderer(context, pixelRatio, extent, transform, viewRotation, opt_squaredTolerance, opt_userTransform) {
        var _this = _super.call(this) || this;
        /**
         * @private
         * @type {CanvasRenderingContext2D}
         */
        _this.context_ = context;
        /**
         * @private
         * @type {number}
         */
        _this.pixelRatio_ = pixelRatio;
        /**
         * @private
         * @type {import("../../extent.js").Extent}
         */
        _this.extent_ = extent;
        /**
         * @private
         * @type {import("../../transform.js").Transform}
         */
        _this.transform_ = transform;
        /**
         * @private
         * @type {number}
         */
        _this.viewRotation_ = viewRotation;
        /**
         * @private
         * @type {number}
         */
        _this.squaredTolerance_ = opt_squaredTolerance;
        /**
         * @private
         * @type {import("../../proj.js").TransformFunction}
         */
        _this.userTransform_ = opt_userTransform;
        /**
         * @private
         * @type {?import("../canvas.js").FillState}
         */
        _this.contextFillState_ = null;
        /**
         * @private
         * @type {?import("../canvas.js").StrokeState}
         */
        _this.contextStrokeState_ = null;
        /**
         * @private
         * @type {?import("../canvas.js").TextState}
         */
        _this.contextTextState_ = null;
        /**
         * @private
         * @type {?import("../canvas.js").FillState}
         */
        _this.fillState_ = null;
        /**
         * @private
         * @type {?import("../canvas.js").StrokeState}
         */
        _this.strokeState_ = null;
        /**
         * @private
         * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}
         */
        _this.image_ = null;
        /**
         * @private
         * @type {number}
         */
        _this.imageAnchorX_ = 0;
        /**
         * @private
         * @type {number}
         */
        _this.imageAnchorY_ = 0;
        /**
         * @private
         * @type {number}
         */
        _this.imageHeight_ = 0;
        /**
         * @private
         * @type {number}
         */
        _this.imageOpacity_ = 0;
        /**
         * @private
         * @type {number}
         */
        _this.imageOriginX_ = 0;
        /**
         * @private
         * @type {number}
         */
        _this.imageOriginY_ = 0;
        /**
         * @private
         * @type {boolean}
         */
        _this.imageRotateWithView_ = false;
        /**
         * @private
         * @type {number}
         */
        _this.imageRotation_ = 0;
        /**
         * @private
         * @type {import("../../size.js").Size}
         */
        _this.imageScale_ = [0, 0];
        /**
         * @private
         * @type {number}
         */
        _this.imageWidth_ = 0;
        /**
         * @private
         * @type {string}
         */
        _this.text_ = '';
        /**
         * @private
         * @type {number}
         */
        _this.textOffsetX_ = 0;
        /**
         * @private
         * @type {number}
         */
        _this.textOffsetY_ = 0;
        /**
         * @private
         * @type {boolean}
         */
        _this.textRotateWithView_ = false;
        /**
         * @private
         * @type {number}
         */
        _this.textRotation_ = 0;
        /**
         * @private
         * @type {import("../../size.js").Size}
         */
        _this.textScale_ = [0, 0];
        /**
         * @private
         * @type {?import("../canvas.js").FillState}
         */
        _this.textFillState_ = null;
        /**
         * @private
         * @type {?import("../canvas.js").StrokeState}
         */
        _this.textStrokeState_ = null;
        /**
         * @private
         * @type {?import("../canvas.js").TextState}
         */
        _this.textState_ = null;
        /**
         * @private
         * @type {Array<number>}
         */
        _this.pixelCoordinates_ = [];
        /**
         * @private
         * @type {import("../../transform.js").Transform}
         */
        _this.tmpLocalTransform_ = (0,_transform_js__WEBPACK_IMPORTED_MODULE_0__.create)();
        return _this;
    }
    /**
     * @param {Array<number>} flatCoordinates Flat coordinates.
     * @param {number} offset Offset.
     * @param {number} end End.
     * @param {number} stride Stride.
     * @private
     */
    CanvasImmediateRenderer.prototype.drawImages_ = function (flatCoordinates, offset, end, stride) {
        if (!this.image_) {
            return;
        }
        var pixelCoordinates = (0,_geom_flat_transform_js__WEBPACK_IMPORTED_MODULE_1__.transform2D)(flatCoordinates, offset, end, 2, this.transform_, this.pixelCoordinates_);
        var context = this.context_;
        var localTransform = this.tmpLocalTransform_;
        var alpha = context.globalAlpha;
        if (this.imageOpacity_ != 1) {
            context.globalAlpha = alpha * this.imageOpacity_;
        }
        var rotation = this.imageRotation_;
        if (this.imageRotateWithView_) {
            rotation += this.viewRotation_;
        }
        for (var i = 0, ii = pixelCoordinates.length; i < ii; i += 2) {
            var x = pixelCoordinates[i] - this.imageAnchorX_;
            var y = pixelCoordinates[i + 1] - this.imageAnchorY_;
            if (rotation !== 0 ||
                this.imageScale_[0] != 1 ||
                this.imageScale_[1] != 1) {
                var centerX = x + this.imageAnchorX_;
                var centerY = y + this.imageAnchorY_;
                (0,_transform_js__WEBPACK_IMPORTED_MODULE_0__.compose)(localTransform, centerX, centerY, 1, 1, rotation, -centerX, -centerY);
                context.setTransform.apply(context, localTransform);
                context.translate(centerX, centerY);
                context.scale(this.imageScale_[0], this.imageScale_[1]);
                context.drawImage(this.image_, this.imageOriginX_, this.imageOriginY_, this.imageWidth_, this.imageHeight_, -this.imageAnchorX_, -this.imageAnchorY_, this.imageWidth_, this.imageHeight_);
                context.setTransform(1, 0, 0, 1, 0, 0);
            }
            else {
                context.drawImage(this.image_, this.imageOriginX_, this.imageOriginY_, this.imageWidth_, this.imageHeight_, x, y, this.imageWidth_, this.imageHeight_);
            }
        }
        if (this.imageOpacity_ != 1) {
            context.globalAlpha = alpha;
        }
    };
    /**
     * @param {Array<number>} flatCoordinates Flat coordinates.
     * @param {number} offset Offset.
     * @param {number} end End.
     * @param {number} stride Stride.
     * @private
     */
    CanvasImmediateRenderer.prototype.drawText_ = function (flatCoordinates, offset, end, stride) {
        if (!this.textState_ || this.text_ === '') {
            return;
        }
        if (this.textFillState_) {
            this.setContextFillState_(this.textFillState_);
        }
        if (this.textStrokeState_) {
            this.setContextStrokeState_(this.textStrokeState_);
        }
        this.setContextTextState_(this.textState_);
        var pixelCoordinates = (0,_geom_flat_transform_js__WEBPACK_IMPORTED_MODULE_1__.transform2D)(flatCoordinates, offset, end, stride, this.transform_, this.pixelCoordinates_);
        var context = this.context_;
        var rotation = this.textRotation_;
        if (this.textRotateWithView_) {
            rotation += this.viewRotation_;
        }
        for (; offset < end; offset += stride) {
            var x = pixelCoordinates[offset] + this.textOffsetX_;
            var y = pixelCoordinates[offset + 1] + this.textOffsetY_;
            if (rotation !== 0 ||
                this.textScale_[0] != 1 ||
                this.textScale_[1] != 1) {
                var localTransform = (0,_transform_js__WEBPACK_IMPORTED_MODULE_0__.compose)(this.tmpLocalTransform_, x, y, 1, 1, rotation, -x, -y);
                context.setTransform.apply(context, localTransform);
                context.translate(x, y);
                context.scale(this.textScale_[0], this.textScale_[1]);
                if (this.textStrokeState_) {
                    context.strokeText(this.text_, 0, 0);
                }
                if (this.textFillState_) {
                    context.fillText(this.text_, 0, 0);
                }
                context.setTransform(1, 0, 0, 1, 0, 0);
            }
            else {
                if (this.textStrokeState_) {
                    context.strokeText(this.text_, x, y);
                }
                if (this.textFillState_) {
                    context.fillText(this.text_, x, y);
                }
            }
        }
    };
    /**
     * @param {Array<number>} flatCoordinates Flat coordinates.
     * @param {number} offset Offset.
     * @param {number} end End.
     * @param {number} stride Stride.
     * @param {boolean} close Close.
     * @private
     * @return {number} end End.
     */
    CanvasImmediateRenderer.prototype.moveToLineTo_ = function (flatCoordinates, offset, end, stride, close) {
        var context = this.context_;
        var pixelCoordinates = (0,_geom_flat_transform_js__WEBPACK_IMPORTED_MODULE_1__.transform2D)(flatCoordinates, offset, end, stride, this.transform_, this.pixelCoordinates_);
        context.moveTo(pixelCoordinates[0], pixelCoordinates[1]);
        var length = pixelCoordinates.length;
        if (close) {
            length -= 2;
        }
        for (var i = 2; i < length; i += 2) {
            context.lineTo(pixelCoordinates[i], pixelCoordinates[i + 1]);
        }
        if (close) {
            context.closePath();
        }
        return end;
    };
    /**
     * @param {Array<number>} flatCoordinates Flat coordinates.
     * @param {number} offset Offset.
     * @param {Array<number>} ends Ends.
     * @param {number} stride Stride.
     * @private
     * @return {number} End.
     */
    CanvasImmediateRenderer.prototype.drawRings_ = function (flatCoordinates, offset, ends, stride) {
        for (var i = 0, ii = ends.length; i < ii; ++i) {
            offset = this.moveToLineTo_(flatCoordinates, offset, ends[i], stride, true);
        }
        return offset;
    };
    /**
     * Render a circle geometry into the canvas.  Rendering is immediate and uses
     * the current fill and stroke styles.
     *
     * @param {import("../../geom/Circle.js").default} geometry Circle geometry.
     * @api
     */
    CanvasImmediateRenderer.prototype.drawCircle = function (geometry) {
        if (!(0,_extent_js__WEBPACK_IMPORTED_MODULE_2__.intersects)(this.extent_, geometry.getExtent())) {
            return;
        }
        if (this.fillState_ || this.strokeState_) {
            if (this.fillState_) {
                this.setContextFillState_(this.fillState_);
            }
            if (this.strokeState_) {
                this.setContextStrokeState_(this.strokeState_);
            }
            var pixelCoordinates = (0,_geom_SimpleGeometry_js__WEBPACK_IMPORTED_MODULE_3__.transformGeom2D)(geometry, this.transform_, this.pixelCoordinates_);
            var dx = pixelCoordinates[2] - pixelCoordinates[0];
            var dy = pixelCoordinates[3] - pixelCoordinates[1];
            var radius = Math.sqrt(dx * dx + dy * dy);
            var context = this.context_;
            context.beginPath();
            context.arc(pixelCoordinates[0], pixelCoordinates[1], radius, 0, 2 * Math.PI);
            if (this.fillState_) {
                context.fill();
            }
            if (this.strokeState_) {
                context.stroke();
            }
        }
        if (this.text_ !== '') {
            this.drawText_(geometry.getCenter(), 0, 2, 2);
        }
    };
    /**
     * Set the rendering style.  Note that since this is an immediate rendering API,
     * any `zIndex` on the provided style will be ignored.
     *
     * @param {import("../../style/Style.js").default} style The rendering style.
     * @api
     */
    CanvasImmediateRenderer.prototype.setStyle = function (style) {
        this.setFillStrokeStyle(style.getFill(), style.getStroke());
        this.setImageStyle(style.getImage());
        this.setTextStyle(style.getText());
    };
    /**
     * @param {import("../../transform.js").Transform} transform Transform.
     */
    CanvasImmediateRenderer.prototype.setTransform = function (transform) {
        this.transform_ = transform;
    };
    /**
     * Render a geometry into the canvas.  Call
     * {@link module:ol/render/canvas/Immediate#setStyle} first to set the rendering style.
     *
     * @param {import("../../geom/Geometry.js").default|import("../Feature.js").default} geometry The geometry to render.
     * @api
     */
    CanvasImmediateRenderer.prototype.drawGeometry = function (geometry) {
        var type = geometry.getType();
        switch (type) {
            case _geom_GeometryType_js__WEBPACK_IMPORTED_MODULE_4__.default.POINT:
                this.drawPoint(
                /** @type {import("../../geom/Point.js").default} */ (geometry));
                break;
            case _geom_GeometryType_js__WEBPACK_IMPORTED_MODULE_4__.default.LINE_STRING:
                this.drawLineString(
                /** @type {import("../../geom/LineString.js").default} */ (geometry));
                break;
            case _geom_GeometryType_js__WEBPACK_IMPORTED_MODULE_4__.default.POLYGON:
                this.drawPolygon(
                /** @type {import("../../geom/Polygon.js").default} */ (geometry));
                break;
            case _geom_GeometryType_js__WEBPACK_IMPORTED_MODULE_4__.default.MULTI_POINT:
                this.drawMultiPoint(
                /** @type {import("../../geom/MultiPoint.js").default} */ (geometry));
                break;
            case _geom_GeometryType_js__WEBPACK_IMPORTED_MODULE_4__.default.MULTI_LINE_STRING:
                this.drawMultiLineString(
                /** @type {import("../../geom/MultiLineString.js").default} */ (geometry));
                break;
            case _geom_GeometryType_js__WEBPACK_IMPORTED_MODULE_4__.default.MULTI_POLYGON:
                this.drawMultiPolygon(
                /** @type {import("../../geom/MultiPolygon.js").default} */ (geometry));
                break;
            case _geom_GeometryType_js__WEBPACK_IMPORTED_MODULE_4__.default.GEOMETRY_COLLECTION:
                this.drawGeometryCollection(
                /** @type {import("../../geom/GeometryCollection.js").default} */ (geometry));
                break;
            case _geom_GeometryType_js__WEBPACK_IMPORTED_MODULE_4__.default.CIRCLE:
                this.drawCircle(
                /** @type {import("../../geom/Circle.js").default} */ (geometry));
                break;
            default:
        }
    };
    /**
     * Render a feature into the canvas.  Note that any `zIndex` on the provided
     * style will be ignored - features are rendered immediately in the order that
     * this method is called.  If you need `zIndex` support, you should be using an
     * {@link module:ol/layer/Vector~VectorLayer} instead.
     *
     * @param {import("../../Feature.js").default} feature Feature.
     * @param {import("../../style/Style.js").default} style Style.
     * @api
     */
    CanvasImmediateRenderer.prototype.drawFeature = function (feature, style) {
        var geometry = style.getGeometryFunction()(feature);
        if (!geometry || !(0,_extent_js__WEBPACK_IMPORTED_MODULE_2__.intersects)(this.extent_, geometry.getExtent())) {
            return;
        }
        this.setStyle(style);
        this.drawGeometry(geometry);
    };
    /**
     * Render a GeometryCollection to the canvas.  Rendering is immediate and
     * uses the current styles appropriate for each geometry in the collection.
     *
     * @param {import("../../geom/GeometryCollection.js").default} geometry Geometry collection.
     */
    CanvasImmediateRenderer.prototype.drawGeometryCollection = function (geometry) {
        var geometries = geometry.getGeometriesArray();
        for (var i = 0, ii = geometries.length; i < ii; ++i) {
            this.drawGeometry(geometries[i]);
        }
    };
    /**
     * Render a Point geometry into the canvas.  Rendering is immediate and uses
     * the current style.
     *
     * @param {import("../../geom/Point.js").default|import("../Feature.js").default} geometry Point geometry.
     */
    CanvasImmediateRenderer.prototype.drawPoint = function (geometry) {
        if (this.squaredTolerance_) {
            geometry = /** @type {import("../../geom/Point.js").default} */ (geometry.simplifyTransformed(this.squaredTolerance_, this.userTransform_));
        }
        var flatCoordinates = geometry.getFlatCoordinates();
        var stride = geometry.getStride();
        if (this.image_) {
            this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);
        }
        if (this.text_ !== '') {
            this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);
        }
    };
    /**
     * Render a MultiPoint geometry  into the canvas.  Rendering is immediate and
     * uses the current style.
     *
     * @param {import("../../geom/MultiPoint.js").default|import("../Feature.js").default} geometry MultiPoint geometry.
     */
    CanvasImmediateRenderer.prototype.drawMultiPoint = function (geometry) {
        if (this.squaredTolerance_) {
            geometry = /** @type {import("../../geom/MultiPoint.js").default} */ (geometry.simplifyTransformed(this.squaredTolerance_, this.userTransform_));
        }
        var flatCoordinates = geometry.getFlatCoordinates();
        var stride = geometry.getStride();
        if (this.image_) {
            this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);
        }
        if (this.text_ !== '') {
            this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);
        }
    };
    /**
     * Render a LineString into the canvas.  Rendering is immediate and uses
     * the current style.
     *
     * @param {import("../../geom/LineString.js").default|import("../Feature.js").default} geometry LineString geometry.
     */
    CanvasImmediateRenderer.prototype.drawLineString = function (geometry) {
        if (this.squaredTolerance_) {
            geometry = /** @type {import("../../geom/LineString.js").default} */ (geometry.simplifyTransformed(this.squaredTolerance_, this.userTransform_));
        }
        if (!(0,_extent_js__WEBPACK_IMPORTED_MODULE_2__.intersects)(this.extent_, geometry.getExtent())) {
            return;
        }
        if (this.strokeState_) {
            this.setContextStrokeState_(this.strokeState_);
            var context = this.context_;
            var flatCoordinates = geometry.getFlatCoordinates();
            context.beginPath();
            this.moveToLineTo_(flatCoordinates, 0, flatCoordinates.length, geometry.getStride(), false);
            context.stroke();
        }
        if (this.text_ !== '') {
            var flatMidpoint = geometry.getFlatMidpoint();
            this.drawText_(flatMidpoint, 0, 2, 2);
        }
    };
    /**
     * Render a MultiLineString geometry into the canvas.  Rendering is immediate
     * and uses the current style.
     *
     * @param {import("../../geom/MultiLineString.js").default|import("../Feature.js").default} geometry MultiLineString geometry.
     */
    CanvasImmediateRenderer.prototype.drawMultiLineString = function (geometry) {
        if (this.squaredTolerance_) {
            geometry = /** @type {import("../../geom/MultiLineString.js").default} */ (geometry.simplifyTransformed(this.squaredTolerance_, this.userTransform_));
        }
        var geometryExtent = geometry.getExtent();
        if (!(0,_extent_js__WEBPACK_IMPORTED_MODULE_2__.intersects)(this.extent_, geometryExtent)) {
            return;
        }
        if (this.strokeState_) {
            this.setContextStrokeState_(this.strokeState_);
            var context = this.context_;
            var flatCoordinates = geometry.getFlatCoordinates();
            var offset = 0;
            var ends = /** @type {Array<number>} */ (geometry.getEnds());
            var stride = geometry.getStride();
            context.beginPath();
            for (var i = 0, ii = ends.length; i < ii; ++i) {
                offset = this.moveToLineTo_(flatCoordinates, offset, ends[i], stride, false);
            }
            context.stroke();
        }
        if (this.text_ !== '') {
            var flatMidpoints = geometry.getFlatMidpoints();
            this.drawText_(flatMidpoints, 0, flatMidpoints.length, 2);
        }
    };
    /**
     * Render a Polygon geometry into the canvas.  Rendering is immediate and uses
     * the current style.
     *
     * @param {import("../../geom/Polygon.js").default|import("../Feature.js").default} geometry Polygon geometry.
     */
    CanvasImmediateRenderer.prototype.drawPolygon = function (geometry) {
        if (this.squaredTolerance_) {
            geometry = /** @type {import("../../geom/Polygon.js").default} */ (geometry.simplifyTransformed(this.squaredTolerance_, this.userTransform_));
        }
        if (!(0,_extent_js__WEBPACK_IMPORTED_MODULE_2__.intersects)(this.extent_, geometry.getExtent())) {
            return;
        }
        if (this.strokeState_ || this.fillState_) {
            if (this.fillState_) {
                this.setContextFillState_(this.fillState_);
            }
            if (this.strokeState_) {
                this.setContextStrokeState_(this.strokeState_);
            }
            var context = this.context_;
            context.beginPath();
            this.drawRings_(geometry.getOrientedFlatCoordinates(), 0, 
            /** @type {Array<number>} */ (geometry.getEnds()), geometry.getStride());
            if (this.fillState_) {
                context.fill();
            }
            if (this.strokeState_) {
                context.stroke();
            }
        }
        if (this.text_ !== '') {
            var flatInteriorPoint = geometry.getFlatInteriorPoint();
            this.drawText_(flatInteriorPoint, 0, 2, 2);
        }
    };
    /**
     * Render MultiPolygon geometry into the canvas.  Rendering is immediate and
     * uses the current style.
     * @param {import("../../geom/MultiPolygon.js").default} geometry MultiPolygon geometry.
     */
    CanvasImmediateRenderer.prototype.drawMultiPolygon = function (geometry) {
        if (this.squaredTolerance_) {
            geometry = /** @type {import("../../geom/MultiPolygon.js").default} */ (geometry.simplifyTransformed(this.squaredTolerance_, this.userTransform_));
        }
        if (!(0,_extent_js__WEBPACK_IMPORTED_MODULE_2__.intersects)(this.extent_, geometry.getExtent())) {
            return;
        }
        if (this.strokeState_ || this.fillState_) {
            if (this.fillState_) {
                this.setContextFillState_(this.fillState_);
            }
            if (this.strokeState_) {
                this.setContextStrokeState_(this.strokeState_);
            }
            var context = this.context_;
            var flatCoordinates = geometry.getOrientedFlatCoordinates();
            var offset = 0;
            var endss = geometry.getEndss();
            var stride = geometry.getStride();
            context.beginPath();
            for (var i = 0, ii = endss.length; i < ii; ++i) {
                var ends = endss[i];
                offset = this.drawRings_(flatCoordinates, offset, ends, stride);
            }
            if (this.fillState_) {
                context.fill();
            }
            if (this.strokeState_) {
                context.stroke();
            }
        }
        if (this.text_ !== '') {
            var flatInteriorPoints = geometry.getFlatInteriorPoints();
            this.drawText_(flatInteriorPoints, 0, flatInteriorPoints.length, 2);
        }
    };
    /**
     * @param {import("../canvas.js").FillState} fillState Fill state.
     * @private
     */
    CanvasImmediateRenderer.prototype.setContextFillState_ = function (fillState) {
        var context = this.context_;
        var contextFillState = this.contextFillState_;
        if (!contextFillState) {
            context.fillStyle = fillState.fillStyle;
            this.contextFillState_ = {
                fillStyle: fillState.fillStyle,
            };
        }
        else {
            if (contextFillState.fillStyle != fillState.fillStyle) {
                contextFillState.fillStyle = fillState.fillStyle;
                context.fillStyle = fillState.fillStyle;
            }
        }
    };
    /**
     * @param {import("../canvas.js").StrokeState} strokeState Stroke state.
     * @private
     */
    CanvasImmediateRenderer.prototype.setContextStrokeState_ = function (strokeState) {
        var context = this.context_;
        var contextStrokeState = this.contextStrokeState_;
        if (!contextStrokeState) {
            context.lineCap = strokeState.lineCap;
            if (context.setLineDash) {
                context.setLineDash(strokeState.lineDash);
                context.lineDashOffset = strokeState.lineDashOffset;
            }
            context.lineJoin = strokeState.lineJoin;
            context.lineWidth = strokeState.lineWidth;
            context.miterLimit = strokeState.miterLimit;
            context.strokeStyle = strokeState.strokeStyle;
            this.contextStrokeState_ = {
                lineCap: strokeState.lineCap,
                lineDash: strokeState.lineDash,
                lineDashOffset: strokeState.lineDashOffset,
                lineJoin: strokeState.lineJoin,
                lineWidth: strokeState.lineWidth,
                miterLimit: strokeState.miterLimit,
                strokeStyle: strokeState.strokeStyle,
            };
        }
        else {
            if (contextStrokeState.lineCap != strokeState.lineCap) {
                contextStrokeState.lineCap = strokeState.lineCap;
                context.lineCap = strokeState.lineCap;
            }
            if (context.setLineDash) {
                if (!(0,_array_js__WEBPACK_IMPORTED_MODULE_5__.equals)(contextStrokeState.lineDash, strokeState.lineDash)) {
                    context.setLineDash((contextStrokeState.lineDash = strokeState.lineDash));
                }
                if (contextStrokeState.lineDashOffset != strokeState.lineDashOffset) {
                    contextStrokeState.lineDashOffset = strokeState.lineDashOffset;
                    context.lineDashOffset = strokeState.lineDashOffset;
                }
            }
            if (contextStrokeState.lineJoin != strokeState.lineJoin) {
                contextStrokeState.lineJoin = strokeState.lineJoin;
                context.lineJoin = strokeState.lineJoin;
            }
            if (contextStrokeState.lineWidth != strokeState.lineWidth) {
                contextStrokeState.lineWidth = strokeState.lineWidth;
                context.lineWidth = strokeState.lineWidth;
            }
            if (contextStrokeState.miterLimit != strokeState.miterLimit) {
                contextStrokeState.miterLimit = strokeState.miterLimit;
                context.miterLimit = strokeState.miterLimit;
            }
            if (contextStrokeState.strokeStyle != strokeState.strokeStyle) {
                contextStrokeState.strokeStyle = strokeState.strokeStyle;
                context.strokeStyle = strokeState.strokeStyle;
            }
        }
    };
    /**
     * @param {import("../canvas.js").TextState} textState Text state.
     * @private
     */
    CanvasImmediateRenderer.prototype.setContextTextState_ = function (textState) {
        var context = this.context_;
        var contextTextState = this.contextTextState_;
        var textAlign = textState.textAlign
            ? textState.textAlign
            : _canvas_js__WEBPACK_IMPORTED_MODULE_6__.defaultTextAlign;
        if (!contextTextState) {
            context.font = textState.font;
            context.textAlign = /** @type {CanvasTextAlign} */ (textAlign);
            context.textBaseline = /** @type {CanvasTextBaseline} */ (textState.textBaseline);
            this.contextTextState_ = {
                font: textState.font,
                textAlign: textAlign,
                textBaseline: textState.textBaseline,
            };
        }
        else {
            if (contextTextState.font != textState.font) {
                contextTextState.font = textState.font;
                context.font = textState.font;
            }
            if (contextTextState.textAlign != textAlign) {
                contextTextState.textAlign = /** @type {CanvasTextAlign} */ (textAlign);
                context.textAlign = /** @type {CanvasTextAlign} */ (textAlign);
            }
            if (contextTextState.textBaseline != textState.textBaseline) {
                contextTextState.textBaseline = /** @type {CanvasTextBaseline} */ (textState.textBaseline);
                context.textBaseline = /** @type {CanvasTextBaseline} */ (textState.textBaseline);
            }
        }
    };
    /**
     * Set the fill and stroke style for subsequent draw operations.  To clear
     * either fill or stroke styles, pass null for the appropriate parameter.
     *
     * @param {import("../../style/Fill.js").default} fillStyle Fill style.
     * @param {import("../../style/Stroke.js").default} strokeStyle Stroke style.
     */
    CanvasImmediateRenderer.prototype.setFillStrokeStyle = function (fillStyle, strokeStyle) {
        if (!fillStyle) {
            this.fillState_ = null;
        }
        else {
            var fillStyleColor = fillStyle.getColor();
            this.fillState_ = {
                fillStyle: (0,_colorlike_js__WEBPACK_IMPORTED_MODULE_7__.asColorLike)(fillStyleColor ? fillStyleColor : _canvas_js__WEBPACK_IMPORTED_MODULE_6__.defaultFillStyle),
            };
        }
        if (!strokeStyle) {
            this.strokeState_ = null;
        }
        else {
            var strokeStyleColor = strokeStyle.getColor();
            var strokeStyleLineCap = strokeStyle.getLineCap();
            var strokeStyleLineDash = strokeStyle.getLineDash();
            var strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();
            var strokeStyleLineJoin = strokeStyle.getLineJoin();
            var strokeStyleWidth = strokeStyle.getWidth();
            var strokeStyleMiterLimit = strokeStyle.getMiterLimit();
            this.strokeState_ = {
                lineCap: strokeStyleLineCap !== undefined
                    ? strokeStyleLineCap
                    : _canvas_js__WEBPACK_IMPORTED_MODULE_6__.defaultLineCap,
                lineDash: strokeStyleLineDash ? strokeStyleLineDash : _canvas_js__WEBPACK_IMPORTED_MODULE_6__.defaultLineDash,
                lineDashOffset: strokeStyleLineDashOffset
                    ? strokeStyleLineDashOffset
                    : _canvas_js__WEBPACK_IMPORTED_MODULE_6__.defaultLineDashOffset,
                lineJoin: strokeStyleLineJoin !== undefined
                    ? strokeStyleLineJoin
                    : _canvas_js__WEBPACK_IMPORTED_MODULE_6__.defaultLineJoin,
                lineWidth: this.pixelRatio_ *
                    (strokeStyleWidth !== undefined
                        ? strokeStyleWidth
                        : _canvas_js__WEBPACK_IMPORTED_MODULE_6__.defaultLineWidth),
                miterLimit: strokeStyleMiterLimit !== undefined
                    ? strokeStyleMiterLimit
                    : _canvas_js__WEBPACK_IMPORTED_MODULE_6__.defaultMiterLimit,
                strokeStyle: (0,_colorlike_js__WEBPACK_IMPORTED_MODULE_7__.asColorLike)(strokeStyleColor ? strokeStyleColor : _canvas_js__WEBPACK_IMPORTED_MODULE_6__.defaultStrokeStyle),
            };
        }
    };
    /**
     * Set the image style for subsequent draw operations.  Pass null to remove
     * the image style.
     *
     * @param {import("../../style/Image.js").default} imageStyle Image style.
     */
    CanvasImmediateRenderer.prototype.setImageStyle = function (imageStyle) {
        if (!imageStyle) {
            this.image_ = null;
        }
        else {
            var imageSize = imageStyle.getSize();
            if (!imageSize) {
                this.image_ = null;
            }
            else {
                var imageAnchor = imageStyle.getAnchor();
                // FIXME pixel ratio
                var imageImage = imageStyle.getImage(1);
                var imageOrigin = imageStyle.getOrigin();
                var imageScale = imageStyle.getScaleArray();
                this.imageAnchorX_ = imageAnchor[0];
                this.imageAnchorY_ = imageAnchor[1];
                this.imageHeight_ = imageSize[1];
                this.image_ = imageImage;
                this.imageOpacity_ = imageStyle.getOpacity();
                this.imageOriginX_ = imageOrigin[0];
                this.imageOriginY_ = imageOrigin[1];
                this.imageRotateWithView_ = imageStyle.getRotateWithView();
                this.imageRotation_ = imageStyle.getRotation();
                this.imageScale_ = [
                    this.pixelRatio_ * imageScale[0],
                    this.pixelRatio_ * imageScale[1],
                ];
                this.imageWidth_ = imageSize[0];
            }
        }
    };
    /**
     * Set the text style for subsequent draw operations.  Pass null to
     * remove the text style.
     *
     * @param {import("../../style/Text.js").default} textStyle Text style.
     */
    CanvasImmediateRenderer.prototype.setTextStyle = function (textStyle) {
        if (!textStyle) {
            this.text_ = '';
        }
        else {
            var textFillStyle = textStyle.getFill();
            if (!textFillStyle) {
                this.textFillState_ = null;
            }
            else {
                var textFillStyleColor = textFillStyle.getColor();
                this.textFillState_ = {
                    fillStyle: (0,_colorlike_js__WEBPACK_IMPORTED_MODULE_7__.asColorLike)(textFillStyleColor ? textFillStyleColor : _canvas_js__WEBPACK_IMPORTED_MODULE_6__.defaultFillStyle),
                };
            }
            var textStrokeStyle = textStyle.getStroke();
            if (!textStrokeStyle) {
                this.textStrokeState_ = null;
            }
            else {
                var textStrokeStyleColor = textStrokeStyle.getColor();
                var textStrokeStyleLineCap = textStrokeStyle.getLineCap();
                var textStrokeStyleLineDash = textStrokeStyle.getLineDash();
                var textStrokeStyleLineDashOffset = textStrokeStyle.getLineDashOffset();
                var textStrokeStyleLineJoin = textStrokeStyle.getLineJoin();
                var textStrokeStyleWidth = textStrokeStyle.getWidth();
                var textStrokeStyleMiterLimit = textStrokeStyle.getMiterLimit();
                this.textStrokeState_ = {
                    lineCap: textStrokeStyleLineCap !== undefined
                        ? textStrokeStyleLineCap
                        : _canvas_js__WEBPACK_IMPORTED_MODULE_6__.defaultLineCap,
                    lineDash: textStrokeStyleLineDash
                        ? textStrokeStyleLineDash
                        : _canvas_js__WEBPACK_IMPORTED_MODULE_6__.defaultLineDash,
                    lineDashOffset: textStrokeStyleLineDashOffset
                        ? textStrokeStyleLineDashOffset
                        : _canvas_js__WEBPACK_IMPORTED_MODULE_6__.defaultLineDashOffset,
                    lineJoin: textStrokeStyleLineJoin !== undefined
                        ? textStrokeStyleLineJoin
                        : _canvas_js__WEBPACK_IMPORTED_MODULE_6__.defaultLineJoin,
                    lineWidth: textStrokeStyleWidth !== undefined
                        ? textStrokeStyleWidth
                        : _canvas_js__WEBPACK_IMPORTED_MODULE_6__.defaultLineWidth,
                    miterLimit: textStrokeStyleMiterLimit !== undefined
                        ? textStrokeStyleMiterLimit
                        : _canvas_js__WEBPACK_IMPORTED_MODULE_6__.defaultMiterLimit,
                    strokeStyle: (0,_colorlike_js__WEBPACK_IMPORTED_MODULE_7__.asColorLike)(textStrokeStyleColor ? textStrokeStyleColor : _canvas_js__WEBPACK_IMPORTED_MODULE_6__.defaultStrokeStyle),
                };
            }
            var textFont = textStyle.getFont();
            var textOffsetX = textStyle.getOffsetX();
            var textOffsetY = textStyle.getOffsetY();
            var textRotateWithView = textStyle.getRotateWithView();
            var textRotation = textStyle.getRotation();
            var textScale = textStyle.getScaleArray();
            var textText = textStyle.getText();
            var textTextAlign = textStyle.getTextAlign();
            var textTextBaseline = textStyle.getTextBaseline();
            this.textState_ = {
                font: textFont !== undefined ? textFont : _canvas_js__WEBPACK_IMPORTED_MODULE_6__.defaultFont,
                textAlign: textTextAlign !== undefined ? textTextAlign : _canvas_js__WEBPACK_IMPORTED_MODULE_6__.defaultTextAlign,
                textBaseline: textTextBaseline !== undefined
                    ? textTextBaseline
                    : _canvas_js__WEBPACK_IMPORTED_MODULE_6__.defaultTextBaseline,
            };
            this.text_ = textText !== undefined ? textText : '';
            this.textOffsetX_ =
                textOffsetX !== undefined ? this.pixelRatio_ * textOffsetX : 0;
            this.textOffsetY_ =
                textOffsetY !== undefined ? this.pixelRatio_ * textOffsetY : 0;
            this.textRotateWithView_ =
                textRotateWithView !== undefined ? textRotateWithView : false;
            this.textRotation_ = textRotation !== undefined ? textRotation : 0;
            this.textScale_ = [
                this.pixelRatio_ * textScale[0],
                this.pixelRatio_ * textScale[1],
            ];
        }
    };
    return CanvasImmediateRenderer;
}(_VectorContext_js__WEBPACK_IMPORTED_MODULE_8__.default));
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (CanvasImmediateRenderer);
//# sourceMappingURL=Immediate.js.map

/***/ }),

/***/ "./node_modules/ol/render/canvas/Instruction.js":
/*!******************************************************!*\
  !*** ./node_modules/ol/render/canvas/Instruction.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "fillInstruction": () => (/* binding */ fillInstruction),
/* harmony export */   "strokeInstruction": () => (/* binding */ strokeInstruction),
/* harmony export */   "beginPathInstruction": () => (/* binding */ beginPathInstruction),
/* harmony export */   "closePathInstruction": () => (/* binding */ closePathInstruction),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/**
 * @module ol/render/canvas/Instruction
 */
/**
 * @enum {number}
 */
var Instruction = {
    BEGIN_GEOMETRY: 0,
    BEGIN_PATH: 1,
    CIRCLE: 2,
    CLOSE_PATH: 3,
    CUSTOM: 4,
    DRAW_CHARS: 5,
    DRAW_IMAGE: 6,
    END_GEOMETRY: 7,
    FILL: 8,
    MOVE_TO_LINE_TO: 9,
    SET_FILL_STYLE: 10,
    SET_STROKE_STYLE: 11,
    STROKE: 12,
};
/**
 * @type {Array<Instruction>}
 */
var fillInstruction = [Instruction.FILL];
/**
 * @type {Array<Instruction>}
 */
var strokeInstruction = [Instruction.STROKE];
/**
 * @type {Array<Instruction>}
 */
var beginPathInstruction = [Instruction.BEGIN_PATH];
/**
 * @type {Array<Instruction>}
 */
var closePathInstruction = [Instruction.CLOSE_PATH];
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Instruction);
//# sourceMappingURL=Instruction.js.map

/***/ }),

/***/ "./node_modules/ol/render/canvas/LineStringBuilder.js":
/*!************************************************************!*\
  !*** ./node_modules/ol/render/canvas/LineStringBuilder.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _Builder_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Builder.js */ "./node_modules/ol/render/canvas/Builder.js");
/* harmony import */ var _Instruction_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Instruction.js */ "./node_modules/ol/render/canvas/Instruction.js");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
/**
 * @module ol/render/canvas/LineStringBuilder
 */


var CanvasLineStringBuilder = /** @class */ (function (_super) {
    __extends(CanvasLineStringBuilder, _super);
    /**
     * @param {number} tolerance Tolerance.
     * @param {import("../../extent.js").Extent} maxExtent Maximum extent.
     * @param {number} resolution Resolution.
     * @param {number} pixelRatio Pixel ratio.
     */
    function CanvasLineStringBuilder(tolerance, maxExtent, resolution, pixelRatio) {
        return _super.call(this, tolerance, maxExtent, resolution, pixelRatio) || this;
    }
    /**
     * @param {Array<number>} flatCoordinates Flat coordinates.
     * @param {number} offset Offset.
     * @param {number} end End.
     * @param {number} stride Stride.
     * @private
     * @return {number} end.
     */
    CanvasLineStringBuilder.prototype.drawFlatCoordinates_ = function (flatCoordinates, offset, end, stride) {
        var myBegin = this.coordinates.length;
        var myEnd = this.appendFlatLineCoordinates(flatCoordinates, offset, end, stride, false, false);
        var moveToLineToInstruction = [
            _Instruction_js__WEBPACK_IMPORTED_MODULE_0__.default.MOVE_TO_LINE_TO,
            myBegin,
            myEnd,
        ];
        this.instructions.push(moveToLineToInstruction);
        this.hitDetectionInstructions.push(moveToLineToInstruction);
        return end;
    };
    /**
     * @param {import("../../geom/LineString.js").default|import("../Feature.js").default} lineStringGeometry Line string geometry.
     * @param {import("../../Feature.js").FeatureLike} feature Feature.
     */
    CanvasLineStringBuilder.prototype.drawLineString = function (lineStringGeometry, feature) {
        var state = this.state;
        var strokeStyle = state.strokeStyle;
        var lineWidth = state.lineWidth;
        if (strokeStyle === undefined || lineWidth === undefined) {
            return;
        }
        this.updateStrokeStyle(state, this.applyStroke);
        this.beginGeometry(lineStringGeometry, feature);
        this.hitDetectionInstructions.push([
            _Instruction_js__WEBPACK_IMPORTED_MODULE_0__.default.SET_STROKE_STYLE,
            state.strokeStyle,
            state.lineWidth,
            state.lineCap,
            state.lineJoin,
            state.miterLimit,
            state.lineDash,
            state.lineDashOffset,
        ], _Instruction_js__WEBPACK_IMPORTED_MODULE_0__.beginPathInstruction);
        var flatCoordinates = lineStringGeometry.getFlatCoordinates();
        var stride = lineStringGeometry.getStride();
        this.drawFlatCoordinates_(flatCoordinates, 0, flatCoordinates.length, stride);
        this.hitDetectionInstructions.push(_Instruction_js__WEBPACK_IMPORTED_MODULE_0__.strokeInstruction);
        this.endGeometry(feature);
    };
    /**
     * @param {import("../../geom/MultiLineString.js").default|import("../Feature.js").default} multiLineStringGeometry MultiLineString geometry.
     * @param {import("../../Feature.js").FeatureLike} feature Feature.
     */
    CanvasLineStringBuilder.prototype.drawMultiLineString = function (multiLineStringGeometry, feature) {
        var state = this.state;
        var strokeStyle = state.strokeStyle;
        var lineWidth = state.lineWidth;
        if (strokeStyle === undefined || lineWidth === undefined) {
            return;
        }
        this.updateStrokeStyle(state, this.applyStroke);
        this.beginGeometry(multiLineStringGeometry, feature);
        this.hitDetectionInstructions.push([
            _Instruction_js__WEBPACK_IMPORTED_MODULE_0__.default.SET_STROKE_STYLE,
            state.strokeStyle,
            state.lineWidth,
            state.lineCap,
            state.lineJoin,
            state.miterLimit,
            state.lineDash,
            state.lineDashOffset,
        ], _Instruction_js__WEBPACK_IMPORTED_MODULE_0__.beginPathInstruction);
        var ends = multiLineStringGeometry.getEnds();
        var flatCoordinates = multiLineStringGeometry.getFlatCoordinates();
        var stride = multiLineStringGeometry.getStride();
        var offset = 0;
        for (var i = 0, ii = ends.length; i < ii; ++i) {
            offset = this.drawFlatCoordinates_(flatCoordinates, offset, 
            /** @type {number} */ (ends[i]), stride);
        }
        this.hitDetectionInstructions.push(_Instruction_js__WEBPACK_IMPORTED_MODULE_0__.strokeInstruction);
        this.endGeometry(feature);
    };
    /**
     * @return {import("../canvas.js").SerializableInstructions} the serializable instructions.
     */
    CanvasLineStringBuilder.prototype.finish = function () {
        var state = this.state;
        if (state.lastStroke != undefined &&
            state.lastStroke != this.coordinates.length) {
            this.instructions.push(_Instruction_js__WEBPACK_IMPORTED_MODULE_0__.strokeInstruction);
        }
        this.reverseHitDetectionInstructions();
        this.state = null;
        return _super.prototype.finish.call(this);
    };
    /**
     * @param {import("../canvas.js").FillStrokeState} state State.
     */
    CanvasLineStringBuilder.prototype.applyStroke = function (state) {
        if (state.lastStroke != undefined &&
            state.lastStroke != this.coordinates.length) {
            this.instructions.push(_Instruction_js__WEBPACK_IMPORTED_MODULE_0__.strokeInstruction);
            state.lastStroke = this.coordinates.length;
        }
        state.lastStroke = 0;
        _super.prototype.applyStroke.call(this, state);
        this.instructions.push(_Instruction_js__WEBPACK_IMPORTED_MODULE_0__.beginPathInstruction);
    };
    return CanvasLineStringBuilder;
}(_Builder_js__WEBPACK_IMPORTED_MODULE_1__.default));
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (CanvasLineStringBuilder);
//# sourceMappingURL=LineStringBuilder.js.map

/***/ }),

/***/ "./node_modules/ol/render/canvas/PolygonBuilder.js":
/*!*********************************************************!*\
  !*** ./node_modules/ol/render/canvas/PolygonBuilder.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _Builder_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Builder.js */ "./node_modules/ol/render/canvas/Builder.js");
/* harmony import */ var _Instruction_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Instruction.js */ "./node_modules/ol/render/canvas/Instruction.js");
/* harmony import */ var _canvas_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../canvas.js */ "./node_modules/ol/render/canvas.js");
/* harmony import */ var _geom_flat_simplify_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../geom/flat/simplify.js */ "./node_modules/ol/geom/flat/simplify.js");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
/**
 * @module ol/render/canvas/PolygonBuilder
 */




var CanvasPolygonBuilder = /** @class */ (function (_super) {
    __extends(CanvasPolygonBuilder, _super);
    /**
     * @param {number} tolerance Tolerance.
     * @param {import("../../extent.js").Extent} maxExtent Maximum extent.
     * @param {number} resolution Resolution.
     * @param {number} pixelRatio Pixel ratio.
     */
    function CanvasPolygonBuilder(tolerance, maxExtent, resolution, pixelRatio) {
        return _super.call(this, tolerance, maxExtent, resolution, pixelRatio) || this;
    }
    /**
     * @param {Array<number>} flatCoordinates Flat coordinates.
     * @param {number} offset Offset.
     * @param {Array<number>} ends Ends.
     * @param {number} stride Stride.
     * @private
     * @return {number} End.
     */
    CanvasPolygonBuilder.prototype.drawFlatCoordinatess_ = function (flatCoordinates, offset, ends, stride) {
        var state = this.state;
        var fill = state.fillStyle !== undefined;
        var stroke = state.strokeStyle !== undefined;
        var numEnds = ends.length;
        this.instructions.push(_Instruction_js__WEBPACK_IMPORTED_MODULE_0__.beginPathInstruction);
        this.hitDetectionInstructions.push(_Instruction_js__WEBPACK_IMPORTED_MODULE_0__.beginPathInstruction);
        for (var i = 0; i < numEnds; ++i) {
            var end = ends[i];
            var myBegin = this.coordinates.length;
            var myEnd = this.appendFlatLineCoordinates(flatCoordinates, offset, end, stride, true, !stroke);
            var moveToLineToInstruction = [
                _Instruction_js__WEBPACK_IMPORTED_MODULE_0__.default.MOVE_TO_LINE_TO,
                myBegin,
                myEnd,
            ];
            this.instructions.push(moveToLineToInstruction);
            this.hitDetectionInstructions.push(moveToLineToInstruction);
            if (stroke) {
                // Performance optimization: only call closePath() when we have a stroke.
                // Otherwise the ring is closed already (see appendFlatLineCoordinates above).
                this.instructions.push(_Instruction_js__WEBPACK_IMPORTED_MODULE_0__.closePathInstruction);
                this.hitDetectionInstructions.push(_Instruction_js__WEBPACK_IMPORTED_MODULE_0__.closePathInstruction);
            }
            offset = end;
        }
        if (fill) {
            this.instructions.push(_Instruction_js__WEBPACK_IMPORTED_MODULE_0__.fillInstruction);
            this.hitDetectionInstructions.push(_Instruction_js__WEBPACK_IMPORTED_MODULE_0__.fillInstruction);
        }
        if (stroke) {
            this.instructions.push(_Instruction_js__WEBPACK_IMPORTED_MODULE_0__.strokeInstruction);
            this.hitDetectionInstructions.push(_Instruction_js__WEBPACK_IMPORTED_MODULE_0__.strokeInstruction);
        }
        return offset;
    };
    /**
     * @param {import("../../geom/Circle.js").default} circleGeometry Circle geometry.
     * @param {import("../../Feature.js").default} feature Feature.
     */
    CanvasPolygonBuilder.prototype.drawCircle = function (circleGeometry, feature) {
        var state = this.state;
        var fillStyle = state.fillStyle;
        var strokeStyle = state.strokeStyle;
        if (fillStyle === undefined && strokeStyle === undefined) {
            return;
        }
        this.setFillStrokeStyles_();
        this.beginGeometry(circleGeometry, feature);
        if (state.fillStyle !== undefined) {
            this.hitDetectionInstructions.push([
                _Instruction_js__WEBPACK_IMPORTED_MODULE_0__.default.SET_FILL_STYLE,
                _canvas_js__WEBPACK_IMPORTED_MODULE_1__.defaultFillStyle,
            ]);
        }
        if (state.strokeStyle !== undefined) {
            this.hitDetectionInstructions.push([
                _Instruction_js__WEBPACK_IMPORTED_MODULE_0__.default.SET_STROKE_STYLE,
                state.strokeStyle,
                state.lineWidth,
                state.lineCap,
                state.lineJoin,
                state.miterLimit,
                state.lineDash,
                state.lineDashOffset,
            ]);
        }
        var flatCoordinates = circleGeometry.getFlatCoordinates();
        var stride = circleGeometry.getStride();
        var myBegin = this.coordinates.length;
        this.appendFlatLineCoordinates(flatCoordinates, 0, flatCoordinates.length, stride, false, false);
        var circleInstruction = [_Instruction_js__WEBPACK_IMPORTED_MODULE_0__.default.CIRCLE, myBegin];
        this.instructions.push(_Instruction_js__WEBPACK_IMPORTED_MODULE_0__.beginPathInstruction, circleInstruction);
        this.hitDetectionInstructions.push(_Instruction_js__WEBPACK_IMPORTED_MODULE_0__.beginPathInstruction, circleInstruction);
        if (state.fillStyle !== undefined) {
            this.instructions.push(_Instruction_js__WEBPACK_IMPORTED_MODULE_0__.fillInstruction);
            this.hitDetectionInstructions.push(_Instruction_js__WEBPACK_IMPORTED_MODULE_0__.fillInstruction);
        }
        if (state.strokeStyle !== undefined) {
            this.instructions.push(_Instruction_js__WEBPACK_IMPORTED_MODULE_0__.strokeInstruction);
            this.hitDetectionInstructions.push(_Instruction_js__WEBPACK_IMPORTED_MODULE_0__.strokeInstruction);
        }
        this.endGeometry(feature);
    };
    /**
     * @param {import("../../geom/Polygon.js").default|import("../Feature.js").default} polygonGeometry Polygon geometry.
     * @param {import("../../Feature.js").FeatureLike} feature Feature.
     */
    CanvasPolygonBuilder.prototype.drawPolygon = function (polygonGeometry, feature) {
        var state = this.state;
        var fillStyle = state.fillStyle;
        var strokeStyle = state.strokeStyle;
        if (fillStyle === undefined && strokeStyle === undefined) {
            return;
        }
        this.setFillStrokeStyles_();
        this.beginGeometry(polygonGeometry, feature);
        if (state.fillStyle !== undefined) {
            this.hitDetectionInstructions.push([
                _Instruction_js__WEBPACK_IMPORTED_MODULE_0__.default.SET_FILL_STYLE,
                _canvas_js__WEBPACK_IMPORTED_MODULE_1__.defaultFillStyle,
            ]);
        }
        if (state.strokeStyle !== undefined) {
            this.hitDetectionInstructions.push([
                _Instruction_js__WEBPACK_IMPORTED_MODULE_0__.default.SET_STROKE_STYLE,
                state.strokeStyle,
                state.lineWidth,
                state.lineCap,
                state.lineJoin,
                state.miterLimit,
                state.lineDash,
                state.lineDashOffset,
            ]);
        }
        var ends = polygonGeometry.getEnds();
        var flatCoordinates = polygonGeometry.getOrientedFlatCoordinates();
        var stride = polygonGeometry.getStride();
        this.drawFlatCoordinatess_(flatCoordinates, 0, 
        /** @type {Array<number>} */ (ends), stride);
        this.endGeometry(feature);
    };
    /**
     * @param {import("../../geom/MultiPolygon.js").default} multiPolygonGeometry MultiPolygon geometry.
     * @param {import("../../Feature.js").FeatureLike} feature Feature.
     */
    CanvasPolygonBuilder.prototype.drawMultiPolygon = function (multiPolygonGeometry, feature) {
        var state = this.state;
        var fillStyle = state.fillStyle;
        var strokeStyle = state.strokeStyle;
        if (fillStyle === undefined && strokeStyle === undefined) {
            return;
        }
        this.setFillStrokeStyles_();
        this.beginGeometry(multiPolygonGeometry, feature);
        if (state.fillStyle !== undefined) {
            this.hitDetectionInstructions.push([
                _Instruction_js__WEBPACK_IMPORTED_MODULE_0__.default.SET_FILL_STYLE,
                _canvas_js__WEBPACK_IMPORTED_MODULE_1__.defaultFillStyle,
            ]);
        }
        if (state.strokeStyle !== undefined) {
            this.hitDetectionInstructions.push([
                _Instruction_js__WEBPACK_IMPORTED_MODULE_0__.default.SET_STROKE_STYLE,
                state.strokeStyle,
                state.lineWidth,
                state.lineCap,
                state.lineJoin,
                state.miterLimit,
                state.lineDash,
                state.lineDashOffset,
            ]);
        }
        var endss = multiPolygonGeometry.getEndss();
        var flatCoordinates = multiPolygonGeometry.getOrientedFlatCoordinates();
        var stride = multiPolygonGeometry.getStride();
        var offset = 0;
        for (var i = 0, ii = endss.length; i < ii; ++i) {
            offset = this.drawFlatCoordinatess_(flatCoordinates, offset, endss[i], stride);
        }
        this.endGeometry(feature);
    };
    /**
     * @return {import("../canvas.js").SerializableInstructions} the serializable instructions.
     */
    CanvasPolygonBuilder.prototype.finish = function () {
        this.reverseHitDetectionInstructions();
        this.state = null;
        // We want to preserve topology when drawing polygons.  Polygons are
        // simplified using quantization and point elimination. However, we might
        // have received a mix of quantized and non-quantized geometries, so ensure
        // that all are quantized by quantizing all coordinates in the batch.
        var tolerance = this.tolerance;
        if (tolerance !== 0) {
            var coordinates = this.coordinates;
            for (var i = 0, ii = coordinates.length; i < ii; ++i) {
                coordinates[i] = (0,_geom_flat_simplify_js__WEBPACK_IMPORTED_MODULE_2__.snap)(coordinates[i], tolerance);
            }
        }
        return _super.prototype.finish.call(this);
    };
    /**
     * @private
     */
    CanvasPolygonBuilder.prototype.setFillStrokeStyles_ = function () {
        var state = this.state;
        var fillStyle = state.fillStyle;
        if (fillStyle !== undefined) {
            this.updateFillStyle(state, this.createFill);
        }
        if (state.strokeStyle !== undefined) {
            this.updateStrokeStyle(state, this.applyStroke);
        }
    };
    return CanvasPolygonBuilder;
}(_Builder_js__WEBPACK_IMPORTED_MODULE_3__.default));
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (CanvasPolygonBuilder);
//# sourceMappingURL=PolygonBuilder.js.map

/***/ }),

/***/ "./node_modules/ol/render/canvas/TextBuilder.js":
/*!******************************************************!*\
  !*** ./node_modules/ol/render/canvas/TextBuilder.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "TEXT_ALIGN": () => (/* binding */ TEXT_ALIGN),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _Builder_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./Builder.js */ "./node_modules/ol/render/canvas/Builder.js");
/* harmony import */ var _Instruction_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./Instruction.js */ "./node_modules/ol/render/canvas/Instruction.js");
/* harmony import */ var _geom_GeometryType_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../geom/GeometryType.js */ "./node_modules/ol/geom/GeometryType.js");
/* harmony import */ var _style_TextPlacement_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../style/TextPlacement.js */ "./node_modules/ol/style/TextPlacement.js");
/* harmony import */ var _colorlike_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../colorlike.js */ "./node_modules/ol/colorlike.js");
/* harmony import */ var _canvas_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../canvas.js */ "./node_modules/ol/render/canvas.js");
/* harmony import */ var _util_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../util.js */ "./node_modules/ol/util.js");
/* harmony import */ var _extent_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../extent.js */ "./node_modules/ol/extent.js");
/* harmony import */ var _geom_flat_straightchunk_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../geom/flat/straightchunk.js */ "./node_modules/ol/geom/flat/straightchunk.js");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
/**
 * @module ol/render/canvas/TextBuilder
 */









/**
 * @const
 * @enum {number}
 */
var TEXT_ALIGN = {
    'left': 0,
    'end': 0,
    'center': 0.5,
    'right': 1,
    'start': 1,
    'top': 0,
    'middle': 0.5,
    'hanging': 0.2,
    'alphabetic': 0.8,
    'ideographic': 0.8,
    'bottom': 1,
};
var CanvasTextBuilder = /** @class */ (function (_super) {
    __extends(CanvasTextBuilder, _super);
    /**
     * @param {number} tolerance Tolerance.
     * @param {import("../../extent.js").Extent} maxExtent Maximum extent.
     * @param {number} resolution Resolution.
     * @param {number} pixelRatio Pixel ratio.
     */
    function CanvasTextBuilder(tolerance, maxExtent, resolution, pixelRatio) {
        var _this = _super.call(this, tolerance, maxExtent, resolution, pixelRatio) || this;
        /**
         * @private
         * @type {Array<HTMLCanvasElement>}
         */
        _this.labels_ = null;
        /**
         * @private
         * @type {string}
         */
        _this.text_ = '';
        /**
         * @private
         * @type {number}
         */
        _this.textOffsetX_ = 0;
        /**
         * @private
         * @type {number}
         */
        _this.textOffsetY_ = 0;
        /**
         * @private
         * @type {boolean|undefined}
         */
        _this.textRotateWithView_ = undefined;
        /**
         * @private
         * @type {number}
         */
        _this.textRotation_ = 0;
        /**
         * @private
         * @type {?import("../canvas.js").FillState}
         */
        _this.textFillState_ = null;
        /**
         * @type {!Object<string, import("../canvas.js").FillState>}
         */
        _this.fillStates = {};
        /**
         * @private
         * @type {?import("../canvas.js").StrokeState}
         */
        _this.textStrokeState_ = null;
        /**
         * @type {!Object<string, import("../canvas.js").StrokeState>}
         */
        _this.strokeStates = {};
        /**
         * @private
         * @type {import("../canvas.js").TextState}
         */
        _this.textState_ = /** @type {import("../canvas.js").TextState} */ ({});
        /**
         * @type {!Object<string, import("../canvas.js").TextState>}
         */
        _this.textStates = {};
        /**
         * @private
         * @type {string}
         */
        _this.textKey_ = '';
        /**
         * @private
         * @type {string}
         */
        _this.fillKey_ = '';
        /**
         * @private
         * @type {string}
         */
        _this.strokeKey_ = '';
        /**
         * Data shared with an image builder for combined decluttering.
         * @private
         * @type {import("../canvas.js").DeclutterImageWithText}
         */
        _this.declutterImageWithText_ = undefined;
        return _this;
    }
    /**
     * @return {import("../canvas.js").SerializableInstructions} the serializable instructions.
     */
    CanvasTextBuilder.prototype.finish = function () {
        var instructions = _super.prototype.finish.call(this);
        instructions.textStates = this.textStates;
        instructions.fillStates = this.fillStates;
        instructions.strokeStates = this.strokeStates;
        return instructions;
    };
    /**
     * @param {import("../../geom/SimpleGeometry.js").default|import("../Feature.js").default} geometry Geometry.
     * @param {import("../../Feature.js").FeatureLike} feature Feature.
     */
    CanvasTextBuilder.prototype.drawText = function (geometry, feature) {
        var fillState = this.textFillState_;
        var strokeState = this.textStrokeState_;
        var textState = this.textState_;
        if (this.text_ === '' || !textState || (!fillState && !strokeState)) {
            return;
        }
        var coordinates = this.coordinates;
        var begin = coordinates.length;
        var geometryType = geometry.getType();
        var flatCoordinates = null;
        var stride = geometry.getStride();
        if (textState.placement === _style_TextPlacement_js__WEBPACK_IMPORTED_MODULE_0__.default.LINE &&
            (geometryType == _geom_GeometryType_js__WEBPACK_IMPORTED_MODULE_1__.default.LINE_STRING ||
                geometryType == _geom_GeometryType_js__WEBPACK_IMPORTED_MODULE_1__.default.MULTI_LINE_STRING ||
                geometryType == _geom_GeometryType_js__WEBPACK_IMPORTED_MODULE_1__.default.POLYGON ||
                geometryType == _geom_GeometryType_js__WEBPACK_IMPORTED_MODULE_1__.default.MULTI_POLYGON)) {
            if (!(0,_extent_js__WEBPACK_IMPORTED_MODULE_2__.intersects)(this.getBufferedMaxExtent(), geometry.getExtent())) {
                return;
            }
            var ends = void 0;
            flatCoordinates = geometry.getFlatCoordinates();
            if (geometryType == _geom_GeometryType_js__WEBPACK_IMPORTED_MODULE_1__.default.LINE_STRING) {
                ends = [flatCoordinates.length];
            }
            else if (geometryType == _geom_GeometryType_js__WEBPACK_IMPORTED_MODULE_1__.default.MULTI_LINE_STRING) {
                ends = /** @type {import("../../geom/MultiLineString.js").default} */ (geometry).getEnds();
            }
            else if (geometryType == _geom_GeometryType_js__WEBPACK_IMPORTED_MODULE_1__.default.POLYGON) {
                ends = /** @type {import("../../geom/Polygon.js").default} */ (geometry)
                    .getEnds()
                    .slice(0, 1);
            }
            else if (geometryType == _geom_GeometryType_js__WEBPACK_IMPORTED_MODULE_1__.default.MULTI_POLYGON) {
                var endss = /** @type {import("../../geom/MultiPolygon.js").default} */ (geometry).getEndss();
                ends = [];
                for (var i = 0, ii = endss.length; i < ii; ++i) {
                    ends.push(endss[i][0]);
                }
            }
            this.beginGeometry(geometry, feature);
            var textAlign = textState.textAlign;
            var flatOffset = 0;
            var flatEnd = void 0;
            for (var o = 0, oo = ends.length; o < oo; ++o) {
                if (textAlign == undefined) {
                    var range = (0,_geom_flat_straightchunk_js__WEBPACK_IMPORTED_MODULE_3__.matchingChunk)(textState.maxAngle, flatCoordinates, flatOffset, ends[o], stride);
                    flatOffset = range[0];
                    flatEnd = range[1];
                }
                else {
                    flatEnd = ends[o];
                }
                for (var i = flatOffset; i < flatEnd; i += stride) {
                    coordinates.push(flatCoordinates[i], flatCoordinates[i + 1]);
                }
                var end = coordinates.length;
                flatOffset = ends[o];
                this.drawChars_(begin, end);
                begin = end;
            }
            this.endGeometry(feature);
        }
        else {
            var geometryWidths = textState.overflow ? null : [];
            switch (geometryType) {
                case _geom_GeometryType_js__WEBPACK_IMPORTED_MODULE_1__.default.POINT:
                case _geom_GeometryType_js__WEBPACK_IMPORTED_MODULE_1__.default.MULTI_POINT:
                    flatCoordinates = /** @type {import("../../geom/MultiPoint.js").default} */ (geometry).getFlatCoordinates();
                    break;
                case _geom_GeometryType_js__WEBPACK_IMPORTED_MODULE_1__.default.LINE_STRING:
                    flatCoordinates = /** @type {import("../../geom/LineString.js").default} */ (geometry).getFlatMidpoint();
                    break;
                case _geom_GeometryType_js__WEBPACK_IMPORTED_MODULE_1__.default.CIRCLE:
                    flatCoordinates = /** @type {import("../../geom/Circle.js").default} */ (geometry).getCenter();
                    break;
                case _geom_GeometryType_js__WEBPACK_IMPORTED_MODULE_1__.default.MULTI_LINE_STRING:
                    flatCoordinates = /** @type {import("../../geom/MultiLineString.js").default} */ (geometry).getFlatMidpoints();
                    stride = 2;
                    break;
                case _geom_GeometryType_js__WEBPACK_IMPORTED_MODULE_1__.default.POLYGON:
                    flatCoordinates = /** @type {import("../../geom/Polygon.js").default} */ (geometry).getFlatInteriorPoint();
                    if (!textState.overflow) {
                        geometryWidths.push(flatCoordinates[2] / this.resolution);
                    }
                    stride = 3;
                    break;
                case _geom_GeometryType_js__WEBPACK_IMPORTED_MODULE_1__.default.MULTI_POLYGON:
                    var interiorPoints = /** @type {import("../../geom/MultiPolygon.js").default} */ (geometry).getFlatInteriorPoints();
                    flatCoordinates = [];
                    for (var i = 0, ii = interiorPoints.length; i < ii; i += 3) {
                        if (!textState.overflow) {
                            geometryWidths.push(interiorPoints[i + 2] / this.resolution);
                        }
                        flatCoordinates.push(interiorPoints[i], interiorPoints[i + 1]);
                    }
                    if (flatCoordinates.length === 0) {
                        return;
                    }
                    stride = 2;
                    break;
                default:
            }
            var end = this.appendFlatPointCoordinates(flatCoordinates, stride);
            if (end === begin) {
                return;
            }
            this.saveTextStates_();
            if (textState.backgroundFill || textState.backgroundStroke) {
                this.setFillStrokeStyle(textState.backgroundFill, textState.backgroundStroke);
                if (textState.backgroundFill) {
                    this.updateFillStyle(this.state, this.createFill);
                    this.hitDetectionInstructions.push(this.createFill(this.state));
                }
                if (textState.backgroundStroke) {
                    this.updateStrokeStyle(this.state, this.applyStroke);
                    this.hitDetectionInstructions.push(this.createStroke(this.state));
                }
            }
            this.beginGeometry(geometry, feature);
            // adjust padding for negative scale
            var padding = textState.padding;
            if (padding != _canvas_js__WEBPACK_IMPORTED_MODULE_4__.defaultPadding &&
                (textState.scale[0] < 0 || textState.scale[1] < 0)) {
                var p0 = textState.padding[0];
                var p1 = textState.padding[1];
                var p2 = textState.padding[2];
                var p3 = textState.padding[3];
                if (textState.scale[0] < 0) {
                    p1 = -p1;
                    p3 = -p3;
                }
                if (textState.scale[1] < 0) {
                    p0 = -p0;
                    p2 = -p2;
                }
                padding = [p0, p1, p2, p3];
            }
            // The image is unknown at this stage so we pass null; it will be computed at render time.
            // For clarity, we pass NaN for offsetX, offsetY, width and height, which will be computed at
            // render time.
            var pixelRatio_1 = this.pixelRatio;
            this.instructions.push([
                _Instruction_js__WEBPACK_IMPORTED_MODULE_5__.default.DRAW_IMAGE,
                begin,
                end,
                null,
                NaN,
                NaN,
                NaN,
                1,
                0,
                0,
                this.textRotateWithView_,
                this.textRotation_,
                [1, 1],
                NaN,
                this.declutterImageWithText_,
                padding == _canvas_js__WEBPACK_IMPORTED_MODULE_4__.defaultPadding
                    ? _canvas_js__WEBPACK_IMPORTED_MODULE_4__.defaultPadding
                    : padding.map(function (p) {
                        return p * pixelRatio_1;
                    }),
                !!textState.backgroundFill,
                !!textState.backgroundStroke,
                this.text_,
                this.textKey_,
                this.strokeKey_,
                this.fillKey_,
                this.textOffsetX_,
                this.textOffsetY_,
                geometryWidths,
            ]);
            var scale = 1 / pixelRatio_1;
            this.hitDetectionInstructions.push([
                _Instruction_js__WEBPACK_IMPORTED_MODULE_5__.default.DRAW_IMAGE,
                begin,
                end,
                null,
                NaN,
                NaN,
                NaN,
                1,
                0,
                0,
                this.textRotateWithView_,
                this.textRotation_,
                [scale, scale],
                NaN,
                this.declutterImageWithText_,
                padding,
                !!textState.backgroundFill,
                !!textState.backgroundStroke,
                this.text_,
                this.textKey_,
                this.strokeKey_,
                this.fillKey_,
                this.textOffsetX_,
                this.textOffsetY_,
                geometryWidths,
            ]);
            this.endGeometry(feature);
        }
    };
    /**
     * @private
     */
    CanvasTextBuilder.prototype.saveTextStates_ = function () {
        var strokeState = this.textStrokeState_;
        var textState = this.textState_;
        var fillState = this.textFillState_;
        var strokeKey = this.strokeKey_;
        if (strokeState) {
            if (!(strokeKey in this.strokeStates)) {
                this.strokeStates[strokeKey] = {
                    strokeStyle: strokeState.strokeStyle,
                    lineCap: strokeState.lineCap,
                    lineDashOffset: strokeState.lineDashOffset,
                    lineWidth: strokeState.lineWidth,
                    lineJoin: strokeState.lineJoin,
                    miterLimit: strokeState.miterLimit,
                    lineDash: strokeState.lineDash,
                };
            }
        }
        var textKey = this.textKey_;
        if (!(textKey in this.textStates)) {
            this.textStates[textKey] = {
                font: textState.font,
                textAlign: textState.textAlign || _canvas_js__WEBPACK_IMPORTED_MODULE_4__.defaultTextAlign,
                textBaseline: textState.textBaseline || _canvas_js__WEBPACK_IMPORTED_MODULE_4__.defaultTextBaseline,
                scale: textState.scale,
            };
        }
        var fillKey = this.fillKey_;
        if (fillState) {
            if (!(fillKey in this.fillStates)) {
                this.fillStates[fillKey] = {
                    fillStyle: fillState.fillStyle,
                };
            }
        }
    };
    /**
     * @private
     * @param {number} begin Begin.
     * @param {number} end End.
     */
    CanvasTextBuilder.prototype.drawChars_ = function (begin, end) {
        var strokeState = this.textStrokeState_;
        var textState = this.textState_;
        var strokeKey = this.strokeKey_;
        var textKey = this.textKey_;
        var fillKey = this.fillKey_;
        this.saveTextStates_();
        var pixelRatio = this.pixelRatio;
        var baseline = TEXT_ALIGN[textState.textBaseline];
        var offsetY = this.textOffsetY_ * pixelRatio;
        var text = this.text_;
        var strokeWidth = strokeState
            ? (strokeState.lineWidth * Math.abs(textState.scale[0])) / 2
            : 0;
        this.instructions.push([
            _Instruction_js__WEBPACK_IMPORTED_MODULE_5__.default.DRAW_CHARS,
            begin,
            end,
            baseline,
            textState.overflow,
            fillKey,
            textState.maxAngle,
            pixelRatio,
            offsetY,
            strokeKey,
            strokeWidth * pixelRatio,
            text,
            textKey,
            1,
        ]);
        this.hitDetectionInstructions.push([
            _Instruction_js__WEBPACK_IMPORTED_MODULE_5__.default.DRAW_CHARS,
            begin,
            end,
            baseline,
            textState.overflow,
            fillKey,
            textState.maxAngle,
            1,
            offsetY,
            strokeKey,
            strokeWidth,
            text,
            textKey,
            1 / pixelRatio,
        ]);
    };
    /**
     * @param {import("../../style/Text.js").default} textStyle Text style.
     * @param {Object=} opt_sharedData Shared data.
     */
    CanvasTextBuilder.prototype.setTextStyle = function (textStyle, opt_sharedData) {
        var textState, fillState, strokeState;
        if (!textStyle) {
            this.text_ = '';
        }
        else {
            var textFillStyle = textStyle.getFill();
            if (!textFillStyle) {
                fillState = null;
                this.textFillState_ = fillState;
            }
            else {
                fillState = this.textFillState_;
                if (!fillState) {
                    fillState = /** @type {import("../canvas.js").FillState} */ ({});
                    this.textFillState_ = fillState;
                }
                fillState.fillStyle = (0,_colorlike_js__WEBPACK_IMPORTED_MODULE_6__.asColorLike)(textFillStyle.getColor() || _canvas_js__WEBPACK_IMPORTED_MODULE_4__.defaultFillStyle);
            }
            var textStrokeStyle = textStyle.getStroke();
            if (!textStrokeStyle) {
                strokeState = null;
                this.textStrokeState_ = strokeState;
            }
            else {
                strokeState = this.textStrokeState_;
                if (!strokeState) {
                    strokeState = /** @type {import("../canvas.js").StrokeState} */ ({});
                    this.textStrokeState_ = strokeState;
                }
                var lineDash = textStrokeStyle.getLineDash();
                var lineDashOffset = textStrokeStyle.getLineDashOffset();
                var lineWidth = textStrokeStyle.getWidth();
                var miterLimit = textStrokeStyle.getMiterLimit();
                strokeState.lineCap = textStrokeStyle.getLineCap() || _canvas_js__WEBPACK_IMPORTED_MODULE_4__.defaultLineCap;
                strokeState.lineDash = lineDash ? lineDash.slice() : _canvas_js__WEBPACK_IMPORTED_MODULE_4__.defaultLineDash;
                strokeState.lineDashOffset =
                    lineDashOffset === undefined ? _canvas_js__WEBPACK_IMPORTED_MODULE_4__.defaultLineDashOffset : lineDashOffset;
                strokeState.lineJoin = textStrokeStyle.getLineJoin() || _canvas_js__WEBPACK_IMPORTED_MODULE_4__.defaultLineJoin;
                strokeState.lineWidth =
                    lineWidth === undefined ? _canvas_js__WEBPACK_IMPORTED_MODULE_4__.defaultLineWidth : lineWidth;
                strokeState.miterLimit =
                    miterLimit === undefined ? _canvas_js__WEBPACK_IMPORTED_MODULE_4__.defaultMiterLimit : miterLimit;
                strokeState.strokeStyle = (0,_colorlike_js__WEBPACK_IMPORTED_MODULE_6__.asColorLike)(textStrokeStyle.getColor() || _canvas_js__WEBPACK_IMPORTED_MODULE_4__.defaultStrokeStyle);
            }
            textState = this.textState_;
            var font = textStyle.getFont() || _canvas_js__WEBPACK_IMPORTED_MODULE_4__.defaultFont;
            (0,_canvas_js__WEBPACK_IMPORTED_MODULE_4__.registerFont)(font);
            var textScale = textStyle.getScaleArray();
            textState.overflow = textStyle.getOverflow();
            textState.font = font;
            textState.maxAngle = textStyle.getMaxAngle();
            textState.placement = textStyle.getPlacement();
            textState.textAlign = textStyle.getTextAlign();
            textState.textBaseline =
                textStyle.getTextBaseline() || _canvas_js__WEBPACK_IMPORTED_MODULE_4__.defaultTextBaseline;
            textState.backgroundFill = textStyle.getBackgroundFill();
            textState.backgroundStroke = textStyle.getBackgroundStroke();
            textState.padding = textStyle.getPadding() || _canvas_js__WEBPACK_IMPORTED_MODULE_4__.defaultPadding;
            textState.scale = textScale === undefined ? [1, 1] : textScale;
            var textOffsetX = textStyle.getOffsetX();
            var textOffsetY = textStyle.getOffsetY();
            var textRotateWithView = textStyle.getRotateWithView();
            var textRotation = textStyle.getRotation();
            this.text_ = textStyle.getText() || '';
            this.textOffsetX_ = textOffsetX === undefined ? 0 : textOffsetX;
            this.textOffsetY_ = textOffsetY === undefined ? 0 : textOffsetY;
            this.textRotateWithView_ =
                textRotateWithView === undefined ? false : textRotateWithView;
            this.textRotation_ = textRotation === undefined ? 0 : textRotation;
            this.strokeKey_ = strokeState
                ? (typeof strokeState.strokeStyle == 'string'
                    ? strokeState.strokeStyle
                    : (0,_util_js__WEBPACK_IMPORTED_MODULE_7__.getUid)(strokeState.strokeStyle)) +
                    strokeState.lineCap +
                    strokeState.lineDashOffset +
                    '|' +
                    strokeState.lineWidth +
                    strokeState.lineJoin +
                    strokeState.miterLimit +
                    '[' +
                    strokeState.lineDash.join() +
                    ']'
                : '';
            this.textKey_ =
                textState.font +
                    textState.scale +
                    (textState.textAlign || '?') +
                    (textState.textBaseline || '?');
            this.fillKey_ = fillState
                ? typeof fillState.fillStyle == 'string'
                    ? fillState.fillStyle
                    : '|' + (0,_util_js__WEBPACK_IMPORTED_MODULE_7__.getUid)(fillState.fillStyle)
                : '';
        }
        this.declutterImageWithText_ = opt_sharedData;
    };
    return CanvasTextBuilder;
}(_Builder_js__WEBPACK_IMPORTED_MODULE_8__.default));
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (CanvasTextBuilder);
//# sourceMappingURL=TextBuilder.js.map

/***/ }),

/***/ "./node_modules/ol/render/canvas/hitdetect.js":
/*!****************************************************!*\
  !*** ./node_modules/ol/render/canvas/hitdetect.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createHitDetectionImageData": () => (/* binding */ createHitDetectionImageData),
/* harmony export */   "hitDetect": () => (/* binding */ hitDetect)
/* harmony export */ });
/* harmony import */ var _Immediate_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Immediate.js */ "./node_modules/ol/render/canvas/Immediate.js");
/* harmony import */ var _geom_GeometryType_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../geom/GeometryType.js */ "./node_modules/ol/geom/GeometryType.js");
/* harmony import */ var _style_IconAnchorUnits_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../style/IconAnchorUnits.js */ "./node_modules/ol/style/IconAnchorUnits.js");
/* harmony import */ var _style_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../style.js */ "./node_modules/ol/style/Icon.js");
/* harmony import */ var _dom_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../dom.js */ "./node_modules/ol/dom.js");
/* harmony import */ var _extent_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../extent.js */ "./node_modules/ol/extent.js");
/* harmony import */ var _array_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../array.js */ "./node_modules/ol/array.js");
/**
 * @module ol/render/canvas/hitdetect
 */







/**
 * @param {import("../../size.js").Size} size Canvas size in css pixels.
 * @param {Array<import("../../transform.js").Transform>} transforms Transforms
 * for rendering features to all worlds of the viewport, from coordinates to css
 * pixels.
 * @param {Array<import("../../Feature.js").FeatureLike>} features
 * Features to consider for hit detection.
 * @param {import("../../style/Style.js").StyleFunction|undefined} styleFunction
 * Layer style function.
 * @param {import("../../extent.js").Extent} extent Extent.
 * @param {number} resolution Resolution.
 * @param {number} rotation Rotation.
 * @return {ImageData} Hit detection image data.
 */
function createHitDetectionImageData(size, transforms, features, styleFunction, extent, resolution, rotation) {
    var width = size[0] / 2;
    var height = size[1] / 2;
    var context = (0,_dom_js__WEBPACK_IMPORTED_MODULE_0__.createCanvasContext2D)(width, height);
    context.imageSmoothingEnabled = false;
    var canvas = context.canvas;
    var renderer = new _Immediate_js__WEBPACK_IMPORTED_MODULE_1__.default(context, 0.5, extent, null, rotation);
    var featureCount = features.length;
    // Stretch hit detection index to use the whole available color range
    var indexFactor = Math.floor((256 * 256 * 256 - 1) / featureCount);
    var featuresByZIndex = {};
    for (var i = 1; i <= featureCount; ++i) {
        var feature = features[i - 1];
        var featureStyleFunction = feature.getStyleFunction() || styleFunction;
        if (!styleFunction) {
            continue;
        }
        var styles = featureStyleFunction(feature, resolution);
        if (!styles) {
            continue;
        }
        if (!Array.isArray(styles)) {
            styles = [styles];
        }
        var index = i * indexFactor;
        var color = '#' + ('000000' + index.toString(16)).slice(-6);
        for (var j = 0, jj = styles.length; j < jj; ++j) {
            var originalStyle = styles[j];
            var style = originalStyle.clone();
            var fill = style.getFill();
            if (fill) {
                fill.setColor(color);
            }
            var stroke = style.getStroke();
            if (stroke) {
                stroke.setColor(color);
            }
            style.setText(undefined);
            var image = originalStyle.getImage();
            if (image) {
                var imgSize = image.getImageSize();
                if (!imgSize) {
                    continue;
                }
                var canvas_1 = document.createElement('canvas');
                canvas_1.width = imgSize[0];
                canvas_1.height = imgSize[1];
                var imgContext = canvas_1.getContext('2d', { alpha: false });
                imgContext.fillStyle = color;
                var img = imgContext.canvas;
                imgContext.fillRect(0, 0, img.width, img.height);
                var width_1 = imgSize ? imgSize[0] : img.width;
                var height_1 = imgSize ? imgSize[1] : img.height;
                var iconContext = (0,_dom_js__WEBPACK_IMPORTED_MODULE_0__.createCanvasContext2D)(width_1, height_1);
                iconContext.drawImage(img, 0, 0);
                style.setImage(new _style_js__WEBPACK_IMPORTED_MODULE_2__.default({
                    img: img,
                    imgSize: imgSize,
                    anchor: image.getAnchor(),
                    anchorXUnits: _style_IconAnchorUnits_js__WEBPACK_IMPORTED_MODULE_3__.default.PIXELS,
                    anchorYUnits: _style_IconAnchorUnits_js__WEBPACK_IMPORTED_MODULE_3__.default.PIXELS,
                    offset: image.getOrigin(),
                    size: image.getSize(),
                    opacity: image.getOpacity(),
                    scale: image.getScale(),
                    rotation: image.getRotation(),
                    rotateWithView: image.getRotateWithView(),
                }));
            }
            var zIndex = Number(style.getZIndex());
            var byGeometryType = featuresByZIndex[zIndex];
            if (!byGeometryType) {
                byGeometryType = {};
                featuresByZIndex[zIndex] = byGeometryType;
                byGeometryType[_geom_GeometryType_js__WEBPACK_IMPORTED_MODULE_4__.default.POLYGON] = [];
                byGeometryType[_geom_GeometryType_js__WEBPACK_IMPORTED_MODULE_4__.default.CIRCLE] = [];
                byGeometryType[_geom_GeometryType_js__WEBPACK_IMPORTED_MODULE_4__.default.LINE_STRING] = [];
                byGeometryType[_geom_GeometryType_js__WEBPACK_IMPORTED_MODULE_4__.default.POINT] = [];
            }
            var geometry = style.getGeometryFunction()(feature);
            if (geometry && (0,_extent_js__WEBPACK_IMPORTED_MODULE_5__.intersects)(extent, geometry.getExtent())) {
                byGeometryType[geometry.getType().replace('Multi', '')].push(geometry, style);
            }
        }
    }
    var zIndexKeys = Object.keys(featuresByZIndex)
        .map(Number)
        .sort(_array_js__WEBPACK_IMPORTED_MODULE_6__.numberSafeCompareFunction);
    for (var i = 0, ii = zIndexKeys.length; i < ii; ++i) {
        var byGeometryType = featuresByZIndex[zIndexKeys[i]];
        for (var type in byGeometryType) {
            var geomAndStyle = byGeometryType[type];
            for (var j = 0, jj = geomAndStyle.length; j < jj; j += 2) {
                renderer.setStyle(geomAndStyle[j + 1]);
                for (var k = 0, kk = transforms.length; k < kk; ++k) {
                    renderer.setTransform(transforms[k]);
                    renderer.drawGeometry(geomAndStyle[j]);
                }
            }
        }
    }
    return context.getImageData(0, 0, canvas.width, canvas.height);
}
/**
 * @param {import("../../pixel").Pixel} pixel Pixel coordinate on the hit
 * detection canvas in css pixels.
 * @param {Array<import("../../Feature").FeatureLike>} features Features. Has to
 * match the `features` array that was passed to `createHitDetectionImageData()`.
 * @param {ImageData} imageData Hit detection image data generated by
 * `createHitDetectionImageData()`.
 * @return {Array<import("../../Feature").FeatureLike>} features Features.
 */
function hitDetect(pixel, features, imageData) {
    var resultFeatures = [];
    if (imageData) {
        var index = (Math.round(pixel[0] / 2) + Math.round(pixel[1] / 2) * imageData.width) *
            4;
        var r = imageData.data[index];
        var g = imageData.data[index + 1];
        var b = imageData.data[index + 2];
        var i = b + 256 * (g + 256 * r);
        var indexFactor = Math.floor((256 * 256 * 256 - 1) / features.length);
        if (i && i % indexFactor === 0) {
            resultFeatures.push(features[i / indexFactor - 1]);
        }
    }
    return resultFeatures;
}
//# sourceMappingURL=hitdetect.js.map

/***/ }),

/***/ "./node_modules/ol/renderer/Composite.js":
/*!***********************************************!*\
  !*** ./node_modules/ol/renderer/Composite.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _Map_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./Map.js */ "./node_modules/ol/renderer/Map.js");
/* harmony import */ var _ObjectEventType_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../ObjectEventType.js */ "./node_modules/ol/ObjectEventType.js");
/* harmony import */ var _render_Event_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../render/Event.js */ "./node_modules/ol/render/Event.js");
/* harmony import */ var _render_EventType_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../render/EventType.js */ "./node_modules/ol/render/EventType.js");
/* harmony import */ var _source_State_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../source/State.js */ "./node_modules/ol/source/State.js");
/* harmony import */ var _css_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../css.js */ "./node_modules/ol/css.js");
/* harmony import */ var _render_canvas_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../render/canvas.js */ "./node_modules/ol/render/canvas.js");
/* harmony import */ var _layer_Layer_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../layer/Layer.js */ "./node_modules/ol/layer/Layer.js");
/* harmony import */ var _events_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../events.js */ "./node_modules/ol/events.js");
/* harmony import */ var _dom_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../dom.js */ "./node_modules/ol/dom.js");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
/**
 * @module ol/renderer/Composite
 */










/**
 * @classdesc
 * Canvas map renderer.
 * @api
 */
var CompositeMapRenderer = /** @class */ (function (_super) {
    __extends(CompositeMapRenderer, _super);
    /**
     * @param {import("../PluggableMap.js").default} map Map.
     */
    function CompositeMapRenderer(map) {
        var _this = _super.call(this, map) || this;
        /**
         * @type {import("../events.js").EventsKey}
         */
        _this.fontChangeListenerKey_ = (0,_events_js__WEBPACK_IMPORTED_MODULE_0__.listen)(_render_canvas_js__WEBPACK_IMPORTED_MODULE_1__.checkedFonts, _ObjectEventType_js__WEBPACK_IMPORTED_MODULE_2__.default.PROPERTYCHANGE, map.redrawText.bind(map));
        /**
         * @private
         * @type {HTMLDivElement}
         */
        _this.element_ = document.createElement('div');
        var style = _this.element_.style;
        style.position = 'absolute';
        style.width = '100%';
        style.height = '100%';
        style.zIndex = '0';
        _this.element_.className = _css_js__WEBPACK_IMPORTED_MODULE_3__.CLASS_UNSELECTABLE + ' ol-layers';
        var container = map.getViewport();
        container.insertBefore(_this.element_, container.firstChild || null);
        /**
         * @private
         * @type {Array<HTMLElement>}
         */
        _this.children_ = [];
        /**
         * @private
         * @type {boolean}
         */
        _this.renderedVisible_ = true;
        return _this;
    }
    /**
     * @param {import("../render/EventType.js").default} type Event type.
     * @param {import("../PluggableMap.js").FrameState} frameState Frame state.
     */
    CompositeMapRenderer.prototype.dispatchRenderEvent = function (type, frameState) {
        var map = this.getMap();
        if (map.hasListener(type)) {
            var event_1 = new _render_Event_js__WEBPACK_IMPORTED_MODULE_4__.default(type, undefined, frameState);
            map.dispatchEvent(event_1);
        }
    };
    CompositeMapRenderer.prototype.disposeInternal = function () {
        (0,_events_js__WEBPACK_IMPORTED_MODULE_0__.unlistenByKey)(this.fontChangeListenerKey_);
        this.element_.parentNode.removeChild(this.element_);
        _super.prototype.disposeInternal.call(this);
    };
    /**
     * Render.
     * @param {?import("../PluggableMap.js").FrameState} frameState Frame state.
     */
    CompositeMapRenderer.prototype.renderFrame = function (frameState) {
        if (!frameState) {
            if (this.renderedVisible_) {
                this.element_.style.display = 'none';
                this.renderedVisible_ = false;
            }
            return;
        }
        this.calculateMatrices2D(frameState);
        this.dispatchRenderEvent(_render_EventType_js__WEBPACK_IMPORTED_MODULE_5__.default.PRECOMPOSE, frameState);
        var layerStatesArray = frameState.layerStatesArray.sort(function (a, b) {
            return a.zIndex - b.zIndex;
        });
        var viewState = frameState.viewState;
        this.children_.length = 0;
        /**
         * @type {Array<import("../layer/BaseVector.js").default>}
         */
        var declutterLayers = [];
        var previousElement = null;
        for (var i = 0, ii = layerStatesArray.length; i < ii; ++i) {
            var layerState = layerStatesArray[i];
            frameState.layerIndex = i;
            if (!(0,_layer_Layer_js__WEBPACK_IMPORTED_MODULE_6__.inView)(layerState, viewState) ||
                (layerState.sourceState != _source_State_js__WEBPACK_IMPORTED_MODULE_7__.default.READY &&
                    layerState.sourceState != _source_State_js__WEBPACK_IMPORTED_MODULE_7__.default.UNDEFINED)) {
                continue;
            }
            var layer = layerState.layer;
            var element = layer.render(frameState, previousElement);
            if (!element) {
                continue;
            }
            if (element !== previousElement) {
                this.children_.push(element);
                previousElement = element;
            }
            if ('getDeclutter' in layer) {
                declutterLayers.push(layer);
            }
        }
        for (var i = declutterLayers.length - 1; i >= 0; --i) {
            declutterLayers[i].renderDeclutter(frameState);
        }
        (0,_dom_js__WEBPACK_IMPORTED_MODULE_8__.replaceChildren)(this.element_, this.children_);
        this.dispatchRenderEvent(_render_EventType_js__WEBPACK_IMPORTED_MODULE_5__.default.POSTCOMPOSE, frameState);
        if (!this.renderedVisible_) {
            this.element_.style.display = '';
            this.renderedVisible_ = true;
        }
        this.scheduleExpireIconCache(frameState);
    };
    /**
     * @param {import("../pixel.js").Pixel} pixel Pixel.
     * @param {import("../PluggableMap.js").FrameState} frameState FrameState.
     * @param {number} hitTolerance Hit tolerance in pixels.
     * @param {function(import("../layer/Layer.js").default, (Uint8ClampedArray|Uint8Array)): T} callback Layer
     *     callback.
     * @param {function(import("../layer/Layer.js").default): boolean} layerFilter Layer filter
     *     function, only layers which are visible and for which this function
     *     returns `true` will be tested for features.  By default, all visible
     *     layers will be tested.
     * @return {T|undefined} Callback result.
     * @template T
     */
    CompositeMapRenderer.prototype.forEachLayerAtPixel = function (pixel, frameState, hitTolerance, callback, layerFilter) {
        var viewState = frameState.viewState;
        var layerStates = frameState.layerStatesArray;
        var numLayers = layerStates.length;
        for (var i = numLayers - 1; i >= 0; --i) {
            var layerState = layerStates[i];
            var layer = layerState.layer;
            if (layer.hasRenderer() &&
                (0,_layer_Layer_js__WEBPACK_IMPORTED_MODULE_6__.inView)(layerState, viewState) &&
                layerFilter(layer)) {
                var layerRenderer = layer.getRenderer();
                var data = layerRenderer.getDataAtPixel(pixel, frameState, hitTolerance);
                if (data) {
                    var result = callback(layer, data);
                    if (result) {
                        return result;
                    }
                }
            }
        }
        return undefined;
    };
    return CompositeMapRenderer;
}(_Map_js__WEBPACK_IMPORTED_MODULE_9__.default));
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (CompositeMapRenderer);
//# sourceMappingURL=Composite.js.map

/***/ }),

/***/ "./node_modules/ol/renderer/Layer.js":
/*!*******************************************!*\
  !*** ./node_modules/ol/renderer/Layer.js ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _events_EventType_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../events/EventType.js */ "./node_modules/ol/events/EventType.js");
/* harmony import */ var _ImageState_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../ImageState.js */ "./node_modules/ol/ImageState.js");
/* harmony import */ var _Observable_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../Observable.js */ "./node_modules/ol/Observable.js");
/* harmony import */ var _source_State_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../source/State.js */ "./node_modules/ol/source/State.js");
/* harmony import */ var _util_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util.js */ "./node_modules/ol/util.js");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
/**
 * @module ol/renderer/Layer
 */





/**
 * @template {import("../layer/Layer.js").default} LayerType
 */
var LayerRenderer = /** @class */ (function (_super) {
    __extends(LayerRenderer, _super);
    /**
     * @param {LayerType} layer Layer.
     */
    function LayerRenderer(layer) {
        var _this = _super.call(this) || this;
        /** @private */
        _this.boundHandleImageChange_ = _this.handleImageChange_.bind(_this);
        /**
         * @protected
         * @type {LayerType}
         */
        _this.layer_ = layer;
        /**
         * @type {import("../render/canvas/ExecutorGroup").default}
         */
        _this.declutterExecutorGroup = null;
        return _this;
    }
    /**
     * Asynchronous layer level hit detection.
     * @param {import("../pixel.js").Pixel} pixel Pixel.
     * @return {Promise<Array<import("../Feature").default>>} Promise that resolves with
     * an array of features.
     */
    LayerRenderer.prototype.getFeatures = function (pixel) {
        return (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.abstract)();
    };
    /**
     * Determine whether render should be called.
     * @abstract
     * @param {import("../PluggableMap.js").FrameState} frameState Frame state.
     * @return {boolean} Layer is ready to be rendered.
     */
    LayerRenderer.prototype.prepareFrame = function (frameState) {
        return (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.abstract)();
    };
    /**
     * Render the layer.
     * @abstract
     * @param {import("../PluggableMap.js").FrameState} frameState Frame state.
     * @param {HTMLElement} target Target that may be used to render content to.
     * @return {HTMLElement} The rendered element.
     */
    LayerRenderer.prototype.renderFrame = function (frameState, target) {
        return (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.abstract)();
    };
    /**
     * @param {Object<number, Object<string, import("../Tile.js").default>>} tiles Lookup of loaded tiles by zoom level.
     * @param {number} zoom Zoom level.
     * @param {import("../Tile.js").default} tile Tile.
     * @return {boolean|void} If `false`, the tile will not be considered loaded.
     */
    LayerRenderer.prototype.loadedTileCallback = function (tiles, zoom, tile) {
        if (!tiles[zoom]) {
            tiles[zoom] = {};
        }
        tiles[zoom][tile.tileCoord.toString()] = tile;
        return undefined;
    };
    /**
     * Create a function that adds loaded tiles to the tile lookup.
     * @param {import("../source/Tile.js").default} source Tile source.
     * @param {import("../proj/Projection.js").default} projection Projection of the tiles.
     * @param {Object<number, Object<string, import("../Tile.js").default>>} tiles Lookup of loaded tiles by zoom level.
     * @return {function(number, import("../TileRange.js").default):boolean} A function that can be
     *     called with a zoom level and a tile range to add loaded tiles to the lookup.
     * @protected
     */
    LayerRenderer.prototype.createLoadedTileFinder = function (source, projection, tiles) {
        return (
        /**
         * @param {number} zoom Zoom level.
         * @param {import("../TileRange.js").default} tileRange Tile range.
         * @return {boolean} The tile range is fully loaded.
         * @this {LayerRenderer}
         */
        function (zoom, tileRange) {
            var callback = this.loadedTileCallback.bind(this, tiles, zoom);
            return source.forEachLoadedTile(projection, zoom, tileRange, callback);
        }.bind(this));
    };
    /**
     * @abstract
     * @param {import("../coordinate.js").Coordinate} coordinate Coordinate.
     * @param {import("../PluggableMap.js").FrameState} frameState Frame state.
     * @param {number} hitTolerance Hit tolerance in pixels.
     * @param {import("./vector.js").FeatureCallback<T>} callback Feature callback.
     * @param {Array<import("./Map.js").HitMatch<T>>} matches The hit detected matches with tolerance.
     * @return {T|undefined} Callback result.
     * @template T
     */
    LayerRenderer.prototype.forEachFeatureAtCoordinate = function (coordinate, frameState, hitTolerance, callback, matches) {
        return undefined;
    };
    /**
     * @abstract
     * @param {import("../pixel.js").Pixel} pixel Pixel.
     * @param {import("../PluggableMap.js").FrameState} frameState FrameState.
     * @param {number} hitTolerance Hit tolerance in pixels.
     * @return {Uint8ClampedArray|Uint8Array} The result.  If there is no data at the pixel
     *    location, null will be returned.  If there is data, but pixel values cannot be
     *    returned, and empty array will be returned.
     */
    LayerRenderer.prototype.getDataAtPixel = function (pixel, frameState, hitTolerance) {
        return (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.abstract)();
    };
    /**
     * @return {LayerType} Layer.
     */
    LayerRenderer.prototype.getLayer = function () {
        return this.layer_;
    };
    /**
     * Perform action necessary to get the layer rendered after new fonts have loaded
     * @abstract
     */
    LayerRenderer.prototype.handleFontsChanged = function () { };
    /**
     * Handle changes in image state.
     * @param {import("../events/Event.js").default} event Image change event.
     * @private
     */
    LayerRenderer.prototype.handleImageChange_ = function (event) {
        var image = /** @type {import("../Image.js").default} */ (event.target);
        if (image.getState() === _ImageState_js__WEBPACK_IMPORTED_MODULE_1__.default.LOADED) {
            this.renderIfReadyAndVisible();
        }
    };
    /**
     * Load the image if not already loaded, and register the image change
     * listener if needed.
     * @param {import("../ImageBase.js").default} image Image.
     * @return {boolean} `true` if the image is already loaded, `false` otherwise.
     * @protected
     */
    LayerRenderer.prototype.loadImage = function (image) {
        var imageState = image.getState();
        if (imageState != _ImageState_js__WEBPACK_IMPORTED_MODULE_1__.default.LOADED && imageState != _ImageState_js__WEBPACK_IMPORTED_MODULE_1__.default.ERROR) {
            image.addEventListener(_events_EventType_js__WEBPACK_IMPORTED_MODULE_2__.default.CHANGE, this.boundHandleImageChange_);
        }
        if (imageState == _ImageState_js__WEBPACK_IMPORTED_MODULE_1__.default.IDLE) {
            image.load();
            imageState = image.getState();
        }
        return imageState == _ImageState_js__WEBPACK_IMPORTED_MODULE_1__.default.LOADED;
    };
    /**
     * @protected
     */
    LayerRenderer.prototype.renderIfReadyAndVisible = function () {
        var layer = this.getLayer();
        if (layer.getVisible() && layer.getSourceState() == _source_State_js__WEBPACK_IMPORTED_MODULE_3__.default.READY) {
            layer.changed();
        }
    };
    return LayerRenderer;
}(_Observable_js__WEBPACK_IMPORTED_MODULE_4__.default));
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (LayerRenderer);
//# sourceMappingURL=Layer.js.map

/***/ }),

/***/ "./node_modules/ol/renderer/Map.js":
/*!*****************************************!*\
  !*** ./node_modules/ol/renderer/Map.js ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _Disposable_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../Disposable.js */ "./node_modules/ol/Disposable.js");
/* harmony import */ var _functions_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../functions.js */ "./node_modules/ol/functions.js");
/* harmony import */ var _util_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util.js */ "./node_modules/ol/util.js");
/* harmony import */ var _transform_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../transform.js */ "./node_modules/ol/transform.js");
/* harmony import */ var _extent_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../extent.js */ "./node_modules/ol/extent.js");
/* harmony import */ var _style_IconImageCache_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../style/IconImageCache.js */ "./node_modules/ol/style/IconImageCache.js");
/* harmony import */ var _layer_Layer_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../layer/Layer.js */ "./node_modules/ol/layer/Layer.js");
/* harmony import */ var _coordinate_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../coordinate.js */ "./node_modules/ol/coordinate.js");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
/**
 * @module ol/renderer/Map
 */








/**
 * @typedef HitMatch
 * @property {import("../Feature.js").FeatureLike} feature
 * @property {import("../layer/Layer.js").default} layer
 * @property {import("../geom/SimpleGeometry.js").default} geometry
 * @property {number} distanceSq
 * @property {import("./vector.js").FeatureCallback<T>} callback
 * @template T
 */
/**
 * @abstract
 */
var MapRenderer = /** @class */ (function (_super) {
    __extends(MapRenderer, _super);
    /**
     * @param {import("../PluggableMap.js").default} map Map.
     */
    function MapRenderer(map) {
        var _this = _super.call(this) || this;
        /**
         * @private
         * @type {import("../PluggableMap.js").default}
         */
        _this.map_ = map;
        return _this;
    }
    /**
     * @abstract
     * @param {import("../render/EventType.js").default} type Event type.
     * @param {import("../PluggableMap.js").FrameState} frameState Frame state.
     */
    MapRenderer.prototype.dispatchRenderEvent = function (type, frameState) {
        (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.abstract)();
    };
    /**
     * @param {import("../PluggableMap.js").FrameState} frameState FrameState.
     * @protected
     */
    MapRenderer.prototype.calculateMatrices2D = function (frameState) {
        var viewState = frameState.viewState;
        var coordinateToPixelTransform = frameState.coordinateToPixelTransform;
        var pixelToCoordinateTransform = frameState.pixelToCoordinateTransform;
        (0,_transform_js__WEBPACK_IMPORTED_MODULE_1__.compose)(coordinateToPixelTransform, frameState.size[0] / 2, frameState.size[1] / 2, 1 / viewState.resolution, -1 / viewState.resolution, -viewState.rotation, -viewState.center[0], -viewState.center[1]);
        (0,_transform_js__WEBPACK_IMPORTED_MODULE_1__.makeInverse)(pixelToCoordinateTransform, coordinateToPixelTransform);
    };
    /**
     * @param {import("../coordinate.js").Coordinate} coordinate Coordinate.
     * @param {import("../PluggableMap.js").FrameState} frameState FrameState.
     * @param {number} hitTolerance Hit tolerance in pixels.
     * @param {boolean} checkWrapped Check for wrapped geometries.
     * @param {import("./vector.js").FeatureCallback<T>} callback Feature callback.
     * @param {S} thisArg Value to use as `this` when executing `callback`.
     * @param {function(this: U, import("../layer/Layer.js").default): boolean} layerFilter Layer filter
     *     function, only layers which are visible and for which this function
     *     returns `true` will be tested for features.  By default, all visible
     *     layers will be tested.
     * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.
     * @return {T|undefined} Callback result.
     * @template S,T,U
     */
    MapRenderer.prototype.forEachFeatureAtCoordinate = function (coordinate, frameState, hitTolerance, checkWrapped, callback, thisArg, layerFilter, thisArg2) {
        var result;
        var viewState = frameState.viewState;
        /**
         * @param {boolean} managed Managed layer.
         * @param {import("../Feature.js").FeatureLike} feature Feature.
         * @param {import("../layer/Layer.js").default} layer Layer.
         * @param {import("../geom/Geometry.js").default} geometry Geometry.
         * @return {T|undefined} Callback result.
         */
        function forEachFeatureAtCoordinate(managed, feature, layer, geometry) {
            return callback.call(thisArg, feature, managed ? layer : null, geometry);
        }
        var projection = viewState.projection;
        var translatedCoordinate = (0,_coordinate_js__WEBPACK_IMPORTED_MODULE_2__.wrapX)(coordinate.slice(), projection);
        var offsets = [[0, 0]];
        if (projection.canWrapX() && checkWrapped) {
            var projectionExtent = projection.getExtent();
            var worldWidth = (0,_extent_js__WEBPACK_IMPORTED_MODULE_3__.getWidth)(projectionExtent);
            offsets.push([-worldWidth, 0], [worldWidth, 0]);
        }
        var layerStates = frameState.layerStatesArray;
        var numLayers = layerStates.length;
        var matches = /** @type {Array<HitMatch<T>>} */ ([]);
        var tmpCoord = [];
        for (var i = 0; i < offsets.length; i++) {
            for (var j = numLayers - 1; j >= 0; --j) {
                var layerState = layerStates[j];
                var layer = layerState.layer;
                if (layer.hasRenderer() &&
                    (0,_layer_Layer_js__WEBPACK_IMPORTED_MODULE_4__.inView)(layerState, viewState) &&
                    layerFilter.call(thisArg2, layer)) {
                    var layerRenderer = layer.getRenderer();
                    var source = layer.getSource();
                    if (layerRenderer && source) {
                        var coordinates = source.getWrapX()
                            ? translatedCoordinate
                            : coordinate;
                        var callback_1 = forEachFeatureAtCoordinate.bind(null, layerState.managed);
                        tmpCoord[0] = coordinates[0] + offsets[i][0];
                        tmpCoord[1] = coordinates[1] + offsets[i][1];
                        result = layerRenderer.forEachFeatureAtCoordinate(tmpCoord, frameState, hitTolerance, callback_1, matches);
                    }
                    if (result) {
                        return result;
                    }
                }
            }
        }
        if (matches.length === 0) {
            return undefined;
        }
        var order = 1 / matches.length;
        matches.forEach(function (m, i) { return (m.distanceSq += i * order); });
        matches.sort(function (a, b) { return a.distanceSq - b.distanceSq; });
        matches.some(function (m) {
            return (result = m.callback(m.feature, m.layer, m.geometry));
        });
        return result;
    };
    /**
     * @abstract
     * @param {import("../pixel.js").Pixel} pixel Pixel.
     * @param {import("../PluggableMap.js").FrameState} frameState FrameState.
     * @param {number} hitTolerance Hit tolerance in pixels.
     * @param {function(import("../layer/Layer.js").default, (Uint8ClampedArray|Uint8Array)): T} callback Layer
     *     callback.
     * @param {function(import("../layer/Layer.js").default): boolean} layerFilter Layer filter
     *     function, only layers which are visible and for which this function
     *     returns `true` will be tested for features.  By default, all visible
     *     layers will be tested.
     * @return {T|undefined} Callback result.
     * @template T
     */
    MapRenderer.prototype.forEachLayerAtPixel = function (pixel, frameState, hitTolerance, callback, layerFilter) {
        return (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.abstract)();
    };
    /**
     * @param {import("../coordinate.js").Coordinate} coordinate Coordinate.
     * @param {import("../PluggableMap.js").FrameState} frameState FrameState.
     * @param {number} hitTolerance Hit tolerance in pixels.
     * @param {boolean} checkWrapped Check for wrapped geometries.
     * @param {function(this: U, import("../layer/Layer.js").default): boolean} layerFilter Layer filter
     *     function, only layers which are visible and for which this function
     *     returns `true` will be tested for features.  By default, all visible
     *     layers will be tested.
     * @param {U} thisArg Value to use as `this` when executing `layerFilter`.
     * @return {boolean} Is there a feature at the given coordinate?
     * @template U
     */
    MapRenderer.prototype.hasFeatureAtCoordinate = function (coordinate, frameState, hitTolerance, checkWrapped, layerFilter, thisArg) {
        var hasFeature = this.forEachFeatureAtCoordinate(coordinate, frameState, hitTolerance, checkWrapped, _functions_js__WEBPACK_IMPORTED_MODULE_5__.TRUE, this, layerFilter, thisArg);
        return hasFeature !== undefined;
    };
    /**
     * @return {import("../PluggableMap.js").default} Map.
     */
    MapRenderer.prototype.getMap = function () {
        return this.map_;
    };
    /**
     * Render.
     * @abstract
     * @param {?import("../PluggableMap.js").FrameState} frameState Frame state.
     */
    MapRenderer.prototype.renderFrame = function (frameState) {
        (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.abstract)();
    };
    /**
     * @param {import("../PluggableMap.js").FrameState} frameState Frame state.
     * @protected
     */
    MapRenderer.prototype.scheduleExpireIconCache = function (frameState) {
        if (_style_IconImageCache_js__WEBPACK_IMPORTED_MODULE_6__.shared.canExpireCache()) {
            frameState.postRenderFunctions.push(expireIconCache);
        }
    };
    return MapRenderer;
}(_Disposable_js__WEBPACK_IMPORTED_MODULE_7__.default));
/**
 * @param {import("../PluggableMap.js").default} map Map.
 * @param {import("../PluggableMap.js").FrameState} frameState Frame state.
 */
function expireIconCache(map, frameState) {
    _style_IconImageCache_js__WEBPACK_IMPORTED_MODULE_6__.shared.expire();
}
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (MapRenderer);
//# sourceMappingURL=Map.js.map

/***/ }),

/***/ "./node_modules/ol/renderer/canvas/Layer.js":
/*!**************************************************!*\
  !*** ./node_modules/ol/renderer/canvas/Layer.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _Layer_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../Layer.js */ "./node_modules/ol/renderer/Layer.js");
/* harmony import */ var _render_Event_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../render/Event.js */ "./node_modules/ol/render/Event.js");
/* harmony import */ var _render_EventType_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../render/EventType.js */ "./node_modules/ol/render/EventType.js");
/* harmony import */ var _transform_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../transform.js */ "./node_modules/ol/transform.js");
/* harmony import */ var _extent_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../extent.js */ "./node_modules/ol/extent.js");
/* harmony import */ var _dom_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../dom.js */ "./node_modules/ol/dom.js");
/* harmony import */ var _render_canvas_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../render/canvas.js */ "./node_modules/ol/render/canvas.js");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
/**
 * @module ol/renderer/canvas/Layer
 */







/**
 * @abstract
 * @template {import("../../layer/Layer.js").default} LayerType
 */
var CanvasLayerRenderer = /** @class */ (function (_super) {
    __extends(CanvasLayerRenderer, _super);
    /**
     * @param {LayerType} layer Layer.
     */
    function CanvasLayerRenderer(layer) {
        var _this = _super.call(this, layer) || this;
        /**
         * @protected
         * @type {HTMLElement}
         */
        _this.container = null;
        /**
         * @protected
         * @type {number}
         */
        _this.renderedResolution;
        /**
         * A temporary transform.  The values in this transform should only be used in a
         * function that sets the values.
         * @protected
         * @type {import("../../transform.js").Transform}
         */
        _this.tempTransform = (0,_transform_js__WEBPACK_IMPORTED_MODULE_0__.create)();
        /**
         * The transform for rendered pixels to viewport CSS pixels.  This transform must
         * be set when rendering a frame and may be used by other functions after rendering.
         * @protected
         * @type {import("../../transform.js").Transform}
         */
        _this.pixelTransform = (0,_transform_js__WEBPACK_IMPORTED_MODULE_0__.create)();
        /**
         * The transform for viewport CSS pixels to rendered pixels.  This transform must
         * be set when rendering a frame and may be used by other functions after rendering.
         * @protected
         * @type {import("../../transform.js").Transform}
         */
        _this.inversePixelTransform = (0,_transform_js__WEBPACK_IMPORTED_MODULE_0__.create)();
        /**
         * @type {CanvasRenderingContext2D}
         */
        _this.context = null;
        /**
         * @type {boolean}
         */
        _this.containerReused = false;
        return _this;
    }
    /**
     * Get a rendering container from an existing target, if compatible.
     * @param {HTMLElement} target Potential render target.
     * @param {string} transform CSS Transform.
     * @param {number} opacity Opacity.
     */
    CanvasLayerRenderer.prototype.useContainer = function (target, transform, opacity) {
        var layerClassName = this.getLayer().getClassName();
        var container, context;
        if (target &&
            target.style.opacity === '' &&
            target.className === layerClassName) {
            var canvas = target.firstElementChild;
            if (canvas instanceof HTMLCanvasElement) {
                context = canvas.getContext('2d');
            }
        }
        if (context &&
            (context.canvas.width === 0 ||
                context.canvas.style.transform === transform)) {
            // Container of the previous layer renderer can be used.
            this.container = target;
            this.context = context;
            this.containerReused = true;
        }
        else if (this.containerReused) {
            // Previously reused container cannot be used any more.
            this.container = null;
            this.context = null;
            this.containerReused = false;
        }
        if (!this.container) {
            container = document.createElement('div');
            container.className = layerClassName;
            var style = container.style;
            style.position = 'absolute';
            style.width = '100%';
            style.height = '100%';
            context = (0,_dom_js__WEBPACK_IMPORTED_MODULE_1__.createCanvasContext2D)();
            var canvas = context.canvas;
            container.appendChild(canvas);
            style = canvas.style;
            style.position = 'absolute';
            style.left = '0';
            style.transformOrigin = 'top left';
            this.container = container;
            this.context = context;
        }
    };
    /**
     * @param {CanvasRenderingContext2D} context Context.
     * @param {import("../../PluggableMap.js").FrameState} frameState Frame state.
     * @param {import("../../extent.js").Extent} extent Clip extent.
     * @protected
     */
    CanvasLayerRenderer.prototype.clip = function (context, frameState, extent) {
        var pixelRatio = frameState.pixelRatio;
        var halfWidth = (frameState.size[0] * pixelRatio) / 2;
        var halfHeight = (frameState.size[1] * pixelRatio) / 2;
        var rotation = frameState.viewState.rotation;
        var topLeft = (0,_extent_js__WEBPACK_IMPORTED_MODULE_2__.getTopLeft)(extent);
        var topRight = (0,_extent_js__WEBPACK_IMPORTED_MODULE_2__.getTopRight)(extent);
        var bottomRight = (0,_extent_js__WEBPACK_IMPORTED_MODULE_2__.getBottomRight)(extent);
        var bottomLeft = (0,_extent_js__WEBPACK_IMPORTED_MODULE_2__.getBottomLeft)(extent);
        (0,_transform_js__WEBPACK_IMPORTED_MODULE_0__.apply)(frameState.coordinateToPixelTransform, topLeft);
        (0,_transform_js__WEBPACK_IMPORTED_MODULE_0__.apply)(frameState.coordinateToPixelTransform, topRight);
        (0,_transform_js__WEBPACK_IMPORTED_MODULE_0__.apply)(frameState.coordinateToPixelTransform, bottomRight);
        (0,_transform_js__WEBPACK_IMPORTED_MODULE_0__.apply)(frameState.coordinateToPixelTransform, bottomLeft);
        context.save();
        (0,_render_canvas_js__WEBPACK_IMPORTED_MODULE_3__.rotateAtOffset)(context, -rotation, halfWidth, halfHeight);
        context.beginPath();
        context.moveTo(topLeft[0] * pixelRatio, topLeft[1] * pixelRatio);
        context.lineTo(topRight[0] * pixelRatio, topRight[1] * pixelRatio);
        context.lineTo(bottomRight[0] * pixelRatio, bottomRight[1] * pixelRatio);
        context.lineTo(bottomLeft[0] * pixelRatio, bottomLeft[1] * pixelRatio);
        context.clip();
        (0,_render_canvas_js__WEBPACK_IMPORTED_MODULE_3__.rotateAtOffset)(context, rotation, halfWidth, halfHeight);
    };
    /**
     * @param {CanvasRenderingContext2D} context Context.
     * @param {import("../../PluggableMap.js").FrameState} frameState Frame state.
     * @param {import("../../extent.js").Extent} extent Clip extent.
     * @protected
     */
    CanvasLayerRenderer.prototype.clipUnrotated = function (context, frameState, extent) {
        var topLeft = (0,_extent_js__WEBPACK_IMPORTED_MODULE_2__.getTopLeft)(extent);
        var topRight = (0,_extent_js__WEBPACK_IMPORTED_MODULE_2__.getTopRight)(extent);
        var bottomRight = (0,_extent_js__WEBPACK_IMPORTED_MODULE_2__.getBottomRight)(extent);
        var bottomLeft = (0,_extent_js__WEBPACK_IMPORTED_MODULE_2__.getBottomLeft)(extent);
        (0,_transform_js__WEBPACK_IMPORTED_MODULE_0__.apply)(frameState.coordinateToPixelTransform, topLeft);
        (0,_transform_js__WEBPACK_IMPORTED_MODULE_0__.apply)(frameState.coordinateToPixelTransform, topRight);
        (0,_transform_js__WEBPACK_IMPORTED_MODULE_0__.apply)(frameState.coordinateToPixelTransform, bottomRight);
        (0,_transform_js__WEBPACK_IMPORTED_MODULE_0__.apply)(frameState.coordinateToPixelTransform, bottomLeft);
        var inverted = this.inversePixelTransform;
        (0,_transform_js__WEBPACK_IMPORTED_MODULE_0__.apply)(inverted, topLeft);
        (0,_transform_js__WEBPACK_IMPORTED_MODULE_0__.apply)(inverted, topRight);
        (0,_transform_js__WEBPACK_IMPORTED_MODULE_0__.apply)(inverted, bottomRight);
        (0,_transform_js__WEBPACK_IMPORTED_MODULE_0__.apply)(inverted, bottomLeft);
        context.save();
        context.beginPath();
        context.moveTo(Math.round(topLeft[0]), Math.round(topLeft[1]));
        context.lineTo(Math.round(topRight[0]), Math.round(topRight[1]));
        context.lineTo(Math.round(bottomRight[0]), Math.round(bottomRight[1]));
        context.lineTo(Math.round(bottomLeft[0]), Math.round(bottomLeft[1]));
        context.clip();
    };
    /**
     * @param {import("../../render/EventType.js").default} type Event type.
     * @param {CanvasRenderingContext2D} context Context.
     * @param {import("../../PluggableMap.js").FrameState} frameState Frame state.
     * @private
     */
    CanvasLayerRenderer.prototype.dispatchRenderEvent_ = function (type, context, frameState) {
        var layer = this.getLayer();
        if (layer.hasListener(type)) {
            var event_1 = new _render_Event_js__WEBPACK_IMPORTED_MODULE_4__.default(type, this.inversePixelTransform, frameState, context);
            layer.dispatchEvent(event_1);
        }
    };
    /**
     * @param {CanvasRenderingContext2D} context Context.
     * @param {import("../../PluggableMap.js").FrameState} frameState Frame state.
     * @protected
     */
    CanvasLayerRenderer.prototype.preRender = function (context, frameState) {
        this.dispatchRenderEvent_(_render_EventType_js__WEBPACK_IMPORTED_MODULE_5__.default.PRERENDER, context, frameState);
    };
    /**
     * @param {CanvasRenderingContext2D} context Context.
     * @param {import("../../PluggableMap.js").FrameState} frameState Frame state.
     * @protected
     */
    CanvasLayerRenderer.prototype.postRender = function (context, frameState) {
        this.dispatchRenderEvent_(_render_EventType_js__WEBPACK_IMPORTED_MODULE_5__.default.POSTRENDER, context, frameState);
    };
    /**
     * Creates a transform for rendering to an element that will be rotated after rendering.
     * @param {import("../../coordinate.js").Coordinate} center Center.
     * @param {number} resolution Resolution.
     * @param {number} rotation Rotation.
     * @param {number} pixelRatio Pixel ratio.
     * @param {number} width Width of the rendered element (in pixels).
     * @param {number} height Height of the rendered element (in pixels).
     * @param {number} offsetX Offset on the x-axis in view coordinates.
     * @protected
     * @return {!import("../../transform.js").Transform} Transform.
     */
    CanvasLayerRenderer.prototype.getRenderTransform = function (center, resolution, rotation, pixelRatio, width, height, offsetX) {
        var dx1 = width / 2;
        var dy1 = height / 2;
        var sx = pixelRatio / resolution;
        var sy = -sx;
        var dx2 = -center[0] + offsetX;
        var dy2 = -center[1];
        return (0,_transform_js__WEBPACK_IMPORTED_MODULE_0__.compose)(this.tempTransform, dx1, dy1, sx, sy, -rotation, dx2, dy2);
    };
    /**
     * @param {import("../../pixel.js").Pixel} pixel Pixel.
     * @param {import("../../PluggableMap.js").FrameState} frameState FrameState.
     * @param {number} hitTolerance Hit tolerance in pixels.
     * @return {Uint8ClampedArray|Uint8Array} The result.  If there is no data at the pixel
     *    location, null will be returned.  If there is data, but pixel values cannot be
     *    returned, and empty array will be returned.
     */
    CanvasLayerRenderer.prototype.getDataAtPixel = function (pixel, frameState, hitTolerance) {
        var renderPixel = (0,_transform_js__WEBPACK_IMPORTED_MODULE_0__.apply)(this.inversePixelTransform, pixel.slice());
        var context = this.context;
        var layer = this.getLayer();
        var layerExtent = layer.getExtent();
        if (layerExtent) {
            var renderCoordinate = (0,_transform_js__WEBPACK_IMPORTED_MODULE_0__.apply)(frameState.pixelToCoordinateTransform, pixel.slice());
            /** get only data inside of the layer extent */
            if (!(0,_extent_js__WEBPACK_IMPORTED_MODULE_2__.containsCoordinate)(layerExtent, renderCoordinate)) {
                return null;
            }
        }
        var data;
        try {
            var x = Math.round(renderPixel[0]);
            var y = Math.round(renderPixel[1]);
            var newCanvas = document.createElement('canvas');
            var newContext = newCanvas.getContext('2d');
            newCanvas.width = 1;
            newCanvas.height = 1;
            newContext.clearRect(0, 0, 1, 1);
            newContext.drawImage(context.canvas, x, y, 1, 1, 0, 0, 1, 1);
            data = newContext.getImageData(0, 0, 1, 1).data;
        }
        catch (err) {
            if (err.name === 'SecurityError') {
                // tainted canvas, we assume there is data at the given pixel (although there might not be)
                return new Uint8Array();
            }
            return data;
        }
        if (data[3] === 0) {
            return null;
        }
        return data;
    };
    return CanvasLayerRenderer;
}(_Layer_js__WEBPACK_IMPORTED_MODULE_6__.default));
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (CanvasLayerRenderer);
//# sourceMappingURL=Layer.js.map

/***/ }),

/***/ "./node_modules/ol/renderer/canvas/TileLayer.js":
/*!******************************************************!*\
  !*** ./node_modules/ol/renderer/canvas/TileLayer.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _Layer_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./Layer.js */ "./node_modules/ol/renderer/canvas/Layer.js");
/* harmony import */ var _TileRange_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../TileRange.js */ "./node_modules/ol/TileRange.js");
/* harmony import */ var _TileState_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../TileState.js */ "./node_modules/ol/TileState.js");
/* harmony import */ var _transform_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../transform.js */ "./node_modules/ol/transform.js");
/* harmony import */ var _obj_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../obj.js */ "./node_modules/ol/obj.js");
/* harmony import */ var _extent_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../extent.js */ "./node_modules/ol/extent.js");
/* harmony import */ var _render_canvas_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../render/canvas.js */ "./node_modules/ol/render/canvas.js");
/* harmony import */ var _proj_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../proj.js */ "./node_modules/ol/proj.js");
/* harmony import */ var _util_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../util.js */ "./node_modules/ol/util.js");
/* harmony import */ var _array_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../array.js */ "./node_modules/ol/array.js");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
/**
 * @module ol/renderer/canvas/TileLayer
 */










/**
 * @classdesc
 * Canvas renderer for tile layers.
 * @api
 */
var CanvasTileLayerRenderer = /** @class */ (function (_super) {
    __extends(CanvasTileLayerRenderer, _super);
    /**
     * @param {import("../../layer/Tile.js").default|import("../../layer/VectorTile.js").default} tileLayer Tile layer.
     */
    function CanvasTileLayerRenderer(tileLayer) {
        var _this = _super.call(this, tileLayer) || this;
        /**
         * Rendered extent has changed since the previous `renderFrame()` call
         * @type {boolean}
         */
        _this.extentChanged = true;
        /**
         * @private
         * @type {?import("../../extent.js").Extent}
         */
        _this.renderedExtent_ = null;
        /**
         * @protected
         * @type {number}
         */
        _this.renderedPixelRatio;
        /**
         * @protected
         * @type {import("../../proj/Projection.js").default}
         */
        _this.renderedProjection = null;
        /**
         * @protected
         * @type {number}
         */
        _this.renderedRevision;
        /**
         * @protected
         * @type {!Array<import("../../Tile.js").default>}
         */
        _this.renderedTiles = [];
        /**
         * @private
         * @type {boolean}
         */
        _this.newTiles_ = false;
        /**
         * @protected
         * @type {import("../../extent.js").Extent}
         */
        _this.tmpExtent = (0,_extent_js__WEBPACK_IMPORTED_MODULE_1__.createEmpty)();
        /**
         * @private
         * @type {import("../../TileRange.js").default}
         */
        _this.tmpTileRange_ = new _TileRange_js__WEBPACK_IMPORTED_MODULE_2__.default(0, 0, 0, 0);
        return _this;
    }
    /**
     * @protected
     * @param {import("../../Tile.js").default} tile Tile.
     * @return {boolean} Tile is drawable.
     */
    CanvasTileLayerRenderer.prototype.isDrawableTile = function (tile) {
        var tileLayer = this.getLayer();
        var tileState = tile.getState();
        var useInterimTilesOnError = tileLayer.getUseInterimTilesOnError();
        return (tileState == _TileState_js__WEBPACK_IMPORTED_MODULE_3__.default.LOADED ||
            tileState == _TileState_js__WEBPACK_IMPORTED_MODULE_3__.default.EMPTY ||
            (tileState == _TileState_js__WEBPACK_IMPORTED_MODULE_3__.default.ERROR && !useInterimTilesOnError));
    };
    /**
     * @param {number} z Tile coordinate z.
     * @param {number} x Tile coordinate x.
     * @param {number} y Tile coordinate y.
     * @param {import("../../PluggableMap.js").FrameState} frameState Frame state.
     * @return {!import("../../Tile.js").default} Tile.
     */
    CanvasTileLayerRenderer.prototype.getTile = function (z, x, y, frameState) {
        var pixelRatio = frameState.pixelRatio;
        var projection = frameState.viewState.projection;
        var tileLayer = this.getLayer();
        var tileSource = tileLayer.getSource();
        var tile = tileSource.getTile(z, x, y, pixelRatio, projection);
        if (tile.getState() == _TileState_js__WEBPACK_IMPORTED_MODULE_3__.default.ERROR) {
            if (!tileLayer.getUseInterimTilesOnError()) {
                // When useInterimTilesOnError is false, we consider the error tile as loaded.
                tile.setState(_TileState_js__WEBPACK_IMPORTED_MODULE_3__.default.LOADED);
            }
            else if (tileLayer.getPreload() > 0) {
                // Preloaded tiles for lower resolutions might have finished loading.
                this.newTiles_ = true;
            }
        }
        if (!this.isDrawableTile(tile)) {
            tile = tile.getInterimTile();
        }
        return tile;
    };
    /**
     * @param {Object<number, Object<string, import("../../Tile.js").default>>} tiles Lookup of loaded tiles by zoom level.
     * @param {number} zoom Zoom level.
     * @param {import("../../Tile.js").default} tile Tile.
     * @return {boolean|void} If `false`, the tile will not be considered loaded.
     */
    CanvasTileLayerRenderer.prototype.loadedTileCallback = function (tiles, zoom, tile) {
        if (this.isDrawableTile(tile)) {
            return _super.prototype.loadedTileCallback.call(this, tiles, zoom, tile);
        }
        return false;
    };
    /**
     * Determine whether render should be called.
     * @param {import("../../PluggableMap.js").FrameState} frameState Frame state.
     * @return {boolean} Layer is ready to be rendered.
     */
    CanvasTileLayerRenderer.prototype.prepareFrame = function (frameState) {
        return !!this.getLayer().getSource();
    };
    /**
     * Render the layer.
     * @param {import("../../PluggableMap.js").FrameState} frameState Frame state.
     * @param {HTMLElement} target Target that may be used to render content to.
     * @return {HTMLElement} The rendered element.
     */
    CanvasTileLayerRenderer.prototype.renderFrame = function (frameState, target) {
        var layerState = frameState.layerStatesArray[frameState.layerIndex];
        var viewState = frameState.viewState;
        var projection = viewState.projection;
        var viewResolution = viewState.resolution;
        var viewCenter = viewState.center;
        var rotation = viewState.rotation;
        var pixelRatio = frameState.pixelRatio;
        var tileLayer = this.getLayer();
        var tileSource = tileLayer.getSource();
        var sourceRevision = tileSource.getRevision();
        var tileGrid = tileSource.getTileGridForProjection(projection);
        var z = tileGrid.getZForResolution(viewResolution, tileSource.zDirection);
        var tileResolution = tileGrid.getResolution(z);
        var extent = frameState.extent;
        var layerExtent = layerState.extent && (0,_proj_js__WEBPACK_IMPORTED_MODULE_0__.fromUserExtent)(layerState.extent, projection);
        if (layerExtent) {
            extent = (0,_extent_js__WEBPACK_IMPORTED_MODULE_1__.getIntersection)(extent, (0,_proj_js__WEBPACK_IMPORTED_MODULE_0__.fromUserExtent)(layerState.extent, projection));
        }
        var tilePixelRatio = tileSource.getTilePixelRatio(pixelRatio);
        // desired dimensions of the canvas in pixels
        var width = Math.round(frameState.size[0] * tilePixelRatio);
        var height = Math.round(frameState.size[1] * tilePixelRatio);
        if (rotation) {
            var size = Math.round(Math.sqrt(width * width + height * height));
            width = size;
            height = size;
        }
        var dx = (tileResolution * width) / 2 / tilePixelRatio;
        var dy = (tileResolution * height) / 2 / tilePixelRatio;
        var canvasExtent = [
            viewCenter[0] - dx,
            viewCenter[1] - dy,
            viewCenter[0] + dx,
            viewCenter[1] + dy,
        ];
        var tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);
        /**
         * @type {Object<number, Object<string, import("../../Tile.js").default>>}
         */
        var tilesToDrawByZ = {};
        tilesToDrawByZ[z] = {};
        var findLoadedTiles = this.createLoadedTileFinder(tileSource, projection, tilesToDrawByZ);
        var tmpExtent = this.tmpExtent;
        var tmpTileRange = this.tmpTileRange_;
        this.newTiles_ = false;
        for (var x = tileRange.minX; x <= tileRange.maxX; ++x) {
            for (var y = tileRange.minY; y <= tileRange.maxY; ++y) {
                var tile = this.getTile(z, x, y, frameState);
                if (this.isDrawableTile(tile)) {
                    var uid = (0,_util_js__WEBPACK_IMPORTED_MODULE_4__.getUid)(this);
                    if (tile.getState() == _TileState_js__WEBPACK_IMPORTED_MODULE_3__.default.LOADED) {
                        tilesToDrawByZ[z][tile.tileCoord.toString()] = tile;
                        var inTransition = tile.inTransition(uid);
                        if (!this.newTiles_ &&
                            (inTransition || this.renderedTiles.indexOf(tile) === -1)) {
                            this.newTiles_ = true;
                        }
                    }
                    if (tile.getAlpha(uid, frameState.time) === 1) {
                        // don't look for alt tiles if alpha is 1
                        continue;
                    }
                }
                var childTileRange = tileGrid.getTileCoordChildTileRange(tile.tileCoord, tmpTileRange, tmpExtent);
                var covered = false;
                if (childTileRange) {
                    covered = findLoadedTiles(z + 1, childTileRange);
                }
                if (!covered) {
                    tileGrid.forEachTileCoordParentTileRange(tile.tileCoord, findLoadedTiles, tmpTileRange, tmpExtent);
                }
            }
        }
        var canvasScale = tileResolution / viewResolution;
        // set forward and inverse pixel transforms
        (0,_transform_js__WEBPACK_IMPORTED_MODULE_5__.compose)(this.pixelTransform, frameState.size[0] / 2, frameState.size[1] / 2, 1 / tilePixelRatio, 1 / tilePixelRatio, rotation, -width / 2, -height / 2);
        var canvasTransform = (0,_render_canvas_js__WEBPACK_IMPORTED_MODULE_6__.createTransformString)(this.pixelTransform);
        this.useContainer(target, canvasTransform, layerState.opacity);
        var context = this.context;
        var canvas = context.canvas;
        (0,_transform_js__WEBPACK_IMPORTED_MODULE_5__.makeInverse)(this.inversePixelTransform, this.pixelTransform);
        // set scale transform for calculating tile positions on the canvas
        (0,_transform_js__WEBPACK_IMPORTED_MODULE_5__.compose)(this.tempTransform, width / 2, height / 2, canvasScale, canvasScale, 0, -width / 2, -height / 2);
        if (canvas.width != width || canvas.height != height) {
            canvas.width = width;
            canvas.height = height;
        }
        else if (!this.containerReused) {
            context.clearRect(0, 0, width, height);
        }
        if (layerExtent) {
            this.clipUnrotated(context, frameState, layerExtent);
        }
        (0,_obj_js__WEBPACK_IMPORTED_MODULE_7__.assign)(context, tileSource.getContextOptions());
        this.preRender(context, frameState);
        this.renderedTiles.length = 0;
        /** @type {Array<number>} */
        var zs = Object.keys(tilesToDrawByZ).map(Number);
        zs.sort(_array_js__WEBPACK_IMPORTED_MODULE_8__.numberSafeCompareFunction);
        var clips, clipZs, currentClip;
        if (layerState.opacity === 1 &&
            (!this.containerReused ||
                tileSource.getOpaque(frameState.viewState.projection))) {
            zs = zs.reverse();
        }
        else {
            clips = [];
            clipZs = [];
        }
        for (var i = zs.length - 1; i >= 0; --i) {
            var currentZ = zs[i];
            var currentTilePixelSize = tileSource.getTilePixelSize(currentZ, pixelRatio, projection);
            var currentResolution = tileGrid.getResolution(currentZ);
            var currentScale = currentResolution / tileResolution;
            var dx_1 = currentTilePixelSize[0] * currentScale * canvasScale;
            var dy_1 = currentTilePixelSize[1] * currentScale * canvasScale;
            var originTileCoord = tileGrid.getTileCoordForCoordAndZ((0,_extent_js__WEBPACK_IMPORTED_MODULE_1__.getTopLeft)(canvasExtent), currentZ);
            var originTileExtent = tileGrid.getTileCoordExtent(originTileCoord);
            var origin_1 = (0,_transform_js__WEBPACK_IMPORTED_MODULE_5__.apply)(this.tempTransform, [
                (tilePixelRatio * (originTileExtent[0] - canvasExtent[0])) /
                    tileResolution,
                (tilePixelRatio * (canvasExtent[3] - originTileExtent[3])) /
                    tileResolution,
            ]);
            var tileGutter = tilePixelRatio * tileSource.getGutterForProjection(projection);
            var tilesToDraw = tilesToDrawByZ[currentZ];
            for (var tileCoordKey in tilesToDraw) {
                var tile = /** @type {import("../../ImageTile.js").default} */ (tilesToDraw[tileCoordKey]);
                var tileCoord = tile.tileCoord;
                // Calculate integer positions and sizes so that tiles align
                var floatX = origin_1[0] - (originTileCoord[1] - tileCoord[1]) * dx_1;
                var nextX = Math.round(floatX + dx_1);
                var floatY = origin_1[1] - (originTileCoord[2] - tileCoord[2]) * dy_1;
                var nextY = Math.round(floatY + dy_1);
                var x = Math.round(floatX);
                var y = Math.round(floatY);
                var w = nextX - x;
                var h = nextY - y;
                var transition = z === currentZ;
                var inTransition = transition && tile.getAlpha((0,_util_js__WEBPACK_IMPORTED_MODULE_4__.getUid)(this), frameState.time) !== 1;
                if (!inTransition) {
                    if (clips) {
                        // Clip mask for regions in this tile that already filled by a higher z tile
                        context.save();
                        currentClip = [x, y, x + w, y, x + w, y + h, x, y + h];
                        for (var i_1 = 0, ii = clips.length; i_1 < ii; ++i_1) {
                            if (z !== currentZ && currentZ < clipZs[i_1]) {
                                var clip = clips[i_1];
                                context.beginPath();
                                // counter-clockwise (outer ring) for current tile
                                context.moveTo(currentClip[0], currentClip[1]);
                                context.lineTo(currentClip[2], currentClip[3]);
                                context.lineTo(currentClip[4], currentClip[5]);
                                context.lineTo(currentClip[6], currentClip[7]);
                                // clockwise (inner ring) for higher z tile
                                context.moveTo(clip[6], clip[7]);
                                context.lineTo(clip[4], clip[5]);
                                context.lineTo(clip[2], clip[3]);
                                context.lineTo(clip[0], clip[1]);
                                context.clip();
                            }
                        }
                        clips.push(currentClip);
                        clipZs.push(currentZ);
                    }
                    else {
                        context.clearRect(x, y, w, h);
                    }
                }
                this.drawTileImage(tile, frameState, x, y, w, h, tileGutter, transition, layerState.opacity);
                if (clips && !inTransition) {
                    context.restore();
                }
                this.renderedTiles.push(tile);
                this.updateUsedTiles(frameState.usedTiles, tileSource, tile);
            }
        }
        this.renderedRevision = sourceRevision;
        this.renderedResolution = tileResolution;
        this.extentChanged =
            !this.renderedExtent_ || !(0,_extent_js__WEBPACK_IMPORTED_MODULE_1__.equals)(this.renderedExtent_, canvasExtent);
        this.renderedExtent_ = canvasExtent;
        this.renderedPixelRatio = pixelRatio;
        this.renderedProjection = projection;
        this.manageTilePyramid(frameState, tileSource, tileGrid, pixelRatio, projection, extent, z, tileLayer.getPreload());
        this.scheduleExpireCache(frameState, tileSource);
        this.postRender(context, frameState);
        if (layerState.extent) {
            context.restore();
        }
        if (canvasTransform !== canvas.style.transform) {
            canvas.style.transform = canvasTransform;
        }
        return this.container;
    };
    /**
     * @param {import("../../ImageTile.js").default} tile Tile.
     * @param {import("../../PluggableMap.js").FrameState} frameState Frame state.
     * @param {number} x Left of the tile.
     * @param {number} y Top of the tile.
     * @param {number} w Width of the tile.
     * @param {number} h Height of the tile.
     * @param {number} gutter Tile gutter.
     * @param {boolean} transition Apply an alpha transition.
     * @param {number} opacity Opacity.
     */
    CanvasTileLayerRenderer.prototype.drawTileImage = function (tile, frameState, x, y, w, h, gutter, transition, opacity) {
        var image = this.getTileImage(tile);
        if (!image) {
            return;
        }
        var uid = (0,_util_js__WEBPACK_IMPORTED_MODULE_4__.getUid)(this);
        var tileAlpha = transition ? tile.getAlpha(uid, frameState.time) : 1;
        var alpha = opacity * tileAlpha;
        var alphaChanged = alpha !== this.context.globalAlpha;
        if (alphaChanged) {
            this.context.save();
            this.context.globalAlpha = alpha;
        }
        this.context.drawImage(image, gutter, gutter, image.width - 2 * gutter, image.height - 2 * gutter, x, y, w, h);
        if (alphaChanged) {
            this.context.restore();
        }
        if (tileAlpha !== 1) {
            frameState.animate = true;
        }
        else if (transition) {
            tile.endTransition(uid);
        }
    };
    /**
     * @return {HTMLCanvasElement} Image
     */
    CanvasTileLayerRenderer.prototype.getImage = function () {
        var context = this.context;
        return context ? context.canvas : null;
    };
    /**
     * Get the image from a tile.
     * @param {import("../../ImageTile.js").default} tile Tile.
     * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.
     * @protected
     */
    CanvasTileLayerRenderer.prototype.getTileImage = function (tile) {
        return tile.getImage();
    };
    /**
     * @param {import("../../PluggableMap.js").FrameState} frameState Frame state.
     * @param {import("../../source/Tile.js").default} tileSource Tile source.
     * @protected
     */
    CanvasTileLayerRenderer.prototype.scheduleExpireCache = function (frameState, tileSource) {
        if (tileSource.canExpireCache()) {
            /**
             * @param {import("../../source/Tile.js").default} tileSource Tile source.
             * @param {import("../../PluggableMap.js").default} map Map.
             * @param {import("../../PluggableMap.js").FrameState} frameState Frame state.
             */
            var postRenderFunction = function (tileSource, map, frameState) {
                var tileSourceKey = (0,_util_js__WEBPACK_IMPORTED_MODULE_4__.getUid)(tileSource);
                if (tileSourceKey in frameState.usedTiles) {
                    tileSource.expireCache(frameState.viewState.projection, frameState.usedTiles[tileSourceKey]);
                }
            }.bind(null, tileSource);
            frameState.postRenderFunctions.push(
            /** @type {import("../../PluggableMap.js").PostRenderFunction} */ (postRenderFunction));
        }
    };
    /**
     * @param {!Object<string, !Object<string, boolean>>} usedTiles Used tiles.
     * @param {import("../../source/Tile.js").default} tileSource Tile source.
     * @param {import('../../Tile.js').default} tile Tile.
     * @protected
     */
    CanvasTileLayerRenderer.prototype.updateUsedTiles = function (usedTiles, tileSource, tile) {
        // FIXME should we use tilesToDrawByZ instead?
        var tileSourceKey = (0,_util_js__WEBPACK_IMPORTED_MODULE_4__.getUid)(tileSource);
        if (!(tileSourceKey in usedTiles)) {
            usedTiles[tileSourceKey] = {};
        }
        usedTiles[tileSourceKey][tile.getKey()] = true;
    };
    /**
     * Manage tile pyramid.
     * This function performs a number of functions related to the tiles at the
     * current zoom and lower zoom levels:
     * - registers idle tiles in frameState.wantedTiles so that they are not
     *   discarded by the tile queue
     * - enqueues missing tiles
     * @param {import("../../PluggableMap.js").FrameState} frameState Frame state.
     * @param {import("../../source/Tile.js").default} tileSource Tile source.
     * @param {import("../../tilegrid/TileGrid.js").default} tileGrid Tile grid.
     * @param {number} pixelRatio Pixel ratio.
     * @param {import("../../proj/Projection.js").default} projection Projection.
     * @param {import("../../extent.js").Extent} extent Extent.
     * @param {number} currentZ Current Z.
     * @param {number} preload Load low resolution tiles up to 'preload' levels.
     * @param {function(import("../../Tile.js").default)=} opt_tileCallback Tile callback.
     * @protected
     */
    CanvasTileLayerRenderer.prototype.manageTilePyramid = function (frameState, tileSource, tileGrid, pixelRatio, projection, extent, currentZ, preload, opt_tileCallback) {
        var tileSourceKey = (0,_util_js__WEBPACK_IMPORTED_MODULE_4__.getUid)(tileSource);
        if (!(tileSourceKey in frameState.wantedTiles)) {
            frameState.wantedTiles[tileSourceKey] = {};
        }
        var wantedTiles = frameState.wantedTiles[tileSourceKey];
        var tileQueue = frameState.tileQueue;
        var minZoom = tileGrid.getMinZoom();
        var tileCount = 0;
        var tile, tileRange, tileResolution, x, y, z;
        for (z = minZoom; z <= currentZ; ++z) {
            tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z, tileRange);
            tileResolution = tileGrid.getResolution(z);
            for (x = tileRange.minX; x <= tileRange.maxX; ++x) {
                for (y = tileRange.minY; y <= tileRange.maxY; ++y) {
                    if (currentZ - z <= preload) {
                        ++tileCount;
                        tile = tileSource.getTile(z, x, y, pixelRatio, projection);
                        if (tile.getState() == _TileState_js__WEBPACK_IMPORTED_MODULE_3__.default.IDLE) {
                            wantedTiles[tile.getKey()] = true;
                            if (!tileQueue.isKeyQueued(tile.getKey())) {
                                tileQueue.enqueue([
                                    tile,
                                    tileSourceKey,
                                    tileGrid.getTileCoordCenter(tile.tileCoord),
                                    tileResolution,
                                ]);
                            }
                        }
                        if (opt_tileCallback !== undefined) {
                            opt_tileCallback(tile);
                        }
                    }
                    else {
                        tileSource.useTile(z, x, y, projection);
                    }
                }
            }
        }
        tileSource.updateCacheSize(tileCount, projection);
    };
    return CanvasTileLayerRenderer;
}(_Layer_js__WEBPACK_IMPORTED_MODULE_9__.default));
/**
 * @function
 * @return {import("../../layer/Tile.js").default|import("../../layer/VectorTile.js").default}
 */
CanvasTileLayerRenderer.prototype.getLayer;
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (CanvasTileLayerRenderer);
//# sourceMappingURL=TileLayer.js.map

/***/ }),

/***/ "./node_modules/ol/renderer/canvas/VectorLayer.js":
/*!********************************************************!*\
  !*** ./node_modules/ol/renderer/canvas/VectorLayer.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _render_canvas_BuilderGroup_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../render/canvas/BuilderGroup.js */ "./node_modules/ol/render/canvas/BuilderGroup.js");
/* harmony import */ var _Layer_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./Layer.js */ "./node_modules/ol/renderer/canvas/Layer.js");
/* harmony import */ var _render_canvas_ExecutorGroup_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../render/canvas/ExecutorGroup.js */ "./node_modules/ol/render/canvas/ExecutorGroup.js");
/* harmony import */ var _ViewHint_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../ViewHint.js */ "./node_modules/ol/ViewHint.js");
/* harmony import */ var _transform_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../transform.js */ "./node_modules/ol/transform.js");
/* harmony import */ var _extent_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../extent.js */ "./node_modules/ol/extent.js");
/* harmony import */ var _render_canvas_hitdetect_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../render/canvas/hitdetect.js */ "./node_modules/ol/render/canvas/hitdetect.js");
/* harmony import */ var _vector_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../vector.js */ "./node_modules/ol/renderer/vector.js");
/* harmony import */ var _proj_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../proj.js */ "./node_modules/ol/proj.js");
/* harmony import */ var _util_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../util.js */ "./node_modules/ol/util.js");
/* harmony import */ var _coordinate_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../coordinate.js */ "./node_modules/ol/coordinate.js");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
/**
 * @module ol/renderer/canvas/VectorLayer
 */











/**
 * @classdesc
 * Canvas renderer for vector layers.
 * @api
 */
var CanvasVectorLayerRenderer = /** @class */ (function (_super) {
    __extends(CanvasVectorLayerRenderer, _super);
    /**
     * @param {import("../../layer/Vector.js").default} vectorLayer Vector layer.
     */
    function CanvasVectorLayerRenderer(vectorLayer) {
        var _this = _super.call(this, vectorLayer) || this;
        /** @private */
        _this.boundHandleStyleImageChange_ = _this.handleStyleImageChange_.bind(_this);
        /**
         * @type {boolean}
         */
        _this.animatingOrInteracting_;
        /**
         * @private
         * @type {boolean}
         */
        _this.dirty_ = false;
        /**
         * @type {ImageData}
         */
        _this.hitDetectionImageData_ = null;
        /**
         * @type {Array<import("../../Feature.js").default>}
         */
        _this.renderedFeatures_ = null;
        /**
         * @private
         * @type {number}
         */
        _this.renderedRevision_ = -1;
        /**
         * @private
         * @type {number}
         */
        _this.renderedResolution_ = NaN;
        /**
         * @private
         * @type {import("../../extent.js").Extent}
         */
        _this.renderedExtent_ = (0,_extent_js__WEBPACK_IMPORTED_MODULE_1__.createEmpty)();
        /**
         * @private
         * @type {number}
         */
        _this.renderedRotation_;
        /**
         * @private
         * @type {import("../../coordinate").Coordinate}
         */
        _this.renderedCenter_ = null;
        /**
         * @private
         * @type {import("../../proj/Projection").default}
         */
        _this.renderedProjection_ = null;
        /**
         * @private
         * @type {function(import("../../Feature.js").default, import("../../Feature.js").default): number|null}
         */
        _this.renderedRenderOrder_ = null;
        /**
         * @private
         * @type {import("../../render/canvas/ExecutorGroup").default}
         */
        _this.replayGroup_ = null;
        /**
         * A new replay group had to be created by `prepareFrame()`
         * @type {boolean}
         */
        _this.replayGroupChanged = true;
        /**
         * @type {import("../../render/canvas/ExecutorGroup").default}
         */
        _this.declutterExecutorGroup = null;
        /**
         * Clipping to be performed by `renderFrame()`
         * @type {boolean}
         */
        _this.clipping = true;
        return _this;
    }
    /**
     * Get a rendering container from an existing target, if compatible.
     * @param {HTMLElement} target Potential render target.
     * @param {string} transform CSS Transform.
     * @param {number} opacity Opacity.
     */
    CanvasVectorLayerRenderer.prototype.useContainer = function (target, transform, opacity) {
        if (opacity < 1) {
            target = null;
        }
        _super.prototype.useContainer.call(this, target, transform, opacity);
    };
    /**
     * @param {ExecutorGroup} executorGroup Executor group.
     * @param {import("../../PluggableMap.js").FrameState} frameState Frame state.
     * @param {import("rbush").default=} opt_declutterTree Declutter tree.
     */
    CanvasVectorLayerRenderer.prototype.renderWorlds = function (executorGroup, frameState, opt_declutterTree) {
        var extent = frameState.extent;
        var viewState = frameState.viewState;
        var center = viewState.center;
        var resolution = viewState.resolution;
        var projection = viewState.projection;
        var rotation = viewState.rotation;
        var projectionExtent = projection.getExtent();
        var vectorSource = this.getLayer().getSource();
        var pixelRatio = frameState.pixelRatio;
        var viewHints = frameState.viewHints;
        var snapToPixel = !(viewHints[_ViewHint_js__WEBPACK_IMPORTED_MODULE_2__.default.ANIMATING] || viewHints[_ViewHint_js__WEBPACK_IMPORTED_MODULE_2__.default.INTERACTING]);
        var context = this.context;
        var width = Math.round(frameState.size[0] * pixelRatio);
        var height = Math.round(frameState.size[1] * pixelRatio);
        var multiWorld = vectorSource.getWrapX() && projection.canWrapX();
        var worldWidth = multiWorld ? (0,_extent_js__WEBPACK_IMPORTED_MODULE_1__.getWidth)(projectionExtent) : null;
        var endWorld = multiWorld
            ? Math.ceil((extent[2] - projectionExtent[2]) / worldWidth) + 1
            : 1;
        var world = multiWorld
            ? Math.floor((extent[0] - projectionExtent[0]) / worldWidth)
            : 0;
        do {
            var transform = this.getRenderTransform(center, resolution, rotation, pixelRatio, width, height, world * worldWidth);
            executorGroup.execute(context, 1, transform, rotation, snapToPixel, undefined, opt_declutterTree);
        } while (++world < endWorld);
    };
    /**
     * Render declutter items for this layer
     * @param {import("../../PluggableMap.js").FrameState} frameState Frame state.
     */
    CanvasVectorLayerRenderer.prototype.renderDeclutter = function (frameState) {
        if (this.declutterExecutorGroup) {
            this.renderWorlds(this.declutterExecutorGroup, frameState, frameState.declutterTree);
        }
    };
    /**
     * Render the layer.
     * @param {import("../../PluggableMap.js").FrameState} frameState Frame state.
     * @param {HTMLElement} target Target that may be used to render content to.
     * @return {HTMLElement} The rendered element.
     */
    CanvasVectorLayerRenderer.prototype.renderFrame = function (frameState, target) {
        var pixelRatio = frameState.pixelRatio;
        var layerState = frameState.layerStatesArray[frameState.layerIndex];
        // set forward and inverse pixel transforms
        (0,_transform_js__WEBPACK_IMPORTED_MODULE_3__.makeScale)(this.pixelTransform, 1 / pixelRatio, 1 / pixelRatio);
        (0,_transform_js__WEBPACK_IMPORTED_MODULE_3__.makeInverse)(this.inversePixelTransform, this.pixelTransform);
        var canvasTransform = (0,_transform_js__WEBPACK_IMPORTED_MODULE_3__.toString)(this.pixelTransform);
        this.useContainer(target, canvasTransform, layerState.opacity);
        var context = this.context;
        var canvas = context.canvas;
        var replayGroup = this.replayGroup_;
        var declutterExecutorGroup = this.declutterExecutorGroup;
        if ((!replayGroup || replayGroup.isEmpty()) &&
            (!declutterExecutorGroup || declutterExecutorGroup.isEmpty())) {
            if (!this.containerReused && canvas.width > 0) {
                canvas.width = 0;
            }
            return this.container;
        }
        // resize and clear
        var width = Math.round(frameState.size[0] * pixelRatio);
        var height = Math.round(frameState.size[1] * pixelRatio);
        if (canvas.width != width || canvas.height != height) {
            canvas.width = width;
            canvas.height = height;
            if (canvas.style.transform !== canvasTransform) {
                canvas.style.transform = canvasTransform;
            }
        }
        else if (!this.containerReused) {
            context.clearRect(0, 0, width, height);
        }
        this.preRender(context, frameState);
        var viewState = frameState.viewState;
        var projection = viewState.projection;
        // clipped rendering if layer extent is set
        var clipped = false;
        if (layerState.extent && this.clipping) {
            var layerExtent = (0,_proj_js__WEBPACK_IMPORTED_MODULE_0__.fromUserExtent)(layerState.extent, projection);
            clipped =
                !(0,_extent_js__WEBPACK_IMPORTED_MODULE_1__.containsExtent)(layerExtent, frameState.extent) &&
                    (0,_extent_js__WEBPACK_IMPORTED_MODULE_1__.intersects)(layerExtent, frameState.extent);
            if (clipped) {
                this.clipUnrotated(context, frameState, layerExtent);
            }
        }
        this.renderWorlds(replayGroup, frameState);
        if (clipped) {
            context.restore();
        }
        this.postRender(context, frameState);
        var opacity = layerState.opacity;
        var container = this.container;
        if (opacity !== parseFloat(container.style.opacity)) {
            container.style.opacity = opacity === 1 ? '' : String(opacity);
        }
        if (this.renderedRotation_ !== viewState.rotation) {
            this.renderedRotation_ = viewState.rotation;
            this.hitDetectionImageData_ = null;
        }
        return this.container;
    };
    /**
     * Asynchronous layer level hit detection.
     * @param {import("../../pixel.js").Pixel} pixel Pixel.
     * @return {Promise<Array<import("../../Feature").default>>} Promise that resolves with an array of features.
     */
    CanvasVectorLayerRenderer.prototype.getFeatures = function (pixel) {
        return new Promise(
        /**
         * @param {function(Array<import("../../Feature").default|import("../../render/Feature").default>): void} resolve Resolver function.
         * @this {CanvasVectorLayerRenderer}
         */
        function (resolve) {
            if (!this.hitDetectionImageData_ && !this.animatingOrInteracting_) {
                var size = [this.context.canvas.width, this.context.canvas.height];
                (0,_transform_js__WEBPACK_IMPORTED_MODULE_3__.apply)(this.pixelTransform, size);
                var center = this.renderedCenter_;
                var resolution = this.renderedResolution_;
                var rotation = this.renderedRotation_;
                var projection = this.renderedProjection_;
                var extent = this.renderedExtent_;
                var layer = this.getLayer();
                var transforms = [];
                var width = size[0] / 2;
                var height = size[1] / 2;
                transforms.push(this.getRenderTransform(center, resolution, rotation, 0.5, width, height, 0).slice());
                var source = layer.getSource();
                var projectionExtent = projection.getExtent();
                if (source.getWrapX() &&
                    projection.canWrapX() &&
                    !(0,_extent_js__WEBPACK_IMPORTED_MODULE_1__.containsExtent)(projectionExtent, extent)) {
                    var startX = extent[0];
                    var worldWidth = (0,_extent_js__WEBPACK_IMPORTED_MODULE_1__.getWidth)(projectionExtent);
                    var world = 0;
                    var offsetX = void 0;
                    while (startX < projectionExtent[0]) {
                        --world;
                        offsetX = worldWidth * world;
                        transforms.push(this.getRenderTransform(center, resolution, rotation, 0.5, width, height, offsetX).slice());
                        startX += worldWidth;
                    }
                    world = 0;
                    startX = extent[2];
                    while (startX > projectionExtent[2]) {
                        ++world;
                        offsetX = worldWidth * world;
                        transforms.push(this.getRenderTransform(center, resolution, rotation, 0.5, width, height, offsetX).slice());
                        startX -= worldWidth;
                    }
                }
                this.hitDetectionImageData_ = (0,_render_canvas_hitdetect_js__WEBPACK_IMPORTED_MODULE_4__.createHitDetectionImageData)(size, transforms, this.renderedFeatures_, layer.getStyleFunction(), extent, resolution, rotation);
            }
            resolve((0,_render_canvas_hitdetect_js__WEBPACK_IMPORTED_MODULE_4__.hitDetect)(pixel, this.renderedFeatures_, this.hitDetectionImageData_));
        }.bind(this));
    };
    /**
     * @param {import("../../coordinate.js").Coordinate} coordinate Coordinate.
     * @param {import("../../PluggableMap.js").FrameState} frameState Frame state.
     * @param {number} hitTolerance Hit tolerance in pixels.
     * @param {import("../vector.js").FeatureCallback<T>} callback Feature callback.
     * @param {Array<import("../Map.js").HitMatch<T>>} matches The hit detected matches with tolerance.
     * @return {T|undefined} Callback result.
     * @template T
     */
    CanvasVectorLayerRenderer.prototype.forEachFeatureAtCoordinate = function (coordinate, frameState, hitTolerance, callback, matches) {
        var _this = this;
        if (!this.replayGroup_) {
            return undefined;
        }
        var resolution = frameState.viewState.resolution;
        var rotation = frameState.viewState.rotation;
        var layer = this.getLayer();
        /** @type {!Object<string, import("../Map.js").HitMatch<T>|true>} */
        var features = {};
        /**
         * @param {import("../../Feature.js").FeatureLike} feature Feature.
         * @param {import("../../geom/SimpleGeometry.js").default} geometry Geometry.
         * @param {number} distanceSq The squared distance to the click position
         * @return {T|undefined} Callback result.
         */
        var featureCallback = function (feature, geometry, distanceSq) {
            var key = (0,_util_js__WEBPACK_IMPORTED_MODULE_5__.getUid)(feature);
            var match = features[key];
            if (!match) {
                if (distanceSq === 0) {
                    features[key] = true;
                    return callback(feature, layer, geometry);
                }
                matches.push((features[key] = {
                    feature: feature,
                    layer: layer,
                    geometry: geometry,
                    distanceSq: distanceSq,
                    callback: callback,
                }));
            }
            else if (match !== true && distanceSq < match.distanceSq) {
                if (distanceSq === 0) {
                    features[key] = true;
                    matches.splice(matches.lastIndexOf(match), 1);
                    return callback(feature, layer, geometry);
                }
                match.geometry = geometry;
                match.distanceSq = distanceSq;
            }
            return undefined;
        };
        var result;
        var executorGroups = [this.replayGroup_];
        if (this.declutterExecutorGroup) {
            executorGroups.push(this.declutterExecutorGroup);
        }
        executorGroups.some(function (executorGroup) {
            return (result = executorGroup.forEachFeatureAtCoordinate(coordinate, resolution, rotation, hitTolerance, featureCallback, executorGroup === _this.declutterExecutorGroup
                ? frameState.declutterTree.all().map(function (item) { return item.value; })
                : null));
        });
        return result;
    };
    /**
     * Perform action necessary to get the layer rendered after new fonts have loaded
     */
    CanvasVectorLayerRenderer.prototype.handleFontsChanged = function () {
        var layer = this.getLayer();
        if (layer.getVisible() && this.replayGroup_) {
            layer.changed();
        }
    };
    /**
     * Handle changes in image style state.
     * @param {import("../../events/Event.js").default} event Image style change event.
     * @private
     */
    CanvasVectorLayerRenderer.prototype.handleStyleImageChange_ = function (event) {
        this.renderIfReadyAndVisible();
    };
    /**
     * Determine whether render should be called.
     * @param {import("../../PluggableMap.js").FrameState} frameState Frame state.
     * @return {boolean} Layer is ready to be rendered.
     */
    CanvasVectorLayerRenderer.prototype.prepareFrame = function (frameState) {
        var vectorLayer = this.getLayer();
        var vectorSource = vectorLayer.getSource();
        if (!vectorSource) {
            return false;
        }
        var animating = frameState.viewHints[_ViewHint_js__WEBPACK_IMPORTED_MODULE_2__.default.ANIMATING];
        var interacting = frameState.viewHints[_ViewHint_js__WEBPACK_IMPORTED_MODULE_2__.default.INTERACTING];
        var updateWhileAnimating = vectorLayer.getUpdateWhileAnimating();
        var updateWhileInteracting = vectorLayer.getUpdateWhileInteracting();
        if ((!this.dirty_ && !updateWhileAnimating && animating) ||
            (!updateWhileInteracting && interacting)) {
            this.animatingOrInteracting_ = true;
            return true;
        }
        this.animatingOrInteracting_ = false;
        var frameStateExtent = frameState.extent;
        var viewState = frameState.viewState;
        var projection = viewState.projection;
        var resolution = viewState.resolution;
        var pixelRatio = frameState.pixelRatio;
        var vectorLayerRevision = vectorLayer.getRevision();
        var vectorLayerRenderBuffer = vectorLayer.getRenderBuffer();
        var vectorLayerRenderOrder = vectorLayer.getRenderOrder();
        if (vectorLayerRenderOrder === undefined) {
            vectorLayerRenderOrder = _vector_js__WEBPACK_IMPORTED_MODULE_6__.defaultOrder;
        }
        var center = viewState.center.slice();
        var extent = (0,_extent_js__WEBPACK_IMPORTED_MODULE_1__.buffer)(frameStateExtent, vectorLayerRenderBuffer * resolution);
        var loadExtents = [extent.slice()];
        var projectionExtent = projection.getExtent();
        if (vectorSource.getWrapX() &&
            projection.canWrapX() &&
            !(0,_extent_js__WEBPACK_IMPORTED_MODULE_1__.containsExtent)(projectionExtent, frameState.extent)) {
            // For the replay group, we need an extent that intersects the real world
            // (-180° to +180°). To support geometries in a coordinate range from -540°
            // to +540°, we add at least 1 world width on each side of the projection
            // extent. If the viewport is wider than the world, we need to add half of
            // the viewport width to make sure we cover the whole viewport.
            var worldWidth = (0,_extent_js__WEBPACK_IMPORTED_MODULE_1__.getWidth)(projectionExtent);
            var gutter = Math.max((0,_extent_js__WEBPACK_IMPORTED_MODULE_1__.getWidth)(extent) / 2, worldWidth);
            extent[0] = projectionExtent[0] - gutter;
            extent[2] = projectionExtent[2] + gutter;
            (0,_coordinate_js__WEBPACK_IMPORTED_MODULE_7__.wrapX)(center, projection);
            var loadExtent = (0,_extent_js__WEBPACK_IMPORTED_MODULE_1__.wrapX)(loadExtents[0], projection);
            // If the extent crosses the date line, we load data for both edges of the worlds
            if (loadExtent[0] < projectionExtent[0] &&
                loadExtent[2] < projectionExtent[2]) {
                loadExtents.push([
                    loadExtent[0] + worldWidth,
                    loadExtent[1],
                    loadExtent[2] + worldWidth,
                    loadExtent[3],
                ]);
            }
            else if (loadExtent[0] > projectionExtent[0] &&
                loadExtent[2] > projectionExtent[2]) {
                loadExtents.push([
                    loadExtent[0] - worldWidth,
                    loadExtent[1],
                    loadExtent[2] - worldWidth,
                    loadExtent[3],
                ]);
            }
        }
        if (!this.dirty_ &&
            this.renderedResolution_ == resolution &&
            this.renderedRevision_ == vectorLayerRevision &&
            this.renderedRenderOrder_ == vectorLayerRenderOrder &&
            (0,_extent_js__WEBPACK_IMPORTED_MODULE_1__.containsExtent)(this.renderedExtent_, extent)) {
            this.replayGroupChanged = false;
            return true;
        }
        this.replayGroup_ = null;
        this.dirty_ = false;
        var replayGroup = new _render_canvas_BuilderGroup_js__WEBPACK_IMPORTED_MODULE_8__.default((0,_vector_js__WEBPACK_IMPORTED_MODULE_6__.getTolerance)(resolution, pixelRatio), extent, resolution, pixelRatio);
        var declutterBuilderGroup;
        if (this.getLayer().getDeclutter()) {
            declutterBuilderGroup = new _render_canvas_BuilderGroup_js__WEBPACK_IMPORTED_MODULE_8__.default((0,_vector_js__WEBPACK_IMPORTED_MODULE_6__.getTolerance)(resolution, pixelRatio), extent, resolution, pixelRatio);
        }
        var userProjection = (0,_proj_js__WEBPACK_IMPORTED_MODULE_0__.getUserProjection)();
        var userTransform;
        if (userProjection) {
            for (var i = 0, ii = loadExtents.length; i < ii; ++i) {
                vectorSource.loadFeatures((0,_proj_js__WEBPACK_IMPORTED_MODULE_0__.toUserExtent)(loadExtents[i], projection), resolution, userProjection);
            }
            userTransform = (0,_proj_js__WEBPACK_IMPORTED_MODULE_0__.getTransformFromProjections)(userProjection, projection);
        }
        else {
            for (var i = 0, ii = loadExtents.length; i < ii; ++i) {
                vectorSource.loadFeatures(loadExtents[i], resolution, projection);
            }
        }
        var squaredTolerance = (0,_vector_js__WEBPACK_IMPORTED_MODULE_6__.getSquaredTolerance)(resolution, pixelRatio);
        var render = 
        /**
         * @param {import("../../Feature.js").default} feature Feature.
         * @this {CanvasVectorLayerRenderer}
         */
        function (feature) {
            var styles;
            var styleFunction = feature.getStyleFunction() || vectorLayer.getStyleFunction();
            if (styleFunction) {
                styles = styleFunction(feature, resolution);
            }
            if (styles) {
                var dirty = this.renderFeature(feature, squaredTolerance, styles, replayGroup, userTransform, declutterBuilderGroup);
                this.dirty_ = this.dirty_ || dirty;
            }
        }.bind(this);
        var userExtent = (0,_proj_js__WEBPACK_IMPORTED_MODULE_0__.toUserExtent)(extent, projection);
        /** @type {Array<import("../../Feature.js").default>} */
        var features = vectorSource.getFeaturesInExtent(userExtent);
        if (vectorLayerRenderOrder) {
            features.sort(vectorLayerRenderOrder);
        }
        for (var i = 0, ii = features.length; i < ii; ++i) {
            render(features[i]);
        }
        this.renderedFeatures_ = features;
        var replayGroupInstructions = replayGroup.finish();
        var executorGroup = new _render_canvas_ExecutorGroup_js__WEBPACK_IMPORTED_MODULE_9__.default(extent, resolution, pixelRatio, vectorSource.getOverlaps(), replayGroupInstructions, vectorLayer.getRenderBuffer());
        if (declutterBuilderGroup) {
            this.declutterExecutorGroup = new _render_canvas_ExecutorGroup_js__WEBPACK_IMPORTED_MODULE_9__.default(extent, resolution, pixelRatio, vectorSource.getOverlaps(), declutterBuilderGroup.finish(), vectorLayer.getRenderBuffer());
        }
        this.renderedResolution_ = resolution;
        this.renderedRevision_ = vectorLayerRevision;
        this.renderedRenderOrder_ = vectorLayerRenderOrder;
        this.renderedExtent_ = extent;
        this.renderedCenter_ = center;
        this.renderedProjection_ = projection;
        this.replayGroup_ = executorGroup;
        this.hitDetectionImageData_ = null;
        this.replayGroupChanged = true;
        return true;
    };
    /**
     * @param {import("../../Feature.js").default} feature Feature.
     * @param {number} squaredTolerance Squared render tolerance.
     * @param {import("../../style/Style.js").default|Array<import("../../style/Style.js").default>} styles The style or array of styles.
     * @param {import("../../render/canvas/BuilderGroup.js").default} builderGroup Builder group.
     * @param {import("../../proj.js").TransformFunction=} opt_transform Transform from user to view projection.
     * @param {import("../../render/canvas/BuilderGroup.js").default=} opt_declutterBuilderGroup Builder for decluttering.
     * @return {boolean} `true` if an image is loading.
     */
    CanvasVectorLayerRenderer.prototype.renderFeature = function (feature, squaredTolerance, styles, builderGroup, opt_transform, opt_declutterBuilderGroup) {
        if (!styles) {
            return false;
        }
        var loading = false;
        if (Array.isArray(styles)) {
            for (var i = 0, ii = styles.length; i < ii; ++i) {
                loading =
                    (0,_vector_js__WEBPACK_IMPORTED_MODULE_6__.renderFeature)(builderGroup, feature, styles[i], squaredTolerance, this.boundHandleStyleImageChange_, opt_transform, opt_declutterBuilderGroup) || loading;
            }
        }
        else {
            loading = (0,_vector_js__WEBPACK_IMPORTED_MODULE_6__.renderFeature)(builderGroup, feature, styles, squaredTolerance, this.boundHandleStyleImageChange_, opt_transform, opt_declutterBuilderGroup);
        }
        return loading;
    };
    return CanvasVectorLayerRenderer;
}(_Layer_js__WEBPACK_IMPORTED_MODULE_10__.default));
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (CanvasVectorLayerRenderer);
//# sourceMappingURL=VectorLayer.js.map

/***/ }),

/***/ "./node_modules/ol/renderer/vector.js":
/*!********************************************!*\
  !*** ./node_modules/ol/renderer/vector.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "defaultOrder": () => (/* binding */ defaultOrder),
/* harmony export */   "getSquaredTolerance": () => (/* binding */ getSquaredTolerance),
/* harmony export */   "getTolerance": () => (/* binding */ getTolerance),
/* harmony export */   "renderFeature": () => (/* binding */ renderFeature)
/* harmony export */ });
/* harmony import */ var _render_canvas_BuilderType_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../render/canvas/BuilderType.js */ "./node_modules/ol/render/canvas/BuilderType.js");
/* harmony import */ var _geom_GeometryType_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../geom/GeometryType.js */ "./node_modules/ol/geom/GeometryType.js");
/* harmony import */ var _ImageState_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../ImageState.js */ "./node_modules/ol/ImageState.js");
/* harmony import */ var _util_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util.js */ "./node_modules/ol/util.js");
/**
 * @module ol/renderer/vector
 */




/**
 * Feature callback. The callback will be called with three arguments. The first
 * argument is one {@link module:ol/Feature feature} or {@link module:ol/render/Feature render feature}
 * at the pixel, the second is the {@link module:ol/layer/Layer layer} of the feature and will be null for
 * unmanaged layers. The third is the {@link module:ol/geom/SimpleGeometry} of the feature. For features
 * with a GeometryCollection geometry, it will be the first detected geometry from the collection.
 * @template T
 * @typedef {function(import("../Feature.js").FeatureLike, import("../layer/Layer.js").default, import("../geom/SimpleGeometry.js").default): T} FeatureCallback
 */
/**
 * Tolerance for geometry simplification in device pixels.
 * @type {number}
 */
var SIMPLIFY_TOLERANCE = 0.5;
/**
 * @const
 * @type {Object<import("../geom/GeometryType.js").default,
 *                function(import("../render/canvas/BuilderGroup.js").default, import("../geom/Geometry.js").default,
 *                         import("../style/Style.js").default, Object): void>}
 */
var GEOMETRY_RENDERERS = {
    'Point': renderPointGeometry,
    'LineString': renderLineStringGeometry,
    'Polygon': renderPolygonGeometry,
    'MultiPoint': renderMultiPointGeometry,
    'MultiLineString': renderMultiLineStringGeometry,
    'MultiPolygon': renderMultiPolygonGeometry,
    'GeometryCollection': renderGeometryCollectionGeometry,
    'Circle': renderCircleGeometry,
};
/**
 * @param {import("../Feature.js").FeatureLike} feature1 Feature 1.
 * @param {import("../Feature.js").FeatureLike} feature2 Feature 2.
 * @return {number} Order.
 */
function defaultOrder(feature1, feature2) {
    return parseInt((0,_util_js__WEBPACK_IMPORTED_MODULE_0__.getUid)(feature1), 10) - parseInt((0,_util_js__WEBPACK_IMPORTED_MODULE_0__.getUid)(feature2), 10);
}
/**
 * @param {number} resolution Resolution.
 * @param {number} pixelRatio Pixel ratio.
 * @return {number} Squared pixel tolerance.
 */
function getSquaredTolerance(resolution, pixelRatio) {
    var tolerance = getTolerance(resolution, pixelRatio);
    return tolerance * tolerance;
}
/**
 * @param {number} resolution Resolution.
 * @param {number} pixelRatio Pixel ratio.
 * @return {number} Pixel tolerance.
 */
function getTolerance(resolution, pixelRatio) {
    return (SIMPLIFY_TOLERANCE * resolution) / pixelRatio;
}
/**
 * @param {import("../render/canvas/BuilderGroup.js").default} builderGroup Builder group.
 * @param {import("../geom/Circle.js").default} geometry Geometry.
 * @param {import("../style/Style.js").default} style Style.
 * @param {import("../Feature.js").default} feature Feature.
 * @param {import("../render/canvas/BuilderGroup.js").default=} opt_declutterBuilderGroup Builder for decluttering.
 */
function renderCircleGeometry(builderGroup, geometry, style, feature, opt_declutterBuilderGroup) {
    var fillStyle = style.getFill();
    var strokeStyle = style.getStroke();
    if (fillStyle || strokeStyle) {
        var circleReplay = builderGroup.getBuilder(style.getZIndex(), _render_canvas_BuilderType_js__WEBPACK_IMPORTED_MODULE_1__.default.CIRCLE);
        circleReplay.setFillStrokeStyle(fillStyle, strokeStyle);
        circleReplay.drawCircle(geometry, feature);
    }
    var textStyle = style.getText();
    if (textStyle && textStyle.getText()) {
        var textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(style.getZIndex(), _render_canvas_BuilderType_js__WEBPACK_IMPORTED_MODULE_1__.default.TEXT);
        textReplay.setTextStyle(textStyle);
        textReplay.drawText(geometry, feature);
    }
}
/**
 * @param {import("../render/canvas/BuilderGroup.js").default} replayGroup Replay group.
 * @param {import("../Feature.js").FeatureLike} feature Feature.
 * @param {import("../style/Style.js").default} style Style.
 * @param {number} squaredTolerance Squared tolerance.
 * @param {function(import("../events/Event.js").default): void} listener Listener function.
 * @param {import("../proj.js").TransformFunction} [opt_transform] Transform from user to view projection.
 * @param {import("../render/canvas/BuilderGroup.js").default=} opt_declutterBuilderGroup Builder for decluttering.
 * @return {boolean} `true` if style is loading.
 */
function renderFeature(replayGroup, feature, style, squaredTolerance, listener, opt_transform, opt_declutterBuilderGroup) {
    var loading = false;
    var imageStyle = style.getImage();
    if (imageStyle) {
        var imageState = imageStyle.getImageState();
        if (imageState == _ImageState_js__WEBPACK_IMPORTED_MODULE_2__.default.LOADED || imageState == _ImageState_js__WEBPACK_IMPORTED_MODULE_2__.default.ERROR) {
            imageStyle.unlistenImageChange(listener);
        }
        else {
            if (imageState == _ImageState_js__WEBPACK_IMPORTED_MODULE_2__.default.IDLE) {
                imageStyle.load();
            }
            imageState = imageStyle.getImageState();
            imageStyle.listenImageChange(listener);
            loading = true;
        }
    }
    renderFeatureInternal(replayGroup, feature, style, squaredTolerance, opt_transform, opt_declutterBuilderGroup);
    return loading;
}
/**
 * @param {import("../render/canvas/BuilderGroup.js").default} replayGroup Replay group.
 * @param {import("../Feature.js").FeatureLike} feature Feature.
 * @param {import("../style/Style.js").default} style Style.
 * @param {number} squaredTolerance Squared tolerance.
 * @param {import("../proj.js").TransformFunction} [opt_transform] Optional transform function.
 * @param {import("../render/canvas/BuilderGroup.js").default=} opt_declutterBuilderGroup Builder for decluttering.
 */
function renderFeatureInternal(replayGroup, feature, style, squaredTolerance, opt_transform, opt_declutterBuilderGroup) {
    var geometry = style.getGeometryFunction()(feature);
    if (!geometry) {
        return;
    }
    var simplifiedGeometry = geometry.simplifyTransformed(squaredTolerance, opt_transform);
    var renderer = style.getRenderer();
    if (renderer) {
        renderGeometry(replayGroup, simplifiedGeometry, style, feature);
    }
    else {
        var geometryRenderer = GEOMETRY_RENDERERS[simplifiedGeometry.getType()];
        geometryRenderer(replayGroup, simplifiedGeometry, style, feature, opt_declutterBuilderGroup);
    }
}
/**
 * @param {import("../render/canvas/BuilderGroup.js").default} replayGroup Replay group.
 * @param {import("../geom/Geometry.js").default|import("../render/Feature.js").default} geometry Geometry.
 * @param {import("../style/Style.js").default} style Style.
 * @param {import("../Feature.js").FeatureLike} feature Feature.
 */
function renderGeometry(replayGroup, geometry, style, feature) {
    if (geometry.getType() == _geom_GeometryType_js__WEBPACK_IMPORTED_MODULE_3__.default.GEOMETRY_COLLECTION) {
        var geometries = /** @type {import("../geom/GeometryCollection.js").default} */ (geometry).getGeometries();
        for (var i = 0, ii = geometries.length; i < ii; ++i) {
            renderGeometry(replayGroup, geometries[i], style, feature);
        }
        return;
    }
    var replay = replayGroup.getBuilder(style.getZIndex(), _render_canvas_BuilderType_js__WEBPACK_IMPORTED_MODULE_1__.default.DEFAULT);
    replay.drawCustom(
    /** @type {import("../geom/SimpleGeometry.js").default} */ (geometry), feature, style.getRenderer());
}
/**
 * @param {import("../render/canvas/BuilderGroup.js").default} replayGroup Replay group.
 * @param {import("../geom/GeometryCollection.js").default} geometry Geometry.
 * @param {import("../style/Style.js").default} style Style.
 * @param {import("../Feature.js").default} feature Feature.
 * @param {import("../render/canvas/BuilderGroup.js").default=} opt_declutterBuilderGroup Builder for decluttering.
 */
function renderGeometryCollectionGeometry(replayGroup, geometry, style, feature, opt_declutterBuilderGroup) {
    var geometries = geometry.getGeometriesArray();
    var i, ii;
    for (i = 0, ii = geometries.length; i < ii; ++i) {
        var geometryRenderer = GEOMETRY_RENDERERS[geometries[i].getType()];
        geometryRenderer(replayGroup, geometries[i], style, feature, opt_declutterBuilderGroup);
    }
}
/**
 * @param {import("../render/canvas/BuilderGroup.js").default} builderGroup Replay group.
 * @param {import("../geom/LineString.js").default|import("../render/Feature.js").default} geometry Geometry.
 * @param {import("../style/Style.js").default} style Style.
 * @param {import("../Feature.js").FeatureLike} feature Feature.
 * @param {import("../render/canvas/BuilderGroup.js").default=} opt_declutterBuilderGroup Builder for decluttering.
 */
function renderLineStringGeometry(builderGroup, geometry, style, feature, opt_declutterBuilderGroup) {
    var strokeStyle = style.getStroke();
    if (strokeStyle) {
        var lineStringReplay = builderGroup.getBuilder(style.getZIndex(), _render_canvas_BuilderType_js__WEBPACK_IMPORTED_MODULE_1__.default.LINE_STRING);
        lineStringReplay.setFillStrokeStyle(null, strokeStyle);
        lineStringReplay.drawLineString(geometry, feature);
    }
    var textStyle = style.getText();
    if (textStyle && textStyle.getText()) {
        var textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(style.getZIndex(), _render_canvas_BuilderType_js__WEBPACK_IMPORTED_MODULE_1__.default.TEXT);
        textReplay.setTextStyle(textStyle);
        textReplay.drawText(geometry, feature);
    }
}
/**
 * @param {import("../render/canvas/BuilderGroup.js").default} builderGroup Replay group.
 * @param {import("../geom/MultiLineString.js").default|import("../render/Feature.js").default} geometry Geometry.
 * @param {import("../style/Style.js").default} style Style.
 * @param {import("../Feature.js").FeatureLike} feature Feature.
 * @param {import("../render/canvas/BuilderGroup.js").default=} opt_declutterBuilderGroup Builder for decluttering.
 */
function renderMultiLineStringGeometry(builderGroup, geometry, style, feature, opt_declutterBuilderGroup) {
    var strokeStyle = style.getStroke();
    if (strokeStyle) {
        var lineStringReplay = builderGroup.getBuilder(style.getZIndex(), _render_canvas_BuilderType_js__WEBPACK_IMPORTED_MODULE_1__.default.LINE_STRING);
        lineStringReplay.setFillStrokeStyle(null, strokeStyle);
        lineStringReplay.drawMultiLineString(geometry, feature);
    }
    var textStyle = style.getText();
    if (textStyle && textStyle.getText()) {
        var textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(style.getZIndex(), _render_canvas_BuilderType_js__WEBPACK_IMPORTED_MODULE_1__.default.TEXT);
        textReplay.setTextStyle(textStyle);
        textReplay.drawText(geometry, feature);
    }
}
/**
 * @param {import("../render/canvas/BuilderGroup.js").default} builderGroup Replay group.
 * @param {import("../geom/MultiPolygon.js").default} geometry Geometry.
 * @param {import("../style/Style.js").default} style Style.
 * @param {import("../Feature.js").default} feature Feature.
 * @param {import("../render/canvas/BuilderGroup.js").default=} opt_declutterBuilderGroup Builder for decluttering.
 */
function renderMultiPolygonGeometry(builderGroup, geometry, style, feature, opt_declutterBuilderGroup) {
    var fillStyle = style.getFill();
    var strokeStyle = style.getStroke();
    if (strokeStyle || fillStyle) {
        var polygonReplay = builderGroup.getBuilder(style.getZIndex(), _render_canvas_BuilderType_js__WEBPACK_IMPORTED_MODULE_1__.default.POLYGON);
        polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);
        polygonReplay.drawMultiPolygon(geometry, feature);
    }
    var textStyle = style.getText();
    if (textStyle && textStyle.getText()) {
        var textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(style.getZIndex(), _render_canvas_BuilderType_js__WEBPACK_IMPORTED_MODULE_1__.default.TEXT);
        textReplay.setTextStyle(textStyle);
        textReplay.drawText(geometry, feature);
    }
}
/**
 * @param {import("../render/canvas/BuilderGroup.js").default} builderGroup Replay group.
 * @param {import("../geom/Point.js").default|import("../render/Feature.js").default} geometry Geometry.
 * @param {import("../style/Style.js").default} style Style.
 * @param {import("../Feature.js").FeatureLike} feature Feature.
 * @param {import("../render/canvas/BuilderGroup.js").default=} opt_declutterBuilderGroup Builder for decluttering.
 */
function renderPointGeometry(builderGroup, geometry, style, feature, opt_declutterBuilderGroup) {
    var imageStyle = style.getImage();
    var textStyle = style.getText();
    /** @type {import("../render/canvas.js").DeclutterImageWithText} */
    var declutterImageWithText;
    if (opt_declutterBuilderGroup) {
        builderGroup = opt_declutterBuilderGroup;
        declutterImageWithText =
            imageStyle && textStyle && textStyle.getText() ? {} : undefined;
    }
    if (imageStyle) {
        if (imageStyle.getImageState() != _ImageState_js__WEBPACK_IMPORTED_MODULE_2__.default.LOADED) {
            return;
        }
        var imageReplay = builderGroup.getBuilder(style.getZIndex(), _render_canvas_BuilderType_js__WEBPACK_IMPORTED_MODULE_1__.default.IMAGE);
        imageReplay.setImageStyle(imageStyle, declutterImageWithText);
        imageReplay.drawPoint(geometry, feature);
    }
    if (textStyle && textStyle.getText()) {
        var textReplay = builderGroup.getBuilder(style.getZIndex(), _render_canvas_BuilderType_js__WEBPACK_IMPORTED_MODULE_1__.default.TEXT);
        textReplay.setTextStyle(textStyle, declutterImageWithText);
        textReplay.drawText(geometry, feature);
    }
}
/**
 * @param {import("../render/canvas/BuilderGroup.js").default} builderGroup Replay group.
 * @param {import("../geom/MultiPoint.js").default|import("../render/Feature.js").default} geometry Geometry.
 * @param {import("../style/Style.js").default} style Style.
 * @param {import("../Feature.js").FeatureLike} feature Feature.
 * @param {import("../render/canvas/BuilderGroup.js").default=} opt_declutterBuilderGroup Builder for decluttering.
 */
function renderMultiPointGeometry(builderGroup, geometry, style, feature, opt_declutterBuilderGroup) {
    var imageStyle = style.getImage();
    var textStyle = style.getText();
    /** @type {import("../render/canvas.js").DeclutterImageWithText} */
    var declutterImageWithText;
    if (opt_declutterBuilderGroup) {
        builderGroup = opt_declutterBuilderGroup;
        declutterImageWithText =
            imageStyle && textStyle && textStyle.getText() ? {} : undefined;
    }
    if (imageStyle) {
        if (imageStyle.getImageState() != _ImageState_js__WEBPACK_IMPORTED_MODULE_2__.default.LOADED) {
            return;
        }
        var imageReplay = builderGroup.getBuilder(style.getZIndex(), _render_canvas_BuilderType_js__WEBPACK_IMPORTED_MODULE_1__.default.IMAGE);
        imageReplay.setImageStyle(imageStyle, declutterImageWithText);
        imageReplay.drawMultiPoint(geometry, feature);
    }
    if (textStyle && textStyle.getText()) {
        var textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(style.getZIndex(), _render_canvas_BuilderType_js__WEBPACK_IMPORTED_MODULE_1__.default.TEXT);
        textReplay.setTextStyle(textStyle, declutterImageWithText);
        textReplay.drawText(geometry, feature);
    }
}
/**
 * @param {import("../render/canvas/BuilderGroup.js").default} builderGroup Replay group.
 * @param {import("../geom/Polygon.js").default|import("../render/Feature.js").default} geometry Geometry.
 * @param {import("../style/Style.js").default} style Style.
 * @param {import("../Feature.js").FeatureLike} feature Feature.
 * @param {import("../render/canvas/BuilderGroup.js").default=} opt_declutterBuilderGroup Builder for decluttering.
 */
function renderPolygonGeometry(builderGroup, geometry, style, feature, opt_declutterBuilderGroup) {
    var fillStyle = style.getFill();
    var strokeStyle = style.getStroke();
    if (fillStyle || strokeStyle) {
        var polygonReplay = builderGroup.getBuilder(style.getZIndex(), _render_canvas_BuilderType_js__WEBPACK_IMPORTED_MODULE_1__.default.POLYGON);
        polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);
        polygonReplay.drawPolygon(geometry, feature);
    }
    var textStyle = style.getText();
    if (textStyle && textStyle.getText()) {
        var textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(style.getZIndex(), _render_canvas_BuilderType_js__WEBPACK_IMPORTED_MODULE_1__.default.TEXT);
        textReplay.setTextStyle(textStyle);
        textReplay.drawText(geometry, feature);
    }
}
//# sourceMappingURL=vector.js.map

/***/ }),

/***/ "./node_modules/ol/reproj.js":
/*!***********************************!*\
  !*** ./node_modules/ol/reproj.js ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "calculateSourceResolution": () => (/* binding */ calculateSourceResolution),
/* harmony export */   "calculateSourceExtentResolution": () => (/* binding */ calculateSourceExtentResolution),
/* harmony export */   "render": () => (/* binding */ render)
/* harmony export */ });
/* harmony import */ var _source_common_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./source/common.js */ "./node_modules/ol/source/common.js");
/* harmony import */ var _obj_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./obj.js */ "./node_modules/ol/obj.js");
/* harmony import */ var _extent_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./extent.js */ "./node_modules/ol/extent.js");
/* harmony import */ var _dom_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./dom.js */ "./node_modules/ol/dom.js");
/* harmony import */ var _proj_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./proj.js */ "./node_modules/ol/proj.js");
/* harmony import */ var _math_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./math.js */ "./node_modules/ol/math.js");
/**
 * @module ol/reproj
 */






var brokenDiagonalRendering_;
/**
 * This draws a small triangle into a canvas by setting the triangle as the clip region
 * and then drawing a (too large) rectangle
 *
 * @param {CanvasRenderingContext2D} ctx The context in which to draw the triangle
 * @param {number} u1 The x-coordinate of the second point. The first point is 0,0.
 * @param {number} v1 The y-coordinate of the second point.
 * @param {number} u2 The x-coordinate of the third point.
 * @param {number} v2 The y-coordinate of the third point.
 */
function drawTestTriangle(ctx, u1, v1, u2, v2) {
    ctx.beginPath();
    ctx.moveTo(0, 0);
    ctx.lineTo(u1, v1);
    ctx.lineTo(u2, v2);
    ctx.closePath();
    ctx.save();
    ctx.clip();
    ctx.fillRect(0, 0, Math.max(u1, u2) + 1, Math.max(v1, v2));
    ctx.restore();
}
/**
 * Given the data from getImageData, see if the right values appear at the provided offset.
 * Returns true if either the color or transparency is off
 *
 * @param {Uint8ClampedArray} data The data returned from getImageData
 * @param {number} offset The pixel offset from the start of data.
 * @return {boolean} true if the diagonal rendering is broken
 */
function verifyBrokenDiagonalRendering(data, offset) {
    // the values ought to be close to the rgba(210, 0, 0, 0.75)
    return (Math.abs(data[offset * 4] - 210) > 2 ||
        Math.abs(data[offset * 4 + 3] - 0.75 * 255) > 2);
}
/**
 * Determines if the current browser configuration can render triangular clip regions correctly.
 * This value is cached so the function is only expensive the first time called.
 * Firefox on Windows (as of now) does not if HWA is enabled. See https://bugzilla.mozilla.org/show_bug.cgi?id=1606976
 * IE also doesn't. Chrome works, and everything seems to work on OSX and Android. This function caches the
 * result. I suppose that it is conceivably possible that a browser might flip modes while the app is
 * running, but lets hope not.
 *
 * @return {boolean} true if the Diagonal Rendering is broken.
 */
function isBrokenDiagonalRendering() {
    if (brokenDiagonalRendering_ === undefined) {
        var ctx = document.createElement('canvas').getContext('2d');
        ctx.globalCompositeOperation = 'lighter';
        ctx.fillStyle = 'rgba(210, 0, 0, 0.75)';
        drawTestTriangle(ctx, 4, 5, 4, 0);
        drawTestTriangle(ctx, 4, 5, 0, 5);
        var data = ctx.getImageData(0, 0, 3, 3).data;
        brokenDiagonalRendering_ =
            verifyBrokenDiagonalRendering(data, 0) ||
                verifyBrokenDiagonalRendering(data, 4) ||
                verifyBrokenDiagonalRendering(data, 8);
    }
    return brokenDiagonalRendering_;
}
/**
 * Calculates ideal resolution to use from the source in order to achieve
 * pixel mapping as close as possible to 1:1 during reprojection.
 * The resolution is calculated regardless of what resolutions
 * are actually available in the dataset (TileGrid, Image, ...).
 *
 * @param {import("./proj/Projection.js").default} sourceProj Source projection.
 * @param {import("./proj/Projection.js").default} targetProj Target projection.
 * @param {import("./coordinate.js").Coordinate} targetCenter Target center.
 * @param {number} targetResolution Target resolution.
 * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.
 */
function calculateSourceResolution(sourceProj, targetProj, targetCenter, targetResolution) {
    var sourceCenter = (0,_proj_js__WEBPACK_IMPORTED_MODULE_0__.transform)(targetCenter, targetProj, sourceProj);
    // calculate the ideal resolution of the source data
    var sourceResolution = (0,_proj_js__WEBPACK_IMPORTED_MODULE_0__.getPointResolution)(targetProj, targetResolution, targetCenter);
    var targetMetersPerUnit = targetProj.getMetersPerUnit();
    if (targetMetersPerUnit !== undefined) {
        sourceResolution *= targetMetersPerUnit;
    }
    var sourceMetersPerUnit = sourceProj.getMetersPerUnit();
    if (sourceMetersPerUnit !== undefined) {
        sourceResolution /= sourceMetersPerUnit;
    }
    // Based on the projection properties, the point resolution at the specified
    // coordinates may be slightly different. We need to reverse-compensate this
    // in order to achieve optimal results.
    var sourceExtent = sourceProj.getExtent();
    if (!sourceExtent || (0,_extent_js__WEBPACK_IMPORTED_MODULE_1__.containsCoordinate)(sourceExtent, sourceCenter)) {
        var compensationFactor = (0,_proj_js__WEBPACK_IMPORTED_MODULE_0__.getPointResolution)(sourceProj, sourceResolution, sourceCenter) /
            sourceResolution;
        if (isFinite(compensationFactor) && compensationFactor > 0) {
            sourceResolution /= compensationFactor;
        }
    }
    return sourceResolution;
}
/**
 * Calculates ideal resolution to use from the source in order to achieve
 * pixel mapping as close as possible to 1:1 during reprojection.
 * The resolution is calculated regardless of what resolutions
 * are actually available in the dataset (TileGrid, Image, ...).
 *
 * @param {import("./proj/Projection.js").default} sourceProj Source projection.
 * @param {import("./proj/Projection.js").default} targetProj Target projection.
 * @param {import("./extent.js").Extent} targetExtent Target extent
 * @param {number} targetResolution Target resolution.
 * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.
 */
function calculateSourceExtentResolution(sourceProj, targetProj, targetExtent, targetResolution) {
    var targetCenter = (0,_extent_js__WEBPACK_IMPORTED_MODULE_1__.getCenter)(targetExtent);
    var sourceResolution = calculateSourceResolution(sourceProj, targetProj, targetCenter, targetResolution);
    if (!isFinite(sourceResolution) || sourceResolution <= 0) {
        (0,_extent_js__WEBPACK_IMPORTED_MODULE_1__.forEachCorner)(targetExtent, function (corner) {
            sourceResolution = calculateSourceResolution(sourceProj, targetProj, corner, targetResolution);
            return isFinite(sourceResolution) && sourceResolution > 0;
        });
    }
    return sourceResolution;
}
/**
 * Renders the source data into new canvas based on the triangulation.
 *
 * @param {number} width Width of the canvas.
 * @param {number} height Height of the canvas.
 * @param {number} pixelRatio Pixel ratio.
 * @param {number} sourceResolution Source resolution.
 * @param {import("./extent.js").Extent} sourceExtent Extent of the data source.
 * @param {number} targetResolution Target resolution.
 * @param {import("./extent.js").Extent} targetExtent Target extent.
 * @param {import("./reproj/Triangulation.js").default} triangulation
 * Calculated triangulation.
 * @param {Array<{extent: import("./extent.js").Extent,
 *                 image: (HTMLCanvasElement|HTMLImageElement|HTMLVideoElement)}>} sources
 * Array of sources.
 * @param {number} gutter Gutter of the sources.
 * @param {boolean=} opt_renderEdges Render reprojection edges.
 * @param {object=} opt_contextOptions Properties to set on the canvas context.
 * @return {HTMLCanvasElement} Canvas with reprojected data.
 */
function render(width, height, pixelRatio, sourceResolution, sourceExtent, targetResolution, targetExtent, triangulation, sources, gutter, opt_renderEdges, opt_contextOptions) {
    var context = (0,_dom_js__WEBPACK_IMPORTED_MODULE_2__.createCanvasContext2D)(Math.round(pixelRatio * width), Math.round(pixelRatio * height));
    (0,_obj_js__WEBPACK_IMPORTED_MODULE_3__.assign)(context, opt_contextOptions);
    if (sources.length === 0) {
        return context.canvas;
    }
    context.scale(pixelRatio, pixelRatio);
    function pixelRound(value) {
        return Math.round(value * pixelRatio) / pixelRatio;
    }
    context.globalCompositeOperation = 'lighter';
    var sourceDataExtent = (0,_extent_js__WEBPACK_IMPORTED_MODULE_1__.createEmpty)();
    sources.forEach(function (src, i, arr) {
        (0,_extent_js__WEBPACK_IMPORTED_MODULE_1__.extend)(sourceDataExtent, src.extent);
    });
    var canvasWidthInUnits = (0,_extent_js__WEBPACK_IMPORTED_MODULE_1__.getWidth)(sourceDataExtent);
    var canvasHeightInUnits = (0,_extent_js__WEBPACK_IMPORTED_MODULE_1__.getHeight)(sourceDataExtent);
    var stitchContext = (0,_dom_js__WEBPACK_IMPORTED_MODULE_2__.createCanvasContext2D)(Math.round((pixelRatio * canvasWidthInUnits) / sourceResolution), Math.round((pixelRatio * canvasHeightInUnits) / sourceResolution));
    (0,_obj_js__WEBPACK_IMPORTED_MODULE_3__.assign)(stitchContext, opt_contextOptions);
    var stitchScale = pixelRatio / sourceResolution;
    sources.forEach(function (src, i, arr) {
        var xPos = src.extent[0] - sourceDataExtent[0];
        var yPos = -(src.extent[3] - sourceDataExtent[3]);
        var srcWidth = (0,_extent_js__WEBPACK_IMPORTED_MODULE_1__.getWidth)(src.extent);
        var srcHeight = (0,_extent_js__WEBPACK_IMPORTED_MODULE_1__.getHeight)(src.extent);
        // This test should never fail -- but it does. Need to find a fix the upstream condition
        if (src.image.width > 0 && src.image.height > 0) {
            stitchContext.drawImage(src.image, gutter, gutter, src.image.width - 2 * gutter, src.image.height - 2 * gutter, xPos * stitchScale, yPos * stitchScale, srcWidth * stitchScale, srcHeight * stitchScale);
        }
    });
    var targetTopLeft = (0,_extent_js__WEBPACK_IMPORTED_MODULE_1__.getTopLeft)(targetExtent);
    triangulation.getTriangles().forEach(function (triangle, i, arr) {
        /* Calculate affine transform (src -> dst)
         * Resulting matrix can be used to transform coordinate
         * from `sourceProjection` to destination pixels.
         *
         * To optimize number of context calls and increase numerical stability,
         * we also do the following operations:
         * trans(-topLeftExtentCorner), scale(1 / targetResolution), scale(1, -1)
         * here before solving the linear system so [ui, vi] are pixel coordinates.
         *
         * Src points: xi, yi
         * Dst points: ui, vi
         * Affine coefficients: aij
         *
         * | x0 y0 1  0  0 0 |   |a00|   |u0|
         * | x1 y1 1  0  0 0 |   |a01|   |u1|
         * | x2 y2 1  0  0 0 | x |a02| = |u2|
         * |  0  0 0 x0 y0 1 |   |a10|   |v0|
         * |  0  0 0 x1 y1 1 |   |a11|   |v1|
         * |  0  0 0 x2 y2 1 |   |a12|   |v2|
         */
        var source = triangle.source;
        var target = triangle.target;
        var x0 = source[0][0], y0 = source[0][1];
        var x1 = source[1][0], y1 = source[1][1];
        var x2 = source[2][0], y2 = source[2][1];
        // Make sure that everything is on pixel boundaries
        var u0 = pixelRound((target[0][0] - targetTopLeft[0]) / targetResolution);
        var v0 = pixelRound(-(target[0][1] - targetTopLeft[1]) / targetResolution);
        var u1 = pixelRound((target[1][0] - targetTopLeft[0]) / targetResolution);
        var v1 = pixelRound(-(target[1][1] - targetTopLeft[1]) / targetResolution);
        var u2 = pixelRound((target[2][0] - targetTopLeft[0]) / targetResolution);
        var v2 = pixelRound(-(target[2][1] - targetTopLeft[1]) / targetResolution);
        // Shift all the source points to improve numerical stability
        // of all the subsequent calculations. The [x0, y0] is used here.
        // This is also used to simplify the linear system.
        var sourceNumericalShiftX = x0;
        var sourceNumericalShiftY = y0;
        x0 = 0;
        y0 = 0;
        x1 -= sourceNumericalShiftX;
        y1 -= sourceNumericalShiftY;
        x2 -= sourceNumericalShiftX;
        y2 -= sourceNumericalShiftY;
        var augmentedMatrix = [
            [x1, y1, 0, 0, u1 - u0],
            [x2, y2, 0, 0, u2 - u0],
            [0, 0, x1, y1, v1 - v0],
            [0, 0, x2, y2, v2 - v0],
        ];
        var affineCoefs = (0,_math_js__WEBPACK_IMPORTED_MODULE_4__.solveLinearSystem)(augmentedMatrix);
        if (!affineCoefs) {
            return;
        }
        context.save();
        context.beginPath();
        if (isBrokenDiagonalRendering() ||
            opt_contextOptions === _source_common_js__WEBPACK_IMPORTED_MODULE_5__.IMAGE_SMOOTHING_DISABLED) {
            // Make sure that all lines are horizontal or vertical
            context.moveTo(u1, v1);
            // This is the diagonal line. Do it in 4 steps
            var steps = 4;
            var ud = u0 - u1;
            var vd = v0 - v1;
            for (var step = 0; step < steps; step++) {
                // Go horizontally
                context.lineTo(u1 + pixelRound(((step + 1) * ud) / steps), v1 + pixelRound((step * vd) / (steps - 1)));
                // Go vertically
                if (step != steps - 1) {
                    context.lineTo(u1 + pixelRound(((step + 1) * ud) / steps), v1 + pixelRound(((step + 1) * vd) / (steps - 1)));
                }
            }
            // We are almost at u0r, v0r
            context.lineTo(u2, v2);
        }
        else {
            context.moveTo(u1, v1);
            context.lineTo(u0, v0);
            context.lineTo(u2, v2);
        }
        context.clip();
        context.transform(affineCoefs[0], affineCoefs[2], affineCoefs[1], affineCoefs[3], u0, v0);
        context.translate(sourceDataExtent[0] - sourceNumericalShiftX, sourceDataExtent[3] - sourceNumericalShiftY);
        context.scale(sourceResolution / pixelRatio, -sourceResolution / pixelRatio);
        context.drawImage(stitchContext.canvas, 0, 0);
        context.restore();
    });
    if (opt_renderEdges) {
        context.save();
        context.globalCompositeOperation = 'source-over';
        context.strokeStyle = 'black';
        context.lineWidth = 1;
        triangulation.getTriangles().forEach(function (triangle, i, arr) {
            var target = triangle.target;
            var u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;
            var v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;
            var u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;
            var v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;
            var u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;
            var v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;
            context.beginPath();
            context.moveTo(u1, v1);
            context.lineTo(u0, v0);
            context.lineTo(u2, v2);
            context.closePath();
            context.stroke();
        });
        context.restore();
    }
    return context.canvas;
}
//# sourceMappingURL=reproj.js.map

/***/ }),

/***/ "./node_modules/ol/reproj/Tile.js":
/*!****************************************!*\
  !*** ./node_modules/ol/reproj/Tile.js ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _common_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./common.js */ "./node_modules/ol/reproj/common.js");
/* harmony import */ var _events_EventType_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../events/EventType.js */ "./node_modules/ol/events/EventType.js");
/* harmony import */ var _Tile_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../Tile.js */ "./node_modules/ol/Tile.js");
/* harmony import */ var _TileState_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../TileState.js */ "./node_modules/ol/TileState.js");
/* harmony import */ var _Triangulation_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./Triangulation.js */ "./node_modules/ol/reproj/Triangulation.js");
/* harmony import */ var _reproj_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../reproj.js */ "./node_modules/ol/reproj.js");
/* harmony import */ var _math_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../math.js */ "./node_modules/ol/math.js");
/* harmony import */ var _extent_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../extent.js */ "./node_modules/ol/extent.js");
/* harmony import */ var _events_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../events.js */ "./node_modules/ol/events.js");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
/**
 * @module ol/reproj/Tile
 */









/**
 * @typedef {function(number, number, number, number) : import("../Tile.js").default} FunctionType
 */
/**
 * @classdesc
 * Class encapsulating single reprojected tile.
 * See {@link module:ol/source/TileImage~TileImage}.
 *
 */
var ReprojTile = /** @class */ (function (_super) {
    __extends(ReprojTile, _super);
    /**
     * @param {import("../proj/Projection.js").default} sourceProj Source projection.
     * @param {import("../tilegrid/TileGrid.js").default} sourceTileGrid Source tile grid.
     * @param {import("../proj/Projection.js").default} targetProj Target projection.
     * @param {import("../tilegrid/TileGrid.js").default} targetTileGrid Target tile grid.
     * @param {import("../tilecoord.js").TileCoord} tileCoord Coordinate of the tile.
     * @param {import("../tilecoord.js").TileCoord} wrappedTileCoord Coordinate of the tile wrapped in X.
     * @param {number} pixelRatio Pixel ratio.
     * @param {number} gutter Gutter of the source tiles.
     * @param {FunctionType} getTileFunction
     *     Function returning source tiles (z, x, y, pixelRatio).
     * @param {number=} opt_errorThreshold Acceptable reprojection error (in px).
     * @param {boolean=} opt_renderEdges Render reprojection edges.
     * @param {object=} opt_contextOptions Properties to set on the canvas context.
     */
    function ReprojTile(sourceProj, sourceTileGrid, targetProj, targetTileGrid, tileCoord, wrappedTileCoord, pixelRatio, gutter, getTileFunction, opt_errorThreshold, opt_renderEdges, opt_contextOptions) {
        var _this = _super.call(this, tileCoord, _TileState_js__WEBPACK_IMPORTED_MODULE_0__.default.IDLE) || this;
        /**
         * @private
         * @type {boolean}
         */
        _this.renderEdges_ = opt_renderEdges !== undefined ? opt_renderEdges : false;
        /**
         * @private
         * @type {object}
         */
        _this.contextOptions_ = opt_contextOptions;
        /**
         * @private
         * @type {number}
         */
        _this.pixelRatio_ = pixelRatio;
        /**
         * @private
         * @type {number}
         */
        _this.gutter_ = gutter;
        /**
         * @private
         * @type {HTMLCanvasElement}
         */
        _this.canvas_ = null;
        /**
         * @private
         * @type {import("../tilegrid/TileGrid.js").default}
         */
        _this.sourceTileGrid_ = sourceTileGrid;
        /**
         * @private
         * @type {import("../tilegrid/TileGrid.js").default}
         */
        _this.targetTileGrid_ = targetTileGrid;
        /**
         * @private
         * @type {import("../tilecoord.js").TileCoord}
         */
        _this.wrappedTileCoord_ = wrappedTileCoord ? wrappedTileCoord : tileCoord;
        /**
         * @private
         * @type {!Array<import("../Tile.js").default>}
         */
        _this.sourceTiles_ = [];
        /**
         * @private
         * @type {?Array<import("../events.js").EventsKey>}
         */
        _this.sourcesListenerKeys_ = null;
        /**
         * @private
         * @type {number}
         */
        _this.sourceZ_ = 0;
        var targetExtent = targetTileGrid.getTileCoordExtent(_this.wrappedTileCoord_);
        var maxTargetExtent = _this.targetTileGrid_.getExtent();
        var maxSourceExtent = _this.sourceTileGrid_.getExtent();
        var limitedTargetExtent = maxTargetExtent
            ? (0,_extent_js__WEBPACK_IMPORTED_MODULE_1__.getIntersection)(targetExtent, maxTargetExtent)
            : targetExtent;
        if ((0,_extent_js__WEBPACK_IMPORTED_MODULE_1__.getArea)(limitedTargetExtent) === 0) {
            // Tile is completely outside range -> EMPTY
            // TODO: is it actually correct that the source even creates the tile ?
            _this.state = _TileState_js__WEBPACK_IMPORTED_MODULE_0__.default.EMPTY;
            return _this;
        }
        var sourceProjExtent = sourceProj.getExtent();
        if (sourceProjExtent) {
            if (!maxSourceExtent) {
                maxSourceExtent = sourceProjExtent;
            }
            else {
                maxSourceExtent = (0,_extent_js__WEBPACK_IMPORTED_MODULE_1__.getIntersection)(maxSourceExtent, sourceProjExtent);
            }
        }
        var targetResolution = targetTileGrid.getResolution(_this.wrappedTileCoord_[0]);
        var sourceResolution = (0,_reproj_js__WEBPACK_IMPORTED_MODULE_2__.calculateSourceExtentResolution)(sourceProj, targetProj, limitedTargetExtent, targetResolution);
        if (!isFinite(sourceResolution) || sourceResolution <= 0) {
            // invalid sourceResolution -> EMPTY
            // probably edges of the projections when no extent is defined
            _this.state = _TileState_js__WEBPACK_IMPORTED_MODULE_0__.default.EMPTY;
            return _this;
        }
        var errorThresholdInPixels = opt_errorThreshold !== undefined ? opt_errorThreshold : _common_js__WEBPACK_IMPORTED_MODULE_3__.ERROR_THRESHOLD;
        /**
         * @private
         * @type {!import("./Triangulation.js").default}
         */
        _this.triangulation_ = new _Triangulation_js__WEBPACK_IMPORTED_MODULE_4__.default(sourceProj, targetProj, limitedTargetExtent, maxSourceExtent, sourceResolution * errorThresholdInPixels, targetResolution);
        if (_this.triangulation_.getTriangles().length === 0) {
            // no valid triangles -> EMPTY
            _this.state = _TileState_js__WEBPACK_IMPORTED_MODULE_0__.default.EMPTY;
            return _this;
        }
        _this.sourceZ_ = sourceTileGrid.getZForResolution(sourceResolution);
        var sourceExtent = _this.triangulation_.calculateSourceExtent();
        if (maxSourceExtent) {
            if (sourceProj.canWrapX()) {
                sourceExtent[1] = (0,_math_js__WEBPACK_IMPORTED_MODULE_5__.clamp)(sourceExtent[1], maxSourceExtent[1], maxSourceExtent[3]);
                sourceExtent[3] = (0,_math_js__WEBPACK_IMPORTED_MODULE_5__.clamp)(sourceExtent[3], maxSourceExtent[1], maxSourceExtent[3]);
            }
            else {
                sourceExtent = (0,_extent_js__WEBPACK_IMPORTED_MODULE_1__.getIntersection)(sourceExtent, maxSourceExtent);
            }
        }
        if (!(0,_extent_js__WEBPACK_IMPORTED_MODULE_1__.getArea)(sourceExtent)) {
            _this.state = _TileState_js__WEBPACK_IMPORTED_MODULE_0__.default.EMPTY;
        }
        else {
            var sourceRange = sourceTileGrid.getTileRangeForExtentAndZ(sourceExtent, _this.sourceZ_);
            for (var srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {
                for (var srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {
                    var tile = getTileFunction(_this.sourceZ_, srcX, srcY, pixelRatio);
                    if (tile) {
                        _this.sourceTiles_.push(tile);
                    }
                }
            }
            if (_this.sourceTiles_.length === 0) {
                _this.state = _TileState_js__WEBPACK_IMPORTED_MODULE_0__.default.EMPTY;
            }
        }
        return _this;
    }
    /**
     * Get the HTML Canvas element for this tile.
     * @return {HTMLCanvasElement} Canvas.
     */
    ReprojTile.prototype.getImage = function () {
        return this.canvas_;
    };
    /**
     * @private
     */
    ReprojTile.prototype.reproject_ = function () {
        var sources = [];
        this.sourceTiles_.forEach(function (tile, i, arr) {
            if (tile && tile.getState() == _TileState_js__WEBPACK_IMPORTED_MODULE_0__.default.LOADED) {
                sources.push({
                    extent: this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord),
                    image: tile.getImage(),
                });
            }
        }.bind(this));
        this.sourceTiles_.length = 0;
        if (sources.length === 0) {
            this.state = _TileState_js__WEBPACK_IMPORTED_MODULE_0__.default.ERROR;
        }
        else {
            var z = this.wrappedTileCoord_[0];
            var size = this.targetTileGrid_.getTileSize(z);
            var width = typeof size === 'number' ? size : size[0];
            var height = typeof size === 'number' ? size : size[1];
            var targetResolution = this.targetTileGrid_.getResolution(z);
            var sourceResolution = this.sourceTileGrid_.getResolution(this.sourceZ_);
            var targetExtent = this.targetTileGrid_.getTileCoordExtent(this.wrappedTileCoord_);
            this.canvas_ = (0,_reproj_js__WEBPACK_IMPORTED_MODULE_2__.render)(width, height, this.pixelRatio_, sourceResolution, this.sourceTileGrid_.getExtent(), targetResolution, targetExtent, this.triangulation_, sources, this.gutter_, this.renderEdges_, this.contextOptions_);
            this.state = _TileState_js__WEBPACK_IMPORTED_MODULE_0__.default.LOADED;
        }
        this.changed();
    };
    /**
     * Load not yet loaded URI.
     */
    ReprojTile.prototype.load = function () {
        if (this.state == _TileState_js__WEBPACK_IMPORTED_MODULE_0__.default.IDLE) {
            this.state = _TileState_js__WEBPACK_IMPORTED_MODULE_0__.default.LOADING;
            this.changed();
            var leftToLoad_1 = 0;
            this.sourcesListenerKeys_ = [];
            this.sourceTiles_.forEach(function (tile, i, arr) {
                var state = tile.getState();
                if (state == _TileState_js__WEBPACK_IMPORTED_MODULE_0__.default.IDLE || state == _TileState_js__WEBPACK_IMPORTED_MODULE_0__.default.LOADING) {
                    leftToLoad_1++;
                    var sourceListenKey_1 = (0,_events_js__WEBPACK_IMPORTED_MODULE_6__.listen)(tile, _events_EventType_js__WEBPACK_IMPORTED_MODULE_7__.default.CHANGE, function (e) {
                        var state = tile.getState();
                        if (state == _TileState_js__WEBPACK_IMPORTED_MODULE_0__.default.LOADED ||
                            state == _TileState_js__WEBPACK_IMPORTED_MODULE_0__.default.ERROR ||
                            state == _TileState_js__WEBPACK_IMPORTED_MODULE_0__.default.EMPTY) {
                            (0,_events_js__WEBPACK_IMPORTED_MODULE_6__.unlistenByKey)(sourceListenKey_1);
                            leftToLoad_1--;
                            if (leftToLoad_1 === 0) {
                                this.unlistenSources_();
                                this.reproject_();
                            }
                        }
                    }, this);
                    this.sourcesListenerKeys_.push(sourceListenKey_1);
                }
            }.bind(this));
            this.sourceTiles_.forEach(function (tile, i, arr) {
                var state = tile.getState();
                if (state == _TileState_js__WEBPACK_IMPORTED_MODULE_0__.default.IDLE) {
                    tile.load();
                }
            });
            if (leftToLoad_1 === 0) {
                setTimeout(this.reproject_.bind(this), 0);
            }
        }
    };
    /**
     * @private
     */
    ReprojTile.prototype.unlistenSources_ = function () {
        this.sourcesListenerKeys_.forEach(_events_js__WEBPACK_IMPORTED_MODULE_6__.unlistenByKey);
        this.sourcesListenerKeys_ = null;
    };
    return ReprojTile;
}(_Tile_js__WEBPACK_IMPORTED_MODULE_8__.default));
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (ReprojTile);
//# sourceMappingURL=Tile.js.map

/***/ }),

/***/ "./node_modules/ol/reproj/Triangulation.js":
/*!*************************************************!*\
  !*** ./node_modules/ol/reproj/Triangulation.js ***!
  \*************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _extent_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../extent.js */ "./node_modules/ol/extent.js");
/* harmony import */ var _proj_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../proj.js */ "./node_modules/ol/proj.js");
/* harmony import */ var _math_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../math.js */ "./node_modules/ol/math.js");
/**
 * @module ol/reproj/Triangulation
 */



/**
 * Single triangle; consists of 3 source points and 3 target points.
 * @typedef {Object} Triangle
 * @property {Array<import("../coordinate.js").Coordinate>} source
 * @property {Array<import("../coordinate.js").Coordinate>} target
 */
/**
 * Maximum number of subdivision steps during raster reprojection triangulation.
 * Prevents high memory usage and large number of proj4 calls (for certain
 * transformations and areas). At most `2*(2^this)` triangles are created for
 * each triangulated extent (tile/image).
 * @type {number}
 */
var MAX_SUBDIVISION = 10;
/**
 * Maximum allowed size of triangle relative to world width. When transforming
 * corners of world extent between certain projections, the resulting
 * triangulation seems to have zero error and no subdivision is performed. If
 * the triangle width is more than this (relative to world width; 0-1),
 * subdivison is forced (up to `MAX_SUBDIVISION`). Default is `0.25`.
 * @type {number}
 */
var MAX_TRIANGLE_WIDTH = 0.25;
/**
 * @classdesc
 * Class containing triangulation of the given target extent.
 * Used for determining source data and the reprojection itself.
 */
var Triangulation = /** @class */ (function () {
    /**
     * @param {import("../proj/Projection.js").default} sourceProj Source projection.
     * @param {import("../proj/Projection.js").default} targetProj Target projection.
     * @param {import("../extent.js").Extent} targetExtent Target extent to triangulate.
     * @param {import("../extent.js").Extent} maxSourceExtent Maximal source extent that can be used.
     * @param {number} errorThreshold Acceptable error (in source units).
     * @param {?number} opt_destinationResolution The (optional) resolution of the destination.
     */
    function Triangulation(sourceProj, targetProj, targetExtent, maxSourceExtent, errorThreshold, opt_destinationResolution) {
        /**
         * @type {import("../proj/Projection.js").default}
         * @private
         */
        this.sourceProj_ = sourceProj;
        /**
         * @type {import("../proj/Projection.js").default}
         * @private
         */
        this.targetProj_ = targetProj;
        /** @type {!Object<string, import("../coordinate.js").Coordinate>} */
        var transformInvCache = {};
        var transformInv = (0,_proj_js__WEBPACK_IMPORTED_MODULE_0__.getTransform)(this.targetProj_, this.sourceProj_);
        /**
         * @param {import("../coordinate.js").Coordinate} c A coordinate.
         * @return {import("../coordinate.js").Coordinate} Transformed coordinate.
         * @private
         */
        this.transformInv_ = function (c) {
            var key = c[0] + '/' + c[1];
            if (!transformInvCache[key]) {
                transformInvCache[key] = transformInv(c);
            }
            return transformInvCache[key];
        };
        /**
         * @type {import("../extent.js").Extent}
         * @private
         */
        this.maxSourceExtent_ = maxSourceExtent;
        /**
         * @type {number}
         * @private
         */
        this.errorThresholdSquared_ = errorThreshold * errorThreshold;
        /**
         * @type {Array<Triangle>}
         * @private
         */
        this.triangles_ = [];
        /**
         * Indicates that the triangulation crosses edge of the source projection.
         * @type {boolean}
         * @private
         */
        this.wrapsXInSource_ = false;
        /**
         * @type {boolean}
         * @private
         */
        this.canWrapXInSource_ =
            this.sourceProj_.canWrapX() &&
                !!maxSourceExtent &&
                !!this.sourceProj_.getExtent() &&
                (0,_extent_js__WEBPACK_IMPORTED_MODULE_1__.getWidth)(maxSourceExtent) == (0,_extent_js__WEBPACK_IMPORTED_MODULE_1__.getWidth)(this.sourceProj_.getExtent());
        /**
         * @type {?number}
         * @private
         */
        this.sourceWorldWidth_ = this.sourceProj_.getExtent()
            ? (0,_extent_js__WEBPACK_IMPORTED_MODULE_1__.getWidth)(this.sourceProj_.getExtent())
            : null;
        /**
         * @type {?number}
         * @private
         */
        this.targetWorldWidth_ = this.targetProj_.getExtent()
            ? (0,_extent_js__WEBPACK_IMPORTED_MODULE_1__.getWidth)(this.targetProj_.getExtent())
            : null;
        var destinationTopLeft = (0,_extent_js__WEBPACK_IMPORTED_MODULE_1__.getTopLeft)(targetExtent);
        var destinationTopRight = (0,_extent_js__WEBPACK_IMPORTED_MODULE_1__.getTopRight)(targetExtent);
        var destinationBottomRight = (0,_extent_js__WEBPACK_IMPORTED_MODULE_1__.getBottomRight)(targetExtent);
        var destinationBottomLeft = (0,_extent_js__WEBPACK_IMPORTED_MODULE_1__.getBottomLeft)(targetExtent);
        var sourceTopLeft = this.transformInv_(destinationTopLeft);
        var sourceTopRight = this.transformInv_(destinationTopRight);
        var sourceBottomRight = this.transformInv_(destinationBottomRight);
        var sourceBottomLeft = this.transformInv_(destinationBottomLeft);
        /*
         * The maxSubdivision controls how many splittings of the target area can
         * be done. The idea here is to do a linear mapping of the target areas
         * but the actual overal reprojection (can be) extremely non-linear. The
         * default value of MAX_SUBDIVISION was chosen based on mapping a 256x256
         * tile size. However this function is also called to remap canvas rendered
         * layers which can be much larger. This calculation increases the maxSubdivision
         * value by the right factor so that each 256x256 pixel area has
         * MAX_SUBDIVISION divisions.
         */
        var maxSubdivision = MAX_SUBDIVISION +
            (opt_destinationResolution
                ? Math.max(0, Math.ceil((0,_math_js__WEBPACK_IMPORTED_MODULE_2__.log2)((0,_extent_js__WEBPACK_IMPORTED_MODULE_1__.getArea)(targetExtent) /
                    (opt_destinationResolution *
                        opt_destinationResolution *
                        256 *
                        256))))
                : 0);
        this.addQuad_(destinationTopLeft, destinationTopRight, destinationBottomRight, destinationBottomLeft, sourceTopLeft, sourceTopRight, sourceBottomRight, sourceBottomLeft, maxSubdivision);
        if (this.wrapsXInSource_) {
            var leftBound_1 = Infinity;
            this.triangles_.forEach(function (triangle, i, arr) {
                leftBound_1 = Math.min(leftBound_1, triangle.source[0][0], triangle.source[1][0], triangle.source[2][0]);
            });
            // Shift triangles to be as close to `leftBound` as possible
            // (if the distance is more than `worldWidth / 2` it can be closer.
            this.triangles_.forEach(function (triangle) {
                if (Math.max(triangle.source[0][0], triangle.source[1][0], triangle.source[2][0]) -
                    leftBound_1 >
                    this.sourceWorldWidth_ / 2) {
                    var newTriangle = [
                        [triangle.source[0][0], triangle.source[0][1]],
                        [triangle.source[1][0], triangle.source[1][1]],
                        [triangle.source[2][0], triangle.source[2][1]],
                    ];
                    if (newTriangle[0][0] - leftBound_1 > this.sourceWorldWidth_ / 2) {
                        newTriangle[0][0] -= this.sourceWorldWidth_;
                    }
                    if (newTriangle[1][0] - leftBound_1 > this.sourceWorldWidth_ / 2) {
                        newTriangle[1][0] -= this.sourceWorldWidth_;
                    }
                    if (newTriangle[2][0] - leftBound_1 > this.sourceWorldWidth_ / 2) {
                        newTriangle[2][0] -= this.sourceWorldWidth_;
                    }
                    // Rarely (if the extent contains both the dateline and prime meridian)
                    // the shift can in turn break some triangles.
                    // Detect this here and don't shift in such cases.
                    var minX = Math.min(newTriangle[0][0], newTriangle[1][0], newTriangle[2][0]);
                    var maxX = Math.max(newTriangle[0][0], newTriangle[1][0], newTriangle[2][0]);
                    if (maxX - minX < this.sourceWorldWidth_ / 2) {
                        triangle.source = newTriangle;
                    }
                }
            }.bind(this));
        }
        transformInvCache = {};
    }
    /**
     * Adds triangle to the triangulation.
     * @param {import("../coordinate.js").Coordinate} a The target a coordinate.
     * @param {import("../coordinate.js").Coordinate} b The target b coordinate.
     * @param {import("../coordinate.js").Coordinate} c The target c coordinate.
     * @param {import("../coordinate.js").Coordinate} aSrc The source a coordinate.
     * @param {import("../coordinate.js").Coordinate} bSrc The source b coordinate.
     * @param {import("../coordinate.js").Coordinate} cSrc The source c coordinate.
     * @private
     */
    Triangulation.prototype.addTriangle_ = function (a, b, c, aSrc, bSrc, cSrc) {
        this.triangles_.push({
            source: [aSrc, bSrc, cSrc],
            target: [a, b, c],
        });
    };
    /**
     * Adds quad (points in clock-wise order) to the triangulation
     * (and reprojects the vertices) if valid.
     * Performs quad subdivision if needed to increase precision.
     *
     * @param {import("../coordinate.js").Coordinate} a The target a coordinate.
     * @param {import("../coordinate.js").Coordinate} b The target b coordinate.
     * @param {import("../coordinate.js").Coordinate} c The target c coordinate.
     * @param {import("../coordinate.js").Coordinate} d The target d coordinate.
     * @param {import("../coordinate.js").Coordinate} aSrc The source a coordinate.
     * @param {import("../coordinate.js").Coordinate} bSrc The source b coordinate.
     * @param {import("../coordinate.js").Coordinate} cSrc The source c coordinate.
     * @param {import("../coordinate.js").Coordinate} dSrc The source d coordinate.
     * @param {number} maxSubdivision Maximal allowed subdivision of the quad.
     * @private
     */
    Triangulation.prototype.addQuad_ = function (a, b, c, d, aSrc, bSrc, cSrc, dSrc, maxSubdivision) {
        var sourceQuadExtent = (0,_extent_js__WEBPACK_IMPORTED_MODULE_1__.boundingExtent)([aSrc, bSrc, cSrc, dSrc]);
        var sourceCoverageX = this.sourceWorldWidth_
            ? (0,_extent_js__WEBPACK_IMPORTED_MODULE_1__.getWidth)(sourceQuadExtent) / this.sourceWorldWidth_
            : null;
        var sourceWorldWidth = /** @type {number} */ (this.sourceWorldWidth_);
        // when the quad is wrapped in the source projection
        // it covers most of the projection extent, but not fully
        var wrapsX = this.sourceProj_.canWrapX() &&
            sourceCoverageX > 0.5 &&
            sourceCoverageX < 1;
        var needsSubdivision = false;
        if (maxSubdivision > 0) {
            if (this.targetProj_.isGlobal() && this.targetWorldWidth_) {
                var targetQuadExtent = (0,_extent_js__WEBPACK_IMPORTED_MODULE_1__.boundingExtent)([a, b, c, d]);
                var targetCoverageX = (0,_extent_js__WEBPACK_IMPORTED_MODULE_1__.getWidth)(targetQuadExtent) / this.targetWorldWidth_;
                needsSubdivision =
                    targetCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;
            }
            if (!wrapsX && this.sourceProj_.isGlobal() && sourceCoverageX) {
                needsSubdivision =
                    sourceCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;
            }
        }
        if (!needsSubdivision && this.maxSourceExtent_) {
            if (isFinite(sourceQuadExtent[0]) &&
                isFinite(sourceQuadExtent[1]) &&
                isFinite(sourceQuadExtent[2]) &&
                isFinite(sourceQuadExtent[3])) {
                if (!(0,_extent_js__WEBPACK_IMPORTED_MODULE_1__.intersects)(sourceQuadExtent, this.maxSourceExtent_)) {
                    // whole quad outside source projection extent -> ignore
                    return;
                }
            }
        }
        var isNotFinite = 0;
        if (!needsSubdivision) {
            if (!isFinite(aSrc[0]) ||
                !isFinite(aSrc[1]) ||
                !isFinite(bSrc[0]) ||
                !isFinite(bSrc[1]) ||
                !isFinite(cSrc[0]) ||
                !isFinite(cSrc[1]) ||
                !isFinite(dSrc[0]) ||
                !isFinite(dSrc[1])) {
                if (maxSubdivision > 0) {
                    needsSubdivision = true;
                }
                else {
                    // It might be the case that only 1 of the points is infinite. In this case
                    // we can draw a single triangle with the other three points
                    isNotFinite =
                        (!isFinite(aSrc[0]) || !isFinite(aSrc[1]) ? 8 : 0) +
                            (!isFinite(bSrc[0]) || !isFinite(bSrc[1]) ? 4 : 0) +
                            (!isFinite(cSrc[0]) || !isFinite(cSrc[1]) ? 2 : 0) +
                            (!isFinite(dSrc[0]) || !isFinite(dSrc[1]) ? 1 : 0);
                    if (isNotFinite != 1 &&
                        isNotFinite != 2 &&
                        isNotFinite != 4 &&
                        isNotFinite != 8) {
                        return;
                    }
                }
            }
        }
        if (maxSubdivision > 0) {
            if (!needsSubdivision) {
                var center = [(a[0] + c[0]) / 2, (a[1] + c[1]) / 2];
                var centerSrc = this.transformInv_(center);
                var dx = void 0;
                if (wrapsX) {
                    var centerSrcEstimX = ((0,_math_js__WEBPACK_IMPORTED_MODULE_2__.modulo)(aSrc[0], sourceWorldWidth) +
                        (0,_math_js__WEBPACK_IMPORTED_MODULE_2__.modulo)(cSrc[0], sourceWorldWidth)) /
                        2;
                    dx = centerSrcEstimX - (0,_math_js__WEBPACK_IMPORTED_MODULE_2__.modulo)(centerSrc[0], sourceWorldWidth);
                }
                else {
                    dx = (aSrc[0] + cSrc[0]) / 2 - centerSrc[0];
                }
                var dy = (aSrc[1] + cSrc[1]) / 2 - centerSrc[1];
                var centerSrcErrorSquared = dx * dx + dy * dy;
                needsSubdivision = centerSrcErrorSquared > this.errorThresholdSquared_;
            }
            if (needsSubdivision) {
                if (Math.abs(a[0] - c[0]) <= Math.abs(a[1] - c[1])) {
                    // split horizontally (top & bottom)
                    var bc = [(b[0] + c[0]) / 2, (b[1] + c[1]) / 2];
                    var bcSrc = this.transformInv_(bc);
                    var da = [(d[0] + a[0]) / 2, (d[1] + a[1]) / 2];
                    var daSrc = this.transformInv_(da);
                    this.addQuad_(a, b, bc, da, aSrc, bSrc, bcSrc, daSrc, maxSubdivision - 1);
                    this.addQuad_(da, bc, c, d, daSrc, bcSrc, cSrc, dSrc, maxSubdivision - 1);
                }
                else {
                    // split vertically (left & right)
                    var ab = [(a[0] + b[0]) / 2, (a[1] + b[1]) / 2];
                    var abSrc = this.transformInv_(ab);
                    var cd = [(c[0] + d[0]) / 2, (c[1] + d[1]) / 2];
                    var cdSrc = this.transformInv_(cd);
                    this.addQuad_(a, ab, cd, d, aSrc, abSrc, cdSrc, dSrc, maxSubdivision - 1);
                    this.addQuad_(ab, b, c, cd, abSrc, bSrc, cSrc, cdSrc, maxSubdivision - 1);
                }
                return;
            }
        }
        if (wrapsX) {
            if (!this.canWrapXInSource_) {
                return;
            }
            this.wrapsXInSource_ = true;
        }
        // Exactly zero or one of *Src is not finite
        // The triangles must have the diagonal line as the first side
        // This is to allow easy code in reproj.s to make it straight for broken
        // browsers that can't handle diagonal clipping
        if ((isNotFinite & 0xb) == 0) {
            this.addTriangle_(a, c, d, aSrc, cSrc, dSrc);
        }
        if ((isNotFinite & 0xe) == 0) {
            this.addTriangle_(a, c, b, aSrc, cSrc, bSrc);
        }
        if (isNotFinite) {
            // Try the other two triangles
            if ((isNotFinite & 0xd) == 0) {
                this.addTriangle_(b, d, a, bSrc, dSrc, aSrc);
            }
            if ((isNotFinite & 0x7) == 0) {
                this.addTriangle_(b, d, c, bSrc, dSrc, cSrc);
            }
        }
    };
    /**
     * Calculates extent of the 'source' coordinates from all the triangles.
     *
     * @return {import("../extent.js").Extent} Calculated extent.
     */
    Triangulation.prototype.calculateSourceExtent = function () {
        var extent = (0,_extent_js__WEBPACK_IMPORTED_MODULE_1__.createEmpty)();
        this.triangles_.forEach(function (triangle, i, arr) {
            var src = triangle.source;
            (0,_extent_js__WEBPACK_IMPORTED_MODULE_1__.extendCoordinate)(extent, src[0]);
            (0,_extent_js__WEBPACK_IMPORTED_MODULE_1__.extendCoordinate)(extent, src[1]);
            (0,_extent_js__WEBPACK_IMPORTED_MODULE_1__.extendCoordinate)(extent, src[2]);
        });
        return extent;
    };
    /**
     * @return {Array<Triangle>} Array of the calculated triangles.
     */
    Triangulation.prototype.getTriangles = function () {
        return this.triangles_;
    };
    return Triangulation;
}());
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Triangulation);
//# sourceMappingURL=Triangulation.js.map

/***/ }),

/***/ "./node_modules/ol/reproj/common.js":
/*!******************************************!*\
  !*** ./node_modules/ol/reproj/common.js ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ERROR_THRESHOLD": () => (/* binding */ ERROR_THRESHOLD),
/* harmony export */   "ENABLE_RASTER_REPROJECTION": () => (/* binding */ ENABLE_RASTER_REPROJECTION)
/* harmony export */ });
/**
 * @module ol/reproj/common
 */
/**
 * Default maximum allowed threshold  (in pixels) for reprojection
 * triangulation.
 * @type {number}
 */
var ERROR_THRESHOLD = 0.5;
/**
 * Enable automatic reprojection of raster sources. Default is `true`.
 * TODO: decide if we want to expose this as a build flag or remove it
 * @type {boolean}
 */
var ENABLE_RASTER_REPROJECTION = true;
//# sourceMappingURL=common.js.map

/***/ }),

/***/ "./node_modules/ol/resolutionconstraint.js":
/*!*************************************************!*\
  !*** ./node_modules/ol/resolutionconstraint.js ***!
  \*************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createSnapToResolutions": () => (/* binding */ createSnapToResolutions),
/* harmony export */   "createSnapToPower": () => (/* binding */ createSnapToPower),
/* harmony export */   "createMinMaxResolution": () => (/* binding */ createMinMaxResolution)
/* harmony export */ });
/* harmony import */ var _math_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./math.js */ "./node_modules/ol/math.js");
/* harmony import */ var _extent_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./extent.js */ "./node_modules/ol/extent.js");
/* harmony import */ var _array_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./array.js */ "./node_modules/ol/array.js");
/**
 * @module ol/resolutionconstraint
 */



/**
 * @typedef {function((number|undefined), number, import("./size.js").Size, boolean=): (number|undefined)} Type
 */
/**
 * Returns a modified resolution taking into account the viewport size and maximum
 * allowed extent.
 * @param {number} resolution Resolution
 * @param {import("./extent.js").Extent} maxExtent Maximum allowed extent.
 * @param {import("./size.js").Size} viewportSize Viewport size.
 * @param {boolean} showFullExtent Whether to show the full extent.
 * @return {number} Capped resolution.
 */
function getViewportClampedResolution(resolution, maxExtent, viewportSize, showFullExtent) {
    var xResolution = (0,_extent_js__WEBPACK_IMPORTED_MODULE_0__.getWidth)(maxExtent) / viewportSize[0];
    var yResolution = (0,_extent_js__WEBPACK_IMPORTED_MODULE_0__.getHeight)(maxExtent) / viewportSize[1];
    if (showFullExtent) {
        return Math.min(resolution, Math.max(xResolution, yResolution));
    }
    return Math.min(resolution, Math.min(xResolution, yResolution));
}
/**
 * Returns a modified resolution to be between maxResolution and minResolution while
 * still allowing the value to be slightly out of bounds.
 * Note: the computation is based on the logarithm function (ln):
 *  - at 1, ln(x) is 0
 *  - above 1, ln(x) keeps increasing but at a much slower pace than x
 * The final result is clamped to prevent getting too far away from bounds.
 * @param {number} resolution Resolution.
 * @param {number} maxResolution Max resolution.
 * @param {number} minResolution Min resolution.
 * @return {number} Smoothed resolution.
 */
function getSmoothClampedResolution(resolution, maxResolution, minResolution) {
    var result = Math.min(resolution, maxResolution);
    var ratio = 50;
    result *=
        Math.log(1 + ratio * Math.max(0, resolution / maxResolution - 1)) / ratio +
            1;
    if (minResolution) {
        result = Math.max(result, minResolution);
        result /=
            Math.log(1 + ratio * Math.max(0, minResolution / resolution - 1)) /
                ratio +
                1;
    }
    return (0,_math_js__WEBPACK_IMPORTED_MODULE_1__.clamp)(result, minResolution / 2, maxResolution * 2);
}
/**
 * @param {Array<number>} resolutions Resolutions.
 * @param {boolean=} opt_smooth If true, the view will be able to slightly exceed resolution limits. Default: true.
 * @param {import("./extent.js").Extent=} opt_maxExtent Maximum allowed extent.
 * @param {boolean=} opt_showFullExtent If true, allows us to show the full extent. Default: false.
 * @return {Type} Zoom function.
 */
function createSnapToResolutions(resolutions, opt_smooth, opt_maxExtent, opt_showFullExtent) {
    return (
    /**
     * @param {number|undefined} resolution Resolution.
     * @param {number} direction Direction.
     * @param {import("./size.js").Size} size Viewport size.
     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.
     * @return {number|undefined} Resolution.
     */
    function (resolution, direction, size, opt_isMoving) {
        if (resolution !== undefined) {
            var maxResolution = resolutions[0];
            var minResolution = resolutions[resolutions.length - 1];
            var cappedMaxRes = opt_maxExtent
                ? getViewportClampedResolution(maxResolution, opt_maxExtent, size, opt_showFullExtent)
                : maxResolution;
            // during interacting or animating, allow intermediary values
            if (opt_isMoving) {
                var smooth = opt_smooth !== undefined ? opt_smooth : true;
                if (!smooth) {
                    return (0,_math_js__WEBPACK_IMPORTED_MODULE_1__.clamp)(resolution, minResolution, cappedMaxRes);
                }
                return getSmoothClampedResolution(resolution, cappedMaxRes, minResolution);
            }
            var capped = Math.min(cappedMaxRes, resolution);
            var z = Math.floor((0,_array_js__WEBPACK_IMPORTED_MODULE_2__.linearFindNearest)(resolutions, capped, direction));
            if (resolutions[z] > cappedMaxRes && z < resolutions.length - 1) {
                return resolutions[z + 1];
            }
            return resolutions[z];
        }
        else {
            return undefined;
        }
    });
}
/**
 * @param {number} power Power.
 * @param {number} maxResolution Maximum resolution.
 * @param {number=} opt_minResolution Minimum resolution.
 * @param {boolean=} opt_smooth If true, the view will be able to slightly exceed resolution limits. Default: true.
 * @param {import("./extent.js").Extent=} opt_maxExtent Maximum allowed extent.
 * @param {boolean=} opt_showFullExtent If true, allows us to show the full extent. Default: false.
 * @return {Type} Zoom function.
 */
function createSnapToPower(power, maxResolution, opt_minResolution, opt_smooth, opt_maxExtent, opt_showFullExtent) {
    return (
    /**
     * @param {number|undefined} resolution Resolution.
     * @param {number} direction Direction.
     * @param {import("./size.js").Size} size Viewport size.
     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.
     * @return {number|undefined} Resolution.
     */
    function (resolution, direction, size, opt_isMoving) {
        if (resolution !== undefined) {
            var cappedMaxRes = opt_maxExtent
                ? getViewportClampedResolution(maxResolution, opt_maxExtent, size, opt_showFullExtent)
                : maxResolution;
            var minResolution = opt_minResolution !== undefined ? opt_minResolution : 0;
            // during interacting or animating, allow intermediary values
            if (opt_isMoving) {
                var smooth = opt_smooth !== undefined ? opt_smooth : true;
                if (!smooth) {
                    return (0,_math_js__WEBPACK_IMPORTED_MODULE_1__.clamp)(resolution, minResolution, cappedMaxRes);
                }
                return getSmoothClampedResolution(resolution, cappedMaxRes, minResolution);
            }
            var tolerance = 1e-9;
            var minZoomLevel = Math.ceil(Math.log(maxResolution / cappedMaxRes) / Math.log(power) - tolerance);
            var offset = -direction * (0.5 - tolerance) + 0.5;
            var capped = Math.min(cappedMaxRes, resolution);
            var cappedZoomLevel = Math.floor(Math.log(maxResolution / capped) / Math.log(power) + offset);
            var zoomLevel = Math.max(minZoomLevel, cappedZoomLevel);
            var newResolution = maxResolution / Math.pow(power, zoomLevel);
            return (0,_math_js__WEBPACK_IMPORTED_MODULE_1__.clamp)(newResolution, minResolution, cappedMaxRes);
        }
        else {
            return undefined;
        }
    });
}
/**
 * @param {number} maxResolution Max resolution.
 * @param {number} minResolution Min resolution.
 * @param {boolean=} opt_smooth If true, the view will be able to slightly exceed resolution limits. Default: true.
 * @param {import("./extent.js").Extent=} opt_maxExtent Maximum allowed extent.
 * @param {boolean=} opt_showFullExtent If true, allows us to show the full extent. Default: false.
 * @return {Type} Zoom function.
 */
function createMinMaxResolution(maxResolution, minResolution, opt_smooth, opt_maxExtent, opt_showFullExtent) {
    return (
    /**
     * @param {number|undefined} resolution Resolution.
     * @param {number} direction Direction.
     * @param {import("./size.js").Size} size Viewport size.
     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.
     * @return {number|undefined} Resolution.
     */
    function (resolution, direction, size, opt_isMoving) {
        if (resolution !== undefined) {
            var cappedMaxRes = opt_maxExtent
                ? getViewportClampedResolution(maxResolution, opt_maxExtent, size, opt_showFullExtent)
                : maxResolution;
            var smooth = opt_smooth !== undefined ? opt_smooth : true;
            if (!smooth || !opt_isMoving) {
                return (0,_math_js__WEBPACK_IMPORTED_MODULE_1__.clamp)(resolution, minResolution, cappedMaxRes);
            }
            return getSmoothClampedResolution(resolution, cappedMaxRes, minResolution);
        }
        else {
            return undefined;
        }
    });
}
//# sourceMappingURL=resolutionconstraint.js.map

/***/ }),

/***/ "./node_modules/ol/rotationconstraint.js":
/*!***********************************************!*\
  !*** ./node_modules/ol/rotationconstraint.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "disable": () => (/* binding */ disable),
/* harmony export */   "none": () => (/* binding */ none),
/* harmony export */   "createSnapToN": () => (/* binding */ createSnapToN),
/* harmony export */   "createSnapToZero": () => (/* binding */ createSnapToZero)
/* harmony export */ });
/* harmony import */ var _math_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./math.js */ "./node_modules/ol/math.js");
/**
 * @module ol/rotationconstraint
 */

/**
 * @typedef {function((number|undefined), boolean=): (number|undefined)} Type
 */
/**
 * @param {number|undefined} rotation Rotation.
 * @return {number|undefined} Rotation.
 */
function disable(rotation) {
    if (rotation !== undefined) {
        return 0;
    }
    else {
        return undefined;
    }
}
/**
 * @param {number|undefined} rotation Rotation.
 * @return {number|undefined} Rotation.
 */
function none(rotation) {
    if (rotation !== undefined) {
        return rotation;
    }
    else {
        return undefined;
    }
}
/**
 * @param {number} n N.
 * @return {Type} Rotation constraint.
 */
function createSnapToN(n) {
    var theta = (2 * Math.PI) / n;
    return (
    /**
     * @param {number|undefined} rotation Rotation.
     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.
     * @return {number|undefined} Rotation.
     */
    function (rotation, opt_isMoving) {
        if (opt_isMoving) {
            return rotation;
        }
        if (rotation !== undefined) {
            rotation = Math.floor(rotation / theta + 0.5) * theta;
            return rotation;
        }
        else {
            return undefined;
        }
    });
}
/**
 * @param {number=} opt_tolerance Tolerance.
 * @return {Type} Rotation constraint.
 */
function createSnapToZero(opt_tolerance) {
    var tolerance = opt_tolerance || (0,_math_js__WEBPACK_IMPORTED_MODULE_0__.toRadians)(5);
    return (
    /**
     * @param {number|undefined} rotation Rotation.
     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.
     * @return {number|undefined} Rotation.
     */
    function (rotation, opt_isMoving) {
        if (opt_isMoving) {
            return rotation;
        }
        if (rotation !== undefined) {
            if (Math.abs(rotation) <= tolerance) {
                return 0;
            }
            else {
                return rotation;
            }
        }
        else {
            return undefined;
        }
    });
}
//# sourceMappingURL=rotationconstraint.js.map

/***/ }),

/***/ "./node_modules/ol/size.js":
/*!*********************************!*\
  !*** ./node_modules/ol/size.js ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "buffer": () => (/* binding */ buffer),
/* harmony export */   "hasArea": () => (/* binding */ hasArea),
/* harmony export */   "scale": () => (/* binding */ scale),
/* harmony export */   "toSize": () => (/* binding */ toSize)
/* harmony export */ });
/**
 * @module ol/size
 */
/**
 * An array of numbers representing a size: `[width, height]`.
 * @typedef {Array<number>} Size
 * @api
 */
/**
 * Returns a buffered size.
 * @param {Size} size Size.
 * @param {number} num The amount by which to buffer.
 * @param {Size=} opt_size Optional reusable size array.
 * @return {Size} The buffered size.
 */
function buffer(size, num, opt_size) {
    if (opt_size === undefined) {
        opt_size = [0, 0];
    }
    opt_size[0] = size[0] + 2 * num;
    opt_size[1] = size[1] + 2 * num;
    return opt_size;
}
/**
 * Determines if a size has a positive area.
 * @param {Size} size The size to test.
 * @return {boolean} The size has a positive area.
 */
function hasArea(size) {
    return size[0] > 0 && size[1] > 0;
}
/**
 * Returns a size scaled by a ratio. The result will be an array of integers.
 * @param {Size} size Size.
 * @param {number} ratio Ratio.
 * @param {Size=} opt_size Optional reusable size array.
 * @return {Size} The scaled size.
 */
function scale(size, ratio, opt_size) {
    if (opt_size === undefined) {
        opt_size = [0, 0];
    }
    opt_size[0] = (size[0] * ratio + 0.5) | 0;
    opt_size[1] = (size[1] * ratio + 0.5) | 0;
    return opt_size;
}
/**
 * Returns an `Size` array for the passed in number (meaning: square) or
 * `Size` array.
 * (meaning: non-square),
 * @param {number|Size} size Width and height.
 * @param {Size=} opt_size Optional reusable size array.
 * @return {Size} Size.
 * @api
 */
function toSize(size, opt_size) {
    if (Array.isArray(size)) {
        return size;
    }
    else {
        if (opt_size === undefined) {
            opt_size = [size, size];
        }
        else {
            opt_size[0] = size;
            opt_size[1] = size;
        }
        return opt_size;
    }
}
//# sourceMappingURL=size.js.map

/***/ }),

/***/ "./node_modules/ol/source/OSM.js":
/*!***************************************!*\
  !*** ./node_modules/ol/source/OSM.js ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ATTRIBUTION": () => (/* binding */ ATTRIBUTION),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _XYZ_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./XYZ.js */ "./node_modules/ol/source/XYZ.js");
/**
 * @module ol/source/OSM
 */
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();

/**
 * The attribution containing a link to the OpenStreetMap Copyright and License
 * page.
 * @const
 * @type {string}
 * @api
 */
var ATTRIBUTION = '&#169; ' +
    '<a href="https://www.openstreetmap.org/copyright" target="_blank">OpenStreetMap</a> ' +
    'contributors.';
/**
 * @typedef {Object} Options
 * @property {import("./Source.js").AttributionLike} [attributions] Attributions.
 * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.
 * @property {null|string} [crossOrigin='anonymous'] The `crossOrigin` attribute for loaded images.  Note that
 * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.
 * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.
 * @property {boolean} [imageSmoothing=true] Enable image smoothing.
 * @property {number} [maxZoom=19] Max zoom.
 * @property {boolean} [opaque=true] Whether the layer is opaque.
 * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).
 * Higher values can increase reprojection performance, but decrease precision.
 * @property {import("../Tile.js").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is
 * ```js
 * function(imageTile, src) {
 *   imageTile.getImage().src = src;
 * };
 * ```
 * @property {number} [transition=250] Duration of the opacity transition for rendering.
 * To disable the opacity transition, pass `transition: 0`.
 * @property {string} [url='https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png'] URL template.
 * Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.
 * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.
 */
/**
 * @classdesc
 * Layer source for the OpenStreetMap tile server.
 * @api
 */
var OSM = /** @class */ (function (_super) {
    __extends(OSM, _super);
    /**
     * @param {Options=} [opt_options] Open Street Map options.
     */
    function OSM(opt_options) {
        var _this = this;
        var options = opt_options || {};
        var attributions;
        if (options.attributions !== undefined) {
            attributions = options.attributions;
        }
        else {
            attributions = [ATTRIBUTION];
        }
        var crossOrigin = options.crossOrigin !== undefined ? options.crossOrigin : 'anonymous';
        var url = options.url !== undefined
            ? options.url
            : 'https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png';
        _this = _super.call(this, {
            attributions: attributions,
            attributionsCollapsible: false,
            cacheSize: options.cacheSize,
            crossOrigin: crossOrigin,
            imageSmoothing: options.imageSmoothing,
            maxZoom: options.maxZoom !== undefined ? options.maxZoom : 19,
            opaque: options.opaque !== undefined ? options.opaque : true,
            reprojectionErrorThreshold: options.reprojectionErrorThreshold,
            tileLoadFunction: options.tileLoadFunction,
            transition: options.transition,
            url: url,
            wrapX: options.wrapX,
        }) || this;
        return _this;
    }
    return OSM;
}(_XYZ_js__WEBPACK_IMPORTED_MODULE_0__.default));
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (OSM);
//# sourceMappingURL=OSM.js.map

/***/ }),

/***/ "./node_modules/ol/source/Source.js":
/*!******************************************!*\
  !*** ./node_modules/ol/source/Source.js ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _Object_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../Object.js */ "./node_modules/ol/Object.js");
/* harmony import */ var _State_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./State.js */ "./node_modules/ol/source/State.js");
/* harmony import */ var _util_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util.js */ "./node_modules/ol/util.js");
/* harmony import */ var _proj_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../proj.js */ "./node_modules/ol/proj.js");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
/**
 * @module ol/source/Source
 */




/**
 * A function that returns a string or an array of strings representing source
 * attributions.
 *
 * @typedef {function(import("../PluggableMap.js").FrameState): (string|Array<string>)} Attribution
 */
/**
 * A type that can be used to provide attribution information for data sources.
 *
 * It represents either
 * * a simple string (e.g. `'© Acme Inc.'`)
 * * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)
 * * a function that returns a string or array of strings ({@link module:ol/source/Source~Attribution})
 *
 * @typedef {string|Array<string>|Attribution} AttributionLike
 */
/**
 * @typedef {Object} Options
 * @property {AttributionLike} [attributions]
 * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.
 * @property {import("../proj.js").ProjectionLike} [projection] Projection. Default is the view projection.
 * @property {import("./State.js").default} [state='ready']
 * @property {boolean} [wrapX=false]
 */
/**
 * @classdesc
 * Abstract base class; normally only used for creating subclasses and not
 * instantiated in apps.
 * Base class for {@link module:ol/layer/Layer~Layer} sources.
 *
 * A generic `change` event is triggered when the state of the source changes.
 * @abstract
 * @api
 */
var Source = /** @class */ (function (_super) {
    __extends(Source, _super);
    /**
     * @param {Options} options Source options.
     */
    function Source(options) {
        var _this = _super.call(this) || this;
        /**
         * @private
         * @type {import("../proj/Projection.js").default}
         */
        _this.projection_ = (0,_proj_js__WEBPACK_IMPORTED_MODULE_0__.get)(options.projection);
        /**
         * @private
         * @type {?Attribution}
         */
        _this.attributions_ = adaptAttributions(options.attributions);
        /**
         * @private
         * @type {boolean}
         */
        _this.attributionsCollapsible_ =
            options.attributionsCollapsible !== undefined
                ? options.attributionsCollapsible
                : true;
        /**
         * This source is currently loading data. Sources that defer loading to the
         * map's tile queue never set this to `true`.
         * @type {boolean}
         */
        _this.loading = false;
        /**
         * @private
         * @type {import("./State.js").default}
         */
        _this.state_ =
            options.state !== undefined ? options.state : _State_js__WEBPACK_IMPORTED_MODULE_1__.default.READY;
        /**
         * @private
         * @type {boolean}
         */
        _this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;
        return _this;
    }
    /**
     * Get the attribution function for the source.
     * @return {?Attribution} Attribution function.
     */
    Source.prototype.getAttributions = function () {
        return this.attributions_;
    };
    /**
     * @return {boolean} Attributions are collapsible.
     */
    Source.prototype.getAttributionsCollapsible = function () {
        return this.attributionsCollapsible_;
    };
    /**
     * Get the projection of the source.
     * @return {import("../proj/Projection.js").default} Projection.
     * @api
     */
    Source.prototype.getProjection = function () {
        return this.projection_;
    };
    /**
     * @abstract
     * @return {Array<number>|undefined} Resolutions.
     */
    Source.prototype.getResolutions = function () {
        return (0,_util_js__WEBPACK_IMPORTED_MODULE_2__.abstract)();
    };
    /**
     * Get the state of the source, see {@link module:ol/source/State~State} for possible states.
     * @return {import("./State.js").default} State.
     * @api
     */
    Source.prototype.getState = function () {
        return this.state_;
    };
    /**
     * @return {boolean|undefined} Wrap X.
     */
    Source.prototype.getWrapX = function () {
        return this.wrapX_;
    };
    /**
     * @return {Object|undefined} Context options.
     */
    Source.prototype.getContextOptions = function () {
        return undefined;
    };
    /**
     * Refreshes the source. The source will be cleared, and data from the server will be reloaded.
     * @api
     */
    Source.prototype.refresh = function () {
        this.changed();
    };
    /**
     * Set the attributions of the source.
     * @param {AttributionLike|undefined} attributions Attributions.
     *     Can be passed as `string`, `Array<string>`, {@link module:ol/source/Source~Attribution},
     *     or `undefined`.
     * @api
     */
    Source.prototype.setAttributions = function (attributions) {
        this.attributions_ = adaptAttributions(attributions);
        this.changed();
    };
    /**
     * Set the state of the source.
     * @param {import("./State.js").default} state State.
     */
    Source.prototype.setState = function (state) {
        this.state_ = state;
        this.changed();
    };
    return Source;
}(_Object_js__WEBPACK_IMPORTED_MODULE_3__.default));
/**
 * Turns the attributions option into an attributions function.
 * @param {AttributionLike|undefined} attributionLike The attribution option.
 * @return {?Attribution} An attribution function (or null).
 */
function adaptAttributions(attributionLike) {
    if (!attributionLike) {
        return null;
    }
    if (Array.isArray(attributionLike)) {
        return function (frameState) {
            return attributionLike;
        };
    }
    if (typeof attributionLike === 'function') {
        return attributionLike;
    }
    return function (frameState) {
        return [attributionLike];
    };
}
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Source);
//# sourceMappingURL=Source.js.map

/***/ }),

/***/ "./node_modules/ol/source/State.js":
/*!*****************************************!*\
  !*** ./node_modules/ol/source/State.js ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/**
 * @module ol/source/State
 */
/**
 * @enum {string}
 * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.
 */
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
    UNDEFINED: 'undefined',
    LOADING: 'loading',
    READY: 'ready',
    ERROR: 'error',
});
//# sourceMappingURL=State.js.map

/***/ }),

/***/ "./node_modules/ol/source/Tile.js":
/*!****************************************!*\
  !*** ./node_modules/ol/source/Tile.js ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "TileSourceEvent": () => (/* binding */ TileSourceEvent),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _events_Event_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../events/Event.js */ "./node_modules/ol/events/Event.js");
/* harmony import */ var _Source_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./Source.js */ "./node_modules/ol/source/Source.js");
/* harmony import */ var _TileCache_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../TileCache.js */ "./node_modules/ol/TileCache.js");
/* harmony import */ var _TileState_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../TileState.js */ "./node_modules/ol/TileState.js");
/* harmony import */ var _util_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../util.js */ "./node_modules/ol/util.js");
/* harmony import */ var _asserts_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../asserts.js */ "./node_modules/ol/asserts.js");
/* harmony import */ var _proj_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../proj.js */ "./node_modules/ol/proj.js");
/* harmony import */ var _tilecoord_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../tilecoord.js */ "./node_modules/ol/tilecoord.js");
/* harmony import */ var _tilegrid_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../tilegrid.js */ "./node_modules/ol/tilegrid.js");
/* harmony import */ var _size_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../size.js */ "./node_modules/ol/size.js");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
/**
 * @module ol/source/Tile
 */










/**
 * @typedef {Object} Options
 * @property {import("./Source.js").AttributionLike} [attributions]
 * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.
 * @property {number} [cacheSize]
 * @property {boolean} [opaque=false] Whether the layer is opaque.
 * @property {number} [tilePixelRatio]
 * @property {import("../proj.js").ProjectionLike} [projection]
 * @property {import("./State.js").default} [state]
 * @property {import("../tilegrid/TileGrid.js").default} [tileGrid]
 * @property {boolean} [wrapX=true]
 * @property {number} [transition]
 * @property {string} [key]
 * @property {number} [zDirection=0]
 */
/**
 * @classdesc
 * Abstract base class; normally only used for creating subclasses and not
 * instantiated in apps.
 * Base class for sources providing images divided into a tile grid.
 * @abstract
 * @api
 */
var TileSource = /** @class */ (function (_super) {
    __extends(TileSource, _super);
    /**
     * @param {Options} options SourceTile source options.
     */
    function TileSource(options) {
        var _this = _super.call(this, {
            attributions: options.attributions,
            attributionsCollapsible: options.attributionsCollapsible,
            projection: options.projection,
            state: options.state,
            wrapX: options.wrapX,
        }) || this;
        /**
         * @private
         * @type {boolean}
         */
        _this.opaque_ = options.opaque !== undefined ? options.opaque : false;
        /**
         * @private
         * @type {number}
         */
        _this.tilePixelRatio_ =
            options.tilePixelRatio !== undefined ? options.tilePixelRatio : 1;
        /**
         * @protected
         * @type {import("../tilegrid/TileGrid.js").default}
         */
        _this.tileGrid = options.tileGrid !== undefined ? options.tileGrid : null;
        var tileSize = [256, 256];
        var tileGrid = options.tileGrid;
        if (tileGrid) {
            (0,_size_js__WEBPACK_IMPORTED_MODULE_1__.toSize)(tileGrid.getTileSize(tileGrid.getMinZoom()), tileSize);
        }
        /**
         * @protected
         * @type {import("../TileCache.js").default}
         */
        _this.tileCache = new _TileCache_js__WEBPACK_IMPORTED_MODULE_2__.default(options.cacheSize || 0);
        /**
         * @protected
         * @type {import("../size.js").Size}
         */
        _this.tmpSize = [0, 0];
        /**
         * @private
         * @type {string}
         */
        _this.key_ = options.key || '';
        /**
         * @protected
         * @type {import("../Tile.js").Options}
         */
        _this.tileOptions = { transition: options.transition };
        /**
         * zDirection hint, read by the renderer. Indicates which resolution should be used
         * by a renderer if the views resolution does not match any resolution of the tile source.
         * If 0, the nearest resolution will be used. If 1, the nearest lower resolution
         * will be used. If -1, the nearest higher resolution will be used.
         * @type {number}
         */
        _this.zDirection = options.zDirection ? options.zDirection : 0;
        return _this;
    }
    /**
     * @return {boolean} Can expire cache.
     */
    TileSource.prototype.canExpireCache = function () {
        return this.tileCache.canExpireCache();
    };
    /**
     * @param {import("../proj/Projection.js").default} projection Projection.
     * @param {!Object<string, boolean>} usedTiles Used tiles.
     */
    TileSource.prototype.expireCache = function (projection, usedTiles) {
        var tileCache = this.getTileCacheForProjection(projection);
        if (tileCache) {
            tileCache.expireCache(usedTiles);
        }
    };
    /**
     * @param {import("../proj/Projection.js").default} projection Projection.
     * @param {number} z Zoom level.
     * @param {import("../TileRange.js").default} tileRange Tile range.
     * @param {function(import("../Tile.js").default):(boolean|void)} callback Called with each
     *     loaded tile.  If the callback returns `false`, the tile will not be
     *     considered loaded.
     * @return {boolean} The tile range is fully covered with loaded tiles.
     */
    TileSource.prototype.forEachLoadedTile = function (projection, z, tileRange, callback) {
        var tileCache = this.getTileCacheForProjection(projection);
        if (!tileCache) {
            return false;
        }
        var covered = true;
        var tile, tileCoordKey, loaded;
        for (var x = tileRange.minX; x <= tileRange.maxX; ++x) {
            for (var y = tileRange.minY; y <= tileRange.maxY; ++y) {
                tileCoordKey = (0,_tilecoord_js__WEBPACK_IMPORTED_MODULE_3__.getKeyZXY)(z, x, y);
                loaded = false;
                if (tileCache.containsKey(tileCoordKey)) {
                    tile = /** @type {!import("../Tile.js").default} */ (tileCache.get(tileCoordKey));
                    loaded = tile.getState() === _TileState_js__WEBPACK_IMPORTED_MODULE_4__.default.LOADED;
                    if (loaded) {
                        loaded = callback(tile) !== false;
                    }
                }
                if (!loaded) {
                    covered = false;
                }
            }
        }
        return covered;
    };
    /**
     * @param {import("../proj/Projection.js").default} projection Projection.
     * @return {number} Gutter.
     */
    TileSource.prototype.getGutterForProjection = function (projection) {
        return 0;
    };
    /**
     * Return the key to be used for all tiles in the source.
     * @return {string} The key for all tiles.
     * @protected
     */
    TileSource.prototype.getKey = function () {
        return this.key_;
    };
    /**
     * Set the value to be used as the key for all tiles in the source.
     * @param {string} key The key for tiles.
     * @protected
     */
    TileSource.prototype.setKey = function (key) {
        if (this.key_ !== key) {
            this.key_ = key;
            this.changed();
        }
    };
    /**
     * @param {import("../proj/Projection.js").default} projection Projection.
     * @return {boolean} Opaque.
     */
    TileSource.prototype.getOpaque = function (projection) {
        return this.opaque_;
    };
    /**
     * @return {Array<number>} Resolutions.
     */
    TileSource.prototype.getResolutions = function () {
        return this.tileGrid.getResolutions();
    };
    /**
     * @abstract
     * @param {number} z Tile coordinate z.
     * @param {number} x Tile coordinate x.
     * @param {number} y Tile coordinate y.
     * @param {number} pixelRatio Pixel ratio.
     * @param {import("../proj/Projection.js").default} projection Projection.
     * @return {!import("../Tile.js").default} Tile.
     */
    TileSource.prototype.getTile = function (z, x, y, pixelRatio, projection) {
        return (0,_util_js__WEBPACK_IMPORTED_MODULE_5__.abstract)();
    };
    /**
     * Return the tile grid of the tile source.
     * @return {import("../tilegrid/TileGrid.js").default} Tile grid.
     * @api
     */
    TileSource.prototype.getTileGrid = function () {
        return this.tileGrid;
    };
    /**
     * @param {import("../proj/Projection.js").default} projection Projection.
     * @return {!import("../tilegrid/TileGrid.js").default} Tile grid.
     */
    TileSource.prototype.getTileGridForProjection = function (projection) {
        if (!this.tileGrid) {
            return (0,_tilegrid_js__WEBPACK_IMPORTED_MODULE_6__.getForProjection)(projection);
        }
        else {
            return this.tileGrid;
        }
    };
    /**
     * @param {import("../proj/Projection.js").default} projection Projection.
     * @return {import("../TileCache.js").default} Tile cache.
     * @protected
     */
    TileSource.prototype.getTileCacheForProjection = function (projection) {
        (0,_asserts_js__WEBPACK_IMPORTED_MODULE_7__.assert)((0,_proj_js__WEBPACK_IMPORTED_MODULE_0__.equivalent)(this.getProjection(), projection), 68 // A VectorTile source can only be rendered if it has a projection compatible with the view projection.
        );
        return this.tileCache;
    };
    /**
     * Get the tile pixel ratio for this source. Subclasses may override this
     * method, which is meant to return a supported pixel ratio that matches the
     * provided `pixelRatio` as close as possible.
     * @param {number} pixelRatio Pixel ratio.
     * @return {number} Tile pixel ratio.
     */
    TileSource.prototype.getTilePixelRatio = function (pixelRatio) {
        return this.tilePixelRatio_;
    };
    /**
     * @param {number} z Z.
     * @param {number} pixelRatio Pixel ratio.
     * @param {import("../proj/Projection.js").default} projection Projection.
     * @return {import("../size.js").Size} Tile size.
     */
    TileSource.prototype.getTilePixelSize = function (z, pixelRatio, projection) {
        var tileGrid = this.getTileGridForProjection(projection);
        var tilePixelRatio = this.getTilePixelRatio(pixelRatio);
        var tileSize = (0,_size_js__WEBPACK_IMPORTED_MODULE_1__.toSize)(tileGrid.getTileSize(z), this.tmpSize);
        if (tilePixelRatio == 1) {
            return tileSize;
        }
        else {
            return (0,_size_js__WEBPACK_IMPORTED_MODULE_1__.scale)(tileSize, tilePixelRatio, this.tmpSize);
        }
    };
    /**
     * Returns a tile coordinate wrapped around the x-axis. When the tile coordinate
     * is outside the resolution and extent range of the tile grid, `null` will be
     * returned.
     * @param {import("../tilecoord.js").TileCoord} tileCoord Tile coordinate.
     * @param {import("../proj/Projection.js").default=} opt_projection Projection.
     * @return {import("../tilecoord.js").TileCoord} Tile coordinate to be passed to the tileUrlFunction or
     *     null if no tile URL should be created for the passed `tileCoord`.
     */
    TileSource.prototype.getTileCoordForTileUrlFunction = function (tileCoord, opt_projection) {
        var projection = opt_projection !== undefined ? opt_projection : this.getProjection();
        var tileGrid = this.getTileGridForProjection(projection);
        if (this.getWrapX() && projection.isGlobal()) {
            tileCoord = (0,_tilegrid_js__WEBPACK_IMPORTED_MODULE_6__.wrapX)(tileGrid, tileCoord, projection);
        }
        return (0,_tilecoord_js__WEBPACK_IMPORTED_MODULE_3__.withinExtentAndZ)(tileCoord, tileGrid) ? tileCoord : null;
    };
    /**
     * Remove all cached tiles from the source. The next render cycle will fetch new tiles.
     * @api
     */
    TileSource.prototype.clear = function () {
        this.tileCache.clear();
    };
    TileSource.prototype.refresh = function () {
        this.clear();
        _super.prototype.refresh.call(this);
    };
    /**
     * Increases the cache size if needed
     * @param {number} tileCount Minimum number of tiles needed.
     * @param {import("../proj/Projection.js").default} projection Projection.
     */
    TileSource.prototype.updateCacheSize = function (tileCount, projection) {
        var tileCache = this.getTileCacheForProjection(projection);
        if (tileCount > tileCache.highWaterMark) {
            tileCache.highWaterMark = tileCount;
        }
    };
    /**
     * Marks a tile coord as being used, without triggering a load.
     * @abstract
     * @param {number} z Tile coordinate z.
     * @param {number} x Tile coordinate x.
     * @param {number} y Tile coordinate y.
     * @param {import("../proj/Projection.js").default} projection Projection.
     */
    TileSource.prototype.useTile = function (z, x, y, projection) { };
    return TileSource;
}(_Source_js__WEBPACK_IMPORTED_MODULE_8__.default));
/**
 * @classdesc
 * Events emitted by {@link module:ol/source/Tile~TileSource} instances are instances of this
 * type.
 */
var TileSourceEvent = /** @class */ (function (_super) {
    __extends(TileSourceEvent, _super);
    /**
     * @param {string} type Type.
     * @param {import("../Tile.js").default} tile The tile.
     */
    function TileSourceEvent(type, tile) {
        var _this = _super.call(this, type) || this;
        /**
         * The tile related to the event.
         * @type {import("../Tile.js").default}
         * @api
         */
        _this.tile = tile;
        return _this;
    }
    return TileSourceEvent;
}(_events_Event_js__WEBPACK_IMPORTED_MODULE_9__.default));

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (TileSource);
//# sourceMappingURL=Tile.js.map

/***/ }),

/***/ "./node_modules/ol/source/TileEventType.js":
/*!*************************************************!*\
  !*** ./node_modules/ol/source/TileEventType.js ***!
  \*************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/**
 * @module ol/source/TileEventType
 */
/**
 * @enum {string}
 */
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
    /**
     * Triggered when a tile starts loading.
     * @event module:ol/source/Tile.TileSourceEvent#tileloadstart
     * @api
     */
    TILELOADSTART: 'tileloadstart',
    /**
     * Triggered when a tile finishes loading, either when its data is loaded,
     * or when loading was aborted because the tile is no longer needed.
     * @event module:ol/source/Tile.TileSourceEvent#tileloadend
     * @api
     */
    TILELOADEND: 'tileloadend',
    /**
     * Triggered if tile loading results in an error.
     * @event module:ol/source/Tile.TileSourceEvent#tileloaderror
     * @api
     */
    TILELOADERROR: 'tileloaderror',
});
//# sourceMappingURL=TileEventType.js.map

/***/ }),

/***/ "./node_modules/ol/source/TileImage.js":
/*!*********************************************!*\
  !*** ./node_modules/ol/source/TileImage.js ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _events_EventType_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../events/EventType.js */ "./node_modules/ol/events/EventType.js");
/* harmony import */ var _ImageTile_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../ImageTile.js */ "./node_modules/ol/ImageTile.js");
/* harmony import */ var _reproj_Tile_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../reproj/Tile.js */ "./node_modules/ol/reproj/Tile.js");
/* harmony import */ var _TileCache_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../TileCache.js */ "./node_modules/ol/TileCache.js");
/* harmony import */ var _TileState_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../TileState.js */ "./node_modules/ol/TileState.js");
/* harmony import */ var _UrlTile_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./UrlTile.js */ "./node_modules/ol/source/UrlTile.js");
/* harmony import */ var _reproj_common_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../reproj/common.js */ "./node_modules/ol/reproj/common.js");
/* harmony import */ var _common_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./common.js */ "./node_modules/ol/source/common.js");
/* harmony import */ var _proj_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../proj.js */ "./node_modules/ol/proj.js");
/* harmony import */ var _tilecoord_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../tilecoord.js */ "./node_modules/ol/tilecoord.js");
/* harmony import */ var _tilegrid_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../tilegrid.js */ "./node_modules/ol/tilegrid.js");
/* harmony import */ var _util_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../util.js */ "./node_modules/ol/util.js");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
/**
 * @module ol/source/TileImage
 */












/**
 * @typedef {Object} Options
 * @property {import("./Source.js").AttributionLike} [attributions] Attributions.
 * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.
 * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.
 * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that
 * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.
 * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.
 * @property {boolean} [imageSmoothing=true] Enable image smoothing.
 * @property {boolean} [opaque=false] Whether the layer is opaque.
 * @property {import("../proj.js").ProjectionLike} [projection] Projection. Default is the view projection.
 * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).
 * Higher values can increase reprojection performance, but decrease precision.
 * @property {import("./State.js").default} [state] Source state.
 * @property {typeof import("../ImageTile.js").default} [tileClass] Class used to instantiate image tiles.
 * Default is {@link module:ol/ImageTile~ImageTile}.
 * @property {import("../tilegrid/TileGrid.js").default} [tileGrid] Tile grid.
 * @property {import("../Tile.js").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is
 * ```js
 * function(imageTile, src) {
 *   imageTile.getImage().src = src;
 * };
 * ```
 * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service. For example, if the tile
 * service advertizes 256px by 256px tiles but actually sends 512px
 * by 512px images (for retina/hidpi devices) then `tilePixelRatio`
 * should be set to `2`.
 * @property {import("../Tile.js").UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.
 * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.
 * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be
 * used instead of defining each one separately in the `urls` option.
 * @property {Array<string>} [urls] An array of URL templates.
 * @property {boolean} [wrapX] Whether to wrap the world horizontally. The default, is to
 * request out-of-bounds tiles from the server. When set to `false`, only one
 * world will be rendered. When set to `true`, tiles will be requested for one
 * world only, but they will be wrapped horizontally to render multiple worlds.
 * @property {number} [transition] Duration of the opacity transition for rendering.
 * To disable the opacity transition, pass `transition: 0`.
 * @property {string} [key] Optional tile key for proper cache fetching
 * @property {number} [zDirection=0] Indicate which resolution should be used
 * by a renderer if the view resolution does not match any resolution of the tile source.
 * If 0, the nearest resolution will be used. If 1, the nearest lower resolution
 * will be used. If -1, the nearest higher resolution will be used.
 */
/**
 * @classdesc
 * Base class for sources providing images divided into a tile grid.
 *
 * @fires import("./Tile.js").TileSourceEvent
 * @api
 */
var TileImage = /** @class */ (function (_super) {
    __extends(TileImage, _super);
    /**
     * @param {!Options} options Image tile options.
     */
    function TileImage(options) {
        var _this = _super.call(this, {
            attributions: options.attributions,
            cacheSize: options.cacheSize,
            opaque: options.opaque,
            projection: options.projection,
            state: options.state,
            tileGrid: options.tileGrid,
            tileLoadFunction: options.tileLoadFunction
                ? options.tileLoadFunction
                : defaultTileLoadFunction,
            tilePixelRatio: options.tilePixelRatio,
            tileUrlFunction: options.tileUrlFunction,
            url: options.url,
            urls: options.urls,
            wrapX: options.wrapX,
            transition: options.transition,
            key: options.key,
            attributionsCollapsible: options.attributionsCollapsible,
            zDirection: options.zDirection,
        }) || this;
        /**
         * @protected
         * @type {?string}
         */
        _this.crossOrigin =
            options.crossOrigin !== undefined ? options.crossOrigin : null;
        /**
         * @protected
         * @type {typeof ImageTile}
         */
        _this.tileClass =
            options.tileClass !== undefined ? options.tileClass : _ImageTile_js__WEBPACK_IMPORTED_MODULE_1__.default;
        /**
         * @protected
         * @type {!Object<string, TileCache>}
         */
        _this.tileCacheForProjection = {};
        /**
         * @protected
         * @type {!Object<string, import("../tilegrid/TileGrid.js").default>}
         */
        _this.tileGridForProjection = {};
        /**
         * @private
         * @type {number|undefined}
         */
        _this.reprojectionErrorThreshold_ = options.reprojectionErrorThreshold;
        /**
         * @private
         * @type {object|undefined}
         */
        _this.contextOptions_ =
            options.imageSmoothing === false ? _common_js__WEBPACK_IMPORTED_MODULE_2__.IMAGE_SMOOTHING_DISABLED : undefined;
        /**
         * @private
         * @type {boolean}
         */
        _this.renderReprojectionEdges_ = false;
        return _this;
    }
    /**
     * @return {boolean} Can expire cache.
     */
    TileImage.prototype.canExpireCache = function () {
        if (!_reproj_common_js__WEBPACK_IMPORTED_MODULE_3__.ENABLE_RASTER_REPROJECTION) {
            return _super.prototype.canExpireCache.call(this);
        }
        if (this.tileCache.canExpireCache()) {
            return true;
        }
        else {
            for (var key in this.tileCacheForProjection) {
                if (this.tileCacheForProjection[key].canExpireCache()) {
                    return true;
                }
            }
        }
        return false;
    };
    /**
     * @param {import("../proj/Projection.js").default} projection Projection.
     * @param {!Object<string, boolean>} usedTiles Used tiles.
     */
    TileImage.prototype.expireCache = function (projection, usedTiles) {
        if (!_reproj_common_js__WEBPACK_IMPORTED_MODULE_3__.ENABLE_RASTER_REPROJECTION) {
            _super.prototype.expireCache.call(this, projection, usedTiles);
            return;
        }
        var usedTileCache = this.getTileCacheForProjection(projection);
        this.tileCache.expireCache(this.tileCache == usedTileCache ? usedTiles : {});
        for (var id in this.tileCacheForProjection) {
            var tileCache = this.tileCacheForProjection[id];
            tileCache.expireCache(tileCache == usedTileCache ? usedTiles : {});
        }
    };
    /**
     * @return {Object|undefined} Context options.
     */
    TileImage.prototype.getContextOptions = function () {
        return this.contextOptions_;
    };
    /**
     * @param {import("../proj/Projection.js").default} projection Projection.
     * @return {number} Gutter.
     */
    TileImage.prototype.getGutterForProjection = function (projection) {
        if (_reproj_common_js__WEBPACK_IMPORTED_MODULE_3__.ENABLE_RASTER_REPROJECTION &&
            this.getProjection() &&
            projection &&
            !(0,_proj_js__WEBPACK_IMPORTED_MODULE_0__.equivalent)(this.getProjection(), projection)) {
            return 0;
        }
        else {
            return this.getGutter();
        }
    };
    /**
     * @return {number} Gutter.
     */
    TileImage.prototype.getGutter = function () {
        return 0;
    };
    /**
     * Return the key to be used for all tiles in the source.
     * @return {string} The key for all tiles.
     * @protected
     */
    TileImage.prototype.getKey = function () {
        return (_super.prototype.getKey.call(this) +
            (this.contextOptions_ ? '\n' + JSON.stringify(this.contextOptions_) : ''));
    };
    /**
     * @param {import("../proj/Projection.js").default} projection Projection.
     * @return {boolean} Opaque.
     */
    TileImage.prototype.getOpaque = function (projection) {
        if (_reproj_common_js__WEBPACK_IMPORTED_MODULE_3__.ENABLE_RASTER_REPROJECTION &&
            this.getProjection() &&
            projection &&
            !(0,_proj_js__WEBPACK_IMPORTED_MODULE_0__.equivalent)(this.getProjection(), projection)) {
            return false;
        }
        else {
            return _super.prototype.getOpaque.call(this, projection);
        }
    };
    /**
     * @param {import("../proj/Projection.js").default} projection Projection.
     * @return {!import("../tilegrid/TileGrid.js").default} Tile grid.
     */
    TileImage.prototype.getTileGridForProjection = function (projection) {
        if (!_reproj_common_js__WEBPACK_IMPORTED_MODULE_3__.ENABLE_RASTER_REPROJECTION) {
            return _super.prototype.getTileGridForProjection.call(this, projection);
        }
        var thisProj = this.getProjection();
        if (this.tileGrid && (!thisProj || (0,_proj_js__WEBPACK_IMPORTED_MODULE_0__.equivalent)(thisProj, projection))) {
            return this.tileGrid;
        }
        else {
            var projKey = (0,_util_js__WEBPACK_IMPORTED_MODULE_4__.getUid)(projection);
            if (!(projKey in this.tileGridForProjection)) {
                this.tileGridForProjection[projKey] = (0,_tilegrid_js__WEBPACK_IMPORTED_MODULE_5__.getForProjection)(projection);
            }
            return this.tileGridForProjection[projKey];
        }
    };
    /**
     * @param {import("../proj/Projection.js").default} projection Projection.
     * @return {import("../TileCache.js").default} Tile cache.
     */
    TileImage.prototype.getTileCacheForProjection = function (projection) {
        if (!_reproj_common_js__WEBPACK_IMPORTED_MODULE_3__.ENABLE_RASTER_REPROJECTION) {
            return _super.prototype.getTileCacheForProjection.call(this, projection);
        }
        var thisProj = this.getProjection();
        if (!thisProj || (0,_proj_js__WEBPACK_IMPORTED_MODULE_0__.equivalent)(thisProj, projection)) {
            return this.tileCache;
        }
        else {
            var projKey = (0,_util_js__WEBPACK_IMPORTED_MODULE_4__.getUid)(projection);
            if (!(projKey in this.tileCacheForProjection)) {
                this.tileCacheForProjection[projKey] = new _TileCache_js__WEBPACK_IMPORTED_MODULE_6__.default(this.tileCache.highWaterMark);
            }
            return this.tileCacheForProjection[projKey];
        }
    };
    /**
     * @param {number} z Tile coordinate z.
     * @param {number} x Tile coordinate x.
     * @param {number} y Tile coordinate y.
     * @param {number} pixelRatio Pixel ratio.
     * @param {import("../proj/Projection.js").default} projection Projection.
     * @param {string} key The key set on the tile.
     * @return {!import("../Tile.js").default} Tile.
     * @private
     */
    TileImage.prototype.createTile_ = function (z, x, y, pixelRatio, projection, key) {
        var tileCoord = [z, x, y];
        var urlTileCoord = this.getTileCoordForTileUrlFunction(tileCoord, projection);
        var tileUrl = urlTileCoord
            ? this.tileUrlFunction(urlTileCoord, pixelRatio, projection)
            : undefined;
        var tile = new this.tileClass(tileCoord, tileUrl !== undefined ? _TileState_js__WEBPACK_IMPORTED_MODULE_7__.default.IDLE : _TileState_js__WEBPACK_IMPORTED_MODULE_7__.default.EMPTY, tileUrl !== undefined ? tileUrl : '', this.crossOrigin, this.tileLoadFunction, this.tileOptions);
        tile.key = key;
        tile.addEventListener(_events_EventType_js__WEBPACK_IMPORTED_MODULE_8__.default.CHANGE, this.handleTileChange.bind(this));
        return tile;
    };
    /**
     * @param {number} z Tile coordinate z.
     * @param {number} x Tile coordinate x.
     * @param {number} y Tile coordinate y.
     * @param {number} pixelRatio Pixel ratio.
     * @param {import("../proj/Projection.js").default} projection Projection.
     * @return {!import("../Tile.js").default} Tile.
     */
    TileImage.prototype.getTile = function (z, x, y, pixelRatio, projection) {
        var sourceProjection = this.getProjection();
        if (!_reproj_common_js__WEBPACK_IMPORTED_MODULE_3__.ENABLE_RASTER_REPROJECTION ||
            !sourceProjection ||
            !projection ||
            (0,_proj_js__WEBPACK_IMPORTED_MODULE_0__.equivalent)(sourceProjection, projection)) {
            return this.getTileInternal(z, x, y, pixelRatio, sourceProjection || projection);
        }
        else {
            var cache = this.getTileCacheForProjection(projection);
            var tileCoord = [z, x, y];
            var tile = void 0;
            var tileCoordKey = (0,_tilecoord_js__WEBPACK_IMPORTED_MODULE_9__.getKey)(tileCoord);
            if (cache.containsKey(tileCoordKey)) {
                tile = cache.get(tileCoordKey);
            }
            var key = this.getKey();
            if (tile && tile.key == key) {
                return tile;
            }
            else {
                var sourceTileGrid = this.getTileGridForProjection(sourceProjection);
                var targetTileGrid = this.getTileGridForProjection(projection);
                var wrappedTileCoord = this.getTileCoordForTileUrlFunction(tileCoord, projection);
                var newTile = new _reproj_Tile_js__WEBPACK_IMPORTED_MODULE_10__.default(sourceProjection, sourceTileGrid, projection, targetTileGrid, tileCoord, wrappedTileCoord, this.getTilePixelRatio(pixelRatio), this.getGutter(), function (z, x, y, pixelRatio) {
                    return this.getTileInternal(z, x, y, pixelRatio, sourceProjection);
                }.bind(this), this.reprojectionErrorThreshold_, this.renderReprojectionEdges_, this.contextOptions_);
                newTile.key = key;
                if (tile) {
                    newTile.interimTile = tile;
                    newTile.refreshInterimChain();
                    cache.replace(tileCoordKey, newTile);
                }
                else {
                    cache.set(tileCoordKey, newTile);
                }
                return newTile;
            }
        }
    };
    /**
     * @param {number} z Tile coordinate z.
     * @param {number} x Tile coordinate x.
     * @param {number} y Tile coordinate y.
     * @param {number} pixelRatio Pixel ratio.
     * @param {!import("../proj/Projection.js").default} projection Projection.
     * @return {!import("../Tile.js").default} Tile.
     * @protected
     */
    TileImage.prototype.getTileInternal = function (z, x, y, pixelRatio, projection) {
        var tile = null;
        var tileCoordKey = (0,_tilecoord_js__WEBPACK_IMPORTED_MODULE_9__.getKeyZXY)(z, x, y);
        var key = this.getKey();
        if (!this.tileCache.containsKey(tileCoordKey)) {
            tile = this.createTile_(z, x, y, pixelRatio, projection, key);
            this.tileCache.set(tileCoordKey, tile);
        }
        else {
            tile = this.tileCache.get(tileCoordKey);
            if (tile.key != key) {
                // The source's params changed. If the tile has an interim tile and if we
                // can use it then we use it. Otherwise we create a new tile.  In both
                // cases we attempt to assign an interim tile to the new tile.
                var interimTile = tile;
                tile = this.createTile_(z, x, y, pixelRatio, projection, key);
                //make the new tile the head of the list,
                if (interimTile.getState() == _TileState_js__WEBPACK_IMPORTED_MODULE_7__.default.IDLE) {
                    //the old tile hasn't begun loading yet, and is now outdated, so we can simply discard it
                    tile.interimTile = interimTile.interimTile;
                }
                else {
                    tile.interimTile = interimTile;
                }
                tile.refreshInterimChain();
                this.tileCache.replace(tileCoordKey, tile);
            }
        }
        return tile;
    };
    /**
     * Sets whether to render reprojection edges or not (usually for debugging).
     * @param {boolean} render Render the edges.
     * @api
     */
    TileImage.prototype.setRenderReprojectionEdges = function (render) {
        if (!_reproj_common_js__WEBPACK_IMPORTED_MODULE_3__.ENABLE_RASTER_REPROJECTION ||
            this.renderReprojectionEdges_ == render) {
            return;
        }
        this.renderReprojectionEdges_ = render;
        for (var id in this.tileCacheForProjection) {
            this.tileCacheForProjection[id].clear();
        }
        this.changed();
    };
    /**
     * Sets the tile grid to use when reprojecting the tiles to the given
     * projection instead of the default tile grid for the projection.
     *
     * This can be useful when the default tile grid cannot be created
     * (e.g. projection has no extent defined) or
     * for optimization reasons (custom tile size, resolutions, ...).
     *
     * @param {import("../proj.js").ProjectionLike} projection Projection.
     * @param {import("../tilegrid/TileGrid.js").default} tilegrid Tile grid to use for the projection.
     * @api
     */
    TileImage.prototype.setTileGridForProjection = function (projection, tilegrid) {
        if (_reproj_common_js__WEBPACK_IMPORTED_MODULE_3__.ENABLE_RASTER_REPROJECTION) {
            var proj = (0,_proj_js__WEBPACK_IMPORTED_MODULE_0__.get)(projection);
            if (proj) {
                var projKey = (0,_util_js__WEBPACK_IMPORTED_MODULE_4__.getUid)(proj);
                if (!(projKey in this.tileGridForProjection)) {
                    this.tileGridForProjection[projKey] = tilegrid;
                }
            }
        }
    };
    return TileImage;
}(_UrlTile_js__WEBPACK_IMPORTED_MODULE_11__.default));
/**
 * @param {ImageTile} imageTile Image tile.
 * @param {string} src Source.
 */
function defaultTileLoadFunction(imageTile, src) {
    /** @type {HTMLImageElement|HTMLVideoElement} */ (imageTile.getImage()).src = src;
}
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (TileImage);
//# sourceMappingURL=TileImage.js.map

/***/ }),

/***/ "./node_modules/ol/source/UrlTile.js":
/*!*******************************************!*\
  !*** ./node_modules/ol/source/UrlTile.js ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _TileEventType_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./TileEventType.js */ "./node_modules/ol/source/TileEventType.js");
/* harmony import */ var _Tile_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Tile.js */ "./node_modules/ol/source/Tile.js");
/* harmony import */ var _TileState_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../TileState.js */ "./node_modules/ol/TileState.js");
/* harmony import */ var _tileurlfunction_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../tileurlfunction.js */ "./node_modules/ol/tileurlfunction.js");
/* harmony import */ var _tilecoord_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../tilecoord.js */ "./node_modules/ol/tilecoord.js");
/* harmony import */ var _util_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util.js */ "./node_modules/ol/util.js");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
/**
 * @module ol/source/UrlTile
 */






/**
 * @typedef {Object} Options
 * @property {import("./Source.js").AttributionLike} [attributions]
 * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.
 * @property {number} [cacheSize]
 * @property {boolean} [opaque=false] Whether the layer is opaque.
 * @property {import("../proj.js").ProjectionLike} [projection]
 * @property {import("./State.js").default} [state]
 * @property {import("../tilegrid/TileGrid.js").default} [tileGrid]
 * @property {import("../Tile.js").LoadFunction} tileLoadFunction
 * @property {number} [tilePixelRatio]
 * @property {import("../Tile.js").UrlFunction} [tileUrlFunction]
 * @property {string} [url]
 * @property {Array<string>} [urls]
 * @property {boolean} [wrapX=true]
 * @property {number} [transition]
 * @property {string} [key]
 * @property {number} [zDirection=0]
 */
/**
 * @classdesc
 * Base class for sources providing tiles divided into a tile grid over http.
 *
 * @fires import("./Tile.js").TileSourceEvent
 */
var UrlTile = /** @class */ (function (_super) {
    __extends(UrlTile, _super);
    /**
     * @param {Options} options Image tile options.
     */
    function UrlTile(options) {
        var _this = _super.call(this, {
            attributions: options.attributions,
            cacheSize: options.cacheSize,
            opaque: options.opaque,
            projection: options.projection,
            state: options.state,
            tileGrid: options.tileGrid,
            tilePixelRatio: options.tilePixelRatio,
            wrapX: options.wrapX,
            transition: options.transition,
            key: options.key,
            attributionsCollapsible: options.attributionsCollapsible,
            zDirection: options.zDirection,
        }) || this;
        /**
         * @private
         * @type {boolean}
         */
        _this.generateTileUrlFunction_ =
            _this.tileUrlFunction === UrlTile.prototype.tileUrlFunction;
        /**
         * @protected
         * @type {import("../Tile.js").LoadFunction}
         */
        _this.tileLoadFunction = options.tileLoadFunction;
        if (options.tileUrlFunction) {
            _this.tileUrlFunction = options.tileUrlFunction;
        }
        /**
         * @protected
         * @type {!Array<string>|null}
         */
        _this.urls = null;
        if (options.urls) {
            _this.setUrls(options.urls);
        }
        else if (options.url) {
            _this.setUrl(options.url);
        }
        /**
         * @private
         * @type {!Object<string, boolean>}
         */
        _this.tileLoadingKeys_ = {};
        return _this;
    }
    /**
     * Return the tile load function of the source.
     * @return {import("../Tile.js").LoadFunction} TileLoadFunction
     * @api
     */
    UrlTile.prototype.getTileLoadFunction = function () {
        return this.tileLoadFunction;
    };
    /**
     * Return the tile URL function of the source.
     * @return {import("../Tile.js").UrlFunction} TileUrlFunction
     * @api
     */
    UrlTile.prototype.getTileUrlFunction = function () {
        return Object.getPrototypeOf(this).tileUrlFunction === this.tileUrlFunction
            ? this.tileUrlFunction.bind(this)
            : this.tileUrlFunction;
    };
    /**
     * Return the URLs used for this source.
     * When a tileUrlFunction is used instead of url or urls,
     * null will be returned.
     * @return {!Array<string>|null} URLs.
     * @api
     */
    UrlTile.prototype.getUrls = function () {
        return this.urls;
    };
    /**
     * Handle tile change events.
     * @param {import("../events/Event.js").default} event Event.
     * @protected
     */
    UrlTile.prototype.handleTileChange = function (event) {
        var tile = /** @type {import("../Tile.js").default} */ (event.target);
        var uid = (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.getUid)(tile);
        var tileState = tile.getState();
        var type;
        if (tileState == _TileState_js__WEBPACK_IMPORTED_MODULE_1__.default.LOADING) {
            this.tileLoadingKeys_[uid] = true;
            type = _TileEventType_js__WEBPACK_IMPORTED_MODULE_2__.default.TILELOADSTART;
        }
        else if (uid in this.tileLoadingKeys_) {
            delete this.tileLoadingKeys_[uid];
            type =
                tileState == _TileState_js__WEBPACK_IMPORTED_MODULE_1__.default.ERROR
                    ? _TileEventType_js__WEBPACK_IMPORTED_MODULE_2__.default.TILELOADERROR
                    : tileState == _TileState_js__WEBPACK_IMPORTED_MODULE_1__.default.LOADED
                        ? _TileEventType_js__WEBPACK_IMPORTED_MODULE_2__.default.TILELOADEND
                        : undefined;
        }
        if (type != undefined) {
            this.dispatchEvent(new _Tile_js__WEBPACK_IMPORTED_MODULE_3__.TileSourceEvent(type, tile));
        }
    };
    /**
     * Set the tile load function of the source.
     * @param {import("../Tile.js").LoadFunction} tileLoadFunction Tile load function.
     * @api
     */
    UrlTile.prototype.setTileLoadFunction = function (tileLoadFunction) {
        this.tileCache.clear();
        this.tileLoadFunction = tileLoadFunction;
        this.changed();
    };
    /**
     * Set the tile URL function of the source.
     * @param {import("../Tile.js").UrlFunction} tileUrlFunction Tile URL function.
     * @param {string=} key Optional new tile key for the source.
     * @api
     */
    UrlTile.prototype.setTileUrlFunction = function (tileUrlFunction, key) {
        this.tileUrlFunction = tileUrlFunction;
        this.tileCache.pruneExceptNewestZ();
        if (typeof key !== 'undefined') {
            this.setKey(key);
        }
        else {
            this.changed();
        }
    };
    /**
     * Set the URL to use for requests.
     * @param {string} url URL.
     * @api
     */
    UrlTile.prototype.setUrl = function (url) {
        var urls = (0,_tileurlfunction_js__WEBPACK_IMPORTED_MODULE_4__.expandUrl)(url);
        this.urls = urls;
        this.setUrls(urls);
    };
    /**
     * Set the URLs to use for requests.
     * @param {Array<string>} urls URLs.
     * @api
     */
    UrlTile.prototype.setUrls = function (urls) {
        this.urls = urls;
        var key = urls.join('\n');
        if (this.generateTileUrlFunction_) {
            this.setTileUrlFunction((0,_tileurlfunction_js__WEBPACK_IMPORTED_MODULE_4__.createFromTemplates)(urls, this.tileGrid), key);
        }
        else {
            this.setKey(key);
        }
    };
    /**
     * @param {import("../tilecoord.js").TileCoord} tileCoord Tile coordinate.
     * @param {number} pixelRatio Pixel ratio.
     * @param {import("../proj/Projection.js").default} projection Projection.
     * @return {string|undefined} Tile URL.
     */
    UrlTile.prototype.tileUrlFunction = function (tileCoord, pixelRatio, projection) {
        return undefined;
    };
    /**
     * Marks a tile coord as being used, without triggering a load.
     * @param {number} z Tile coordinate z.
     * @param {number} x Tile coordinate x.
     * @param {number} y Tile coordinate y.
     */
    UrlTile.prototype.useTile = function (z, x, y) {
        var tileCoordKey = (0,_tilecoord_js__WEBPACK_IMPORTED_MODULE_5__.getKeyZXY)(z, x, y);
        if (this.tileCache.containsKey(tileCoordKey)) {
            this.tileCache.get(tileCoordKey);
        }
    };
    return UrlTile;
}(_Tile_js__WEBPACK_IMPORTED_MODULE_3__.default));
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (UrlTile);
//# sourceMappingURL=UrlTile.js.map

/***/ }),

/***/ "./node_modules/ol/source/Vector.js":
/*!******************************************!*\
  !*** ./node_modules/ol/source/Vector.js ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "VectorSourceEvent": () => (/* binding */ VectorSourceEvent),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _Collection_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../Collection.js */ "./node_modules/ol/Collection.js");
/* harmony import */ var _CollectionEventType_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../CollectionEventType.js */ "./node_modules/ol/CollectionEventType.js");
/* harmony import */ var _events_Event_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../events/Event.js */ "./node_modules/ol/events/Event.js");
/* harmony import */ var _events_EventType_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../events/EventType.js */ "./node_modules/ol/events/EventType.js");
/* harmony import */ var _ObjectEventType_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../ObjectEventType.js */ "./node_modules/ol/ObjectEventType.js");
/* harmony import */ var _structs_RBush_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../structs/RBush.js */ "./node_modules/ol/structs/RBush.js");
/* harmony import */ var _Source_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./Source.js */ "./node_modules/ol/source/Source.js");
/* harmony import */ var _State_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./State.js */ "./node_modules/ol/source/State.js");
/* harmony import */ var _VectorEventType_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./VectorEventType.js */ "./node_modules/ol/source/VectorEventType.js");
/* harmony import */ var _functions_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../functions.js */ "./node_modules/ol/functions.js");
/* harmony import */ var _loadingstrategy_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../loadingstrategy.js */ "./node_modules/ol/loadingstrategy.js");
/* harmony import */ var _asserts_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../asserts.js */ "./node_modules/ol/asserts.js");
/* harmony import */ var _extent_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../extent.js */ "./node_modules/ol/extent.js");
/* harmony import */ var _array_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../array.js */ "./node_modules/ol/array.js");
/* harmony import */ var _util_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../util.js */ "./node_modules/ol/util.js");
/* harmony import */ var _obj_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../obj.js */ "./node_modules/ol/obj.js");
/* harmony import */ var _events_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../events.js */ "./node_modules/ol/events.js");
/* harmony import */ var _featureloader_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../featureloader.js */ "./node_modules/ol/featureloader.js");
/**
 * @module ol/source/Vector
 */
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();


















/**
 * A function that takes an {@link module:ol/extent~Extent} and a resolution as arguments, and
 * returns an array of {@link module:ol/extent~Extent} with the extents to load. Usually this
 * is one of the standard {@link module:ol/loadingstrategy} strategies.
 *
 * @typedef {function(import("../extent.js").Extent, number): Array<import("../extent.js").Extent>} LoadingStrategy
 * @api
 */
/**
 * @classdesc
 * Events emitted by {@link module:ol/source/Vector} instances are instances of this
 * type.
 * @template {import("../geom/Geometry.js").default} Geometry
 */
var VectorSourceEvent = /** @class */ (function (_super) {
    __extends(VectorSourceEvent, _super);
    /**
     * @param {string} type Type.
     * @param {import("../Feature.js").default<Geometry>=} opt_feature Feature.
     * @param {Array<import("../Feature.js").default<Geometry>>=} opt_features Features.
     */
    function VectorSourceEvent(type, opt_feature, opt_features) {
        var _this = _super.call(this, type) || this;
        /**
         * The added or removed feature for the `ADDFEATURE` and `REMOVEFEATURE` events, `undefined` otherwise.
         * @type {import("../Feature.js").default<Geometry>|undefined}
         * @api
         */
        _this.feature = opt_feature;
        /**
         * The loaded features for the `FEATURESLOADED` event, `undefined` otherwise.
         * @type {Array<import("../Feature.js").default<Geometry>>|undefined}
         * @api
         */
        _this.features = opt_features;
        return _this;
    }
    return VectorSourceEvent;
}(_events_Event_js__WEBPACK_IMPORTED_MODULE_0__.default));

/**
 * @typedef {Object} Options
 * @property {import("./Source.js").AttributionLike} [attributions] Attributions.
 * @property {Array<import("../Feature.js").default>|Collection<import("../Feature.js").default>} [features]
 * Features. If provided as {@link module:ol/Collection}, the features in the source
 * and the collection will stay in sync.
 * @property {import("../format/Feature.js").default} [format] The feature format used by the XHR
 * feature loader when `url` is set. Required if `url` is set, otherwise ignored.
 * @property {import("../featureloader.js").FeatureLoader} [loader]
 * The loader function used to load features, from a remote source for example.
 * If this is not set and `url` is set, the source will create and use an XHR
 * feature loader.
 *
 * Example:
 *
 * ```js
 * import {Vector} from 'ol/source';
 * import {GeoJSON} from 'ol/format';
 * import {bbox} from 'ol/loadingstrategy';
 *
 * var vectorSource = new Vector({
 *   format: new GeoJSON(),
 *   loader: function(extent, resolution, projection) {
 *      var proj = projection.getCode();
 *      var url = 'https://ahocevar.com/geoserver/wfs?service=WFS&' +
 *          'version=1.1.0&request=GetFeature&typename=osm:water_areas&' +
 *          'outputFormat=application/json&srsname=' + proj + '&' +
 *          'bbox=' + extent.join(',') + ',' + proj;
 *      var xhr = new XMLHttpRequest();
 *      xhr.open('GET', url);
 *      var onError = function() {
 *        vectorSource.removeLoadedExtent(extent);
 *      }
 *      xhr.onerror = onError;
 *      xhr.onload = function() {
 *        if (xhr.status == 200) {
 *          vectorSource.addFeatures(
 *              vectorSource.getFormat().readFeatures(xhr.responseText));
 *        } else {
 *          onError();
 *        }
 *      }
 *      xhr.send();
 *    },
 *    strategy: bbox
 *  });
 * ```
 * @property {boolean} [overlaps=true] This source may have overlapping geometries.
 * Setting this to `false` (e.g. for sources with polygons that represent administrative
 * boundaries or TopoJSON sources) allows the renderer to optimise fill and
 * stroke operations.
 * @property {LoadingStrategy} [strategy] The loading strategy to use.
 * By default an {@link module:ol/loadingstrategy~all}
 * strategy is used, a one-off strategy which loads all features at once.
 * @property {string|import("../featureloader.js").FeatureUrlFunction} [url]
 * Setting this option instructs the source to load features using an XHR loader
 * (see {@link module:ol/featureloader~xhr}). Use a `string` and an
 * {@link module:ol/loadingstrategy~all} for a one-off download of all features from
 * the given URL. Use a {@link module:ol/featureloader~FeatureUrlFunction} to generate the url with
 * other loading strategies.
 * Requires `format` to be set as well.
 * When default XHR feature loader is provided, the features will
 * be transformed from the data projection to the view projection
 * during parsing. If your remote data source does not advertise its projection
 * properly, this transformation will be incorrect. For some formats, the
 * default projection (usually EPSG:4326) can be overridden by setting the
 * dataProjection constructor option on the format.
 * Note that if a source contains non-feature data, such as a GeoJSON geometry
 * or a KML NetworkLink, these will be ignored. Use a custom loader to load these.
 * @property {boolean} [useSpatialIndex=true]
 * By default, an RTree is used as spatial index. When features are removed and
 * added frequently, and the total number of features is low, setting this to
 * `false` may improve performance.
 *
 * Note that
 * {@link module:ol/source/Vector~VectorSource#getFeaturesInExtent},
 * {@link module:ol/source/Vector~VectorSource#getClosestFeatureToCoordinate} and
 * {@link module:ol/source/Vector~VectorSource#getExtent} cannot be used when `useSpatialIndex` is
 * set to `false`, and {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent} will loop
 * through all features.
 *
 * When set to `false`, the features will be maintained in an
 * {@link module:ol/Collection}, which can be retrieved through
 * {@link module:ol/source/Vector~VectorSource#getFeaturesCollection}.
 * @property {boolean} [wrapX=true] Wrap the world horizontally. For vector editing across the
 * -180° and 180° meridians to work properly, this should be set to `false`. The
 * resulting geometry coordinates will then exceed the world bounds.
 */
/**
 * @classdesc
 * Provides a source of features for vector layers. Vector features provided
 * by this source are suitable for editing. See {@link module:ol/source/VectorTile~VectorTile} for
 * vector data that is optimized for rendering.
 *
 * @fires VectorSourceEvent
 * @api
 * @template {import("../geom/Geometry.js").default} Geometry
 */
var VectorSource = /** @class */ (function (_super) {
    __extends(VectorSource, _super);
    /**
     * @param {Options=} opt_options Vector source options.
     */
    function VectorSource(opt_options) {
        var _this = this;
        var options = opt_options || {};
        _this = _super.call(this, {
            attributions: options.attributions,
            projection: undefined,
            state: _State_js__WEBPACK_IMPORTED_MODULE_1__.default.READY,
            wrapX: options.wrapX !== undefined ? options.wrapX : true,
        }) || this;
        /**
         * @private
         * @type {import("../featureloader.js").FeatureLoader}
         */
        _this.loader_ = _functions_js__WEBPACK_IMPORTED_MODULE_2__.VOID;
        /**
         * @private
         * @type {import("../format/Feature.js").default|undefined}
         */
        _this.format_ = options.format;
        /**
         * @private
         * @type {boolean}
         */
        _this.overlaps_ = options.overlaps === undefined ? true : options.overlaps;
        /**
         * @private
         * @type {string|import("../featureloader.js").FeatureUrlFunction|undefined}
         */
        _this.url_ = options.url;
        if (options.loader !== undefined) {
            _this.loader_ = options.loader;
        }
        else if (_this.url_ !== undefined) {
            (0,_asserts_js__WEBPACK_IMPORTED_MODULE_3__.assert)(_this.format_, 7); // `format` must be set when `url` is set
            // create a XHR feature loader for "url" and "format"
            _this.loader_ = (0,_featureloader_js__WEBPACK_IMPORTED_MODULE_4__.xhr)(_this.url_, 
            /** @type {import("../format/Feature.js").default} */ (_this.format_));
        }
        /**
         * @private
         * @type {LoadingStrategy}
         */
        _this.strategy_ =
            options.strategy !== undefined ? options.strategy : _loadingstrategy_js__WEBPACK_IMPORTED_MODULE_5__.all;
        var useSpatialIndex = options.useSpatialIndex !== undefined ? options.useSpatialIndex : true;
        /**
         * @private
         * @type {RBush<import("../Feature.js").default<Geometry>>}
         */
        _this.featuresRtree_ = useSpatialIndex ? new _structs_RBush_js__WEBPACK_IMPORTED_MODULE_6__.default() : null;
        /**
         * @private
         * @type {RBush<{extent: import("../extent.js").Extent}>}
         */
        _this.loadedExtentsRtree_ = new _structs_RBush_js__WEBPACK_IMPORTED_MODULE_6__.default();
        /**
         * @private
         * @type {!Object<string, import("../Feature.js").default<Geometry>>}
         */
        _this.nullGeometryFeatures_ = {};
        /**
         * A lookup of features by id (the return from feature.getId()).
         * @private
         * @type {!Object<string, import("../Feature.js").default<Geometry>>}
         */
        _this.idIndex_ = {};
        /**
         * A lookup of features by uid (using getUid(feature)).
         * @private
         * @type {!Object<string, import("../Feature.js").default<Geometry>>}
         */
        _this.uidIndex_ = {};
        /**
         * @private
         * @type {Object<string, Array<import("../events.js").EventsKey>>}
         */
        _this.featureChangeKeys_ = {};
        /**
         * @private
         * @type {Collection<import("../Feature.js").default<Geometry>>}
         */
        _this.featuresCollection_ = null;
        var collection, features;
        if (Array.isArray(options.features)) {
            features = options.features;
        }
        else if (options.features) {
            collection = options.features;
            features = collection.getArray();
        }
        if (!useSpatialIndex && collection === undefined) {
            collection = new _Collection_js__WEBPACK_IMPORTED_MODULE_7__.default(features);
        }
        if (features !== undefined) {
            _this.addFeaturesInternal(features);
        }
        if (collection !== undefined) {
            _this.bindFeaturesCollection_(collection);
        }
        return _this;
    }
    /**
     * Add a single feature to the source.  If you want to add a batch of features
     * at once, call {@link module:ol/source/Vector~VectorSource#addFeatures #addFeatures()}
     * instead. A feature will not be added to the source if feature with
     * the same id is already there. The reason for this behavior is to avoid
     * feature duplication when using bbox or tile loading strategies.
     * Note: this also applies if an {@link module:ol/Collection} is used for features,
     * meaning that if a feature with a duplicate id is added in the collection, it will
     * be removed from it right away.
     * @param {import("../Feature.js").default<Geometry>} feature Feature to add.
     * @api
     */
    VectorSource.prototype.addFeature = function (feature) {
        this.addFeatureInternal(feature);
        this.changed();
    };
    /**
     * Add a feature without firing a `change` event.
     * @param {import("../Feature.js").default<Geometry>} feature Feature.
     * @protected
     */
    VectorSource.prototype.addFeatureInternal = function (feature) {
        var featureKey = (0,_util_js__WEBPACK_IMPORTED_MODULE_8__.getUid)(feature);
        if (!this.addToIndex_(featureKey, feature)) {
            if (this.featuresCollection_) {
                this.featuresCollection_.remove(feature);
            }
            return;
        }
        this.setupChangeEvents_(featureKey, feature);
        var geometry = feature.getGeometry();
        if (geometry) {
            var extent = geometry.getExtent();
            if (this.featuresRtree_) {
                this.featuresRtree_.insert(extent, feature);
            }
        }
        else {
            this.nullGeometryFeatures_[featureKey] = feature;
        }
        this.dispatchEvent(new VectorSourceEvent(_VectorEventType_js__WEBPACK_IMPORTED_MODULE_9__.default.ADDFEATURE, feature));
    };
    /**
     * @param {string} featureKey Unique identifier for the feature.
     * @param {import("../Feature.js").default<Geometry>} feature The feature.
     * @private
     */
    VectorSource.prototype.setupChangeEvents_ = function (featureKey, feature) {
        this.featureChangeKeys_[featureKey] = [
            (0,_events_js__WEBPACK_IMPORTED_MODULE_10__.listen)(feature, _events_EventType_js__WEBPACK_IMPORTED_MODULE_11__.default.CHANGE, this.handleFeatureChange_, this),
            (0,_events_js__WEBPACK_IMPORTED_MODULE_10__.listen)(feature, _ObjectEventType_js__WEBPACK_IMPORTED_MODULE_12__.default.PROPERTYCHANGE, this.handleFeatureChange_, this),
        ];
    };
    /**
     * @param {string} featureKey Unique identifier for the feature.
     * @param {import("../Feature.js").default<Geometry>} feature The feature.
     * @return {boolean} The feature is "valid", in the sense that it is also a
     *     candidate for insertion into the Rtree.
     * @private
     */
    VectorSource.prototype.addToIndex_ = function (featureKey, feature) {
        var valid = true;
        var id = feature.getId();
        if (id !== undefined) {
            if (!(id.toString() in this.idIndex_)) {
                this.idIndex_[id.toString()] = feature;
            }
            else {
                valid = false;
            }
        }
        if (valid) {
            (0,_asserts_js__WEBPACK_IMPORTED_MODULE_3__.assert)(!(featureKey in this.uidIndex_), 30); // The passed `feature` was already added to the source
            this.uidIndex_[featureKey] = feature;
        }
        return valid;
    };
    /**
     * Add a batch of features to the source.
     * @param {Array<import("../Feature.js").default<Geometry>>} features Features to add.
     * @api
     */
    VectorSource.prototype.addFeatures = function (features) {
        this.addFeaturesInternal(features);
        this.changed();
    };
    /**
     * Add features without firing a `change` event.
     * @param {Array<import("../Feature.js").default<Geometry>>} features Features.
     * @protected
     */
    VectorSource.prototype.addFeaturesInternal = function (features) {
        var extents = [];
        var newFeatures = [];
        var geometryFeatures = [];
        for (var i = 0, length_1 = features.length; i < length_1; i++) {
            var feature = features[i];
            var featureKey = (0,_util_js__WEBPACK_IMPORTED_MODULE_8__.getUid)(feature);
            if (this.addToIndex_(featureKey, feature)) {
                newFeatures.push(feature);
            }
        }
        for (var i = 0, length_2 = newFeatures.length; i < length_2; i++) {
            var feature = newFeatures[i];
            var featureKey = (0,_util_js__WEBPACK_IMPORTED_MODULE_8__.getUid)(feature);
            this.setupChangeEvents_(featureKey, feature);
            var geometry = feature.getGeometry();
            if (geometry) {
                var extent = geometry.getExtent();
                extents.push(extent);
                geometryFeatures.push(feature);
            }
            else {
                this.nullGeometryFeatures_[featureKey] = feature;
            }
        }
        if (this.featuresRtree_) {
            this.featuresRtree_.load(extents, geometryFeatures);
        }
        for (var i = 0, length_3 = newFeatures.length; i < length_3; i++) {
            this.dispatchEvent(new VectorSourceEvent(_VectorEventType_js__WEBPACK_IMPORTED_MODULE_9__.default.ADDFEATURE, newFeatures[i]));
        }
    };
    /**
     * @param {!Collection<import("../Feature.js").default<Geometry>>} collection Collection.
     * @private
     */
    VectorSource.prototype.bindFeaturesCollection_ = function (collection) {
        var modifyingCollection = false;
        this.addEventListener(_VectorEventType_js__WEBPACK_IMPORTED_MODULE_9__.default.ADDFEATURE, 
        /**
         * @param {VectorSourceEvent<Geometry>} evt The vector source event
         */
        function (evt) {
            if (!modifyingCollection) {
                modifyingCollection = true;
                collection.push(evt.feature);
                modifyingCollection = false;
            }
        });
        this.addEventListener(_VectorEventType_js__WEBPACK_IMPORTED_MODULE_9__.default.REMOVEFEATURE, 
        /**
         * @param {VectorSourceEvent<Geometry>} evt The vector source event
         */
        function (evt) {
            if (!modifyingCollection) {
                modifyingCollection = true;
                collection.remove(evt.feature);
                modifyingCollection = false;
            }
        });
        collection.addEventListener(_CollectionEventType_js__WEBPACK_IMPORTED_MODULE_13__.default.ADD, 
        /**
         * @param {import("../Collection.js").CollectionEvent} evt The collection event
         */
        function (evt) {
            if (!modifyingCollection) {
                modifyingCollection = true;
                this.addFeature(
                /** @type {import("../Feature.js").default<Geometry>} */ (evt.element));
                modifyingCollection = false;
            }
        }.bind(this));
        collection.addEventListener(_CollectionEventType_js__WEBPACK_IMPORTED_MODULE_13__.default.REMOVE, 
        /**
         * @param {import("../Collection.js").CollectionEvent} evt The collection event
         */
        function (evt) {
            if (!modifyingCollection) {
                modifyingCollection = true;
                this.removeFeature(
                /** @type {import("../Feature.js").default<Geometry>} */ (evt.element));
                modifyingCollection = false;
            }
        }.bind(this));
        this.featuresCollection_ = collection;
    };
    /**
     * Remove all features from the source.
     * @param {boolean=} opt_fast Skip dispatching of {@link module:ol/source/Vector.VectorSourceEvent#removefeature} events.
     * @api
     */
    VectorSource.prototype.clear = function (opt_fast) {
        if (opt_fast) {
            for (var featureId in this.featureChangeKeys_) {
                var keys = this.featureChangeKeys_[featureId];
                keys.forEach(_events_js__WEBPACK_IMPORTED_MODULE_10__.unlistenByKey);
            }
            if (!this.featuresCollection_) {
                this.featureChangeKeys_ = {};
                this.idIndex_ = {};
                this.uidIndex_ = {};
            }
        }
        else {
            if (this.featuresRtree_) {
                this.featuresRtree_.forEach(this.removeFeatureInternal.bind(this));
                for (var id in this.nullGeometryFeatures_) {
                    this.removeFeatureInternal(this.nullGeometryFeatures_[id]);
                }
            }
        }
        if (this.featuresCollection_) {
            this.featuresCollection_.clear();
        }
        if (this.featuresRtree_) {
            this.featuresRtree_.clear();
        }
        this.nullGeometryFeatures_ = {};
        var clearEvent = new VectorSourceEvent(_VectorEventType_js__WEBPACK_IMPORTED_MODULE_9__.default.CLEAR);
        this.dispatchEvent(clearEvent);
        this.changed();
    };
    /**
     * Iterate through all features on the source, calling the provided callback
     * with each one.  If the callback returns any "truthy" value, iteration will
     * stop and the function will return the same value.
     * Note: this function only iterate through the feature that have a defined geometry.
     *
     * @param {function(import("../Feature.js").default<Geometry>): T} callback Called with each feature
     *     on the source.  Return a truthy value to stop iteration.
     * @return {T|undefined} The return value from the last call to the callback.
     * @template T
     * @api
     */
    VectorSource.prototype.forEachFeature = function (callback) {
        if (this.featuresRtree_) {
            return this.featuresRtree_.forEach(callback);
        }
        else if (this.featuresCollection_) {
            this.featuresCollection_.forEach(callback);
        }
    };
    /**
     * Iterate through all features whose geometries contain the provided
     * coordinate, calling the callback with each feature.  If the callback returns
     * a "truthy" value, iteration will stop and the function will return the same
     * value.
     *
     * @param {import("../coordinate.js").Coordinate} coordinate Coordinate.
     * @param {function(import("../Feature.js").default<Geometry>): T} callback Called with each feature
     *     whose goemetry contains the provided coordinate.
     * @return {T|undefined} The return value from the last call to the callback.
     * @template T
     */
    VectorSource.prototype.forEachFeatureAtCoordinateDirect = function (coordinate, callback) {
        var extent = [coordinate[0], coordinate[1], coordinate[0], coordinate[1]];
        return this.forEachFeatureInExtent(extent, function (feature) {
            var geometry = feature.getGeometry();
            if (geometry.intersectsCoordinate(coordinate)) {
                return callback(feature);
            }
            else {
                return undefined;
            }
        });
    };
    /**
     * Iterate through all features whose bounding box intersects the provided
     * extent (note that the feature's geometry may not intersect the extent),
     * calling the callback with each feature.  If the callback returns a "truthy"
     * value, iteration will stop and the function will return the same value.
     *
     * If you are interested in features whose geometry intersects an extent, call
     * the {@link module:ol/source/Vector~VectorSource#forEachFeatureIntersectingExtent #forEachFeatureIntersectingExtent()} method instead.
     *
     * When `useSpatialIndex` is set to false, this method will loop through all
     * features, equivalent to {@link module:ol/source/Vector~VectorSource#forEachFeature #forEachFeature()}.
     *
     * @param {import("../extent.js").Extent} extent Extent.
     * @param {function(import("../Feature.js").default<Geometry>): T} callback Called with each feature
     *     whose bounding box intersects the provided extent.
     * @return {T|undefined} The return value from the last call to the callback.
     * @template T
     * @api
     */
    VectorSource.prototype.forEachFeatureInExtent = function (extent, callback) {
        if (this.featuresRtree_) {
            return this.featuresRtree_.forEachInExtent(extent, callback);
        }
        else if (this.featuresCollection_) {
            this.featuresCollection_.forEach(callback);
        }
    };
    /**
     * Iterate through all features whose geometry intersects the provided extent,
     * calling the callback with each feature.  If the callback returns a "truthy"
     * value, iteration will stop and the function will return the same value.
     *
     * If you only want to test for bounding box intersection, call the
     * {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent #forEachFeatureInExtent()} method instead.
     *
     * @param {import("../extent.js").Extent} extent Extent.
     * @param {function(import("../Feature.js").default<Geometry>): T} callback Called with each feature
     *     whose geometry intersects the provided extent.
     * @return {T|undefined} The return value from the last call to the callback.
     * @template T
     * @api
     */
    VectorSource.prototype.forEachFeatureIntersectingExtent = function (extent, callback) {
        return this.forEachFeatureInExtent(extent, 
        /**
         * @param {import("../Feature.js").default<Geometry>} feature Feature.
         * @return {T|undefined} The return value from the last call to the callback.
         */
        function (feature) {
            var geometry = feature.getGeometry();
            if (geometry.intersectsExtent(extent)) {
                var result = callback(feature);
                if (result) {
                    return result;
                }
            }
        });
    };
    /**
     * Get the features collection associated with this source. Will be `null`
     * unless the source was configured with `useSpatialIndex` set to `false`, or
     * with an {@link module:ol/Collection} as `features`.
     * @return {Collection<import("../Feature.js").default<Geometry>>} The collection of features.
     * @api
     */
    VectorSource.prototype.getFeaturesCollection = function () {
        return this.featuresCollection_;
    };
    /**
     * Get all features on the source in random order.
     * @return {Array<import("../Feature.js").default<Geometry>>} Features.
     * @api
     */
    VectorSource.prototype.getFeatures = function () {
        var features;
        if (this.featuresCollection_) {
            features = this.featuresCollection_.getArray();
        }
        else if (this.featuresRtree_) {
            features = this.featuresRtree_.getAll();
            if (!(0,_obj_js__WEBPACK_IMPORTED_MODULE_14__.isEmpty)(this.nullGeometryFeatures_)) {
                (0,_array_js__WEBPACK_IMPORTED_MODULE_15__.extend)(features, (0,_obj_js__WEBPACK_IMPORTED_MODULE_14__.getValues)(this.nullGeometryFeatures_));
            }
        }
        return /** @type {Array<import("../Feature.js").default<Geometry>>} */ (features);
    };
    /**
     * Get all features whose geometry intersects the provided coordinate.
     * @param {import("../coordinate.js").Coordinate} coordinate Coordinate.
     * @return {Array<import("../Feature.js").default<Geometry>>} Features.
     * @api
     */
    VectorSource.prototype.getFeaturesAtCoordinate = function (coordinate) {
        var features = [];
        this.forEachFeatureAtCoordinateDirect(coordinate, function (feature) {
            features.push(feature);
        });
        return features;
    };
    /**
     * Get all features whose bounding box intersects the provided extent.  Note that this returns an array of
     * all features intersecting the given extent in random order (so it may include
     * features whose geometries do not intersect the extent).
     *
     * When `useSpatialIndex` is set to false, this method will return all
     * features.
     *
     * @param {import("../extent.js").Extent} extent Extent.
     * @return {Array<import("../Feature.js").default<Geometry>>} Features.
     * @api
     */
    VectorSource.prototype.getFeaturesInExtent = function (extent) {
        if (this.featuresRtree_) {
            return this.featuresRtree_.getInExtent(extent);
        }
        else if (this.featuresCollection_) {
            return this.featuresCollection_.getArray();
        }
        else {
            return [];
        }
    };
    /**
     * Get the closest feature to the provided coordinate.
     *
     * This method is not available when the source is configured with
     * `useSpatialIndex` set to `false`.
     * @param {import("../coordinate.js").Coordinate} coordinate Coordinate.
     * @param {function(import("../Feature.js").default<Geometry>):boolean=} opt_filter Feature filter function.
     *     The filter function will receive one argument, the {@link module:ol/Feature feature}
     *     and it should return a boolean value. By default, no filtering is made.
     * @return {import("../Feature.js").default<Geometry>} Closest feature.
     * @api
     */
    VectorSource.prototype.getClosestFeatureToCoordinate = function (coordinate, opt_filter) {
        // Find the closest feature using branch and bound.  We start searching an
        // infinite extent, and find the distance from the first feature found.  This
        // becomes the closest feature.  We then compute a smaller extent which any
        // closer feature must intersect.  We continue searching with this smaller
        // extent, trying to find a closer feature.  Every time we find a closer
        // feature, we update the extent being searched so that any even closer
        // feature must intersect it.  We continue until we run out of features.
        var x = coordinate[0];
        var y = coordinate[1];
        var closestFeature = null;
        var closestPoint = [NaN, NaN];
        var minSquaredDistance = Infinity;
        var extent = [-Infinity, -Infinity, Infinity, Infinity];
        var filter = opt_filter ? opt_filter : _functions_js__WEBPACK_IMPORTED_MODULE_2__.TRUE;
        this.featuresRtree_.forEachInExtent(extent, 
        /**
         * @param {import("../Feature.js").default<Geometry>} feature Feature.
         */
        function (feature) {
            if (filter(feature)) {
                var geometry = feature.getGeometry();
                var previousMinSquaredDistance = minSquaredDistance;
                minSquaredDistance = geometry.closestPointXY(x, y, closestPoint, minSquaredDistance);
                if (minSquaredDistance < previousMinSquaredDistance) {
                    closestFeature = feature;
                    // This is sneaky.  Reduce the extent that it is currently being
                    // searched while the R-Tree traversal using this same extent object
                    // is still in progress.  This is safe because the new extent is
                    // strictly contained by the old extent.
                    var minDistance = Math.sqrt(minSquaredDistance);
                    extent[0] = x - minDistance;
                    extent[1] = y - minDistance;
                    extent[2] = x + minDistance;
                    extent[3] = y + minDistance;
                }
            }
        });
        return closestFeature;
    };
    /**
     * Get the extent of the features currently in the source.
     *
     * This method is not available when the source is configured with
     * `useSpatialIndex` set to `false`.
     * @param {import("../extent.js").Extent=} opt_extent Destination extent. If provided, no new extent
     *     will be created. Instead, that extent's coordinates will be overwritten.
     * @return {import("../extent.js").Extent} Extent.
     * @api
     */
    VectorSource.prototype.getExtent = function (opt_extent) {
        return this.featuresRtree_.getExtent(opt_extent);
    };
    /**
     * Get a feature by its identifier (the value returned by feature.getId()).
     * Note that the index treats string and numeric identifiers as the same.  So
     * `source.getFeatureById(2)` will return a feature with id `'2'` or `2`.
     *
     * @param {string|number} id Feature identifier.
     * @return {import("../Feature.js").default<Geometry>} The feature (or `null` if not found).
     * @api
     */
    VectorSource.prototype.getFeatureById = function (id) {
        var feature = this.idIndex_[id.toString()];
        return feature !== undefined ? feature : null;
    };
    /**
     * Get a feature by its internal unique identifier (using `getUid`).
     *
     * @param {string} uid Feature identifier.
     * @return {import("../Feature.js").default<Geometry>} The feature (or `null` if not found).
     */
    VectorSource.prototype.getFeatureByUid = function (uid) {
        var feature = this.uidIndex_[uid];
        return feature !== undefined ? feature : null;
    };
    /**
     * Get the format associated with this source.
     *
     * @return {import("../format/Feature.js").default|undefined} The feature format.
     * @api
     */
    VectorSource.prototype.getFormat = function () {
        return this.format_;
    };
    /**
     * @return {boolean} The source can have overlapping geometries.
     */
    VectorSource.prototype.getOverlaps = function () {
        return this.overlaps_;
    };
    /**
     * Get the url associated with this source.
     *
     * @return {string|import("../featureloader.js").FeatureUrlFunction|undefined} The url.
     * @api
     */
    VectorSource.prototype.getUrl = function () {
        return this.url_;
    };
    /**
     * @param {Event} event Event.
     * @private
     */
    VectorSource.prototype.handleFeatureChange_ = function (event) {
        var feature = /** @type {import("../Feature.js").default<Geometry>} */ (event.target);
        var featureKey = (0,_util_js__WEBPACK_IMPORTED_MODULE_8__.getUid)(feature);
        var geometry = feature.getGeometry();
        if (!geometry) {
            if (!(featureKey in this.nullGeometryFeatures_)) {
                if (this.featuresRtree_) {
                    this.featuresRtree_.remove(feature);
                }
                this.nullGeometryFeatures_[featureKey] = feature;
            }
        }
        else {
            var extent = geometry.getExtent();
            if (featureKey in this.nullGeometryFeatures_) {
                delete this.nullGeometryFeatures_[featureKey];
                if (this.featuresRtree_) {
                    this.featuresRtree_.insert(extent, feature);
                }
            }
            else {
                if (this.featuresRtree_) {
                    this.featuresRtree_.update(extent, feature);
                }
            }
        }
        var id = feature.getId();
        if (id !== undefined) {
            var sid = id.toString();
            if (this.idIndex_[sid] !== feature) {
                this.removeFromIdIndex_(feature);
                this.idIndex_[sid] = feature;
            }
        }
        else {
            this.removeFromIdIndex_(feature);
            this.uidIndex_[featureKey] = feature;
        }
        this.changed();
        this.dispatchEvent(new VectorSourceEvent(_VectorEventType_js__WEBPACK_IMPORTED_MODULE_9__.default.CHANGEFEATURE, feature));
    };
    /**
     * Returns true if the feature is contained within the source.
     * @param {import("../Feature.js").default<Geometry>} feature Feature.
     * @return {boolean} Has feature.
     * @api
     */
    VectorSource.prototype.hasFeature = function (feature) {
        var id = feature.getId();
        if (id !== undefined) {
            return id in this.idIndex_;
        }
        else {
            return (0,_util_js__WEBPACK_IMPORTED_MODULE_8__.getUid)(feature) in this.uidIndex_;
        }
    };
    /**
     * @return {boolean} Is empty.
     */
    VectorSource.prototype.isEmpty = function () {
        return this.featuresRtree_.isEmpty() && (0,_obj_js__WEBPACK_IMPORTED_MODULE_14__.isEmpty)(this.nullGeometryFeatures_);
    };
    /**
     * @param {import("../extent.js").Extent} extent Extent.
     * @param {number} resolution Resolution.
     * @param {import("../proj/Projection.js").default} projection Projection.
     */
    VectorSource.prototype.loadFeatures = function (extent, resolution, projection) {
        var loadedExtentsRtree = this.loadedExtentsRtree_;
        var extentsToLoad = this.strategy_(extent, resolution);
        this.loading = false;
        var _loop_1 = function (i, ii) {
            var extentToLoad = extentsToLoad[i];
            var alreadyLoaded = loadedExtentsRtree.forEachInExtent(extentToLoad, 
            /**
             * @param {{extent: import("../extent.js").Extent}} object Object.
             * @return {boolean} Contains.
             */
            function (object) {
                return (0,_extent_js__WEBPACK_IMPORTED_MODULE_16__.containsExtent)(object.extent, extentToLoad);
            });
            if (!alreadyLoaded) {
                this_1.dispatchEvent(new VectorSourceEvent(_VectorEventType_js__WEBPACK_IMPORTED_MODULE_9__.default.FEATURESLOADSTART));
                this_1.loader_.call(this_1, extentToLoad, resolution, projection, function (features) {
                    this.dispatchEvent(new VectorSourceEvent(_VectorEventType_js__WEBPACK_IMPORTED_MODULE_9__.default.FEATURESLOADEND, undefined, features));
                }.bind(this_1), function () {
                    this.dispatchEvent(new VectorSourceEvent(_VectorEventType_js__WEBPACK_IMPORTED_MODULE_9__.default.FEATURESLOADERROR));
                }.bind(this_1));
                loadedExtentsRtree.insert(extentToLoad, { extent: extentToLoad.slice() });
                this_1.loading = this_1.loader_ !== _functions_js__WEBPACK_IMPORTED_MODULE_2__.VOID;
            }
        };
        var this_1 = this;
        for (var i = 0, ii = extentsToLoad.length; i < ii; ++i) {
            _loop_1(i, ii);
        }
    };
    VectorSource.prototype.refresh = function () {
        this.clear(true);
        this.loadedExtentsRtree_.clear();
        _super.prototype.refresh.call(this);
    };
    /**
     * Remove an extent from the list of loaded extents.
     * @param {import("../extent.js").Extent} extent Extent.
     * @api
     */
    VectorSource.prototype.removeLoadedExtent = function (extent) {
        var loadedExtentsRtree = this.loadedExtentsRtree_;
        var obj;
        loadedExtentsRtree.forEachInExtent(extent, function (object) {
            if ((0,_extent_js__WEBPACK_IMPORTED_MODULE_16__.equals)(object.extent, extent)) {
                obj = object;
                return true;
            }
        });
        if (obj) {
            loadedExtentsRtree.remove(obj);
        }
    };
    /**
     * Remove a single feature from the source.  If you want to remove all features
     * at once, use the {@link module:ol/source/Vector~VectorSource#clear #clear()} method
     * instead.
     * @param {import("../Feature.js").default<Geometry>} feature Feature to remove.
     * @api
     */
    VectorSource.prototype.removeFeature = function (feature) {
        var featureKey = (0,_util_js__WEBPACK_IMPORTED_MODULE_8__.getUid)(feature);
        if (featureKey in this.nullGeometryFeatures_) {
            delete this.nullGeometryFeatures_[featureKey];
        }
        else {
            if (this.featuresRtree_) {
                this.featuresRtree_.remove(feature);
            }
        }
        this.removeFeatureInternal(feature);
        this.changed();
    };
    /**
     * Remove feature without firing a `change` event.
     * @param {import("../Feature.js").default<Geometry>} feature Feature.
     * @protected
     */
    VectorSource.prototype.removeFeatureInternal = function (feature) {
        var featureKey = (0,_util_js__WEBPACK_IMPORTED_MODULE_8__.getUid)(feature);
        this.featureChangeKeys_[featureKey].forEach(_events_js__WEBPACK_IMPORTED_MODULE_10__.unlistenByKey);
        delete this.featureChangeKeys_[featureKey];
        var id = feature.getId();
        if (id !== undefined) {
            delete this.idIndex_[id.toString()];
        }
        delete this.uidIndex_[featureKey];
        this.dispatchEvent(new VectorSourceEvent(_VectorEventType_js__WEBPACK_IMPORTED_MODULE_9__.default.REMOVEFEATURE, feature));
    };
    /**
     * Remove a feature from the id index.  Called internally when the feature id
     * may have changed.
     * @param {import("../Feature.js").default<Geometry>} feature The feature.
     * @return {boolean} Removed the feature from the index.
     * @private
     */
    VectorSource.prototype.removeFromIdIndex_ = function (feature) {
        var removed = false;
        for (var id in this.idIndex_) {
            if (this.idIndex_[id] === feature) {
                delete this.idIndex_[id];
                removed = true;
                break;
            }
        }
        return removed;
    };
    /**
     * Set the new loader of the source. The next render cycle will use the
     * new loader.
     * @param {import("../featureloader.js").FeatureLoader} loader The loader to set.
     * @api
     */
    VectorSource.prototype.setLoader = function (loader) {
        this.loader_ = loader;
    };
    /**
     * Points the source to a new url. The next render cycle will use the new url.
     * @param {string|import("../featureloader.js").FeatureUrlFunction} url Url.
     * @api
     */
    VectorSource.prototype.setUrl = function (url) {
        (0,_asserts_js__WEBPACK_IMPORTED_MODULE_3__.assert)(this.format_, 7); // `format` must be set when `url` is set
        this.setLoader((0,_featureloader_js__WEBPACK_IMPORTED_MODULE_4__.xhr)(url, this.format_));
    };
    return VectorSource;
}(_Source_js__WEBPACK_IMPORTED_MODULE_17__.default));
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (VectorSource);
//# sourceMappingURL=Vector.js.map

/***/ }),

/***/ "./node_modules/ol/source/VectorEventType.js":
/*!***************************************************!*\
  !*** ./node_modules/ol/source/VectorEventType.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/**
 * @module ol/source/VectorEventType
 */
/**
 * @enum {string}
 */
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
    /**
     * Triggered when a feature is added to the source.
     * @event module:ol/source/Vector.VectorSourceEvent#addfeature
     * @api
     */
    ADDFEATURE: 'addfeature',
    /**
     * Triggered when a feature is updated.
     * @event module:ol/source/Vector.VectorSourceEvent#changefeature
     * @api
     */
    CHANGEFEATURE: 'changefeature',
    /**
     * Triggered when the clear method is called on the source.
     * @event module:ol/source/Vector.VectorSourceEvent#clear
     * @api
     */
    CLEAR: 'clear',
    /**
     * Triggered when a feature is removed from the source.
     * See {@link module:ol/source/Vector#clear source.clear()} for exceptions.
     * @event module:ol/source/Vector.VectorSourceEvent#removefeature
     * @api
     */
    REMOVEFEATURE: 'removefeature',
    /**
     * Triggered when features starts loading.
     * @event module:ol/source/Vector.VectorSourceEvent#featuresloadstart
     * @api
     */
    FEATURESLOADSTART: 'featuresloadstart',
    /**
     * Triggered when features finishes loading.
     * @event module:ol/source/Vector.VectorSourceEvent#featuresloadend
     * @api
     */
    FEATURESLOADEND: 'featuresloadend',
    /**
     * Triggered if feature loading results in an error.
     * @event module:ol/source/Vector.VectorSourceEvent#featuresloaderror
     * @api
     */
    FEATURESLOADERROR: 'featuresloaderror',
});
//# sourceMappingURL=VectorEventType.js.map

/***/ }),

/***/ "./node_modules/ol/source/XYZ.js":
/*!***************************************!*\
  !*** ./node_modules/ol/source/XYZ.js ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _TileImage_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./TileImage.js */ "./node_modules/ol/source/TileImage.js");
/* harmony import */ var _tilegrid_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../tilegrid.js */ "./node_modules/ol/tilegrid.js");
/**
 * @module ol/source/XYZ
 */
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();


/**
 * @typedef {Object} Options
 * @property {import("./Source.js").AttributionLike} [attributions] Attributions.
 * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.
 * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.
 * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that
 * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.
 * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.
 * @property {boolean} [imageSmoothing=true] Enable image smoothing.
 * @property {boolean} [opaque=false] Whether the layer is opaque.
 * @property {import("../proj.js").ProjectionLike} [projection='EPSG:3857'] Projection.
 * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).
 * Higher values can increase reprojection performance, but decrease precision.
 * @property {number} [maxZoom=42] Optional max zoom level. Not used if `tileGrid` is provided.
 * @property {number} [minZoom=0] Optional min zoom level. Not used if `tileGrid` is provided.
 * @property {number} [maxResolution] Optional tile grid resolution at level zero. Not used if `tileGrid` is provided.
 * @property {import("../tilegrid/TileGrid.js").default} [tileGrid] Tile grid.
 * @property {import("../Tile.js").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is
 * ```js
 * function(imageTile, src) {
 *   imageTile.getImage().src = src;
 * };
 * ```
 * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.
 * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px
 * by 512px images (for retina/hidpi devices) then `tilePixelRatio`
 * should be set to `2`.
 * @property {number|import("../size.js").Size} [tileSize=[256, 256]] The tile size used by the tile service.
 * Not used if `tileGrid` is provided.
 * @property {import("../Tile.js").UrlFunction} [tileUrlFunction] Optional function to get
 * tile URL given a tile coordinate and the projection.
 * Required if `url` or `urls` are not provided.
 * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`,
 * and `{z}` placeholders. A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`,
 * may be used instead of defining each one separately in the `urls` option.
 * @property {Array<string>} [urls] An array of URL templates.
 * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.
 * @property {number} [transition=250] Duration of the opacity transition for rendering.
 * To disable the opacity transition, pass `transition: 0`.
 * @property {number} [zDirection=0] Indicate which resolution should be used
 * by a renderer if the view resolution does not match any resolution of the tile source.
 * If 0, the nearest resolution will be used. If 1, the nearest lower resolution
 * will be used. If -1, the nearest higher resolution will be used.
 */
/**
 * @classdesc
 * Layer source for tile data with URLs in a set XYZ format that are
 * defined in a URL template. By default, this follows the widely-used
 * Google grid where `x` 0 and `y` 0 are in the top left. Grids like
 * TMS where `x` 0 and `y` 0 are in the bottom left can be used by
 * using the `{-y}` placeholder in the URL template, so long as the
 * source does not have a custom tile grid. In this case
 * a `tileUrlFunction` can be used, such as:
 * ```js
 *  tileUrlFunction: function(coordinate) {
 *    return 'http://mapserver.com/' + coordinate[0] + '/' +
 *      coordinate[1] + '/' + (-coordinate[2] - 1) + '.png';
 *  }
 * ```
 * @api
 */
var XYZ = /** @class */ (function (_super) {
    __extends(XYZ, _super);
    /**
     * @param {Options=} opt_options XYZ options.
     */
    function XYZ(opt_options) {
        var _this = this;
        var options = opt_options || {};
        var projection = options.projection !== undefined ? options.projection : 'EPSG:3857';
        var tileGrid = options.tileGrid !== undefined
            ? options.tileGrid
            : (0,_tilegrid_js__WEBPACK_IMPORTED_MODULE_0__.createXYZ)({
                extent: (0,_tilegrid_js__WEBPACK_IMPORTED_MODULE_0__.extentFromProjection)(projection),
                maxResolution: options.maxResolution,
                maxZoom: options.maxZoom,
                minZoom: options.minZoom,
                tileSize: options.tileSize,
            });
        _this = _super.call(this, {
            attributions: options.attributions,
            cacheSize: options.cacheSize,
            crossOrigin: options.crossOrigin,
            imageSmoothing: options.imageSmoothing,
            opaque: options.opaque,
            projection: projection,
            reprojectionErrorThreshold: options.reprojectionErrorThreshold,
            tileGrid: tileGrid,
            tileLoadFunction: options.tileLoadFunction,
            tilePixelRatio: options.tilePixelRatio,
            tileUrlFunction: options.tileUrlFunction,
            url: options.url,
            urls: options.urls,
            wrapX: options.wrapX !== undefined ? options.wrapX : true,
            transition: options.transition,
            attributionsCollapsible: options.attributionsCollapsible,
            zDirection: options.zDirection,
        }) || this;
        return _this;
    }
    return XYZ;
}(_TileImage_js__WEBPACK_IMPORTED_MODULE_1__.default));
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (XYZ);
//# sourceMappingURL=XYZ.js.map

/***/ }),

/***/ "./node_modules/ol/source/common.js":
/*!******************************************!*\
  !*** ./node_modules/ol/source/common.js ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "DEFAULT_WMS_VERSION": () => (/* binding */ DEFAULT_WMS_VERSION),
/* harmony export */   "IMAGE_SMOOTHING_DISABLED": () => (/* binding */ IMAGE_SMOOTHING_DISABLED)
/* harmony export */ });
/**
 * @module ol/source/common
 */
/**
 * Default WMS version.
 * @type {string}
 */
var DEFAULT_WMS_VERSION = '1.3.0';
/**
 * Context options to disable image smoothing.
 * @type {Object}
 */
var IMAGE_SMOOTHING_DISABLED = {
    imageSmoothingEnabled: false,
    msImageSmoothingEnabled: false,
};
//# sourceMappingURL=common.js.map

/***/ }),

/***/ "./node_modules/ol/sphere.js":
/*!***********************************!*\
  !*** ./node_modules/ol/sphere.js ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "DEFAULT_RADIUS": () => (/* binding */ DEFAULT_RADIUS),
/* harmony export */   "getDistance": () => (/* binding */ getDistance),
/* harmony export */   "getLength": () => (/* binding */ getLength),
/* harmony export */   "getArea": () => (/* binding */ getArea),
/* harmony export */   "offset": () => (/* binding */ offset)
/* harmony export */ });
/* harmony import */ var _geom_GeometryType_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./geom/GeometryType.js */ "./node_modules/ol/geom/GeometryType.js");
/* harmony import */ var _math_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./math.js */ "./node_modules/ol/math.js");
/**
 * @module ol/sphere
 */


/**
 * Object literal with options for the {@link getLength} or {@link getArea}
 * functions.
 * @typedef {Object} SphereMetricOptions
 * @property {import("./proj.js").ProjectionLike} [projection='EPSG:3857']
 * Projection of the  geometry.  By default, the geometry is assumed to be in
 * Web Mercator.
 * @property {number} [radius=6371008.8] Sphere radius.  By default, the
 * [mean Earth radius](https://en.wikipedia.org/wiki/Earth_radius#Mean_radius)
 * for the WGS84 ellipsoid is used.
 */
/**
 * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.
 * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius
 * @type {number}
 */
var DEFAULT_RADIUS = 6371008.8;
/**
 * Get the great circle distance (in meters) between two geographic coordinates.
 * @param {Array} c1 Starting coordinate.
 * @param {Array} c2 Ending coordinate.
 * @param {number=} opt_radius The sphere radius to use.  Defaults to the Earth's
 *     mean radius using the WGS84 ellipsoid.
 * @return {number} The great circle distance between the points (in meters).
 * @api
 */
function getDistance(c1, c2, opt_radius) {
    var radius = opt_radius || DEFAULT_RADIUS;
    var lat1 = (0,_math_js__WEBPACK_IMPORTED_MODULE_0__.toRadians)(c1[1]);
    var lat2 = (0,_math_js__WEBPACK_IMPORTED_MODULE_0__.toRadians)(c2[1]);
    var deltaLatBy2 = (lat2 - lat1) / 2;
    var deltaLonBy2 = (0,_math_js__WEBPACK_IMPORTED_MODULE_0__.toRadians)(c2[0] - c1[0]) / 2;
    var a = Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +
        Math.sin(deltaLonBy2) *
            Math.sin(deltaLonBy2) *
            Math.cos(lat1) *
            Math.cos(lat2);
    return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));
}
/**
 * Get the cumulative great circle length of linestring coordinates (geographic).
 * @param {Array} coordinates Linestring coordinates.
 * @param {number} radius The sphere radius to use.
 * @return {number} The length (in meters).
 */
function getLengthInternal(coordinates, radius) {
    var length = 0;
    for (var i = 0, ii = coordinates.length; i < ii - 1; ++i) {
        length += getDistance(coordinates[i], coordinates[i + 1], radius);
    }
    return length;
}
/**
 * Get the spherical length of a geometry.  This length is the sum of the
 * great circle distances between coordinates.  For polygons, the length is
 * the sum of all rings.  For points, the length is zero.  For multi-part
 * geometries, the length is the sum of the length of each part.
 * @param {import("./geom/Geometry.js").default} geometry A geometry.
 * @param {SphereMetricOptions=} opt_options Options for the
 * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.
 * You can change this by providing a `projection` option.
 * @return {number} The spherical length (in meters).
 * @api
 */
function getLength(geometry, opt_options) {
    var options = opt_options || {};
    var radius = options.radius || DEFAULT_RADIUS;
    var projection = options.projection || 'EPSG:3857';
    var type = geometry.getType();
    if (type !== _geom_GeometryType_js__WEBPACK_IMPORTED_MODULE_1__.default.GEOMETRY_COLLECTION) {
        geometry = geometry.clone().transform(projection, 'EPSG:4326');
    }
    var length = 0;
    var coordinates, coords, i, ii, j, jj;
    switch (type) {
        case _geom_GeometryType_js__WEBPACK_IMPORTED_MODULE_1__.default.POINT:
        case _geom_GeometryType_js__WEBPACK_IMPORTED_MODULE_1__.default.MULTI_POINT: {
            break;
        }
        case _geom_GeometryType_js__WEBPACK_IMPORTED_MODULE_1__.default.LINE_STRING:
        case _geom_GeometryType_js__WEBPACK_IMPORTED_MODULE_1__.default.LINEAR_RING: {
            coordinates = /** @type {import("./geom/SimpleGeometry.js").default} */ (geometry).getCoordinates();
            length = getLengthInternal(coordinates, radius);
            break;
        }
        case _geom_GeometryType_js__WEBPACK_IMPORTED_MODULE_1__.default.MULTI_LINE_STRING:
        case _geom_GeometryType_js__WEBPACK_IMPORTED_MODULE_1__.default.POLYGON: {
            coordinates = /** @type {import("./geom/SimpleGeometry.js").default} */ (geometry).getCoordinates();
            for (i = 0, ii = coordinates.length; i < ii; ++i) {
                length += getLengthInternal(coordinates[i], radius);
            }
            break;
        }
        case _geom_GeometryType_js__WEBPACK_IMPORTED_MODULE_1__.default.MULTI_POLYGON: {
            coordinates = /** @type {import("./geom/SimpleGeometry.js").default} */ (geometry).getCoordinates();
            for (i = 0, ii = coordinates.length; i < ii; ++i) {
                coords = coordinates[i];
                for (j = 0, jj = coords.length; j < jj; ++j) {
                    length += getLengthInternal(coords[j], radius);
                }
            }
            break;
        }
        case _geom_GeometryType_js__WEBPACK_IMPORTED_MODULE_1__.default.GEOMETRY_COLLECTION: {
            var geometries = /** @type {import("./geom/GeometryCollection.js").default} */ (geometry).getGeometries();
            for (i = 0, ii = geometries.length; i < ii; ++i) {
                length += getLength(geometries[i], opt_options);
            }
            break;
        }
        default: {
            throw new Error('Unsupported geometry type: ' + type);
        }
    }
    return length;
}
/**
 * Returns the spherical area for a list of coordinates.
 *
 * [Reference](https://trs-new.jpl.nasa.gov/handle/2014/40409)
 * Robert. G. Chamberlain and William H. Duquette, "Some Algorithms for
 * Polygons on a Sphere", JPL Publication 07-03, Jet Propulsion
 * Laboratory, Pasadena, CA, June 2007
 *
 * @param {Array<import("./coordinate.js").Coordinate>} coordinates List of coordinates of a linear
 * ring. If the ring is oriented clockwise, the area will be positive,
 * otherwise it will be negative.
 * @param {number} radius The sphere radius.
 * @return {number} Area (in square meters).
 */
function getAreaInternal(coordinates, radius) {
    var area = 0;
    var len = coordinates.length;
    var x1 = coordinates[len - 1][0];
    var y1 = coordinates[len - 1][1];
    for (var i = 0; i < len; i++) {
        var x2 = coordinates[i][0];
        var y2 = coordinates[i][1];
        area +=
            (0,_math_js__WEBPACK_IMPORTED_MODULE_0__.toRadians)(x2 - x1) *
                (2 + Math.sin((0,_math_js__WEBPACK_IMPORTED_MODULE_0__.toRadians)(y1)) + Math.sin((0,_math_js__WEBPACK_IMPORTED_MODULE_0__.toRadians)(y2)));
        x1 = x2;
        y1 = y2;
    }
    return (area * radius * radius) / 2.0;
}
/**
 * Get the spherical area of a geometry.  This is the area (in meters) assuming
 * that polygon edges are segments of great circles on a sphere.
 * @param {import("./geom/Geometry.js").default} geometry A geometry.
 * @param {SphereMetricOptions=} opt_options Options for the area
 *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.
 *     You can change this by providing a `projection` option.
 * @return {number} The spherical area (in square meters).
 * @api
 */
function getArea(geometry, opt_options) {
    var options = opt_options || {};
    var radius = options.radius || DEFAULT_RADIUS;
    var projection = options.projection || 'EPSG:3857';
    var type = geometry.getType();
    if (type !== _geom_GeometryType_js__WEBPACK_IMPORTED_MODULE_1__.default.GEOMETRY_COLLECTION) {
        geometry = geometry.clone().transform(projection, 'EPSG:4326');
    }
    var area = 0;
    var coordinates, coords, i, ii, j, jj;
    switch (type) {
        case _geom_GeometryType_js__WEBPACK_IMPORTED_MODULE_1__.default.POINT:
        case _geom_GeometryType_js__WEBPACK_IMPORTED_MODULE_1__.default.MULTI_POINT:
        case _geom_GeometryType_js__WEBPACK_IMPORTED_MODULE_1__.default.LINE_STRING:
        case _geom_GeometryType_js__WEBPACK_IMPORTED_MODULE_1__.default.MULTI_LINE_STRING:
        case _geom_GeometryType_js__WEBPACK_IMPORTED_MODULE_1__.default.LINEAR_RING: {
            break;
        }
        case _geom_GeometryType_js__WEBPACK_IMPORTED_MODULE_1__.default.POLYGON: {
            coordinates = /** @type {import("./geom/Polygon.js").default} */ (geometry).getCoordinates();
            area = Math.abs(getAreaInternal(coordinates[0], radius));
            for (i = 1, ii = coordinates.length; i < ii; ++i) {
                area -= Math.abs(getAreaInternal(coordinates[i], radius));
            }
            break;
        }
        case _geom_GeometryType_js__WEBPACK_IMPORTED_MODULE_1__.default.MULTI_POLYGON: {
            coordinates = /** @type {import("./geom/SimpleGeometry.js").default} */ (geometry).getCoordinates();
            for (i = 0, ii = coordinates.length; i < ii; ++i) {
                coords = coordinates[i];
                area += Math.abs(getAreaInternal(coords[0], radius));
                for (j = 1, jj = coords.length; j < jj; ++j) {
                    area -= Math.abs(getAreaInternal(coords[j], radius));
                }
            }
            break;
        }
        case _geom_GeometryType_js__WEBPACK_IMPORTED_MODULE_1__.default.GEOMETRY_COLLECTION: {
            var geometries = /** @type {import("./geom/GeometryCollection.js").default} */ (geometry).getGeometries();
            for (i = 0, ii = geometries.length; i < ii; ++i) {
                area += getArea(geometries[i], opt_options);
            }
            break;
        }
        default: {
            throw new Error('Unsupported geometry type: ' + type);
        }
    }
    return area;
}
/**
 * Returns the coordinate at the given distance and bearing from `c1`.
 *
 * @param {import("./coordinate.js").Coordinate} c1 The origin point (`[lon, lat]` in degrees).
 * @param {number} distance The great-circle distance between the origin
 *     point and the target point.
 * @param {number} bearing The bearing (in radians).
 * @param {number=} opt_radius The sphere radius to use.  Defaults to the Earth's
 *     mean radius using the WGS84 ellipsoid.
 * @return {import("./coordinate.js").Coordinate} The target point.
 */
function offset(c1, distance, bearing, opt_radius) {
    var radius = opt_radius || DEFAULT_RADIUS;
    var lat1 = (0,_math_js__WEBPACK_IMPORTED_MODULE_0__.toRadians)(c1[1]);
    var lon1 = (0,_math_js__WEBPACK_IMPORTED_MODULE_0__.toRadians)(c1[0]);
    var dByR = distance / radius;
    var lat = Math.asin(Math.sin(lat1) * Math.cos(dByR) +
        Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing));
    var lon = lon1 +
        Math.atan2(Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1), Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat));
    return [(0,_math_js__WEBPACK_IMPORTED_MODULE_0__.toDegrees)(lon), (0,_math_js__WEBPACK_IMPORTED_MODULE_0__.toDegrees)(lat)];
}
//# sourceMappingURL=sphere.js.map

/***/ }),

/***/ "./node_modules/ol/string.js":
/*!***********************************!*\
  !*** ./node_modules/ol/string.js ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "padNumber": () => (/* binding */ padNumber),
/* harmony export */   "compareVersions": () => (/* binding */ compareVersions)
/* harmony export */ });
/**
 * @module ol/string
 */
/**
 * @param {number} number Number to be formatted
 * @param {number} width The desired width
 * @param {number=} opt_precision Precision of the output string (i.e. number of decimal places)
 * @returns {string} Formatted string
 */
function padNumber(number, width, opt_precision) {
    var numberString = opt_precision !== undefined ? number.toFixed(opt_precision) : '' + number;
    var decimal = numberString.indexOf('.');
    decimal = decimal === -1 ? numberString.length : decimal;
    return decimal > width
        ? numberString
        : new Array(1 + width - decimal).join('0') + numberString;
}
/**
 * Adapted from https://github.com/omichelsen/compare-versions/blob/master/index.js
 * @param {string|number} v1 First version
 * @param {string|number} v2 Second version
 * @returns {number} Value
 */
function compareVersions(v1, v2) {
    var s1 = ('' + v1).split('.');
    var s2 = ('' + v2).split('.');
    for (var i = 0; i < Math.max(s1.length, s2.length); i++) {
        var n1 = parseInt(s1[i] || '0', 10);
        var n2 = parseInt(s2[i] || '0', 10);
        if (n1 > n2) {
            return 1;
        }
        if (n2 > n1) {
            return -1;
        }
    }
    return 0;
}
//# sourceMappingURL=string.js.map

/***/ }),

/***/ "./node_modules/ol/structs/LRUCache.js":
/*!*********************************************!*\
  !*** ./node_modules/ol/structs/LRUCache.js ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _asserts_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../asserts.js */ "./node_modules/ol/asserts.js");
/**
 * @module ol/structs/LRUCache
 */

/**
 * @typedef {Object} Entry
 * @property {string} key_
 * @property {Object} newer
 * @property {Object} older
 * @property {*} value_
 */
/**
 * @classdesc
 * Implements a Least-Recently-Used cache where the keys do not conflict with
 * Object's properties (e.g. 'hasOwnProperty' is not allowed as a key). Expiring
 * items from the cache is the responsibility of the user.
 *
 * @fires import("../events/Event.js").default
 * @template T
 */
var LRUCache = /** @class */ (function () {
    /**
     * @param {number=} opt_highWaterMark High water mark.
     */
    function LRUCache(opt_highWaterMark) {
        /**
         * Desired max cache size after expireCache(). If set to 0, no cache entries
         * will be pruned at all.
         * @type {number}
         */
        this.highWaterMark =
            opt_highWaterMark !== undefined ? opt_highWaterMark : 2048;
        /**
         * @private
         * @type {number}
         */
        this.count_ = 0;
        /**
         * @private
         * @type {!Object<string, Entry>}
         */
        this.entries_ = {};
        /**
         * @private
         * @type {?Entry}
         */
        this.oldest_ = null;
        /**
         * @private
         * @type {?Entry}
         */
        this.newest_ = null;
    }
    /**
     * @return {boolean} Can expire cache.
     */
    LRUCache.prototype.canExpireCache = function () {
        return this.highWaterMark > 0 && this.getCount() > this.highWaterMark;
    };
    /**
     * FIXME empty description for jsdoc
     */
    LRUCache.prototype.clear = function () {
        this.count_ = 0;
        this.entries_ = {};
        this.oldest_ = null;
        this.newest_ = null;
    };
    /**
     * @param {string} key Key.
     * @return {boolean} Contains key.
     */
    LRUCache.prototype.containsKey = function (key) {
        return this.entries_.hasOwnProperty(key);
    };
    /**
     * @param {function(T, string, LRUCache<T>): ?} f The function
     *     to call for every entry from the oldest to the newer. This function takes
     *     3 arguments (the entry value, the entry key and the LRUCache object).
     *     The return value is ignored.
     */
    LRUCache.prototype.forEach = function (f) {
        var entry = this.oldest_;
        while (entry) {
            f(entry.value_, entry.key_, this);
            entry = entry.newer;
        }
    };
    /**
     * @param {string} key Key.
     * @param {*=} opt_options Options (reserverd for subclasses).
     * @return {T} Value.
     */
    LRUCache.prototype.get = function (key, opt_options) {
        var entry = this.entries_[key];
        (0,_asserts_js__WEBPACK_IMPORTED_MODULE_0__.assert)(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache
        if (entry === this.newest_) {
            return entry.value_;
        }
        else if (entry === this.oldest_) {
            this.oldest_ = /** @type {Entry} */ (this.oldest_.newer);
            this.oldest_.older = null;
        }
        else {
            entry.newer.older = entry.older;
            entry.older.newer = entry.newer;
        }
        entry.newer = null;
        entry.older = this.newest_;
        this.newest_.newer = entry;
        this.newest_ = entry;
        return entry.value_;
    };
    /**
     * Remove an entry from the cache.
     * @param {string} key The entry key.
     * @return {T} The removed entry.
     */
    LRUCache.prototype.remove = function (key) {
        var entry = this.entries_[key];
        (0,_asserts_js__WEBPACK_IMPORTED_MODULE_0__.assert)(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache
        if (entry === this.newest_) {
            this.newest_ = /** @type {Entry} */ (entry.older);
            if (this.newest_) {
                this.newest_.newer = null;
            }
        }
        else if (entry === this.oldest_) {
            this.oldest_ = /** @type {Entry} */ (entry.newer);
            if (this.oldest_) {
                this.oldest_.older = null;
            }
        }
        else {
            entry.newer.older = entry.older;
            entry.older.newer = entry.newer;
        }
        delete this.entries_[key];
        --this.count_;
        return entry.value_;
    };
    /**
     * @return {number} Count.
     */
    LRUCache.prototype.getCount = function () {
        return this.count_;
    };
    /**
     * @return {Array<string>} Keys.
     */
    LRUCache.prototype.getKeys = function () {
        var keys = new Array(this.count_);
        var i = 0;
        var entry;
        for (entry = this.newest_; entry; entry = entry.older) {
            keys[i++] = entry.key_;
        }
        return keys;
    };
    /**
     * @return {Array<T>} Values.
     */
    LRUCache.prototype.getValues = function () {
        var values = new Array(this.count_);
        var i = 0;
        var entry;
        for (entry = this.newest_; entry; entry = entry.older) {
            values[i++] = entry.value_;
        }
        return values;
    };
    /**
     * @return {T} Last value.
     */
    LRUCache.prototype.peekLast = function () {
        return this.oldest_.value_;
    };
    /**
     * @return {string} Last key.
     */
    LRUCache.prototype.peekLastKey = function () {
        return this.oldest_.key_;
    };
    /**
     * Get the key of the newest item in the cache.  Throws if the cache is empty.
     * @return {string} The newest key.
     */
    LRUCache.prototype.peekFirstKey = function () {
        return this.newest_.key_;
    };
    /**
     * @return {T} value Value.
     */
    LRUCache.prototype.pop = function () {
        var entry = this.oldest_;
        delete this.entries_[entry.key_];
        if (entry.newer) {
            entry.newer.older = null;
        }
        this.oldest_ = /** @type {Entry} */ (entry.newer);
        if (!this.oldest_) {
            this.newest_ = null;
        }
        --this.count_;
        return entry.value_;
    };
    /**
     * @param {string} key Key.
     * @param {T} value Value.
     */
    LRUCache.prototype.replace = function (key, value) {
        this.get(key); // update `newest_`
        this.entries_[key].value_ = value;
    };
    /**
     * @param {string} key Key.
     * @param {T} value Value.
     */
    LRUCache.prototype.set = function (key, value) {
        (0,_asserts_js__WEBPACK_IMPORTED_MODULE_0__.assert)(!(key in this.entries_), 16); // Tried to set a value for a key that is used already
        var entry = {
            key_: key,
            newer: null,
            older: this.newest_,
            value_: value,
        };
        if (!this.newest_) {
            this.oldest_ = entry;
        }
        else {
            this.newest_.newer = entry;
        }
        this.newest_ = entry;
        this.entries_[key] = entry;
        ++this.count_;
    };
    /**
     * Set a maximum number of entries for the cache.
     * @param {number} size Cache size.
     * @api
     */
    LRUCache.prototype.setSize = function (size) {
        this.highWaterMark = size;
    };
    return LRUCache;
}());
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (LRUCache);
//# sourceMappingURL=LRUCache.js.map

/***/ }),

/***/ "./node_modules/ol/structs/PriorityQueue.js":
/*!**************************************************!*\
  !*** ./node_modules/ol/structs/PriorityQueue.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "DROP": () => (/* binding */ DROP),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _asserts_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../asserts.js */ "./node_modules/ol/asserts.js");
/* harmony import */ var _obj_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../obj.js */ "./node_modules/ol/obj.js");
/**
 * @module ol/structs/PriorityQueue
 */


/**
 * @type {number}
 */
var DROP = Infinity;
/**
 * @classdesc
 * Priority queue.
 *
 * The implementation is inspired from the Closure Library's Heap class and
 * Python's heapq module.
 *
 * See http://closure-library.googlecode.com/svn/docs/closure_goog_structs_heap.js.source.html
 * and http://hg.python.org/cpython/file/2.7/Lib/heapq.py.
 *
 * @template T
 */
var PriorityQueue = /** @class */ (function () {
    /**
     * @param {function(T): number} priorityFunction Priority function.
     * @param {function(T): string} keyFunction Key function.
     */
    function PriorityQueue(priorityFunction, keyFunction) {
        /**
         * @type {function(T): number}
         * @private
         */
        this.priorityFunction_ = priorityFunction;
        /**
         * @type {function(T): string}
         * @private
         */
        this.keyFunction_ = keyFunction;
        /**
         * @type {Array<T>}
         * @private
         */
        this.elements_ = [];
        /**
         * @type {Array<number>}
         * @private
         */
        this.priorities_ = [];
        /**
         * @type {!Object<string, boolean>}
         * @private
         */
        this.queuedElements_ = {};
    }
    /**
     * FIXME empty description for jsdoc
     */
    PriorityQueue.prototype.clear = function () {
        this.elements_.length = 0;
        this.priorities_.length = 0;
        (0,_obj_js__WEBPACK_IMPORTED_MODULE_0__.clear)(this.queuedElements_);
    };
    /**
     * Remove and return the highest-priority element. O(log N).
     * @return {T} Element.
     */
    PriorityQueue.prototype.dequeue = function () {
        var elements = this.elements_;
        var priorities = this.priorities_;
        var element = elements[0];
        if (elements.length == 1) {
            elements.length = 0;
            priorities.length = 0;
        }
        else {
            elements[0] = elements.pop();
            priorities[0] = priorities.pop();
            this.siftUp_(0);
        }
        var elementKey = this.keyFunction_(element);
        delete this.queuedElements_[elementKey];
        return element;
    };
    /**
     * Enqueue an element. O(log N).
     * @param {T} element Element.
     * @return {boolean} The element was added to the queue.
     */
    PriorityQueue.prototype.enqueue = function (element) {
        (0,_asserts_js__WEBPACK_IMPORTED_MODULE_1__.assert)(!(this.keyFunction_(element) in this.queuedElements_), 31); // Tried to enqueue an `element` that was already added to the queue
        var priority = this.priorityFunction_(element);
        if (priority != DROP) {
            this.elements_.push(element);
            this.priorities_.push(priority);
            this.queuedElements_[this.keyFunction_(element)] = true;
            this.siftDown_(0, this.elements_.length - 1);
            return true;
        }
        return false;
    };
    /**
     * @return {number} Count.
     */
    PriorityQueue.prototype.getCount = function () {
        return this.elements_.length;
    };
    /**
     * Gets the index of the left child of the node at the given index.
     * @param {number} index The index of the node to get the left child for.
     * @return {number} The index of the left child.
     * @private
     */
    PriorityQueue.prototype.getLeftChildIndex_ = function (index) {
        return index * 2 + 1;
    };
    /**
     * Gets the index of the right child of the node at the given index.
     * @param {number} index The index of the node to get the right child for.
     * @return {number} The index of the right child.
     * @private
     */
    PriorityQueue.prototype.getRightChildIndex_ = function (index) {
        return index * 2 + 2;
    };
    /**
     * Gets the index of the parent of the node at the given index.
     * @param {number} index The index of the node to get the parent for.
     * @return {number} The index of the parent.
     * @private
     */
    PriorityQueue.prototype.getParentIndex_ = function (index) {
        return (index - 1) >> 1;
    };
    /**
     * Make this a heap. O(N).
     * @private
     */
    PriorityQueue.prototype.heapify_ = function () {
        var i;
        for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {
            this.siftUp_(i);
        }
    };
    /**
     * @return {boolean} Is empty.
     */
    PriorityQueue.prototype.isEmpty = function () {
        return this.elements_.length === 0;
    };
    /**
     * @param {string} key Key.
     * @return {boolean} Is key queued.
     */
    PriorityQueue.prototype.isKeyQueued = function (key) {
        return key in this.queuedElements_;
    };
    /**
     * @param {T} element Element.
     * @return {boolean} Is queued.
     */
    PriorityQueue.prototype.isQueued = function (element) {
        return this.isKeyQueued(this.keyFunction_(element));
    };
    /**
     * @param {number} index The index of the node to move down.
     * @private
     */
    PriorityQueue.prototype.siftUp_ = function (index) {
        var elements = this.elements_;
        var priorities = this.priorities_;
        var count = elements.length;
        var element = elements[index];
        var priority = priorities[index];
        var startIndex = index;
        while (index < count >> 1) {
            var lIndex = this.getLeftChildIndex_(index);
            var rIndex = this.getRightChildIndex_(index);
            var smallerChildIndex = rIndex < count && priorities[rIndex] < priorities[lIndex]
                ? rIndex
                : lIndex;
            elements[index] = elements[smallerChildIndex];
            priorities[index] = priorities[smallerChildIndex];
            index = smallerChildIndex;
        }
        elements[index] = element;
        priorities[index] = priority;
        this.siftDown_(startIndex, index);
    };
    /**
     * @param {number} startIndex The index of the root.
     * @param {number} index The index of the node to move up.
     * @private
     */
    PriorityQueue.prototype.siftDown_ = function (startIndex, index) {
        var elements = this.elements_;
        var priorities = this.priorities_;
        var element = elements[index];
        var priority = priorities[index];
        while (index > startIndex) {
            var parentIndex = this.getParentIndex_(index);
            if (priorities[parentIndex] > priority) {
                elements[index] = elements[parentIndex];
                priorities[index] = priorities[parentIndex];
                index = parentIndex;
            }
            else {
                break;
            }
        }
        elements[index] = element;
        priorities[index] = priority;
    };
    /**
     * FIXME empty description for jsdoc
     */
    PriorityQueue.prototype.reprioritize = function () {
        var priorityFunction = this.priorityFunction_;
        var elements = this.elements_;
        var priorities = this.priorities_;
        var index = 0;
        var n = elements.length;
        var element, i, priority;
        for (i = 0; i < n; ++i) {
            element = elements[i];
            priority = priorityFunction(element);
            if (priority == DROP) {
                delete this.queuedElements_[this.keyFunction_(element)];
            }
            else {
                priorities[index] = priority;
                elements[index++] = element;
            }
        }
        elements.length = index;
        priorities.length = index;
        this.heapify_();
    };
    return PriorityQueue;
}());
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (PriorityQueue);
//# sourceMappingURL=PriorityQueue.js.map

/***/ }),

/***/ "./node_modules/ol/structs/RBush.js":
/*!******************************************!*\
  !*** ./node_modules/ol/structs/RBush.js ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var rbush__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! rbush */ "./node_modules/rbush/rbush.min.js");
/* harmony import */ var rbush__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(rbush__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _extent_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../extent.js */ "./node_modules/ol/extent.js");
/* harmony import */ var _util_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util.js */ "./node_modules/ol/util.js");
/* harmony import */ var _obj_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../obj.js */ "./node_modules/ol/obj.js");
/**
 * @module ol/structs/RBush
 */




/**
 * @typedef {Object} Entry
 * @property {number} minX
 * @property {number} minY
 * @property {number} maxX
 * @property {number} maxY
 * @property {Object} [value]
 */
/**
 * @classdesc
 * Wrapper around the RBush by Vladimir Agafonkin.
 * See https://github.com/mourner/rbush.
 *
 * @template T
 */
var RBush = /** @class */ (function () {
    /**
     * @param {number=} opt_maxEntries Max entries.
     */
    function RBush(opt_maxEntries) {
        /**
         * @private
         */
        this.rbush_ = new (rbush__WEBPACK_IMPORTED_MODULE_0___default())(opt_maxEntries);
        /**
         * A mapping between the objects added to this rbush wrapper
         * and the objects that are actually added to the internal rbush.
         * @private
         * @type {Object<string, Entry>}
         */
        this.items_ = {};
    }
    /**
     * Insert a value into the RBush.
     * @param {import("../extent.js").Extent} extent Extent.
     * @param {T} value Value.
     */
    RBush.prototype.insert = function (extent, value) {
        /** @type {Entry} */
        var item = {
            minX: extent[0],
            minY: extent[1],
            maxX: extent[2],
            maxY: extent[3],
            value: value,
        };
        this.rbush_.insert(item);
        this.items_[(0,_util_js__WEBPACK_IMPORTED_MODULE_1__.getUid)(value)] = item;
    };
    /**
     * Bulk-insert values into the RBush.
     * @param {Array<import("../extent.js").Extent>} extents Extents.
     * @param {Array<T>} values Values.
     */
    RBush.prototype.load = function (extents, values) {
        var items = new Array(values.length);
        for (var i = 0, l = values.length; i < l; i++) {
            var extent = extents[i];
            var value = values[i];
            /** @type {Entry} */
            var item = {
                minX: extent[0],
                minY: extent[1],
                maxX: extent[2],
                maxY: extent[3],
                value: value,
            };
            items[i] = item;
            this.items_[(0,_util_js__WEBPACK_IMPORTED_MODULE_1__.getUid)(value)] = item;
        }
        this.rbush_.load(items);
    };
    /**
     * Remove a value from the RBush.
     * @param {T} value Value.
     * @return {boolean} Removed.
     */
    RBush.prototype.remove = function (value) {
        var uid = (0,_util_js__WEBPACK_IMPORTED_MODULE_1__.getUid)(value);
        // get the object in which the value was wrapped when adding to the
        // internal rbush. then use that object to do the removal.
        var item = this.items_[uid];
        delete this.items_[uid];
        return this.rbush_.remove(item) !== null;
    };
    /**
     * Update the extent of a value in the RBush.
     * @param {import("../extent.js").Extent} extent Extent.
     * @param {T} value Value.
     */
    RBush.prototype.update = function (extent, value) {
        var item = this.items_[(0,_util_js__WEBPACK_IMPORTED_MODULE_1__.getUid)(value)];
        var bbox = [item.minX, item.minY, item.maxX, item.maxY];
        if (!(0,_extent_js__WEBPACK_IMPORTED_MODULE_2__.equals)(bbox, extent)) {
            this.remove(value);
            this.insert(extent, value);
        }
    };
    /**
     * Return all values in the RBush.
     * @return {Array<T>} All.
     */
    RBush.prototype.getAll = function () {
        var items = this.rbush_.all();
        return items.map(function (item) {
            return item.value;
        });
    };
    /**
     * Return all values in the given extent.
     * @param {import("../extent.js").Extent} extent Extent.
     * @return {Array<T>} All in extent.
     */
    RBush.prototype.getInExtent = function (extent) {
        /** @type {Entry} */
        var bbox = {
            minX: extent[0],
            minY: extent[1],
            maxX: extent[2],
            maxY: extent[3],
        };
        var items = this.rbush_.search(bbox);
        return items.map(function (item) {
            return item.value;
        });
    };
    /**
     * Calls a callback function with each value in the tree.
     * If the callback returns a truthy value, this value is returned without
     * checking the rest of the tree.
     * @param {function(T): *} callback Callback.
     * @return {*} Callback return value.
     */
    RBush.prototype.forEach = function (callback) {
        return this.forEach_(this.getAll(), callback);
    };
    /**
     * Calls a callback function with each value in the provided extent.
     * @param {import("../extent.js").Extent} extent Extent.
     * @param {function(T): *} callback Callback.
     * @return {*} Callback return value.
     */
    RBush.prototype.forEachInExtent = function (extent, callback) {
        return this.forEach_(this.getInExtent(extent), callback);
    };
    /**
     * @param {Array<T>} values Values.
     * @param {function(T): *} callback Callback.
     * @private
     * @return {*} Callback return value.
     */
    RBush.prototype.forEach_ = function (values, callback) {
        var result;
        for (var i = 0, l = values.length; i < l; i++) {
            result = callback(values[i]);
            if (result) {
                return result;
            }
        }
        return result;
    };
    /**
     * @return {boolean} Is empty.
     */
    RBush.prototype.isEmpty = function () {
        return (0,_obj_js__WEBPACK_IMPORTED_MODULE_3__.isEmpty)(this.items_);
    };
    /**
     * Remove all values from the RBush.
     */
    RBush.prototype.clear = function () {
        this.rbush_.clear();
        this.items_ = {};
    };
    /**
     * @param {import("../extent.js").Extent=} opt_extent Extent.
     * @return {import("../extent.js").Extent} Extent.
     */
    RBush.prototype.getExtent = function (opt_extent) {
        var data = this.rbush_.toJSON();
        return (0,_extent_js__WEBPACK_IMPORTED_MODULE_2__.createOrUpdate)(data.minX, data.minY, data.maxX, data.maxY, opt_extent);
    };
    /**
     * @param {RBush} rbush R-Tree.
     */
    RBush.prototype.concat = function (rbush) {
        this.rbush_.load(rbush.rbush_.all());
        for (var i in rbush.items_) {
            this.items_[i] = rbush.items_[i];
        }
    };
    return RBush;
}());
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (RBush);
//# sourceMappingURL=RBush.js.map

/***/ }),

/***/ "./node_modules/ol/style/Circle.js":
/*!*****************************************!*\
  !*** ./node_modules/ol/style/Circle.js ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _RegularShape_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./RegularShape.js */ "./node_modules/ol/style/RegularShape.js");
/**
 * @module ol/style/Circle
 */
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();

/**
 * @typedef {Object} Options
 * @property {import("./Fill.js").default} [fill] Fill style.
 * @property {number} radius Circle radius.
 * @property {import("./Stroke.js").default} [stroke] Stroke style.
 * @property {Array<number>} [displacement=[0,0]] displacement
 * @property {number|import("../size.js").Size} [scale=1] Scale. A two dimensional scale will produce an ellipse.
 * Unless two dimensional scaling is required a better result may be obtained with an appropriate setting for `radius`.
 * @property {number} [rotation=0] Rotation in radians
 * (positive rotation clockwise, meaningful only when used in conjunction with a two dimensional scale).
 * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view
 * (meaningful only when used in conjunction with a two dimensional scale).
 */
/**
 * @classdesc
 * Set circle style for vector features.
 * @api
 */
var CircleStyle = /** @class */ (function (_super) {
    __extends(CircleStyle, _super);
    /**
     * @param {Options=} opt_options Options.
     */
    function CircleStyle(opt_options) {
        var _this = this;
        var options = opt_options ? opt_options : {};
        _this = _super.call(this, {
            points: Infinity,
            fill: options.fill,
            radius: options.radius,
            stroke: options.stroke,
            scale: options.scale !== undefined ? options.scale : 1,
            rotation: options.rotation !== undefined ? options.rotation : 0,
            rotateWithView: options.rotateWithView !== undefined ? options.rotateWithView : false,
            displacement: options.displacement !== undefined ? options.displacement : [0, 0],
        }) || this;
        return _this;
    }
    /**
     * Clones the style.
     * @return {CircleStyle} The cloned style.
     * @api
     */
    CircleStyle.prototype.clone = function () {
        var scale = this.getScale();
        var style = new CircleStyle({
            fill: this.getFill() ? this.getFill().clone() : undefined,
            stroke: this.getStroke() ? this.getStroke().clone() : undefined,
            radius: this.getRadius(),
            scale: Array.isArray(scale) ? scale.slice() : scale,
            rotation: this.getRotation(),
            rotateWithView: this.getRotateWithView(),
            displacement: this.getDisplacement().slice(),
        });
        style.setOpacity(this.getOpacity());
        return style;
    };
    /**
     * Set the circle radius.
     *
     * @param {number} radius Circle radius.
     * @api
     */
    CircleStyle.prototype.setRadius = function (radius) {
        this.radius_ = radius;
        this.render();
    };
    return CircleStyle;
}(_RegularShape_js__WEBPACK_IMPORTED_MODULE_0__.default));
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (CircleStyle);
//# sourceMappingURL=Circle.js.map

/***/ }),

/***/ "./node_modules/ol/style/Fill.js":
/*!***************************************!*\
  !*** ./node_modules/ol/style/Fill.js ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/**
 * @module ol/style/Fill
 */
/**
 * @typedef {Object} Options
 * @property {import("../color.js").Color|import("../colorlike.js").ColorLike} [color=null] A color, gradient or pattern.
 * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.
 * Default null; if null, the Canvas/renderer default black will be used.
 */
/**
 * @classdesc
 * Set fill style for vector features.
 * @api
 */
var Fill = /** @class */ (function () {
    /**
     * @param {Options=} opt_options Options.
     */
    function Fill(opt_options) {
        var options = opt_options || {};
        /**
         * @private
         * @type {import("../color.js").Color|import("../colorlike.js").ColorLike}
         */
        this.color_ = options.color !== undefined ? options.color : null;
    }
    /**
     * Clones the style. The color is not cloned if it is an {@link module:ol/colorlike~ColorLike}.
     * @return {Fill} The cloned style.
     * @api
     */
    Fill.prototype.clone = function () {
        var color = this.getColor();
        return new Fill({
            color: Array.isArray(color) ? color.slice() : color || undefined,
        });
    };
    /**
     * Get the fill color.
     * @return {import("../color.js").Color|import("../colorlike.js").ColorLike} Color.
     * @api
     */
    Fill.prototype.getColor = function () {
        return this.color_;
    };
    /**
     * Set the color.
     *
     * @param {import("../color.js").Color|import("../colorlike.js").ColorLike} color Color.
     * @api
     */
    Fill.prototype.setColor = function (color) {
        this.color_ = color;
    };
    return Fill;
}());
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Fill);
//# sourceMappingURL=Fill.js.map

/***/ }),

/***/ "./node_modules/ol/style/Icon.js":
/*!***************************************!*\
  !*** ./node_modules/ol/style/Icon.js ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _events_EventType_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../events/EventType.js */ "./node_modules/ol/events/EventType.js");
/* harmony import */ var _IconAnchorUnits_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./IconAnchorUnits.js */ "./node_modules/ol/style/IconAnchorUnits.js");
/* harmony import */ var _IconOrigin_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./IconOrigin.js */ "./node_modules/ol/style/IconOrigin.js");
/* harmony import */ var _ImageState_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../ImageState.js */ "./node_modules/ol/ImageState.js");
/* harmony import */ var _Image_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./Image.js */ "./node_modules/ol/style/Image.js");
/* harmony import */ var _color_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../color.js */ "./node_modules/ol/color.js");
/* harmony import */ var _asserts_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../asserts.js */ "./node_modules/ol/asserts.js");
/* harmony import */ var _IconImage_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./IconImage.js */ "./node_modules/ol/style/IconImage.js");
/* harmony import */ var _util_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../util.js */ "./node_modules/ol/util.js");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
/**
 * @module ol/style/Icon
 */









/**
 * @typedef {Object} Options
 * @property {Array<number>} [anchor=[0.5, 0.5]] Anchor. Default value is the icon center.
 * @property {import("./IconOrigin.js").default} [anchorOrigin='top-left'] Origin of the anchor: `bottom-left`, `bottom-right`,
 * `top-left` or `top-right`.
 * @property {import("./IconAnchorUnits.js").default} [anchorXUnits='fraction'] Units in which the anchor x value is
 * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates
 * the x value in pixels.
 * @property {import("./IconAnchorUnits.js").default} [anchorYUnits='fraction'] Units in which the anchor y value is
 * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates
 * the y value in pixels.
 * @property {import("../color.js").Color|string} [color] Color to tint the icon. If not specified,
 * the icon will be left as is.
 * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images. Note that you must provide a
 * `crossOrigin` value if you want to access pixel data with the Canvas renderer.
 * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.
 * @property {HTMLImageElement|HTMLCanvasElement} [img] Image object for the icon. If the `src` option is not provided then the
 * provided image must already be loaded. And in that case, it is required
 * to provide the size of the image, with the `imgSize` option.
 * @property {Array<number>} [offset=[0, 0]] Offset, which, together with the size and the offset origin, define the
 * sub-rectangle to use from the original icon image.
 * @property {Array<number>} [displacement=[0,0]] Displacement the icon
 * @property {import("./IconOrigin.js").default} [offsetOrigin='top-left'] Origin of the offset: `bottom-left`, `bottom-right`,
 * `top-left` or `top-right`.
 * @property {number} [opacity=1] Opacity of the icon.
 * @property {number|import("../size.js").Size} [scale=1] Scale.
 * @property {boolean} [rotateWithView=false] Whether to rotate the icon with the view.
 * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).
 * @property {import("../size.js").Size} [size] Icon size in pixel. Can be used together with `offset` to define the
 * sub-rectangle to use from the origin (sprite) icon image.
 * @property {import("../size.js").Size} [imgSize] Image size in pixels. Only required if `img` is set and `src` is not, and
 * for SVG images in Internet Explorer 11. The provided `imgSize` needs to match the actual size of the image.
 * @property {string} [src] Image source URI.
 */
/**
 * @classdesc
 * Set icon style for vector features.
 * @api
 */
var Icon = /** @class */ (function (_super) {
    __extends(Icon, _super);
    /**
     * @param {Options=} opt_options Options.
     */
    function Icon(opt_options) {
        var _this = this;
        var options = opt_options || {};
        /**
         * @type {number}
         */
        var opacity = options.opacity !== undefined ? options.opacity : 1;
        /**
         * @type {number}
         */
        var rotation = options.rotation !== undefined ? options.rotation : 0;
        /**
         * @type {number|import("../size.js").Size}
         */
        var scale = options.scale !== undefined ? options.scale : 1;
        /**
         * @type {boolean}
         */
        var rotateWithView = options.rotateWithView !== undefined ? options.rotateWithView : false;
        _this = _super.call(this, {
            opacity: opacity,
            rotation: rotation,
            scale: scale,
            displacement: options.displacement !== undefined ? options.displacement : [0, 0],
            rotateWithView: rotateWithView,
        }) || this;
        /**
         * @private
         * @type {Array<number>}
         */
        _this.anchor_ = options.anchor !== undefined ? options.anchor : [0.5, 0.5];
        /**
         * @private
         * @type {Array<number>}
         */
        _this.normalizedAnchor_ = null;
        /**
         * @private
         * @type {import("./IconOrigin.js").default}
         */
        _this.anchorOrigin_ =
            options.anchorOrigin !== undefined
                ? options.anchorOrigin
                : _IconOrigin_js__WEBPACK_IMPORTED_MODULE_0__.default.TOP_LEFT;
        /**
         * @private
         * @type {import("./IconAnchorUnits.js").default}
         */
        _this.anchorXUnits_ =
            options.anchorXUnits !== undefined
                ? options.anchorXUnits
                : _IconAnchorUnits_js__WEBPACK_IMPORTED_MODULE_1__.default.FRACTION;
        /**
         * @private
         * @type {import("./IconAnchorUnits.js").default}
         */
        _this.anchorYUnits_ =
            options.anchorYUnits !== undefined
                ? options.anchorYUnits
                : _IconAnchorUnits_js__WEBPACK_IMPORTED_MODULE_1__.default.FRACTION;
        /**
         * @private
         * @type {?string}
         */
        _this.crossOrigin_ =
            options.crossOrigin !== undefined ? options.crossOrigin : null;
        /**
         * @type {HTMLImageElement|HTMLCanvasElement}
         */
        var image = options.img !== undefined ? options.img : null;
        /**
         * @type {import("../size.js").Size}
         */
        var imgSize = options.imgSize !== undefined ? options.imgSize : null;
        /**
         * @type {string|undefined}
         */
        var src = options.src;
        (0,_asserts_js__WEBPACK_IMPORTED_MODULE_2__.assert)(!(src !== undefined && image), 4); // `image` and `src` cannot be provided at the same time
        (0,_asserts_js__WEBPACK_IMPORTED_MODULE_2__.assert)(!image || (image && imgSize), 5); // `imgSize` must be set when `image` is provided
        if ((src === undefined || src.length === 0) && image) {
            src = /** @type {HTMLImageElement} */ (image).src || (0,_util_js__WEBPACK_IMPORTED_MODULE_3__.getUid)(image);
        }
        (0,_asserts_js__WEBPACK_IMPORTED_MODULE_2__.assert)(src !== undefined && src.length > 0, 6); // A defined and non-empty `src` or `image` must be provided
        /**
         * @type {import("../ImageState.js").default}
         */
        var imageState = options.src !== undefined ? _ImageState_js__WEBPACK_IMPORTED_MODULE_4__.default.IDLE : _ImageState_js__WEBPACK_IMPORTED_MODULE_4__.default.LOADED;
        /**
         * @private
         * @type {import("../color.js").Color}
         */
        _this.color_ = options.color !== undefined ? (0,_color_js__WEBPACK_IMPORTED_MODULE_5__.asArray)(options.color) : null;
        /**
         * @private
         * @type {import("./IconImage.js").default}
         */
        _this.iconImage_ = (0,_IconImage_js__WEBPACK_IMPORTED_MODULE_6__.get)(image, 
        /** @type {string} */ (src), imgSize, _this.crossOrigin_, imageState, _this.color_);
        /**
         * @private
         * @type {Array<number>}
         */
        _this.offset_ = options.offset !== undefined ? options.offset : [0, 0];
        /**
         * @private
         * @type {import("./IconOrigin.js").default}
         */
        _this.offsetOrigin_ =
            options.offsetOrigin !== undefined
                ? options.offsetOrigin
                : _IconOrigin_js__WEBPACK_IMPORTED_MODULE_0__.default.TOP_LEFT;
        /**
         * @private
         * @type {Array<number>}
         */
        _this.origin_ = null;
        /**
         * @private
         * @type {import("../size.js").Size}
         */
        _this.size_ = options.size !== undefined ? options.size : null;
        return _this;
    }
    /**
     * Clones the style. The underlying Image/HTMLCanvasElement is not cloned.
     * @return {Icon} The cloned style.
     * @api
     */
    Icon.prototype.clone = function () {
        var scale = this.getScale();
        return new Icon({
            anchor: this.anchor_.slice(),
            anchorOrigin: this.anchorOrigin_,
            anchorXUnits: this.anchorXUnits_,
            anchorYUnits: this.anchorYUnits_,
            crossOrigin: this.crossOrigin_,
            color: this.color_ && this.color_.slice
                ? this.color_.slice()
                : this.color_ || undefined,
            src: this.getSrc(),
            offset: this.offset_.slice(),
            offsetOrigin: this.offsetOrigin_,
            size: this.size_ !== null ? this.size_.slice() : undefined,
            opacity: this.getOpacity(),
            scale: Array.isArray(scale) ? scale.slice() : scale,
            rotation: this.getRotation(),
            rotateWithView: this.getRotateWithView(),
        });
    };
    /**
     * Get the anchor point in pixels. The anchor determines the center point for the
     * symbolizer.
     * @return {Array<number>} Anchor.
     * @api
     */
    Icon.prototype.getAnchor = function () {
        if (this.normalizedAnchor_) {
            return this.normalizedAnchor_;
        }
        var anchor = this.anchor_;
        var size = this.getSize();
        if (this.anchorXUnits_ == _IconAnchorUnits_js__WEBPACK_IMPORTED_MODULE_1__.default.FRACTION ||
            this.anchorYUnits_ == _IconAnchorUnits_js__WEBPACK_IMPORTED_MODULE_1__.default.FRACTION) {
            if (!size) {
                return null;
            }
            anchor = this.anchor_.slice();
            if (this.anchorXUnits_ == _IconAnchorUnits_js__WEBPACK_IMPORTED_MODULE_1__.default.FRACTION) {
                anchor[0] *= size[0];
            }
            if (this.anchorYUnits_ == _IconAnchorUnits_js__WEBPACK_IMPORTED_MODULE_1__.default.FRACTION) {
                anchor[1] *= size[1];
            }
        }
        if (this.anchorOrigin_ != _IconOrigin_js__WEBPACK_IMPORTED_MODULE_0__.default.TOP_LEFT) {
            if (!size) {
                return null;
            }
            if (anchor === this.anchor_) {
                anchor = this.anchor_.slice();
            }
            if (this.anchorOrigin_ == _IconOrigin_js__WEBPACK_IMPORTED_MODULE_0__.default.TOP_RIGHT ||
                this.anchorOrigin_ == _IconOrigin_js__WEBPACK_IMPORTED_MODULE_0__.default.BOTTOM_RIGHT) {
                anchor[0] = -anchor[0] + size[0];
            }
            if (this.anchorOrigin_ == _IconOrigin_js__WEBPACK_IMPORTED_MODULE_0__.default.BOTTOM_LEFT ||
                this.anchorOrigin_ == _IconOrigin_js__WEBPACK_IMPORTED_MODULE_0__.default.BOTTOM_RIGHT) {
                anchor[1] = -anchor[1] + size[1];
            }
        }
        this.normalizedAnchor_ = anchor;
        return this.normalizedAnchor_;
    };
    /**
     * Set the anchor point. The anchor determines the center point for the
     * symbolizer.
     *
     * @param {Array<number>} anchor Anchor.
     * @api
     */
    Icon.prototype.setAnchor = function (anchor) {
        this.anchor_ = anchor;
        this.normalizedAnchor_ = null;
    };
    /**
     * Get the icon color.
     * @return {import("../color.js").Color} Color.
     * @api
     */
    Icon.prototype.getColor = function () {
        return this.color_;
    };
    /**
     * Get the image icon.
     * @param {number} pixelRatio Pixel ratio.
     * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.
     * @api
     */
    Icon.prototype.getImage = function (pixelRatio) {
        return this.iconImage_.getImage(pixelRatio);
    };
    /**
     * Get the pixel ratio.
     * @param {number} pixelRatio Pixel ratio.
     * @return {number} The pixel ration of the image.
     * @api
     */
    Icon.prototype.getPixelRatio = function (pixelRatio) {
        return this.iconImage_.getPixelRatio(pixelRatio);
    };
    /**
     * @return {import("../size.js").Size} Image size.
     */
    Icon.prototype.getImageSize = function () {
        return this.iconImage_.getSize();
    };
    /**
     * @return {import("../size.js").Size} Size of the hit-detection image.
     */
    Icon.prototype.getHitDetectionImageSize = function () {
        return this.getImageSize();
    };
    /**
     * @return {import("../ImageState.js").default} Image state.
     */
    Icon.prototype.getImageState = function () {
        return this.iconImage_.getImageState();
    };
    /**
     * @return {HTMLImageElement|HTMLCanvasElement} Image element.
     */
    Icon.prototype.getHitDetectionImage = function () {
        return this.iconImage_.getHitDetectionImage();
    };
    /**
     * Get the origin of the symbolizer.
     * @return {Array<number>} Origin.
     * @api
     */
    Icon.prototype.getOrigin = function () {
        if (this.origin_) {
            return this.origin_;
        }
        var offset = this.offset_;
        var displacement = this.getDisplacement();
        if (this.offsetOrigin_ != _IconOrigin_js__WEBPACK_IMPORTED_MODULE_0__.default.TOP_LEFT) {
            var size = this.getSize();
            var iconImageSize = this.iconImage_.getSize();
            if (!size || !iconImageSize) {
                return null;
            }
            offset = offset.slice();
            if (this.offsetOrigin_ == _IconOrigin_js__WEBPACK_IMPORTED_MODULE_0__.default.TOP_RIGHT ||
                this.offsetOrigin_ == _IconOrigin_js__WEBPACK_IMPORTED_MODULE_0__.default.BOTTOM_RIGHT) {
                offset[0] = iconImageSize[0] - size[0] - offset[0];
            }
            if (this.offsetOrigin_ == _IconOrigin_js__WEBPACK_IMPORTED_MODULE_0__.default.BOTTOM_LEFT ||
                this.offsetOrigin_ == _IconOrigin_js__WEBPACK_IMPORTED_MODULE_0__.default.BOTTOM_RIGHT) {
                offset[1] = iconImageSize[1] - size[1] - offset[1];
            }
        }
        offset[0] += displacement[0];
        offset[1] += displacement[1];
        this.origin_ = offset;
        return this.origin_;
    };
    /**
     * Get the image URL.
     * @return {string|undefined} Image src.
     * @api
     */
    Icon.prototype.getSrc = function () {
        return this.iconImage_.getSrc();
    };
    /**
     * Get the size of the icon (in pixels).
     * @return {import("../size.js").Size} Image size.
     * @api
     */
    Icon.prototype.getSize = function () {
        return !this.size_ ? this.iconImage_.getSize() : this.size_;
    };
    /**
     * @param {function(import("../events/Event.js").default): void} listener Listener function.
     */
    Icon.prototype.listenImageChange = function (listener) {
        this.iconImage_.addEventListener(_events_EventType_js__WEBPACK_IMPORTED_MODULE_7__.default.CHANGE, listener);
    };
    /**
     * Load not yet loaded URI.
     * When rendering a feature with an icon style, the vector renderer will
     * automatically call this method. However, you might want to call this
     * method yourself for preloading or other purposes.
     * @api
     */
    Icon.prototype.load = function () {
        this.iconImage_.load();
    };
    /**
     * @param {function(import("../events/Event.js").default): void} listener Listener function.
     */
    Icon.prototype.unlistenImageChange = function (listener) {
        this.iconImage_.removeEventListener(_events_EventType_js__WEBPACK_IMPORTED_MODULE_7__.default.CHANGE, listener);
    };
    return Icon;
}(_Image_js__WEBPACK_IMPORTED_MODULE_8__.default));
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Icon);
//# sourceMappingURL=Icon.js.map

/***/ }),

/***/ "./node_modules/ol/style/IconAnchorUnits.js":
/*!**************************************************!*\
  !*** ./node_modules/ol/style/IconAnchorUnits.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/**
 * @module ol/style/IconAnchorUnits
 */
/**
 * Icon anchor units. One of 'fraction', 'pixels'.
 * @enum {string}
 */
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
    /**
     * Anchor is a fraction
     * @api
     */
    FRACTION: 'fraction',
    /**
     * Anchor is in pixels
     * @api
     */
    PIXELS: 'pixels',
});
//# sourceMappingURL=IconAnchorUnits.js.map

/***/ }),

/***/ "./node_modules/ol/style/IconImage.js":
/*!********************************************!*\
  !*** ./node_modules/ol/style/IconImage.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "get": () => (/* binding */ get),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _events_Target_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../events/Target.js */ "./node_modules/ol/events/Target.js");
/* harmony import */ var _events_EventType_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../events/EventType.js */ "./node_modules/ol/events/EventType.js");
/* harmony import */ var _ImageState_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../ImageState.js */ "./node_modules/ol/ImageState.js");
/* harmony import */ var _color_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../color.js */ "./node_modules/ol/color.js");
/* harmony import */ var _dom_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../dom.js */ "./node_modules/ol/dom.js");
/* harmony import */ var _IconImageCache_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./IconImageCache.js */ "./node_modules/ol/style/IconImageCache.js");
/* harmony import */ var _Image_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../Image.js */ "./node_modules/ol/Image.js");
/**
 * @module ol/style/IconImage
 */
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();







/**
 * @type {CanvasRenderingContext2D}
 */
var taintedTestContext = null;
var IconImage = /** @class */ (function (_super) {
    __extends(IconImage, _super);
    /**
     * @param {HTMLImageElement|HTMLCanvasElement} image Image.
     * @param {string|undefined} src Src.
     * @param {import("../size.js").Size} size Size.
     * @param {?string} crossOrigin Cross origin.
     * @param {import("../ImageState.js").default} imageState Image state.
     * @param {import("../color.js").Color} color Color.
     */
    function IconImage(image, src, size, crossOrigin, imageState, color) {
        var _this = _super.call(this) || this;
        /**
         * @private
         * @type {HTMLImageElement|HTMLCanvasElement}
         */
        _this.hitDetectionImage_ = null;
        /**
         * @private
         * @type {HTMLImageElement|HTMLCanvasElement}
         */
        _this.image_ = !image ? new Image() : image;
        if (crossOrigin !== null) {
            /** @type {HTMLImageElement} */ (_this.image_).crossOrigin = crossOrigin;
        }
        /**
         * @private
         * @type {Object<number, HTMLCanvasElement>}
         */
        _this.canvas_ = {};
        /**
         * @private
         * @type {import("../color.js").Color}
         */
        _this.color_ = color;
        /**
         * @private
         * @type {?function():void}
         */
        _this.unlisten_ = null;
        /**
         * @private
         * @type {import("../ImageState.js").default}
         */
        _this.imageState_ = imageState;
        /**
         * @private
         * @type {import("../size.js").Size}
         */
        _this.size_ = size;
        /**
         * @private
         * @type {string|undefined}
         */
        _this.src_ = src;
        /**
         * @private
         */
        _this.tainted_;
        return _this;
    }
    /**
     * @private
     * @return {boolean} The image canvas is tainted.
     */
    IconImage.prototype.isTainted_ = function () {
        if (this.tainted_ === undefined && this.imageState_ === _ImageState_js__WEBPACK_IMPORTED_MODULE_0__.default.LOADED) {
            if (!taintedTestContext) {
                taintedTestContext = (0,_dom_js__WEBPACK_IMPORTED_MODULE_1__.createCanvasContext2D)(1, 1);
            }
            taintedTestContext.drawImage(this.image_, 0, 0);
            try {
                taintedTestContext.getImageData(0, 0, 1, 1);
                this.tainted_ = false;
            }
            catch (e) {
                taintedTestContext = null;
                this.tainted_ = true;
            }
        }
        return this.tainted_ === true;
    };
    /**
     * @private
     */
    IconImage.prototype.dispatchChangeEvent_ = function () {
        this.dispatchEvent(_events_EventType_js__WEBPACK_IMPORTED_MODULE_2__.default.CHANGE);
    };
    /**
     * @private
     */
    IconImage.prototype.handleImageError_ = function () {
        this.imageState_ = _ImageState_js__WEBPACK_IMPORTED_MODULE_0__.default.ERROR;
        this.unlistenImage_();
        this.dispatchChangeEvent_();
    };
    /**
     * @private
     */
    IconImage.prototype.handleImageLoad_ = function () {
        this.imageState_ = _ImageState_js__WEBPACK_IMPORTED_MODULE_0__.default.LOADED;
        if (this.size_) {
            this.image_.width = this.size_[0];
            this.image_.height = this.size_[1];
        }
        else {
            this.size_ = [this.image_.width, this.image_.height];
        }
        this.unlistenImage_();
        this.dispatchChangeEvent_();
    };
    /**
     * @param {number} pixelRatio Pixel ratio.
     * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.
     */
    IconImage.prototype.getImage = function (pixelRatio) {
        this.replaceColor_(pixelRatio);
        return this.canvas_[pixelRatio] ? this.canvas_[pixelRatio] : this.image_;
    };
    /**
     * @param {number} pixelRatio Pixel ratio.
     * @return {number} Image or Canvas element.
     */
    IconImage.prototype.getPixelRatio = function (pixelRatio) {
        this.replaceColor_(pixelRatio);
        return this.canvas_[pixelRatio] ? pixelRatio : 1;
    };
    /**
     * @return {import("../ImageState.js").default} Image state.
     */
    IconImage.prototype.getImageState = function () {
        return this.imageState_;
    };
    /**
     * @return {HTMLImageElement|HTMLCanvasElement} Image element.
     */
    IconImage.prototype.getHitDetectionImage = function () {
        if (!this.hitDetectionImage_) {
            if (this.isTainted_()) {
                var width = this.size_[0];
                var height = this.size_[1];
                var context = (0,_dom_js__WEBPACK_IMPORTED_MODULE_1__.createCanvasContext2D)(width, height);
                context.fillRect(0, 0, width, height);
                this.hitDetectionImage_ = context.canvas;
            }
            else {
                this.hitDetectionImage_ = this.image_;
            }
        }
        return this.hitDetectionImage_;
    };
    /**
     * Get the size of the icon (in pixels).
     * @return {import("../size.js").Size} Image size.
     */
    IconImage.prototype.getSize = function () {
        return this.size_;
    };
    /**
     * @return {string|undefined} Image src.
     */
    IconImage.prototype.getSrc = function () {
        return this.src_;
    };
    /**
     * Load not yet loaded URI.
     */
    IconImage.prototype.load = function () {
        if (this.imageState_ == _ImageState_js__WEBPACK_IMPORTED_MODULE_0__.default.IDLE) {
            this.imageState_ = _ImageState_js__WEBPACK_IMPORTED_MODULE_0__.default.LOADING;
            try {
                /** @type {HTMLImageElement} */ (this.image_).src = this.src_;
            }
            catch (e) {
                this.handleImageError_();
            }
            this.unlisten_ = (0,_Image_js__WEBPACK_IMPORTED_MODULE_3__.listenImage)(this.image_, this.handleImageLoad_.bind(this), this.handleImageError_.bind(this));
        }
    };
    /**
     * @param {number} pixelRatio Pixel ratio.
     * @private
     */
    IconImage.prototype.replaceColor_ = function (pixelRatio) {
        if (!this.color_ || this.canvas_[pixelRatio]) {
            return;
        }
        var canvas = document.createElement('canvas');
        this.canvas_[pixelRatio] = canvas;
        canvas.width = Math.ceil(this.image_.width * pixelRatio);
        canvas.height = Math.ceil(this.image_.height * pixelRatio);
        var ctx = canvas.getContext('2d');
        ctx.scale(pixelRatio, pixelRatio);
        ctx.drawImage(this.image_, 0, 0);
        ctx.globalCompositeOperation = 'multiply';
        // Internet Explorer 11 does not support the multiply operation.
        // If the canvas is tainted in Internet Explorer this still produces
        // a solid color image with the shape of the icon.
        if (ctx.globalCompositeOperation === 'multiply' || this.isTainted_()) {
            ctx.fillStyle = (0,_color_js__WEBPACK_IMPORTED_MODULE_4__.asString)(this.color_);
            ctx.fillRect(0, 0, canvas.width, canvas.height);
            ctx.globalCompositeOperation = 'destination-in';
            ctx.drawImage(this.image_, 0, 0);
        }
        else {
            var imgData = ctx.getImageData(0, 0, canvas.width, canvas.height);
            var data = imgData.data;
            var r = this.color_[0] / 255.0;
            var g = this.color_[1] / 255.0;
            var b = this.color_[2] / 255.0;
            var a = this.color_[3];
            for (var i = 0, ii = data.length; i < ii; i += 4) {
                data[i] *= r;
                data[i + 1] *= g;
                data[i + 2] *= b;
                data[i + 3] *= a;
            }
            ctx.putImageData(imgData, 0, 0);
        }
    };
    /**
     * Discards event handlers which listen for load completion or errors.
     *
     * @private
     */
    IconImage.prototype.unlistenImage_ = function () {
        if (this.unlisten_) {
            this.unlisten_();
            this.unlisten_ = null;
        }
    };
    return IconImage;
}(_events_Target_js__WEBPACK_IMPORTED_MODULE_5__.default));
/**
 * @param {HTMLImageElement|HTMLCanvasElement} image Image.
 * @param {string} src Src.
 * @param {import("../size.js").Size} size Size.
 * @param {?string} crossOrigin Cross origin.
 * @param {import("../ImageState.js").default} imageState Image state.
 * @param {import("../color.js").Color} color Color.
 * @return {IconImage} Icon image.
 */
function get(image, src, size, crossOrigin, imageState, color) {
    var iconImage = _IconImageCache_js__WEBPACK_IMPORTED_MODULE_6__.shared.get(src, crossOrigin, color);
    if (!iconImage) {
        iconImage = new IconImage(image, src, size, crossOrigin, imageState, color);
        _IconImageCache_js__WEBPACK_IMPORTED_MODULE_6__.shared.set(src, crossOrigin, color, iconImage);
    }
    return iconImage;
}
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (IconImage);
//# sourceMappingURL=IconImage.js.map

/***/ }),

/***/ "./node_modules/ol/style/IconImageCache.js":
/*!*************************************************!*\
  !*** ./node_modules/ol/style/IconImageCache.js ***!
  \*************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__),
/* harmony export */   "shared": () => (/* binding */ shared)
/* harmony export */ });
/* harmony import */ var _color_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../color.js */ "./node_modules/ol/color.js");
/**
 * @module ol/style/IconImageCache
 */

/**
 * @classdesc
 * Singleton class. Available through {@link module:ol/style/IconImageCache~shared}.
 */
var IconImageCache = /** @class */ (function () {
    function IconImageCache() {
        /**
         * @type {!Object<string, import("./IconImage.js").default>}
         * @private
         */
        this.cache_ = {};
        /**
         * @type {number}
         * @private
         */
        this.cacheSize_ = 0;
        /**
         * @type {number}
         * @private
         */
        this.maxCacheSize_ = 32;
    }
    /**
     * FIXME empty description for jsdoc
     */
    IconImageCache.prototype.clear = function () {
        this.cache_ = {};
        this.cacheSize_ = 0;
    };
    /**
     * @return {boolean} Can expire cache.
     */
    IconImageCache.prototype.canExpireCache = function () {
        return this.cacheSize_ > this.maxCacheSize_;
    };
    /**
     * FIXME empty description for jsdoc
     */
    IconImageCache.prototype.expire = function () {
        if (this.canExpireCache()) {
            var i = 0;
            for (var key in this.cache_) {
                var iconImage = this.cache_[key];
                if ((i++ & 3) === 0 && !iconImage.hasListener()) {
                    delete this.cache_[key];
                    --this.cacheSize_;
                }
            }
        }
    };
    /**
     * @param {string} src Src.
     * @param {?string} crossOrigin Cross origin.
     * @param {import("../color.js").Color} color Color.
     * @return {import("./IconImage.js").default} Icon image.
     */
    IconImageCache.prototype.get = function (src, crossOrigin, color) {
        var key = getKey(src, crossOrigin, color);
        return key in this.cache_ ? this.cache_[key] : null;
    };
    /**
     * @param {string} src Src.
     * @param {?string} crossOrigin Cross origin.
     * @param {import("../color.js").Color} color Color.
     * @param {import("./IconImage.js").default} iconImage Icon image.
     */
    IconImageCache.prototype.set = function (src, crossOrigin, color, iconImage) {
        var key = getKey(src, crossOrigin, color);
        this.cache_[key] = iconImage;
        ++this.cacheSize_;
    };
    /**
     * Set the cache size of the icon cache. Default is `32`. Change this value when
     * your map uses more than 32 different icon images and you are not caching icon
     * styles on the application level.
     * @param {number} maxCacheSize Cache max size.
     * @api
     */
    IconImageCache.prototype.setSize = function (maxCacheSize) {
        this.maxCacheSize_ = maxCacheSize;
        this.expire();
    };
    return IconImageCache;
}());
/**
 * @param {string} src Src.
 * @param {?string} crossOrigin Cross origin.
 * @param {import("../color.js").Color} color Color.
 * @return {string} Cache key.
 */
function getKey(src, crossOrigin, color) {
    var colorString = color ? (0,_color_js__WEBPACK_IMPORTED_MODULE_0__.asString)(color) : 'null';
    return crossOrigin + ':' + src + ':' + colorString;
}
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (IconImageCache);
/**
 * The {@link module:ol/style/IconImageCache~IconImageCache} for
 * {@link module:ol/style/Icon~Icon} images.
 * @api
 */
var shared = new IconImageCache();
//# sourceMappingURL=IconImageCache.js.map

/***/ }),

/***/ "./node_modules/ol/style/IconOrigin.js":
/*!*********************************************!*\
  !*** ./node_modules/ol/style/IconOrigin.js ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/**
 * @module ol/style/IconOrigin
 */
/**
 * Icon origin. One of 'bottom-left', 'bottom-right', 'top-left', 'top-right'.
 * @enum {string}
 */
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
    /**
     * Origin is at bottom left
     * @api
     */
    BOTTOM_LEFT: 'bottom-left',
    /**
     * Origin is at bottom right
     * @api
     */
    BOTTOM_RIGHT: 'bottom-right',
    /**
     * Origin is at top left
     * @api
     */
    TOP_LEFT: 'top-left',
    /**
     * Origin is at top right
     * @api
     */
    TOP_RIGHT: 'top-right',
});
//# sourceMappingURL=IconOrigin.js.map

/***/ }),

/***/ "./node_modules/ol/style/Image.js":
/*!****************************************!*\
  !*** ./node_modules/ol/style/Image.js ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _util_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util.js */ "./node_modules/ol/util.js");
/* harmony import */ var _size_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../size.js */ "./node_modules/ol/size.js");
/**
 * @module ol/style/Image
 */


/**
 * @typedef {Object} Options
 * @property {number} opacity
 * @property {boolean} rotateWithView
 * @property {number} rotation
 * @property {number|import("../size.js").Size} scale
 * @property {Array<number>} displacement
 */
/**
 * @classdesc
 * A base class used for creating subclasses and not instantiated in
 * apps. Base class for {@link module:ol/style/Icon~Icon}, {@link module:ol/style/Circle~CircleStyle} and
 * {@link module:ol/style/RegularShape~RegularShape}.
 * @abstract
 * @api
 */
var ImageStyle = /** @class */ (function () {
    /**
     * @param {Options} options Options.
     */
    function ImageStyle(options) {
        /**
         * @private
         * @type {number}
         */
        this.opacity_ = options.opacity;
        /**
         * @private
         * @type {boolean}
         */
        this.rotateWithView_ = options.rotateWithView;
        /**
         * @private
         * @type {number}
         */
        this.rotation_ = options.rotation;
        /**
         * @private
         * @type {number|import("../size.js").Size}
         */
        this.scale_ = options.scale;
        /**
         * @private
         * @type {import("../size.js").Size}
         */
        this.scaleArray_ = (0,_size_js__WEBPACK_IMPORTED_MODULE_0__.toSize)(options.scale);
        /**
         * @private
         * @type {Array<number>}
         */
        this.displacement_ = options.displacement;
    }
    /**
     * Clones the style.
     * @return {ImageStyle} The cloned style.
     * @api
     */
    ImageStyle.prototype.clone = function () {
        var scale = this.getScale();
        return new ImageStyle({
            opacity: this.getOpacity(),
            scale: Array.isArray(scale) ? scale.slice() : scale,
            rotation: this.getRotation(),
            rotateWithView: this.getRotateWithView(),
            displacement: this.getDisplacement().slice(),
        });
    };
    /**
     * Get the symbolizer opacity.
     * @return {number} Opacity.
     * @api
     */
    ImageStyle.prototype.getOpacity = function () {
        return this.opacity_;
    };
    /**
     * Determine whether the symbolizer rotates with the map.
     * @return {boolean} Rotate with map.
     * @api
     */
    ImageStyle.prototype.getRotateWithView = function () {
        return this.rotateWithView_;
    };
    /**
     * Get the symoblizer rotation.
     * @return {number} Rotation.
     * @api
     */
    ImageStyle.prototype.getRotation = function () {
        return this.rotation_;
    };
    /**
     * Get the symbolizer scale.
     * @return {number|import("../size.js").Size} Scale.
     * @api
     */
    ImageStyle.prototype.getScale = function () {
        return this.scale_;
    };
    /**
     * Get the symbolizer scale array.
     * @return {import("../size.js").Size} Scale array.
     */
    ImageStyle.prototype.getScaleArray = function () {
        return this.scaleArray_;
    };
    /**
     * Get the displacement of the shape
     * @return {Array<number>} Shape's center displacement
     * @api
     */
    ImageStyle.prototype.getDisplacement = function () {
        return this.displacement_;
    };
    /**
     * Get the anchor point in pixels. The anchor determines the center point for the
     * symbolizer.
     * @abstract
     * @return {Array<number>} Anchor.
     */
    ImageStyle.prototype.getAnchor = function () {
        return (0,_util_js__WEBPACK_IMPORTED_MODULE_1__.abstract)();
    };
    /**
     * Get the image element for the symbolizer.
     * @abstract
     * @param {number} pixelRatio Pixel ratio.
     * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.
     */
    ImageStyle.prototype.getImage = function (pixelRatio) {
        return (0,_util_js__WEBPACK_IMPORTED_MODULE_1__.abstract)();
    };
    /**
     * @abstract
     * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.
     */
    ImageStyle.prototype.getHitDetectionImage = function () {
        return (0,_util_js__WEBPACK_IMPORTED_MODULE_1__.abstract)();
    };
    /*
     * Get the image pixel ratio.
     * @param {number} pixelRatio Pixel ratio.
     * */
    ImageStyle.prototype.getPixelRatio = function (pixelRatio) {
        return 1;
    };
    /**
     * @abstract
     * @return {import("../ImageState.js").default} Image state.
     */
    ImageStyle.prototype.getImageState = function () {
        return (0,_util_js__WEBPACK_IMPORTED_MODULE_1__.abstract)();
    };
    /**
     * @abstract
     * @return {import("../size.js").Size} Image size.
     */
    ImageStyle.prototype.getImageSize = function () {
        return (0,_util_js__WEBPACK_IMPORTED_MODULE_1__.abstract)();
    };
    /**
     * @abstract
     * @return {import("../size.js").Size} Size of the hit-detection image.
     */
    ImageStyle.prototype.getHitDetectionImageSize = function () {
        return (0,_util_js__WEBPACK_IMPORTED_MODULE_1__.abstract)();
    };
    /**
     * Get the origin of the symbolizer.
     * @abstract
     * @return {Array<number>} Origin.
     */
    ImageStyle.prototype.getOrigin = function () {
        return (0,_util_js__WEBPACK_IMPORTED_MODULE_1__.abstract)();
    };
    /**
     * Get the size of the symbolizer (in pixels).
     * @abstract
     * @return {import("../size.js").Size} Size.
     */
    ImageStyle.prototype.getSize = function () {
        return (0,_util_js__WEBPACK_IMPORTED_MODULE_1__.abstract)();
    };
    /**
     * Set the opacity.
     *
     * @param {number} opacity Opacity.
     * @api
     */
    ImageStyle.prototype.setOpacity = function (opacity) {
        this.opacity_ = opacity;
    };
    /**
     * Set whether to rotate the style with the view.
     *
     * @param {boolean} rotateWithView Rotate with map.
     * @api
     */
    ImageStyle.prototype.setRotateWithView = function (rotateWithView) {
        this.rotateWithView_ = rotateWithView;
    };
    /**
     * Set the rotation.
     *
     * @param {number} rotation Rotation.
     * @api
     */
    ImageStyle.prototype.setRotation = function (rotation) {
        this.rotation_ = rotation;
    };
    /**
     * Set the scale.
     *
     * @param {number|import("../size.js").Size} scale Scale.
     * @api
     */
    ImageStyle.prototype.setScale = function (scale) {
        this.scale_ = scale;
        this.scaleArray_ = (0,_size_js__WEBPACK_IMPORTED_MODULE_0__.toSize)(scale);
    };
    /**
     * @abstract
     * @param {function(import("../events/Event.js").default): void} listener Listener function.
     */
    ImageStyle.prototype.listenImageChange = function (listener) {
        (0,_util_js__WEBPACK_IMPORTED_MODULE_1__.abstract)();
    };
    /**
     * Load not yet loaded URI.
     * @abstract
     */
    ImageStyle.prototype.load = function () {
        (0,_util_js__WEBPACK_IMPORTED_MODULE_1__.abstract)();
    };
    /**
     * @abstract
     * @param {function(import("../events/Event.js").default): void} listener Listener function.
     */
    ImageStyle.prototype.unlistenImageChange = function (listener) {
        (0,_util_js__WEBPACK_IMPORTED_MODULE_1__.abstract)();
    };
    return ImageStyle;
}());
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (ImageStyle);
//# sourceMappingURL=Image.js.map

/***/ }),

/***/ "./node_modules/ol/style/RegularShape.js":
/*!***********************************************!*\
  !*** ./node_modules/ol/style/RegularShape.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _ImageState_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../ImageState.js */ "./node_modules/ol/ImageState.js");
/* harmony import */ var _Image_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./Image.js */ "./node_modules/ol/style/Image.js");
/* harmony import */ var _color_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../color.js */ "./node_modules/ol/color.js");
/* harmony import */ var _colorlike_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../colorlike.js */ "./node_modules/ol/colorlike.js");
/* harmony import */ var _dom_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../dom.js */ "./node_modules/ol/dom.js");
/* harmony import */ var _render_canvas_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../render/canvas.js */ "./node_modules/ol/render/canvas.js");
/**
 * @module ol/style/RegularShape
 */
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();






/**
 * Specify radius for regular polygons, or radius1 and radius2 for stars.
 * @typedef {Object} Options
 * @property {import("./Fill.js").default} [fill] Fill style.
 * @property {number} points Number of points for stars and regular polygons. In case of a polygon, the number of points
 * is the number of sides.
 * @property {number} [radius] Radius of a regular polygon.
 * @property {number} [radius1] Outer radius of a star.
 * @property {number} [radius2] Inner radius of a star.
 * @property {number} [angle=0] Shape's angle in radians. A value of 0 will have one of the shape's point facing up.
 * @property {Array<number>} [displacement=[0,0]] Displacement of the shape
 * @property {import("./Stroke.js").default} [stroke] Stroke style.
 * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).
 * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view.
 * @property {number|import("../size.js").Size} [scale=1] Scale. Unless two dimensional scaling is required a better
 * result may be obtained with appropriate settings for `radius`, `radius1` and `radius2`.
 */
/**
 * @typedef {Object} RenderOptions
 * @property {import("../colorlike.js").ColorLike} [strokeStyle]
 * @property {number} strokeWidth
 * @property {number} size
 * @property {CanvasLineCap} lineCap
 * @property {Array<number>} lineDash
 * @property {number} lineDashOffset
 * @property {CanvasLineJoin} lineJoin
 * @property {number} miterLimit
 */
/**
 * @classdesc
 * Set regular shape style for vector features. The resulting shape will be
 * a regular polygon when `radius` is provided, or a star when `radius1` and
 * `radius2` are provided.
 * @api
 */
var RegularShape = /** @class */ (function (_super) {
    __extends(RegularShape, _super);
    /**
     * @param {Options} options Options.
     */
    function RegularShape(options) {
        var _this = this;
        /**
         * @type {boolean}
         */
        var rotateWithView = options.rotateWithView !== undefined ? options.rotateWithView : false;
        _this = _super.call(this, {
            opacity: 1,
            rotateWithView: rotateWithView,
            rotation: options.rotation !== undefined ? options.rotation : 0,
            scale: options.scale !== undefined ? options.scale : 1,
            displacement: options.displacement !== undefined ? options.displacement : [0, 0],
        }) || this;
        /**
         * @private
         * @type {Object<number, HTMLCanvasElement>}
         */
        _this.canvas_ = {};
        /**
         * @private
         * @type {HTMLCanvasElement}
         */
        _this.hitDetectionCanvas_ = null;
        /**
         * @private
         * @type {import("./Fill.js").default}
         */
        _this.fill_ = options.fill !== undefined ? options.fill : null;
        /**
         * @private
         * @type {Array<number>}
         */
        _this.origin_ = [0, 0];
        /**
         * @private
         * @type {number}
         */
        _this.points_ = options.points;
        /**
         * @protected
         * @type {number}
         */
        _this.radius_ =
            options.radius !== undefined ? options.radius : options.radius1;
        /**
         * @private
         * @type {number|undefined}
         */
        _this.radius2_ = options.radius2;
        /**
         * @private
         * @type {number}
         */
        _this.angle_ = options.angle !== undefined ? options.angle : 0;
        /**
         * @private
         * @type {import("./Stroke.js").default}
         */
        _this.stroke_ = options.stroke !== undefined ? options.stroke : null;
        /**
         * @private
         * @type {Array<number>}
         */
        _this.anchor_ = null;
        /**
         * @private
         * @type {import("../size.js").Size}
         */
        _this.size_ = null;
        /**
         * @private
         * @type {import("../size.js").Size}
         */
        _this.imageSize_ = null;
        /**
         * @private
         * @type {import("../size.js").Size}
         */
        _this.hitDetectionImageSize_ = null;
        _this.render();
        return _this;
    }
    /**
     * Clones the style.
     * @return {RegularShape} The cloned style.
     * @api
     */
    RegularShape.prototype.clone = function () {
        var scale = this.getScale();
        var style = new RegularShape({
            fill: this.getFill() ? this.getFill().clone() : undefined,
            points: this.getPoints(),
            radius: this.getRadius(),
            radius2: this.getRadius2(),
            angle: this.getAngle(),
            stroke: this.getStroke() ? this.getStroke().clone() : undefined,
            rotation: this.getRotation(),
            rotateWithView: this.getRotateWithView(),
            scale: Array.isArray(scale) ? scale.slice() : scale,
            displacement: this.getDisplacement().slice(),
        });
        style.setOpacity(this.getOpacity());
        return style;
    };
    /**
     * Get the anchor point in pixels. The anchor determines the center point for the
     * symbolizer.
     * @return {Array<number>} Anchor.
     * @api
     */
    RegularShape.prototype.getAnchor = function () {
        return this.anchor_;
    };
    /**
     * Get the angle used in generating the shape.
     * @return {number} Shape's rotation in radians.
     * @api
     */
    RegularShape.prototype.getAngle = function () {
        return this.angle_;
    };
    /**
     * Get the fill style for the shape.
     * @return {import("./Fill.js").default} Fill style.
     * @api
     */
    RegularShape.prototype.getFill = function () {
        return this.fill_;
    };
    /**
     * @return {HTMLCanvasElement} Image element.
     */
    RegularShape.prototype.getHitDetectionImage = function () {
        if (!this.hitDetectionCanvas_) {
            var renderOptions = this.createRenderOptions();
            this.createHitDetectionCanvas_(renderOptions);
        }
        return this.hitDetectionCanvas_;
    };
    /**
     * Get the image icon.
     * @param {number} pixelRatio Pixel ratio.
     * @return {HTMLCanvasElement} Image or Canvas element.
     * @api
     */
    RegularShape.prototype.getImage = function (pixelRatio) {
        if (!this.canvas_[pixelRatio || 1]) {
            var renderOptions = this.createRenderOptions();
            var context = (0,_dom_js__WEBPACK_IMPORTED_MODULE_0__.createCanvasContext2D)(renderOptions.size * pixelRatio || 1, renderOptions.size * pixelRatio || 1);
            this.draw_(renderOptions, context, 0, 0, pixelRatio || 1);
            this.canvas_[pixelRatio || 1] = context.canvas;
        }
        return this.canvas_[pixelRatio || 1];
    };
    /*
     * Get the image pixel ratio.
     * @param {number} pixelRatio Pixel ratio.
     * */
    RegularShape.prototype.getPixelRatio = function (pixelRatio) {
        return pixelRatio;
    };
    /**
     * @return {import("../size.js").Size} Image size.
     */
    RegularShape.prototype.getImageSize = function () {
        return this.imageSize_;
    };
    /**
     * @return {import("../size.js").Size} Size of the hit-detection image.
     */
    RegularShape.prototype.getHitDetectionImageSize = function () {
        return this.hitDetectionImageSize_;
    };
    /**
     * @return {import("../ImageState.js").default} Image state.
     */
    RegularShape.prototype.getImageState = function () {
        return _ImageState_js__WEBPACK_IMPORTED_MODULE_1__.default.LOADED;
    };
    /**
     * Get the origin of the symbolizer.
     * @return {Array<number>} Origin.
     * @api
     */
    RegularShape.prototype.getOrigin = function () {
        return this.origin_;
    };
    /**
     * Get the number of points for generating the shape.
     * @return {number} Number of points for stars and regular polygons.
     * @api
     */
    RegularShape.prototype.getPoints = function () {
        return this.points_;
    };
    /**
     * Get the (primary) radius for the shape.
     * @return {number} Radius.
     * @api
     */
    RegularShape.prototype.getRadius = function () {
        return this.radius_;
    };
    /**
     * Get the secondary radius for the shape.
     * @return {number|undefined} Radius2.
     * @api
     */
    RegularShape.prototype.getRadius2 = function () {
        return this.radius2_;
    };
    /**
     * Get the size of the symbolizer (in pixels).
     * @return {import("../size.js").Size} Size.
     * @api
     */
    RegularShape.prototype.getSize = function () {
        return this.size_;
    };
    /**
     * Get the stroke style for the shape.
     * @return {import("./Stroke.js").default} Stroke style.
     * @api
     */
    RegularShape.prototype.getStroke = function () {
        return this.stroke_;
    };
    /**
     * @param {function(import("../events/Event.js").default): void} listener Listener function.
     */
    RegularShape.prototype.listenImageChange = function (listener) { };
    /**
     * Load not yet loaded URI.
     */
    RegularShape.prototype.load = function () { };
    /**
     * @param {function(import("../events/Event.js").default): void} listener Listener function.
     */
    RegularShape.prototype.unlistenImageChange = function (listener) { };
    /**
     * @returns {RenderOptions}  The render options
     * @protected
     */
    RegularShape.prototype.createRenderOptions = function () {
        var lineCap = _render_canvas_js__WEBPACK_IMPORTED_MODULE_2__.defaultLineCap;
        var lineJoin = _render_canvas_js__WEBPACK_IMPORTED_MODULE_2__.defaultLineJoin;
        var miterLimit = 0;
        var lineDash = null;
        var lineDashOffset = 0;
        var strokeStyle;
        var strokeWidth = 0;
        if (this.stroke_) {
            strokeStyle = this.stroke_.getColor();
            if (strokeStyle === null) {
                strokeStyle = _render_canvas_js__WEBPACK_IMPORTED_MODULE_2__.defaultStrokeStyle;
            }
            strokeStyle = (0,_colorlike_js__WEBPACK_IMPORTED_MODULE_3__.asColorLike)(strokeStyle);
            strokeWidth = this.stroke_.getWidth();
            if (strokeWidth === undefined) {
                strokeWidth = _render_canvas_js__WEBPACK_IMPORTED_MODULE_2__.defaultLineWidth;
            }
            lineDash = this.stroke_.getLineDash();
            lineDashOffset = this.stroke_.getLineDashOffset();
            lineJoin = this.stroke_.getLineJoin();
            if (lineJoin === undefined) {
                lineJoin = _render_canvas_js__WEBPACK_IMPORTED_MODULE_2__.defaultLineJoin;
            }
            lineCap = this.stroke_.getLineCap();
            if (lineCap === undefined) {
                lineCap = _render_canvas_js__WEBPACK_IMPORTED_MODULE_2__.defaultLineCap;
            }
            miterLimit = this.stroke_.getMiterLimit();
            if (miterLimit === undefined) {
                miterLimit = _render_canvas_js__WEBPACK_IMPORTED_MODULE_2__.defaultMiterLimit;
            }
        }
        var size = 2 * (this.radius_ + strokeWidth) + 1;
        return {
            strokeStyle: strokeStyle,
            strokeWidth: strokeWidth,
            size: size,
            lineCap: lineCap,
            lineDash: lineDash,
            lineDashOffset: lineDashOffset,
            lineJoin: lineJoin,
            miterLimit: miterLimit,
        };
    };
    /**
     * @protected
     */
    RegularShape.prototype.render = function () {
        var renderOptions = this.createRenderOptions();
        var context = (0,_dom_js__WEBPACK_IMPORTED_MODULE_0__.createCanvasContext2D)(renderOptions.size, renderOptions.size);
        this.draw_(renderOptions, context, 0, 0, 1);
        this.canvas_ = {};
        this.canvas_[1] = context.canvas;
        // canvas.width and height are rounded to the closest integer
        var size = context.canvas.width;
        var imageSize = size;
        var displacement = this.getDisplacement();
        this.hitDetectionImageSize_ = [renderOptions.size, renderOptions.size];
        this.createHitDetectionCanvas_(renderOptions);
        this.anchor_ = [size / 2 - displacement[0], size / 2 + displacement[1]];
        this.size_ = [size, size];
        this.imageSize_ = [imageSize, imageSize];
    };
    /**
     * @private
     * @param {RenderOptions} renderOptions Render options.
     * @param {CanvasRenderingContext2D} context The rendering context.
     * @param {number} x The origin for the symbol (x).
     * @param {number} y The origin for the symbol (y).
     * @param {number} pixelRatio The pixel ratio.
     */
    RegularShape.prototype.draw_ = function (renderOptions, context, x, y, pixelRatio) {
        var i, angle0, radiusC;
        // reset transform
        context.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);
        // then move to (x, y)
        context.translate(x, y);
        context.beginPath();
        var points = this.points_;
        if (points === Infinity) {
            context.arc(renderOptions.size / 2, renderOptions.size / 2, this.radius_, 0, 2 * Math.PI, true);
        }
        else {
            var radius2 = this.radius2_ !== undefined ? this.radius2_ : this.radius_;
            if (radius2 !== this.radius_) {
                points = 2 * points;
            }
            for (i = 0; i <= points; i++) {
                angle0 = (i * 2 * Math.PI) / points - Math.PI / 2 + this.angle_;
                radiusC = i % 2 === 0 ? this.radius_ : radius2;
                context.lineTo(renderOptions.size / 2 + radiusC * Math.cos(angle0), renderOptions.size / 2 + radiusC * Math.sin(angle0));
            }
        }
        if (this.fill_) {
            var color = this.fill_.getColor();
            if (color === null) {
                color = _render_canvas_js__WEBPACK_IMPORTED_MODULE_2__.defaultFillStyle;
            }
            context.fillStyle = (0,_colorlike_js__WEBPACK_IMPORTED_MODULE_3__.asColorLike)(color);
            context.fill();
        }
        if (this.stroke_) {
            context.strokeStyle = renderOptions.strokeStyle;
            context.lineWidth = renderOptions.strokeWidth;
            if (context.setLineDash && renderOptions.lineDash) {
                context.setLineDash(renderOptions.lineDash);
                context.lineDashOffset = renderOptions.lineDashOffset;
            }
            context.lineCap = renderOptions.lineCap;
            context.lineJoin = renderOptions.lineJoin;
            context.miterLimit = renderOptions.miterLimit;
            context.stroke();
        }
        context.closePath();
    };
    /**
     * @private
     * @param {RenderOptions} renderOptions Render options.
     */
    RegularShape.prototype.createHitDetectionCanvas_ = function (renderOptions) {
        this.hitDetectionCanvas_ = this.getImage(1);
        if (this.fill_) {
            var color = this.fill_.getColor();
            // determine if fill is transparent (or pattern or gradient)
            var opacity = 0;
            if (typeof color === 'string') {
                color = (0,_color_js__WEBPACK_IMPORTED_MODULE_4__.asArray)(color);
            }
            if (color === null) {
                opacity = 1;
            }
            else if (Array.isArray(color)) {
                opacity = color.length === 4 ? color[3] : 1;
            }
            if (opacity === 0) {
                // if a transparent fill style is set, create an extra hit-detection image
                // with a default fill style
                var context = (0,_dom_js__WEBPACK_IMPORTED_MODULE_0__.createCanvasContext2D)(renderOptions.size, renderOptions.size);
                this.hitDetectionCanvas_ = context.canvas;
                this.drawHitDetectionCanvas_(renderOptions, context, 0, 0);
            }
        }
    };
    /**
     * @private
     * @param {RenderOptions} renderOptions Render options.
     * @param {CanvasRenderingContext2D} context The context.
     * @param {number} x The origin for the symbol (x).
     * @param {number} y The origin for the symbol (y).
     */
    RegularShape.prototype.drawHitDetectionCanvas_ = function (renderOptions, context, x, y) {
        // move to (x, y)
        context.translate(x, y);
        context.beginPath();
        var points = this.points_;
        if (points === Infinity) {
            context.arc(renderOptions.size / 2, renderOptions.size / 2, this.radius_, 0, 2 * Math.PI, true);
        }
        else {
            var radius2 = this.radius2_ !== undefined ? this.radius2_ : this.radius_;
            if (radius2 !== this.radius_) {
                points = 2 * points;
            }
            var i = void 0, radiusC = void 0, angle0 = void 0;
            for (i = 0; i <= points; i++) {
                angle0 = (i * 2 * Math.PI) / points - Math.PI / 2 + this.angle_;
                radiusC = i % 2 === 0 ? this.radius_ : radius2;
                context.lineTo(renderOptions.size / 2 + radiusC * Math.cos(angle0), renderOptions.size / 2 + radiusC * Math.sin(angle0));
            }
        }
        context.fillStyle = _render_canvas_js__WEBPACK_IMPORTED_MODULE_2__.defaultFillStyle;
        context.fill();
        if (this.stroke_) {
            context.strokeStyle = renderOptions.strokeStyle;
            context.lineWidth = renderOptions.strokeWidth;
            if (renderOptions.lineDash) {
                context.setLineDash(renderOptions.lineDash);
                context.lineDashOffset = renderOptions.lineDashOffset;
            }
            context.stroke();
        }
        context.closePath();
    };
    return RegularShape;
}(_Image_js__WEBPACK_IMPORTED_MODULE_5__.default));
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (RegularShape);
//# sourceMappingURL=RegularShape.js.map

/***/ }),

/***/ "./node_modules/ol/style/Stroke.js":
/*!*****************************************!*\
  !*** ./node_modules/ol/style/Stroke.js ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/**
 * @module ol/style/Stroke
 */
/**
 * @typedef {Object} Options
 * @property {import("../color.js").Color|import("../colorlike.js").ColorLike} [color] A color, gradient or pattern.
 * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.
 * Default null; if null, the Canvas/renderer default black will be used.
 * @property {CanvasLineCap} [lineCap='round'] Line cap style: `butt`, `round`, or `square`.
 * @property {CanvasLineJoin} [lineJoin='round'] Line join style: `bevel`, `round`, or `miter`.
 * @property {Array<number>} [lineDash] Line dash pattern. Default is `null` (no dash).
 * Please note that Internet Explorer 10 and lower do not support the `setLineDash` method on
 * the `CanvasRenderingContext2D` and therefore this option will have no visual effect in these browsers.
 * @property {number} [lineDashOffset=0] Line dash offset.
 * @property {number} [miterLimit=10] Miter limit.
 * @property {number} [width] Width.
 */
/**
 * @classdesc
 * Set stroke style for vector features.
 * Note that the defaults given are the Canvas defaults, which will be used if
 * option is not defined. The `get` functions return whatever was entered in
 * the options; they will not return the default.
 * @api
 */
var Stroke = /** @class */ (function () {
    /**
     * @param {Options=} opt_options Options.
     */
    function Stroke(opt_options) {
        var options = opt_options || {};
        /**
         * @private
         * @type {import("../color.js").Color|import("../colorlike.js").ColorLike}
         */
        this.color_ = options.color !== undefined ? options.color : null;
        /**
         * @private
         * @type {CanvasLineCap|undefined}
         */
        this.lineCap_ = options.lineCap;
        /**
         * @private
         * @type {Array<number>}
         */
        this.lineDash_ = options.lineDash !== undefined ? options.lineDash : null;
        /**
         * @private
         * @type {number|undefined}
         */
        this.lineDashOffset_ = options.lineDashOffset;
        /**
         * @private
         * @type {CanvasLineJoin|undefined}
         */
        this.lineJoin_ = options.lineJoin;
        /**
         * @private
         * @type {number|undefined}
         */
        this.miterLimit_ = options.miterLimit;
        /**
         * @private
         * @type {number|undefined}
         */
        this.width_ = options.width;
    }
    /**
     * Clones the style.
     * @return {Stroke} The cloned style.
     * @api
     */
    Stroke.prototype.clone = function () {
        var color = this.getColor();
        return new Stroke({
            color: Array.isArray(color) ? color.slice() : color || undefined,
            lineCap: this.getLineCap(),
            lineDash: this.getLineDash() ? this.getLineDash().slice() : undefined,
            lineDashOffset: this.getLineDashOffset(),
            lineJoin: this.getLineJoin(),
            miterLimit: this.getMiterLimit(),
            width: this.getWidth(),
        });
    };
    /**
     * Get the stroke color.
     * @return {import("../color.js").Color|import("../colorlike.js").ColorLike} Color.
     * @api
     */
    Stroke.prototype.getColor = function () {
        return this.color_;
    };
    /**
     * Get the line cap type for the stroke.
     * @return {CanvasLineCap|undefined} Line cap.
     * @api
     */
    Stroke.prototype.getLineCap = function () {
        return this.lineCap_;
    };
    /**
     * Get the line dash style for the stroke.
     * @return {Array<number>} Line dash.
     * @api
     */
    Stroke.prototype.getLineDash = function () {
        return this.lineDash_;
    };
    /**
     * Get the line dash offset for the stroke.
     * @return {number|undefined} Line dash offset.
     * @api
     */
    Stroke.prototype.getLineDashOffset = function () {
        return this.lineDashOffset_;
    };
    /**
     * Get the line join type for the stroke.
     * @return {CanvasLineJoin|undefined} Line join.
     * @api
     */
    Stroke.prototype.getLineJoin = function () {
        return this.lineJoin_;
    };
    /**
     * Get the miter limit for the stroke.
     * @return {number|undefined} Miter limit.
     * @api
     */
    Stroke.prototype.getMiterLimit = function () {
        return this.miterLimit_;
    };
    /**
     * Get the stroke width.
     * @return {number|undefined} Width.
     * @api
     */
    Stroke.prototype.getWidth = function () {
        return this.width_;
    };
    /**
     * Set the color.
     *
     * @param {import("../color.js").Color|import("../colorlike.js").ColorLike} color Color.
     * @api
     */
    Stroke.prototype.setColor = function (color) {
        this.color_ = color;
    };
    /**
     * Set the line cap.
     *
     * @param {CanvasLineCap|undefined} lineCap Line cap.
     * @api
     */
    Stroke.prototype.setLineCap = function (lineCap) {
        this.lineCap_ = lineCap;
    };
    /**
     * Set the line dash.
     *
     * Please note that Internet Explorer 10 and lower [do not support][mdn] the
     * `setLineDash` method on the `CanvasRenderingContext2D` and therefore this
     * property will have no visual effect in these browsers.
     *
     * [mdn]: https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/setLineDash#Browser_compatibility
     *
     * @param {Array<number>} lineDash Line dash.
     * @api
     */
    Stroke.prototype.setLineDash = function (lineDash) {
        this.lineDash_ = lineDash;
    };
    /**
     * Set the line dash offset.
     *
     * @param {number|undefined} lineDashOffset Line dash offset.
     * @api
     */
    Stroke.prototype.setLineDashOffset = function (lineDashOffset) {
        this.lineDashOffset_ = lineDashOffset;
    };
    /**
     * Set the line join.
     *
     * @param {CanvasLineJoin|undefined} lineJoin Line join.
     * @api
     */
    Stroke.prototype.setLineJoin = function (lineJoin) {
        this.lineJoin_ = lineJoin;
    };
    /**
     * Set the miter limit.
     *
     * @param {number|undefined} miterLimit Miter limit.
     * @api
     */
    Stroke.prototype.setMiterLimit = function (miterLimit) {
        this.miterLimit_ = miterLimit;
    };
    /**
     * Set the width.
     *
     * @param {number|undefined} width Width.
     * @api
     */
    Stroke.prototype.setWidth = function (width) {
        this.width_ = width;
    };
    return Stroke;
}());
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Stroke);
//# sourceMappingURL=Stroke.js.map

/***/ }),

/***/ "./node_modules/ol/style/Style.js":
/*!****************************************!*\
  !*** ./node_modules/ol/style/Style.js ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "toFunction": () => (/* binding */ toFunction),
/* harmony export */   "createDefaultStyle": () => (/* binding */ createDefaultStyle),
/* harmony export */   "createEditingStyle": () => (/* binding */ createEditingStyle),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _Circle_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Circle.js */ "./node_modules/ol/style/Circle.js");
/* harmony import */ var _Fill_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Fill.js */ "./node_modules/ol/style/Fill.js");
/* harmony import */ var _geom_GeometryType_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../geom/GeometryType.js */ "./node_modules/ol/geom/GeometryType.js");
/* harmony import */ var _Stroke_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Stroke.js */ "./node_modules/ol/style/Stroke.js");
/* harmony import */ var _asserts_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../asserts.js */ "./node_modules/ol/asserts.js");
/**
 * @module ol/style/Style
 */





/**
 * A function that takes an {@link module:ol/Feature} and a `{number}`
 * representing the view's resolution. The function should return a
 * {@link module:ol/style/Style} or an array of them. This way e.g. a
 * vector layer can be styled. If the function returns `undefined`, the
 * feature will not be rendered.
 *
 * @typedef {function(import("../Feature.js").FeatureLike, number):(Style|Array<Style>|void)} StyleFunction
 */
/**
 * A {@link Style}, an array of {@link Style}, or a {@link StyleFunction}.
 * @typedef {Style|Array<Style>|StyleFunction} StyleLike
 */
/**
 * A function that takes an {@link module:ol/Feature} as argument and returns an
 * {@link module:ol/geom/Geometry} that will be rendered and styled for the feature.
 *
 * @typedef {function(import("../Feature.js").FeatureLike):
 *     (import("../geom/Geometry.js").default|import("../render/Feature.js").default|undefined)} GeometryFunction
 */
/**
 * Custom renderer function. Takes two arguments:
 *
 * 1. The pixel coordinates of the geometry in GeoJSON notation.
 * 2. The {@link module:ol/render~State} of the layer renderer.
 *
 * @typedef {function((import("../coordinate.js").Coordinate|Array<import("../coordinate.js").Coordinate>|Array<Array<import("../coordinate.js").Coordinate>>),import("../render.js").State): void}
 * RenderFunction
 */
/**
 * @typedef {Object} Options
 * @property {string|import("../geom/Geometry.js").default|GeometryFunction} [geometry] Feature property or geometry
 * or function returning a geometry to render for this style.
 * @property {import("./Fill.js").default} [fill] Fill style.
 * @property {import("./Image.js").default} [image] Image style.
 * @property {RenderFunction} [renderer] Custom renderer. When configured, `fill`, `stroke` and `image` will be
 * ignored, and the provided function will be called with each render frame for each geometry.
 * @property {import("./Stroke.js").default} [stroke] Stroke style.
 * @property {import("./Text.js").default} [text] Text style.
 * @property {number} [zIndex] Z index.
 */
/**
 * @classdesc
 * Container for vector feature rendering styles. Any changes made to the style
 * or its children through `set*()` methods will not take effect until the
 * feature or layer that uses the style is re-rendered.
 *
 * ## Feature styles
 *
 * If no style is defined, the following default style is used:
 * ```js
 *  import {Fill, Stroke, Circle, Style} from 'ol/style';
 *
 *  var fill = new Fill({
 *    color: 'rgba(255,255,255,0.4)'
 *  });
 *  var stroke = new Stroke({
 *    color: '#3399CC',
 *    width: 1.25
 *  });
 *  var styles = [
 *    new Style({
 *      image: new Circle({
 *        fill: fill,
 *        stroke: stroke,
 *        radius: 5
 *      }),
 *      fill: fill,
 *      stroke: stroke
 *    })
 *  ];
 * ```
 *
 * A separate editing style has the following defaults:
 * ```js
 *  import {Fill, Stroke, Circle, Style} from 'ol/style';
 *  import GeometryType from 'ol/geom/GeometryType';
 *
 *  var white = [255, 255, 255, 1];
 *  var blue = [0, 153, 255, 1];
 *  var width = 3;
 *  styles[GeometryType.POLYGON] = [
 *    new Style({
 *      fill: new Fill({
 *        color: [255, 255, 255, 0.5]
 *      })
 *    })
 *  ];
 *  styles[GeometryType.MULTI_POLYGON] =
 *      styles[GeometryType.POLYGON];
 *  styles[GeometryType.LINE_STRING] = [
 *    new Style({
 *      stroke: new Stroke({
 *        color: white,
 *        width: width + 2
 *      })
 *    }),
 *    new Style({
 *      stroke: new Stroke({
 *        color: blue,
 *        width: width
 *      })
 *    })
 *  ];
 *  styles[GeometryType.MULTI_LINE_STRING] =
 *      styles[GeometryType.LINE_STRING];
 *  styles[GeometryType.POINT] = [
 *    new Style({
 *      image: new Circle({
 *        radius: width * 2,
 *        fill: new Fill({
 *          color: blue
 *        }),
 *        stroke: new Stroke({
 *          color: white,
 *          width: width / 2
 *        })
 *      }),
 *      zIndex: Infinity
 *    })
 *  ];
 *  styles[GeometryType.MULTI_POINT] =
 *      styles[GeometryType.POINT];
 *  styles[GeometryType.GEOMETRY_COLLECTION] =
 *      styles[GeometryType.POLYGON].concat(
 *          styles[GeometryType.LINE_STRING],
 *          styles[GeometryType.POINT]
 *      );
 * ```
 *
 * @api
 */
var Style = /** @class */ (function () {
    /**
     * @param {Options=} opt_options Style options.
     */
    function Style(opt_options) {
        var options = opt_options || {};
        /**
         * @private
         * @type {string|import("../geom/Geometry.js").default|GeometryFunction}
         */
        this.geometry_ = null;
        /**
         * @private
         * @type {!GeometryFunction}
         */
        this.geometryFunction_ = defaultGeometryFunction;
        if (options.geometry !== undefined) {
            this.setGeometry(options.geometry);
        }
        /**
         * @private
         * @type {import("./Fill.js").default}
         */
        this.fill_ = options.fill !== undefined ? options.fill : null;
        /**
         * @private
         * @type {import("./Image.js").default}
         */
        this.image_ = options.image !== undefined ? options.image : null;
        /**
         * @private
         * @type {RenderFunction|null}
         */
        this.renderer_ = options.renderer !== undefined ? options.renderer : null;
        /**
         * @private
         * @type {import("./Stroke.js").default}
         */
        this.stroke_ = options.stroke !== undefined ? options.stroke : null;
        /**
         * @private
         * @type {import("./Text.js").default}
         */
        this.text_ = options.text !== undefined ? options.text : null;
        /**
         * @private
         * @type {number|undefined}
         */
        this.zIndex_ = options.zIndex;
    }
    /**
     * Clones the style.
     * @return {Style} The cloned style.
     * @api
     */
    Style.prototype.clone = function () {
        var geometry = this.getGeometry();
        if (geometry && typeof geometry === 'object') {
            geometry = /** @type {import("../geom/Geometry.js").default} */ (geometry).clone();
        }
        return new Style({
            geometry: geometry,
            fill: this.getFill() ? this.getFill().clone() : undefined,
            image: this.getImage() ? this.getImage().clone() : undefined,
            stroke: this.getStroke() ? this.getStroke().clone() : undefined,
            text: this.getText() ? this.getText().clone() : undefined,
            zIndex: this.getZIndex(),
        });
    };
    /**
     * Get the custom renderer function that was configured with
     * {@link #setRenderer} or the `renderer` constructor option.
     * @return {RenderFunction|null} Custom renderer function.
     * @api
     */
    Style.prototype.getRenderer = function () {
        return this.renderer_;
    };
    /**
     * Sets a custom renderer function for this style. When set, `fill`, `stroke`
     * and `image` options of the style will be ignored.
     * @param {RenderFunction|null} renderer Custom renderer function.
     * @api
     */
    Style.prototype.setRenderer = function (renderer) {
        this.renderer_ = renderer;
    };
    /**
     * Get the geometry to be rendered.
     * @return {string|import("../geom/Geometry.js").default|GeometryFunction}
     * Feature property or geometry or function that returns the geometry that will
     * be rendered with this style.
     * @api
     */
    Style.prototype.getGeometry = function () {
        return this.geometry_;
    };
    /**
     * Get the function used to generate a geometry for rendering.
     * @return {!GeometryFunction} Function that is called with a feature
     * and returns the geometry to render instead of the feature's geometry.
     * @api
     */
    Style.prototype.getGeometryFunction = function () {
        return this.geometryFunction_;
    };
    /**
     * Get the fill style.
     * @return {import("./Fill.js").default} Fill style.
     * @api
     */
    Style.prototype.getFill = function () {
        return this.fill_;
    };
    /**
     * Set the fill style.
     * @param {import("./Fill.js").default} fill Fill style.
     * @api
     */
    Style.prototype.setFill = function (fill) {
        this.fill_ = fill;
    };
    /**
     * Get the image style.
     * @return {import("./Image.js").default} Image style.
     * @api
     */
    Style.prototype.getImage = function () {
        return this.image_;
    };
    /**
     * Set the image style.
     * @param {import("./Image.js").default} image Image style.
     * @api
     */
    Style.prototype.setImage = function (image) {
        this.image_ = image;
    };
    /**
     * Get the stroke style.
     * @return {import("./Stroke.js").default} Stroke style.
     * @api
     */
    Style.prototype.getStroke = function () {
        return this.stroke_;
    };
    /**
     * Set the stroke style.
     * @param {import("./Stroke.js").default} stroke Stroke style.
     * @api
     */
    Style.prototype.setStroke = function (stroke) {
        this.stroke_ = stroke;
    };
    /**
     * Get the text style.
     * @return {import("./Text.js").default} Text style.
     * @api
     */
    Style.prototype.getText = function () {
        return this.text_;
    };
    /**
     * Set the text style.
     * @param {import("./Text.js").default} text Text style.
     * @api
     */
    Style.prototype.setText = function (text) {
        this.text_ = text;
    };
    /**
     * Get the z-index for the style.
     * @return {number|undefined} ZIndex.
     * @api
     */
    Style.prototype.getZIndex = function () {
        return this.zIndex_;
    };
    /**
     * Set a geometry that is rendered instead of the feature's geometry.
     *
     * @param {string|import("../geom/Geometry.js").default|GeometryFunction} geometry
     *     Feature property or geometry or function returning a geometry to render
     *     for this style.
     * @api
     */
    Style.prototype.setGeometry = function (geometry) {
        if (typeof geometry === 'function') {
            this.geometryFunction_ = geometry;
        }
        else if (typeof geometry === 'string') {
            this.geometryFunction_ = function (feature) {
                return /** @type {import("../geom/Geometry.js").default} */ (feature.get(geometry));
            };
        }
        else if (!geometry) {
            this.geometryFunction_ = defaultGeometryFunction;
        }
        else if (geometry !== undefined) {
            this.geometryFunction_ = function () {
                return /** @type {import("../geom/Geometry.js").default} */ (geometry);
            };
        }
        this.geometry_ = geometry;
    };
    /**
     * Set the z-index.
     *
     * @param {number|undefined} zIndex ZIndex.
     * @api
     */
    Style.prototype.setZIndex = function (zIndex) {
        this.zIndex_ = zIndex;
    };
    return Style;
}());
/**
 * Convert the provided object into a style function.  Functions passed through
 * unchanged.  Arrays of Style or single style objects wrapped in a
 * new style function.
 * @param {StyleFunction|Array<Style>|Style} obj
 *     A style function, a single style, or an array of styles.
 * @return {StyleFunction} A style function.
 */
function toFunction(obj) {
    var styleFunction;
    if (typeof obj === 'function') {
        styleFunction = obj;
    }
    else {
        /**
         * @type {Array<Style>}
         */
        var styles_1;
        if (Array.isArray(obj)) {
            styles_1 = obj;
        }
        else {
            (0,_asserts_js__WEBPACK_IMPORTED_MODULE_0__.assert)(typeof ( /** @type {?} */(obj).getZIndex) === 'function', 41); // Expected an `Style` or an array of `Style`
            var style = /** @type {Style} */ (obj);
            styles_1 = [style];
        }
        styleFunction = function () {
            return styles_1;
        };
    }
    return styleFunction;
}
/**
 * @type {Array<Style>}
 */
var defaultStyles = null;
/**
 * @param {import("../Feature.js").FeatureLike} feature Feature.
 * @param {number} resolution Resolution.
 * @return {Array<Style>} Style.
 */
function createDefaultStyle(feature, resolution) {
    // We don't use an immediately-invoked function
    // and a closure so we don't get an error at script evaluation time in
    // browsers that do not support Canvas. (import("./Circle.js").CircleStyle does
    // canvas.getContext('2d') at construction time, which will cause an.error
    // in such browsers.)
    if (!defaultStyles) {
        var fill = new _Fill_js__WEBPACK_IMPORTED_MODULE_1__.default({
            color: 'rgba(255,255,255,0.4)',
        });
        var stroke = new _Stroke_js__WEBPACK_IMPORTED_MODULE_2__.default({
            color: '#3399CC',
            width: 1.25,
        });
        defaultStyles = [
            new Style({
                image: new _Circle_js__WEBPACK_IMPORTED_MODULE_3__.default({
                    fill: fill,
                    stroke: stroke,
                    radius: 5,
                }),
                fill: fill,
                stroke: stroke,
            }),
        ];
    }
    return defaultStyles;
}
/**
 * Default styles for editing features.
 * @return {Object<import("../geom/GeometryType.js").default, Array<Style>>} Styles
 */
function createEditingStyle() {
    /** @type {Object<import("../geom/GeometryType.js").default, Array<Style>>} */
    var styles = {};
    var white = [255, 255, 255, 1];
    var blue = [0, 153, 255, 1];
    var width = 3;
    styles[_geom_GeometryType_js__WEBPACK_IMPORTED_MODULE_4__.default.POLYGON] = [
        new Style({
            fill: new _Fill_js__WEBPACK_IMPORTED_MODULE_1__.default({
                color: [255, 255, 255, 0.5],
            }),
        }),
    ];
    styles[_geom_GeometryType_js__WEBPACK_IMPORTED_MODULE_4__.default.MULTI_POLYGON] = styles[_geom_GeometryType_js__WEBPACK_IMPORTED_MODULE_4__.default.POLYGON];
    styles[_geom_GeometryType_js__WEBPACK_IMPORTED_MODULE_4__.default.LINE_STRING] = [
        new Style({
            stroke: new _Stroke_js__WEBPACK_IMPORTED_MODULE_2__.default({
                color: white,
                width: width + 2,
            }),
        }),
        new Style({
            stroke: new _Stroke_js__WEBPACK_IMPORTED_MODULE_2__.default({
                color: blue,
                width: width,
            }),
        }),
    ];
    styles[_geom_GeometryType_js__WEBPACK_IMPORTED_MODULE_4__.default.MULTI_LINE_STRING] = styles[_geom_GeometryType_js__WEBPACK_IMPORTED_MODULE_4__.default.LINE_STRING];
    styles[_geom_GeometryType_js__WEBPACK_IMPORTED_MODULE_4__.default.CIRCLE] = styles[_geom_GeometryType_js__WEBPACK_IMPORTED_MODULE_4__.default.POLYGON].concat(styles[_geom_GeometryType_js__WEBPACK_IMPORTED_MODULE_4__.default.LINE_STRING]);
    styles[_geom_GeometryType_js__WEBPACK_IMPORTED_MODULE_4__.default.POINT] = [
        new Style({
            image: new _Circle_js__WEBPACK_IMPORTED_MODULE_3__.default({
                radius: width * 2,
                fill: new _Fill_js__WEBPACK_IMPORTED_MODULE_1__.default({
                    color: blue,
                }),
                stroke: new _Stroke_js__WEBPACK_IMPORTED_MODULE_2__.default({
                    color: white,
                    width: width / 2,
                }),
            }),
            zIndex: Infinity,
        }),
    ];
    styles[_geom_GeometryType_js__WEBPACK_IMPORTED_MODULE_4__.default.MULTI_POINT] = styles[_geom_GeometryType_js__WEBPACK_IMPORTED_MODULE_4__.default.POINT];
    styles[_geom_GeometryType_js__WEBPACK_IMPORTED_MODULE_4__.default.GEOMETRY_COLLECTION] = styles[_geom_GeometryType_js__WEBPACK_IMPORTED_MODULE_4__.default.POLYGON].concat(styles[_geom_GeometryType_js__WEBPACK_IMPORTED_MODULE_4__.default.LINE_STRING], styles[_geom_GeometryType_js__WEBPACK_IMPORTED_MODULE_4__.default.POINT]);
    return styles;
}
/**
 * Function that is called with a feature and returns its default geometry.
 * @param {import("../Feature.js").FeatureLike} feature Feature to get the geometry for.
 * @return {import("../geom/Geometry.js").default|import("../render/Feature.js").default|undefined} Geometry to render.
 */
function defaultGeometryFunction(feature) {
    return feature.getGeometry();
}
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Style);
//# sourceMappingURL=Style.js.map

/***/ }),

/***/ "./node_modules/ol/style/TextPlacement.js":
/*!************************************************!*\
  !*** ./node_modules/ol/style/TextPlacement.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/**
 * @module ol/style/TextPlacement
 */
/**
 * Text placement. One of `'point'`, `'line'`. Default is `'point'`. Note that
 * `'line'` requires the underlying geometry to be a {@link module:ol/geom/LineString~LineString},
 * {@link module:ol/geom/Polygon~Polygon}, {@link module:ol/geom/MultiLineString~MultiLineString} or
 * {@link module:ol/geom/MultiPolygon~MultiPolygon}.
 * @enum {string}
 */
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
    POINT: 'point',
    LINE: 'line',
});
//# sourceMappingURL=TextPlacement.js.map

/***/ }),

/***/ "./node_modules/ol/tilecoord.js":
/*!**************************************!*\
  !*** ./node_modules/ol/tilecoord.js ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createOrUpdate": () => (/* binding */ createOrUpdate),
/* harmony export */   "getKeyZXY": () => (/* binding */ getKeyZXY),
/* harmony export */   "getKey": () => (/* binding */ getKey),
/* harmony export */   "fromKey": () => (/* binding */ fromKey),
/* harmony export */   "hash": () => (/* binding */ hash),
/* harmony export */   "withinExtentAndZ": () => (/* binding */ withinExtentAndZ)
/* harmony export */ });
/**
 * @module ol/tilecoord
 */
/**
 * An array of three numbers representing the location of a tile in a tile
 * grid. The order is `z` (zoom level), `x` (column), and `y` (row).
 * @typedef {Array<number>} TileCoord
 * @api
 */
/**
 * @param {number} z Z.
 * @param {number} x X.
 * @param {number} y Y.
 * @param {TileCoord=} opt_tileCoord Tile coordinate.
 * @return {TileCoord} Tile coordinate.
 */
function createOrUpdate(z, x, y, opt_tileCoord) {
    if (opt_tileCoord !== undefined) {
        opt_tileCoord[0] = z;
        opt_tileCoord[1] = x;
        opt_tileCoord[2] = y;
        return opt_tileCoord;
    }
    else {
        return [z, x, y];
    }
}
/**
 * @param {number} z Z.
 * @param {number} x X.
 * @param {number} y Y.
 * @return {string} Key.
 */
function getKeyZXY(z, x, y) {
    return z + '/' + x + '/' + y;
}
/**
 * Get the key for a tile coord.
 * @param {TileCoord} tileCoord The tile coord.
 * @return {string} Key.
 */
function getKey(tileCoord) {
    return getKeyZXY(tileCoord[0], tileCoord[1], tileCoord[2]);
}
/**
 * Get a tile coord given a key.
 * @param {string} key The tile coord key.
 * @return {TileCoord} The tile coord.
 */
function fromKey(key) {
    return key.split('/').map(Number);
}
/**
 * @param {TileCoord} tileCoord Tile coord.
 * @return {number} Hash.
 */
function hash(tileCoord) {
    return (tileCoord[1] << tileCoord[0]) + tileCoord[2];
}
/**
 * @param {TileCoord} tileCoord Tile coordinate.
 * @param {!import("./tilegrid/TileGrid.js").default} tileGrid Tile grid.
 * @return {boolean} Tile coordinate is within extent and zoom level range.
 */
function withinExtentAndZ(tileCoord, tileGrid) {
    var z = tileCoord[0];
    var x = tileCoord[1];
    var y = tileCoord[2];
    if (tileGrid.getMinZoom() > z || z > tileGrid.getMaxZoom()) {
        return false;
    }
    var tileRange = tileGrid.getFullTileRange(z);
    if (!tileRange) {
        return true;
    }
    else {
        return tileRange.containsXY(x, y);
    }
}
//# sourceMappingURL=tilecoord.js.map

/***/ }),

/***/ "./node_modules/ol/tilegrid.js":
/*!*************************************!*\
  !*** ./node_modules/ol/tilegrid.js ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "getForProjection": () => (/* binding */ getForProjection),
/* harmony export */   "wrapX": () => (/* binding */ wrapX),
/* harmony export */   "createForExtent": () => (/* binding */ createForExtent),
/* harmony export */   "createXYZ": () => (/* binding */ createXYZ),
/* harmony export */   "createForProjection": () => (/* binding */ createForProjection),
/* harmony export */   "extentFromProjection": () => (/* binding */ extentFromProjection)
/* harmony export */ });
/* harmony import */ var _extent_Corner_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./extent/Corner.js */ "./node_modules/ol/extent/Corner.js");
/* harmony import */ var _tilegrid_TileGrid_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./tilegrid/TileGrid.js */ "./node_modules/ol/tilegrid/TileGrid.js");
/* harmony import */ var _proj_Units_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./proj/Units.js */ "./node_modules/ol/proj/Units.js");
/* harmony import */ var _tilegrid_common_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./tilegrid/common.js */ "./node_modules/ol/tilegrid/common.js");
/* harmony import */ var _proj_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./proj.js */ "./node_modules/ol/proj.js");
/* harmony import */ var _extent_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./extent.js */ "./node_modules/ol/extent.js");
/* harmony import */ var _size_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./size.js */ "./node_modules/ol/size.js");
/**
 * @module ol/tilegrid
 */







/**
 * @param {import("./proj/Projection.js").default} projection Projection.
 * @return {!TileGrid} Default tile grid for the
 * passed projection.
 */
function getForProjection(projection) {
    var tileGrid = projection.getDefaultTileGrid();
    if (!tileGrid) {
        tileGrid = createForProjection(projection);
        projection.setDefaultTileGrid(tileGrid);
    }
    return tileGrid;
}
/**
 * @param {TileGrid} tileGrid Tile grid.
 * @param {import("./tilecoord.js").TileCoord} tileCoord Tile coordinate.
 * @param {import("./proj/Projection.js").default} projection Projection.
 * @return {import("./tilecoord.js").TileCoord} Tile coordinate.
 */
function wrapX(tileGrid, tileCoord, projection) {
    var z = tileCoord[0];
    var center = tileGrid.getTileCoordCenter(tileCoord);
    var projectionExtent = extentFromProjection(projection);
    if (!(0,_extent_js__WEBPACK_IMPORTED_MODULE_1__.containsCoordinate)(projectionExtent, center)) {
        var worldWidth = (0,_extent_js__WEBPACK_IMPORTED_MODULE_1__.getWidth)(projectionExtent);
        var worldsAway = Math.ceil((projectionExtent[0] - center[0]) / worldWidth);
        center[0] += worldWidth * worldsAway;
        return tileGrid.getTileCoordForCoordAndZ(center, z);
    }
    else {
        return tileCoord;
    }
}
/**
 * @param {import("./extent.js").Extent} extent Extent.
 * @param {number=} opt_maxZoom Maximum zoom level (default is
 *     DEFAULT_MAX_ZOOM).
 * @param {number|import("./size.js").Size=} opt_tileSize Tile size (default uses
 *     DEFAULT_TILE_SIZE).
 * @param {import("./extent/Corner.js").default=} opt_corner Extent corner (default is `'top-left'`).
 * @return {!TileGrid} TileGrid instance.
 */
function createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner) {
    var corner = opt_corner !== undefined ? opt_corner : _extent_Corner_js__WEBPACK_IMPORTED_MODULE_2__.default.TOP_LEFT;
    var resolutions = resolutionsFromExtent(extent, opt_maxZoom, opt_tileSize);
    return new _tilegrid_TileGrid_js__WEBPACK_IMPORTED_MODULE_3__.default({
        extent: extent,
        origin: (0,_extent_js__WEBPACK_IMPORTED_MODULE_1__.getCorner)(extent, corner),
        resolutions: resolutions,
        tileSize: opt_tileSize,
    });
}
/**
 * @typedef {Object} XYZOptions
 * @property {import("./extent.js").Extent} [extent] Extent for the tile grid. The origin for an XYZ tile grid is the
 * top-left corner of the extent. If `maxResolution` is not provided the zero level of the grid is defined by the resolution
 * at which one tile fits in the provided extent. If not provided, the extent of the EPSG:3857 projection is used.
 * @property {number} [maxResolution] Resolution at level zero.
 * @property {number} [maxZoom] Maximum zoom. The default is `42`. This determines the number of levels
 * in the grid set. For example, a `maxZoom` of 21 means there are 22 levels in the grid set.
 * @property {number} [minZoom=0] Minimum zoom.
 * @property {number|import("./size.js").Size} [tileSize=[256, 256]] Tile size in pixels.
 */
/**
 * Creates a tile grid with a standard XYZ tiling scheme.
 * @param {XYZOptions=} opt_options Tile grid options.
 * @return {!TileGrid} Tile grid instance.
 * @api
 */
function createXYZ(opt_options) {
    var xyzOptions = opt_options || {};
    var extent = xyzOptions.extent || (0,_proj_js__WEBPACK_IMPORTED_MODULE_0__.get)('EPSG:3857').getExtent();
    var gridOptions = {
        extent: extent,
        minZoom: xyzOptions.minZoom,
        tileSize: xyzOptions.tileSize,
        resolutions: resolutionsFromExtent(extent, xyzOptions.maxZoom, xyzOptions.tileSize, xyzOptions.maxResolution),
    };
    return new _tilegrid_TileGrid_js__WEBPACK_IMPORTED_MODULE_3__.default(gridOptions);
}
/**
 * Create a resolutions array from an extent.  A zoom factor of 2 is assumed.
 * @param {import("./extent.js").Extent} extent Extent.
 * @param {number=} opt_maxZoom Maximum zoom level (default is
 *     DEFAULT_MAX_ZOOM).
 * @param {number|import("./size.js").Size=} opt_tileSize Tile size (default uses
 *     DEFAULT_TILE_SIZE).
 * @param {number=} opt_maxResolution Resolution at level zero.
 * @return {!Array<number>} Resolutions array.
 */
function resolutionsFromExtent(extent, opt_maxZoom, opt_tileSize, opt_maxResolution) {
    var maxZoom = opt_maxZoom !== undefined ? opt_maxZoom : _tilegrid_common_js__WEBPACK_IMPORTED_MODULE_4__.DEFAULT_MAX_ZOOM;
    var height = (0,_extent_js__WEBPACK_IMPORTED_MODULE_1__.getHeight)(extent);
    var width = (0,_extent_js__WEBPACK_IMPORTED_MODULE_1__.getWidth)(extent);
    var tileSize = (0,_size_js__WEBPACK_IMPORTED_MODULE_5__.toSize)(opt_tileSize !== undefined ? opt_tileSize : _tilegrid_common_js__WEBPACK_IMPORTED_MODULE_4__.DEFAULT_TILE_SIZE);
    var maxResolution = opt_maxResolution > 0
        ? opt_maxResolution
        : Math.max(width / tileSize[0], height / tileSize[1]);
    var length = maxZoom + 1;
    var resolutions = new Array(length);
    for (var z = 0; z < length; ++z) {
        resolutions[z] = maxResolution / Math.pow(2, z);
    }
    return resolutions;
}
/**
 * @param {import("./proj.js").ProjectionLike} projection Projection.
 * @param {number=} opt_maxZoom Maximum zoom level (default is
 *     DEFAULT_MAX_ZOOM).
 * @param {number|import("./size.js").Size=} opt_tileSize Tile size (default uses
 *     DEFAULT_TILE_SIZE).
 * @param {import("./extent/Corner.js").default=} opt_corner Extent corner (default is `'top-left'`).
 * @return {!TileGrid} TileGrid instance.
 */
function createForProjection(projection, opt_maxZoom, opt_tileSize, opt_corner) {
    var extent = extentFromProjection(projection);
    return createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner);
}
/**
 * Generate a tile grid extent from a projection.  If the projection has an
 * extent, it is used.  If not, a global extent is assumed.
 * @param {import("./proj.js").ProjectionLike} projection Projection.
 * @return {import("./extent.js").Extent} Extent.
 */
function extentFromProjection(projection) {
    projection = (0,_proj_js__WEBPACK_IMPORTED_MODULE_0__.get)(projection);
    var extent = projection.getExtent();
    if (!extent) {
        var half = (180 * _proj_js__WEBPACK_IMPORTED_MODULE_0__.METERS_PER_UNIT[_proj_Units_js__WEBPACK_IMPORTED_MODULE_6__.default.DEGREES]) / projection.getMetersPerUnit();
        extent = (0,_extent_js__WEBPACK_IMPORTED_MODULE_1__.createOrUpdate)(-half, -half, half, half);
    }
    return extent;
}
//# sourceMappingURL=tilegrid.js.map

/***/ }),

/***/ "./node_modules/ol/tilegrid/TileGrid.js":
/*!**********************************************!*\
  !*** ./node_modules/ol/tilegrid/TileGrid.js ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _TileRange_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../TileRange.js */ "./node_modules/ol/TileRange.js");
/* harmony import */ var _common_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./common.js */ "./node_modules/ol/tilegrid/common.js");
/* harmony import */ var _asserts_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../asserts.js */ "./node_modules/ol/asserts.js");
/* harmony import */ var _math_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../math.js */ "./node_modules/ol/math.js");
/* harmony import */ var _extent_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../extent.js */ "./node_modules/ol/extent.js");
/* harmony import */ var _tilecoord_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../tilecoord.js */ "./node_modules/ol/tilecoord.js");
/* harmony import */ var _array_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../array.js */ "./node_modules/ol/array.js");
/* harmony import */ var _size_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../size.js */ "./node_modules/ol/size.js");
/**
 * @module ol/tilegrid/TileGrid
 */








/**
 * @private
 * @type {import("../tilecoord.js").TileCoord}
 */
var tmpTileCoord = [0, 0, 0];
/**
 * @typedef {Object} Options
 * @property {import("../extent.js").Extent} [extent] Extent for the tile grid. No tiles outside this
 * extent will be requested by {@link module:ol/source/Tile} sources. When no `origin` or
 * `origins` are configured, the `origin` will be set to the top-left corner of the extent.
 * @property {number} [minZoom=0] Minimum zoom.
 * @property {import("../coordinate.js").Coordinate} [origin] The tile grid origin, i.e. where the `x`
 * and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left to right and downwards. If not
 * specified, `extent` or `origins` must be provided.
 * @property {Array<import("../coordinate.js").Coordinate>} [origins] Tile grid origins, i.e. where
 * the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If given, the array length
 * should match the length of the `resolutions` array, i.e. each resolution can have a different
 * origin. Tile coordinates increase left to right and downwards. If not specified, `extent` or
 * `origin` must be provided.
 * @property {!Array<number>} resolutions Resolutions. The array index of each resolution needs
 * to match the zoom level. This means that even if a `minZoom` is configured, the resolutions
 * array will have a length of `maxZoom + 1`.
 * @property {Array<import("../size.js").Size>} [sizes] Number of tile rows and columns
 * of the grid for each zoom level. If specified the values
 * define each zoom level's extent together with the `origin` or `origins`.
 * A grid `extent` can be configured in addition, and will further limit the extent
 * for which tile requests are made by sources. If the bottom-left corner of
 * an extent is used as `origin` or `origins`, then the `y` value must be
 * negative because OpenLayers tile coordinates use the top left as the origin.
 * @property {number|import("../size.js").Size} [tileSize] Tile size.
 * Default is `[256, 256]`.
 * @property {Array<import("../size.js").Size>} [tileSizes] Tile sizes. If given, the array length
 * should match the length of the `resolutions` array, i.e. each resolution can have a different
 * tile size.
 */
/**
 * @classdesc
 * Base class for setting the grid pattern for sources accessing tiled-image
 * servers.
 * @api
 */
var TileGrid = /** @class */ (function () {
    /**
     * @param {Options} options Tile grid options.
     */
    function TileGrid(options) {
        /**
         * @protected
         * @type {number}
         */
        this.minZoom = options.minZoom !== undefined ? options.minZoom : 0;
        /**
         * @private
         * @type {!Array<number>}
         */
        this.resolutions_ = options.resolutions;
        (0,_asserts_js__WEBPACK_IMPORTED_MODULE_0__.assert)((0,_array_js__WEBPACK_IMPORTED_MODULE_1__.isSorted)(this.resolutions_, function (a, b) {
            return b - a;
        }, true), 17); // `resolutions` must be sorted in descending order
        // check if we've got a consistent zoom factor and origin
        var zoomFactor;
        if (!options.origins) {
            for (var i = 0, ii = this.resolutions_.length - 1; i < ii; ++i) {
                if (!zoomFactor) {
                    zoomFactor = this.resolutions_[i] / this.resolutions_[i + 1];
                }
                else {
                    if (this.resolutions_[i] / this.resolutions_[i + 1] !== zoomFactor) {
                        zoomFactor = undefined;
                        break;
                    }
                }
            }
        }
        /**
         * @private
         * @type {number|undefined}
         */
        this.zoomFactor_ = zoomFactor;
        /**
         * @protected
         * @type {number}
         */
        this.maxZoom = this.resolutions_.length - 1;
        /**
         * @private
         * @type {import("../coordinate.js").Coordinate}
         */
        this.origin_ = options.origin !== undefined ? options.origin : null;
        /**
         * @private
         * @type {Array<import("../coordinate.js").Coordinate>}
         */
        this.origins_ = null;
        if (options.origins !== undefined) {
            this.origins_ = options.origins;
            (0,_asserts_js__WEBPACK_IMPORTED_MODULE_0__.assert)(this.origins_.length == this.resolutions_.length, 20); // Number of `origins` and `resolutions` must be equal
        }
        var extent = options.extent;
        if (extent !== undefined && !this.origin_ && !this.origins_) {
            this.origin_ = (0,_extent_js__WEBPACK_IMPORTED_MODULE_2__.getTopLeft)(extent);
        }
        (0,_asserts_js__WEBPACK_IMPORTED_MODULE_0__.assert)((!this.origin_ && this.origins_) || (this.origin_ && !this.origins_), 18); // Either `origin` or `origins` must be configured, never both
        /**
         * @private
         * @type {Array<number|import("../size.js").Size>}
         */
        this.tileSizes_ = null;
        if (options.tileSizes !== undefined) {
            this.tileSizes_ = options.tileSizes;
            (0,_asserts_js__WEBPACK_IMPORTED_MODULE_0__.assert)(this.tileSizes_.length == this.resolutions_.length, 19); // Number of `tileSizes` and `resolutions` must be equal
        }
        /**
         * @private
         * @type {number|import("../size.js").Size}
         */
        this.tileSize_ =
            options.tileSize !== undefined
                ? options.tileSize
                : !this.tileSizes_
                    ? _common_js__WEBPACK_IMPORTED_MODULE_3__.DEFAULT_TILE_SIZE
                    : null;
        (0,_asserts_js__WEBPACK_IMPORTED_MODULE_0__.assert)((!this.tileSize_ && this.tileSizes_) ||
            (this.tileSize_ && !this.tileSizes_), 22); // Either `tileSize` or `tileSizes` must be configured, never both
        /**
         * @private
         * @type {import("../extent.js").Extent}
         */
        this.extent_ = extent !== undefined ? extent : null;
        /**
         * @private
         * @type {Array<import("../TileRange.js").default>}
         */
        this.fullTileRanges_ = null;
        /**
         * @private
         * @type {import("../size.js").Size}
         */
        this.tmpSize_ = [0, 0];
        if (options.sizes !== undefined) {
            this.fullTileRanges_ = options.sizes.map(function (size, z) {
                var tileRange = new _TileRange_js__WEBPACK_IMPORTED_MODULE_4__.default(Math.min(0, size[0]), Math.max(size[0] - 1, -1), Math.min(0, size[1]), Math.max(size[1] - 1, -1));
                if (extent) {
                    var restrictedTileRange = this.getTileRangeForExtentAndZ(extent, z);
                    tileRange.minX = Math.max(restrictedTileRange.minX, tileRange.minX);
                    tileRange.maxX = Math.min(restrictedTileRange.maxX, tileRange.maxX);
                    tileRange.minY = Math.max(restrictedTileRange.minY, tileRange.minY);
                    tileRange.maxY = Math.min(restrictedTileRange.maxY, tileRange.maxY);
                }
                return tileRange;
            }, this);
        }
        else if (extent) {
            this.calculateTileRanges_(extent);
        }
    }
    /**
     * Call a function with each tile coordinate for a given extent and zoom level.
     *
     * @param {import("../extent.js").Extent} extent Extent.
     * @param {number} zoom Integer zoom level.
     * @param {function(import("../tilecoord.js").TileCoord): void} callback Function called with each tile coordinate.
     * @api
     */
    TileGrid.prototype.forEachTileCoord = function (extent, zoom, callback) {
        var tileRange = this.getTileRangeForExtentAndZ(extent, zoom);
        for (var i = tileRange.minX, ii = tileRange.maxX; i <= ii; ++i) {
            for (var j = tileRange.minY, jj = tileRange.maxY; j <= jj; ++j) {
                callback([zoom, i, j]);
            }
        }
    };
    /**
     * @param {import("../tilecoord.js").TileCoord} tileCoord Tile coordinate.
     * @param {function(number, import("../TileRange.js").default): boolean} callback Callback.
     * @param {import("../TileRange.js").default=} opt_tileRange Temporary import("../TileRange.js").default object.
     * @param {import("../extent.js").Extent=} opt_extent Temporary import("../extent.js").Extent object.
     * @return {boolean} Callback succeeded.
     */
    TileGrid.prototype.forEachTileCoordParentTileRange = function (tileCoord, callback, opt_tileRange, opt_extent) {
        var tileRange, x, y;
        var tileCoordExtent = null;
        var z = tileCoord[0] - 1;
        if (this.zoomFactor_ === 2) {
            x = tileCoord[1];
            y = tileCoord[2];
        }
        else {
            tileCoordExtent = this.getTileCoordExtent(tileCoord, opt_extent);
        }
        while (z >= this.minZoom) {
            if (this.zoomFactor_ === 2) {
                x = Math.floor(x / 2);
                y = Math.floor(y / 2);
                tileRange = (0,_TileRange_js__WEBPACK_IMPORTED_MODULE_4__.createOrUpdate)(x, x, y, y, opt_tileRange);
            }
            else {
                tileRange = this.getTileRangeForExtentAndZ(tileCoordExtent, z, opt_tileRange);
            }
            if (callback(z, tileRange)) {
                return true;
            }
            --z;
        }
        return false;
    };
    /**
     * Get the extent for this tile grid, if it was configured.
     * @return {import("../extent.js").Extent} Extent.
     * @api
     */
    TileGrid.prototype.getExtent = function () {
        return this.extent_;
    };
    /**
     * Get the maximum zoom level for the grid.
     * @return {number} Max zoom.
     * @api
     */
    TileGrid.prototype.getMaxZoom = function () {
        return this.maxZoom;
    };
    /**
     * Get the minimum zoom level for the grid.
     * @return {number} Min zoom.
     * @api
     */
    TileGrid.prototype.getMinZoom = function () {
        return this.minZoom;
    };
    /**
     * Get the origin for the grid at the given zoom level.
     * @param {number} z Integer zoom level.
     * @return {import("../coordinate.js").Coordinate} Origin.
     * @api
     */
    TileGrid.prototype.getOrigin = function (z) {
        if (this.origin_) {
            return this.origin_;
        }
        else {
            return this.origins_[z];
        }
    };
    /**
     * Get the resolution for the given zoom level.
     * @param {number} z Integer zoom level.
     * @return {number} Resolution.
     * @api
     */
    TileGrid.prototype.getResolution = function (z) {
        return this.resolutions_[z];
    };
    /**
     * Get the list of resolutions for the tile grid.
     * @return {Array<number>} Resolutions.
     * @api
     */
    TileGrid.prototype.getResolutions = function () {
        return this.resolutions_;
    };
    /**
     * @param {import("../tilecoord.js").TileCoord} tileCoord Tile coordinate.
     * @param {import("../TileRange.js").default=} opt_tileRange Temporary import("../TileRange.js").default object.
     * @param {import("../extent.js").Extent=} opt_extent Temporary import("../extent.js").Extent object.
     * @return {import("../TileRange.js").default} Tile range.
     */
    TileGrid.prototype.getTileCoordChildTileRange = function (tileCoord, opt_tileRange, opt_extent) {
        if (tileCoord[0] < this.maxZoom) {
            if (this.zoomFactor_ === 2) {
                var minX = tileCoord[1] * 2;
                var minY = tileCoord[2] * 2;
                return (0,_TileRange_js__WEBPACK_IMPORTED_MODULE_4__.createOrUpdate)(minX, minX + 1, minY, minY + 1, opt_tileRange);
            }
            var tileCoordExtent = this.getTileCoordExtent(tileCoord, opt_extent);
            return this.getTileRangeForExtentAndZ(tileCoordExtent, tileCoord[0] + 1, opt_tileRange);
        }
        return null;
    };
    /**
     * Get the extent for a tile range.
     * @param {number} z Integer zoom level.
     * @param {import("../TileRange.js").default} tileRange Tile range.
     * @param {import("../extent.js").Extent=} opt_extent Temporary import("../extent.js").Extent object.
     * @return {import("../extent.js").Extent} Extent.
     */
    TileGrid.prototype.getTileRangeExtent = function (z, tileRange, opt_extent) {
        var origin = this.getOrigin(z);
        var resolution = this.getResolution(z);
        var tileSize = (0,_size_js__WEBPACK_IMPORTED_MODULE_5__.toSize)(this.getTileSize(z), this.tmpSize_);
        var minX = origin[0] + tileRange.minX * tileSize[0] * resolution;
        var maxX = origin[0] + (tileRange.maxX + 1) * tileSize[0] * resolution;
        var minY = origin[1] + tileRange.minY * tileSize[1] * resolution;
        var maxY = origin[1] + (tileRange.maxY + 1) * tileSize[1] * resolution;
        return (0,_extent_js__WEBPACK_IMPORTED_MODULE_2__.createOrUpdate)(minX, minY, maxX, maxY, opt_extent);
    };
    /**
     * Get a tile range for the given extent and integer zoom level.
     * @param {import("../extent.js").Extent} extent Extent.
     * @param {number} z Integer zoom level.
     * @param {import("../TileRange.js").default=} opt_tileRange Temporary tile range object.
     * @return {import("../TileRange.js").default} Tile range.
     */
    TileGrid.prototype.getTileRangeForExtentAndZ = function (extent, z, opt_tileRange) {
        var tileCoord = tmpTileCoord;
        this.getTileCoordForXYAndZ_(extent[0], extent[3], z, false, tileCoord);
        var minX = tileCoord[1];
        var minY = tileCoord[2];
        this.getTileCoordForXYAndZ_(extent[2], extent[1], z, true, tileCoord);
        return (0,_TileRange_js__WEBPACK_IMPORTED_MODULE_4__.createOrUpdate)(minX, tileCoord[1], minY, tileCoord[2], opt_tileRange);
    };
    /**
     * @param {import("../tilecoord.js").TileCoord} tileCoord Tile coordinate.
     * @return {import("../coordinate.js").Coordinate} Tile center.
     */
    TileGrid.prototype.getTileCoordCenter = function (tileCoord) {
        var origin = this.getOrigin(tileCoord[0]);
        var resolution = this.getResolution(tileCoord[0]);
        var tileSize = (0,_size_js__WEBPACK_IMPORTED_MODULE_5__.toSize)(this.getTileSize(tileCoord[0]), this.tmpSize_);
        return [
            origin[0] + (tileCoord[1] + 0.5) * tileSize[0] * resolution,
            origin[1] - (tileCoord[2] + 0.5) * tileSize[1] * resolution,
        ];
    };
    /**
     * Get the extent of a tile coordinate.
     *
     * @param {import("../tilecoord.js").TileCoord} tileCoord Tile coordinate.
     * @param {import("../extent.js").Extent=} opt_extent Temporary extent object.
     * @return {import("../extent.js").Extent} Extent.
     * @api
     */
    TileGrid.prototype.getTileCoordExtent = function (tileCoord, opt_extent) {
        var origin = this.getOrigin(tileCoord[0]);
        var resolution = this.getResolution(tileCoord[0]);
        var tileSize = (0,_size_js__WEBPACK_IMPORTED_MODULE_5__.toSize)(this.getTileSize(tileCoord[0]), this.tmpSize_);
        var minX = origin[0] + tileCoord[1] * tileSize[0] * resolution;
        var minY = origin[1] - (tileCoord[2] + 1) * tileSize[1] * resolution;
        var maxX = minX + tileSize[0] * resolution;
        var maxY = minY + tileSize[1] * resolution;
        return (0,_extent_js__WEBPACK_IMPORTED_MODULE_2__.createOrUpdate)(minX, minY, maxX, maxY, opt_extent);
    };
    /**
     * Get the tile coordinate for the given map coordinate and resolution.  This
     * method considers that coordinates that intersect tile boundaries should be
     * assigned the higher tile coordinate.
     *
     * @param {import("../coordinate.js").Coordinate} coordinate Coordinate.
     * @param {number} resolution Resolution.
     * @param {import("../tilecoord.js").TileCoord=} opt_tileCoord Destination import("../tilecoord.js").TileCoord object.
     * @return {import("../tilecoord.js").TileCoord} Tile coordinate.
     * @api
     */
    TileGrid.prototype.getTileCoordForCoordAndResolution = function (coordinate, resolution, opt_tileCoord) {
        return this.getTileCoordForXYAndResolution_(coordinate[0], coordinate[1], resolution, false, opt_tileCoord);
    };
    /**
     * Note that this method should not be called for resolutions that correspond
     * to an integer zoom level.  Instead call the `getTileCoordForXYAndZ_` method.
     * @param {number} x X.
     * @param {number} y Y.
     * @param {number} resolution Resolution (for a non-integer zoom level).
     * @param {boolean} reverseIntersectionPolicy Instead of letting edge
     *     intersections go to the higher tile coordinate, let edge intersections
     *     go to the lower tile coordinate.
     * @param {import("../tilecoord.js").TileCoord=} opt_tileCoord Temporary import("../tilecoord.js").TileCoord object.
     * @return {import("../tilecoord.js").TileCoord} Tile coordinate.
     * @private
     */
    TileGrid.prototype.getTileCoordForXYAndResolution_ = function (x, y, resolution, reverseIntersectionPolicy, opt_tileCoord) {
        var z = this.getZForResolution(resolution);
        var scale = resolution / this.getResolution(z);
        var origin = this.getOrigin(z);
        var tileSize = (0,_size_js__WEBPACK_IMPORTED_MODULE_5__.toSize)(this.getTileSize(z), this.tmpSize_);
        var adjustX = reverseIntersectionPolicy ? 0.5 : 0;
        var adjustY = reverseIntersectionPolicy ? 0.5 : 0;
        var xFromOrigin = Math.floor((x - origin[0]) / resolution + adjustX);
        var yFromOrigin = Math.floor((origin[1] - y) / resolution + adjustY);
        var tileCoordX = (scale * xFromOrigin) / tileSize[0];
        var tileCoordY = (scale * yFromOrigin) / tileSize[1];
        if (reverseIntersectionPolicy) {
            tileCoordX = Math.ceil(tileCoordX) - 1;
            tileCoordY = Math.ceil(tileCoordY) - 1;
        }
        else {
            tileCoordX = Math.floor(tileCoordX);
            tileCoordY = Math.floor(tileCoordY);
        }
        return (0,_tilecoord_js__WEBPACK_IMPORTED_MODULE_6__.createOrUpdate)(z, tileCoordX, tileCoordY, opt_tileCoord);
    };
    /**
     * Although there is repetition between this method and `getTileCoordForXYAndResolution_`,
     * they should have separate implementations.  This method is for integer zoom
     * levels.  The other method should only be called for resolutions corresponding
     * to non-integer zoom levels.
     * @param {number} x Map x coordinate.
     * @param {number} y Map y coordinate.
     * @param {number} z Integer zoom level.
     * @param {boolean} reverseIntersectionPolicy Instead of letting edge
     *     intersections go to the higher tile coordinate, let edge intersections
     *     go to the lower tile coordinate.
     * @param {import("../tilecoord.js").TileCoord=} opt_tileCoord Temporary import("../tilecoord.js").TileCoord object.
     * @return {import("../tilecoord.js").TileCoord} Tile coordinate.
     * @private
     */
    TileGrid.prototype.getTileCoordForXYAndZ_ = function (x, y, z, reverseIntersectionPolicy, opt_tileCoord) {
        var origin = this.getOrigin(z);
        var resolution = this.getResolution(z);
        var tileSize = (0,_size_js__WEBPACK_IMPORTED_MODULE_5__.toSize)(this.getTileSize(z), this.tmpSize_);
        var adjustX = reverseIntersectionPolicy ? 0.5 : 0;
        var adjustY = reverseIntersectionPolicy ? 0.5 : 0;
        var xFromOrigin = Math.floor((x - origin[0]) / resolution + adjustX);
        var yFromOrigin = Math.floor((origin[1] - y) / resolution + adjustY);
        var tileCoordX = xFromOrigin / tileSize[0];
        var tileCoordY = yFromOrigin / tileSize[1];
        if (reverseIntersectionPolicy) {
            tileCoordX = Math.ceil(tileCoordX) - 1;
            tileCoordY = Math.ceil(tileCoordY) - 1;
        }
        else {
            tileCoordX = Math.floor(tileCoordX);
            tileCoordY = Math.floor(tileCoordY);
        }
        return (0,_tilecoord_js__WEBPACK_IMPORTED_MODULE_6__.createOrUpdate)(z, tileCoordX, tileCoordY, opt_tileCoord);
    };
    /**
     * Get a tile coordinate given a map coordinate and zoom level.
     * @param {import("../coordinate.js").Coordinate} coordinate Coordinate.
     * @param {number} z Zoom level.
     * @param {import("../tilecoord.js").TileCoord=} opt_tileCoord Destination import("../tilecoord.js").TileCoord object.
     * @return {import("../tilecoord.js").TileCoord} Tile coordinate.
     * @api
     */
    TileGrid.prototype.getTileCoordForCoordAndZ = function (coordinate, z, opt_tileCoord) {
        return this.getTileCoordForXYAndZ_(coordinate[0], coordinate[1], z, false, opt_tileCoord);
    };
    /**
     * @param {import("../tilecoord.js").TileCoord} tileCoord Tile coordinate.
     * @return {number} Tile resolution.
     */
    TileGrid.prototype.getTileCoordResolution = function (tileCoord) {
        return this.resolutions_[tileCoord[0]];
    };
    /**
     * Get the tile size for a zoom level. The type of the return value matches the
     * `tileSize` or `tileSizes` that the tile grid was configured with. To always
     * get an `import("../size.js").Size`, run the result through `import("../size.js").Size.toSize()`.
     * @param {number} z Z.
     * @return {number|import("../size.js").Size} Tile size.
     * @api
     */
    TileGrid.prototype.getTileSize = function (z) {
        if (this.tileSize_) {
            return this.tileSize_;
        }
        else {
            return this.tileSizes_[z];
        }
    };
    /**
     * @param {number} z Zoom level.
     * @return {import("../TileRange.js").default} Extent tile range for the specified zoom level.
     */
    TileGrid.prototype.getFullTileRange = function (z) {
        if (!this.fullTileRanges_) {
            return this.extent_
                ? this.getTileRangeForExtentAndZ(this.extent_, z)
                : null;
        }
        else {
            return this.fullTileRanges_[z];
        }
    };
    /**
     * @param {number} resolution Resolution.
     * @param {number=} opt_direction If 0, the nearest resolution will be used.
     *     If 1, the nearest lower resolution will be used. If -1, the nearest
     *     higher resolution will be used. Default is 0.
     * @return {number} Z.
     * @api
     */
    TileGrid.prototype.getZForResolution = function (resolution, opt_direction) {
        var z = (0,_array_js__WEBPACK_IMPORTED_MODULE_1__.linearFindNearest)(this.resolutions_, resolution, opt_direction || 0);
        return (0,_math_js__WEBPACK_IMPORTED_MODULE_7__.clamp)(z, this.minZoom, this.maxZoom);
    };
    /**
     * @param {!import("../extent.js").Extent} extent Extent for this tile grid.
     * @private
     */
    TileGrid.prototype.calculateTileRanges_ = function (extent) {
        var length = this.resolutions_.length;
        var fullTileRanges = new Array(length);
        for (var z = this.minZoom; z < length; ++z) {
            fullTileRanges[z] = this.getTileRangeForExtentAndZ(extent, z);
        }
        this.fullTileRanges_ = fullTileRanges;
    };
    return TileGrid;
}());
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (TileGrid);
//# sourceMappingURL=TileGrid.js.map

/***/ }),

/***/ "./node_modules/ol/tilegrid/common.js":
/*!********************************************!*\
  !*** ./node_modules/ol/tilegrid/common.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "DEFAULT_MAX_ZOOM": () => (/* binding */ DEFAULT_MAX_ZOOM),
/* harmony export */   "DEFAULT_TILE_SIZE": () => (/* binding */ DEFAULT_TILE_SIZE)
/* harmony export */ });
/**
 * @module ol/tilegrid/common
 */
/**
 * Default maximum zoom for default tile grids.
 * @type {number}
 */
var DEFAULT_MAX_ZOOM = 42;
/**
 * Default tile size.
 * @type {number}
 */
var DEFAULT_TILE_SIZE = 256;
//# sourceMappingURL=common.js.map

/***/ }),

/***/ "./node_modules/ol/tileurlfunction.js":
/*!********************************************!*\
  !*** ./node_modules/ol/tileurlfunction.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createFromTemplate": () => (/* binding */ createFromTemplate),
/* harmony export */   "createFromTemplates": () => (/* binding */ createFromTemplates),
/* harmony export */   "createFromTileUrlFunctions": () => (/* binding */ createFromTileUrlFunctions),
/* harmony export */   "nullTileUrlFunction": () => (/* binding */ nullTileUrlFunction),
/* harmony export */   "expandUrl": () => (/* binding */ expandUrl)
/* harmony export */ });
/* harmony import */ var _asserts_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./asserts.js */ "./node_modules/ol/asserts.js");
/* harmony import */ var _math_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./math.js */ "./node_modules/ol/math.js");
/* harmony import */ var _tilecoord_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./tilecoord.js */ "./node_modules/ol/tilecoord.js");
/**
 * @module ol/tileurlfunction
 */



/**
 * @param {string} template Template.
 * @param {import("./tilegrid/TileGrid.js").default} tileGrid Tile grid.
 * @return {import("./Tile.js").UrlFunction} Tile URL function.
 */
function createFromTemplate(template, tileGrid) {
    var zRegEx = /\{z\}/g;
    var xRegEx = /\{x\}/g;
    var yRegEx = /\{y\}/g;
    var dashYRegEx = /\{-y\}/g;
    return (
    /**
     * @param {import("./tilecoord.js").TileCoord} tileCoord Tile Coordinate.
     * @param {number} pixelRatio Pixel ratio.
     * @param {import("./proj/Projection.js").default} projection Projection.
     * @return {string|undefined} Tile URL.
     */
    function (tileCoord, pixelRatio, projection) {
        if (!tileCoord) {
            return undefined;
        }
        else {
            return template
                .replace(zRegEx, tileCoord[0].toString())
                .replace(xRegEx, tileCoord[1].toString())
                .replace(yRegEx, tileCoord[2].toString())
                .replace(dashYRegEx, function () {
                var z = tileCoord[0];
                var range = tileGrid.getFullTileRange(z);
                (0,_asserts_js__WEBPACK_IMPORTED_MODULE_0__.assert)(range, 55); // The {-y} placeholder requires a tile grid with extent
                var y = range.getHeight() - tileCoord[2] - 1;
                return y.toString();
            });
        }
    });
}
/**
 * @param {Array<string>} templates Templates.
 * @param {import("./tilegrid/TileGrid.js").default} tileGrid Tile grid.
 * @return {import("./Tile.js").UrlFunction} Tile URL function.
 */
function createFromTemplates(templates, tileGrid) {
    var len = templates.length;
    var tileUrlFunctions = new Array(len);
    for (var i = 0; i < len; ++i) {
        tileUrlFunctions[i] = createFromTemplate(templates[i], tileGrid);
    }
    return createFromTileUrlFunctions(tileUrlFunctions);
}
/**
 * @param {Array<import("./Tile.js").UrlFunction>} tileUrlFunctions Tile URL Functions.
 * @return {import("./Tile.js").UrlFunction} Tile URL function.
 */
function createFromTileUrlFunctions(tileUrlFunctions) {
    if (tileUrlFunctions.length === 1) {
        return tileUrlFunctions[0];
    }
    return (
    /**
     * @param {import("./tilecoord.js").TileCoord} tileCoord Tile Coordinate.
     * @param {number} pixelRatio Pixel ratio.
     * @param {import("./proj/Projection.js").default} projection Projection.
     * @return {string|undefined} Tile URL.
     */
    function (tileCoord, pixelRatio, projection) {
        if (!tileCoord) {
            return undefined;
        }
        else {
            var h = (0,_tilecoord_js__WEBPACK_IMPORTED_MODULE_1__.hash)(tileCoord);
            var index = (0,_math_js__WEBPACK_IMPORTED_MODULE_2__.modulo)(h, tileUrlFunctions.length);
            return tileUrlFunctions[index](tileCoord, pixelRatio, projection);
        }
    });
}
/**
 * @param {import("./tilecoord.js").TileCoord} tileCoord Tile coordinate.
 * @param {number} pixelRatio Pixel ratio.
 * @param {import("./proj/Projection.js").default} projection Projection.
 * @return {string|undefined} Tile URL.
 */
function nullTileUrlFunction(tileCoord, pixelRatio, projection) {
    return undefined;
}
/**
 * @param {string} url URL.
 * @return {Array<string>} Array of urls.
 */
function expandUrl(url) {
    var urls = [];
    var match = /\{([a-z])-([a-z])\}/.exec(url);
    if (match) {
        // char range
        var startCharCode = match[1].charCodeAt(0);
        var stopCharCode = match[2].charCodeAt(0);
        var charCode = void 0;
        for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {
            urls.push(url.replace(match[0], String.fromCharCode(charCode)));
        }
        return urls;
    }
    match = /\{(\d+)-(\d+)\}/.exec(url);
    if (match) {
        // number range
        var stop_1 = parseInt(match[2], 10);
        for (var i = parseInt(match[1], 10); i <= stop_1; i++) {
            urls.push(url.replace(match[0], i.toString()));
        }
        return urls;
    }
    urls.push(url);
    return urls;
}
//# sourceMappingURL=tileurlfunction.js.map

/***/ }),

/***/ "./node_modules/ol/transform.js":
/*!**************************************!*\
  !*** ./node_modules/ol/transform.js ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "create": () => (/* binding */ create),
/* harmony export */   "reset": () => (/* binding */ reset),
/* harmony export */   "multiply": () => (/* binding */ multiply),
/* harmony export */   "set": () => (/* binding */ set),
/* harmony export */   "setFromArray": () => (/* binding */ setFromArray),
/* harmony export */   "apply": () => (/* binding */ apply),
/* harmony export */   "rotate": () => (/* binding */ rotate),
/* harmony export */   "scale": () => (/* binding */ scale),
/* harmony export */   "makeScale": () => (/* binding */ makeScale),
/* harmony export */   "translate": () => (/* binding */ translate),
/* harmony export */   "compose": () => (/* binding */ compose),
/* harmony export */   "composeCssTransform": () => (/* binding */ composeCssTransform),
/* harmony export */   "invert": () => (/* binding */ invert),
/* harmony export */   "makeInverse": () => (/* binding */ makeInverse),
/* harmony export */   "determinant": () => (/* binding */ determinant),
/* harmony export */   "toString": () => (/* binding */ toString)
/* harmony export */ });
/* harmony import */ var _asserts_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./asserts.js */ "./node_modules/ol/asserts.js");
/**
 * @module ol/transform
 */

/**
 * An array representing an affine 2d transformation for use with
 * {@link module:ol/transform} functions. The array has 6 elements.
 * @typedef {!Array<number>} Transform
 * @api
 */
/**
 * Collection of affine 2d transformation functions. The functions work on an
 * array of 6 elements. The element order is compatible with the [SVGMatrix
 * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is
 * a subset (elements a to f) of a 3×3 matrix:
 * ```
 * [ a c e ]
 * [ b d f ]
 * [ 0 0 1 ]
 * ```
 */
/**
 * @private
 * @type {Transform}
 */
var tmp_ = new Array(6);
/**
 * Create an identity transform.
 * @return {!Transform} Identity transform.
 */
function create() {
    return [1, 0, 0, 1, 0, 0];
}
/**
 * Resets the given transform to an identity transform.
 * @param {!Transform} transform Transform.
 * @return {!Transform} Transform.
 */
function reset(transform) {
    return set(transform, 1, 0, 0, 1, 0, 0);
}
/**
 * Multiply the underlying matrices of two transforms and return the result in
 * the first transform.
 * @param {!Transform} transform1 Transform parameters of matrix 1.
 * @param {!Transform} transform2 Transform parameters of matrix 2.
 * @return {!Transform} transform1 multiplied with transform2.
 */
function multiply(transform1, transform2) {
    var a1 = transform1[0];
    var b1 = transform1[1];
    var c1 = transform1[2];
    var d1 = transform1[3];
    var e1 = transform1[4];
    var f1 = transform1[5];
    var a2 = transform2[0];
    var b2 = transform2[1];
    var c2 = transform2[2];
    var d2 = transform2[3];
    var e2 = transform2[4];
    var f2 = transform2[5];
    transform1[0] = a1 * a2 + c1 * b2;
    transform1[1] = b1 * a2 + d1 * b2;
    transform1[2] = a1 * c2 + c1 * d2;
    transform1[3] = b1 * c2 + d1 * d2;
    transform1[4] = a1 * e2 + c1 * f2 + e1;
    transform1[5] = b1 * e2 + d1 * f2 + f1;
    return transform1;
}
/**
 * Set the transform components a-f on a given transform.
 * @param {!Transform} transform Transform.
 * @param {number} a The a component of the transform.
 * @param {number} b The b component of the transform.
 * @param {number} c The c component of the transform.
 * @param {number} d The d component of the transform.
 * @param {number} e The e component of the transform.
 * @param {number} f The f component of the transform.
 * @return {!Transform} Matrix with transform applied.
 */
function set(transform, a, b, c, d, e, f) {
    transform[0] = a;
    transform[1] = b;
    transform[2] = c;
    transform[3] = d;
    transform[4] = e;
    transform[5] = f;
    return transform;
}
/**
 * Set transform on one matrix from another matrix.
 * @param {!Transform} transform1 Matrix to set transform to.
 * @param {!Transform} transform2 Matrix to set transform from.
 * @return {!Transform} transform1 with transform from transform2 applied.
 */
function setFromArray(transform1, transform2) {
    transform1[0] = transform2[0];
    transform1[1] = transform2[1];
    transform1[2] = transform2[2];
    transform1[3] = transform2[3];
    transform1[4] = transform2[4];
    transform1[5] = transform2[5];
    return transform1;
}
/**
 * Transforms the given coordinate with the given transform returning the
 * resulting, transformed coordinate. The coordinate will be modified in-place.
 *
 * @param {Transform} transform The transformation.
 * @param {import("./coordinate.js").Coordinate|import("./pixel.js").Pixel} coordinate The coordinate to transform.
 * @return {import("./coordinate.js").Coordinate|import("./pixel.js").Pixel} return coordinate so that operations can be
 *     chained together.
 */
function apply(transform, coordinate) {
    var x = coordinate[0];
    var y = coordinate[1];
    coordinate[0] = transform[0] * x + transform[2] * y + transform[4];
    coordinate[1] = transform[1] * x + transform[3] * y + transform[5];
    return coordinate;
}
/**
 * Applies rotation to the given transform.
 * @param {!Transform} transform Transform.
 * @param {number} angle Angle in radians.
 * @return {!Transform} The rotated transform.
 */
function rotate(transform, angle) {
    var cos = Math.cos(angle);
    var sin = Math.sin(angle);
    return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));
}
/**
 * Applies scale to a given transform.
 * @param {!Transform} transform Transform.
 * @param {number} x Scale factor x.
 * @param {number} y Scale factor y.
 * @return {!Transform} The scaled transform.
 */
function scale(transform, x, y) {
    return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));
}
/**
 * Creates a scale transform.
 * @param {!Transform} target Transform to overwrite.
 * @param {number} x Scale factor x.
 * @param {number} y Scale factor y.
 * @return {!Transform} The scale transform.
 */
function makeScale(target, x, y) {
    return set(target, x, 0, 0, y, 0, 0);
}
/**
 * Applies translation to the given transform.
 * @param {!Transform} transform Transform.
 * @param {number} dx Translation x.
 * @param {number} dy Translation y.
 * @return {!Transform} The translated transform.
 */
function translate(transform, dx, dy) {
    return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));
}
/**
 * Creates a composite transform given an initial translation, scale, rotation, and
 * final translation (in that order only, not commutative).
 * @param {!Transform} transform The transform (will be modified in place).
 * @param {number} dx1 Initial translation x.
 * @param {number} dy1 Initial translation y.
 * @param {number} sx Scale factor x.
 * @param {number} sy Scale factor y.
 * @param {number} angle Rotation (in counter-clockwise radians).
 * @param {number} dx2 Final translation x.
 * @param {number} dy2 Final translation y.
 * @return {!Transform} The composite transform.
 */
function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {
    var sin = Math.sin(angle);
    var cos = Math.cos(angle);
    transform[0] = sx * cos;
    transform[1] = sy * sin;
    transform[2] = -sx * sin;
    transform[3] = sy * cos;
    transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;
    transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;
    return transform;
}
/**
 * Creates a composite transform given an initial translation, scale, rotation, and
 * final translation (in that order only, not commutative). The resulting transform
 * string can be applied as `transform` porperty of an HTMLElement's style.
 * @param {number} dx1 Initial translation x.
 * @param {number} dy1 Initial translation y.
 * @param {number} sx Scale factor x.
 * @param {number} sy Scale factor y.
 * @param {number} angle Rotation (in counter-clockwise radians).
 * @param {number} dx2 Final translation x.
 * @param {number} dy2 Final translation y.
 * @return {string} The composite css transform.
 * @api
 */
function composeCssTransform(dx1, dy1, sx, sy, angle, dx2, dy2) {
    return toString(compose(create(), dx1, dy1, sx, sy, angle, dx2, dy2));
}
/**
 * Invert the given transform.
 * @param {!Transform} source The source transform to invert.
 * @return {!Transform} The inverted (source) transform.
 */
function invert(source) {
    return makeInverse(source, source);
}
/**
 * Invert the given transform.
 * @param {!Transform} target Transform to be set as the inverse of
 *     the source transform.
 * @param {!Transform} source The source transform to invert.
 * @return {!Transform} The inverted (target) transform.
 */
function makeInverse(target, source) {
    var det = determinant(source);
    (0,_asserts_js__WEBPACK_IMPORTED_MODULE_0__.assert)(det !== 0, 32); // Transformation matrix cannot be inverted
    var a = source[0];
    var b = source[1];
    var c = source[2];
    var d = source[3];
    var e = source[4];
    var f = source[5];
    target[0] = d / det;
    target[1] = -b / det;
    target[2] = -c / det;
    target[3] = a / det;
    target[4] = (c * f - d * e) / det;
    target[5] = -(a * f - b * e) / det;
    return target;
}
/**
 * Returns the determinant of the given matrix.
 * @param {!Transform} mat Matrix.
 * @return {number} Determinant.
 */
function determinant(mat) {
    return mat[0] * mat[3] - mat[1] * mat[2];
}
/**
 * A string version of the transform.  This can be used
 * for CSS transforms.
 * @param {!Transform} mat Matrix.
 * @return {string} The transform as a string.
 */
function toString(mat) {
    return 'matrix(' + mat.join(', ') + ')';
}
//# sourceMappingURL=transform.js.map

/***/ }),

/***/ "./node_modules/ol/util.js":
/*!*********************************!*\
  !*** ./node_modules/ol/util.js ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "abstract": () => (/* binding */ abstract),
/* harmony export */   "getUid": () => (/* binding */ getUid),
/* harmony export */   "VERSION": () => (/* binding */ VERSION)
/* harmony export */ });
/**
 * @module ol/util
 */
/**
 * @return {?} Any return.
 */
function abstract() {
    return /** @type {?} */ ((function () {
        throw new Error('Unimplemented abstract method.');
    })());
}
/**
 * Counter for getUid.
 * @type {number}
 * @private
 */
var uidCounter_ = 0;
/**
 * Gets a unique ID for an object. This mutates the object so that further calls
 * with the same object as a parameter returns the same value. Unique IDs are generated
 * as a strictly increasing sequence. Adapted from goog.getUid.
 *
 * @param {Object} obj The object to get the unique ID for.
 * @return {string} The unique ID for the object.
 * @api
 */
function getUid(obj) {
    return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));
}
/**
 * OpenLayers version.
 * @type {string}
 */
var VERSION = '6.5.0';
//# sourceMappingURL=util.js.map

/***/ }),

/***/ "./node_modules/proj4/lib/Point.js":
/*!*****************************************!*\
  !*** ./node_modules/proj4/lib/Point.js ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var mgrs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! mgrs */ "./node_modules/mgrs/mgrs.js");


function Point(x, y, z) {
  if (!(this instanceof Point)) {
    return new Point(x, y, z);
  }
  if (Array.isArray(x)) {
    this.x = x[0];
    this.y = x[1];
    this.z = x[2] || 0.0;
  } else if(typeof x === 'object') {
    this.x = x.x;
    this.y = x.y;
    this.z = x.z || 0.0;
  } else if (typeof x === 'string' && typeof y === 'undefined') {
    var coords = x.split(',');
    this.x = parseFloat(coords[0], 10);
    this.y = parseFloat(coords[1], 10);
    this.z = parseFloat(coords[2], 10) || 0.0;
  } else {
    this.x = x;
    this.y = y;
    this.z = z || 0.0;
  }
  console.warn('proj4.Point will be removed in version 3, use proj4.toPoint');
}

Point.fromMGRS = function(mgrsStr) {
  return new Point((0,mgrs__WEBPACK_IMPORTED_MODULE_0__.toPoint)(mgrsStr));
};
Point.prototype.toMGRS = function(accuracy) {
  return (0,mgrs__WEBPACK_IMPORTED_MODULE_0__.forward)([this.x, this.y], accuracy);
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Point);


/***/ }),

/***/ "./node_modules/proj4/lib/Proj.js":
/*!****************************************!*\
  !*** ./node_modules/proj4/lib/Proj.js ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _parseCode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./parseCode */ "./node_modules/proj4/lib/parseCode.js");
/* harmony import */ var _extend__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./extend */ "./node_modules/proj4/lib/extend.js");
/* harmony import */ var _projections__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./projections */ "./node_modules/proj4/lib/projections.js");
/* harmony import */ var _deriveConstants__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./deriveConstants */ "./node_modules/proj4/lib/deriveConstants.js");
/* harmony import */ var _constants_Datum__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./constants/Datum */ "./node_modules/proj4/lib/constants/Datum.js");
/* harmony import */ var _datum__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./datum */ "./node_modules/proj4/lib/datum.js");
/* harmony import */ var _match__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./match */ "./node_modules/proj4/lib/match.js");
/* harmony import */ var _nadgrid__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./nadgrid */ "./node_modules/proj4/lib/nadgrid.js");









function Projection(srsCode,callback) {
  if (!(this instanceof Projection)) {
    return new Projection(srsCode);
  }
  callback = callback || function(error){
    if(error){
      throw error;
    }
  };
  var json = (0,_parseCode__WEBPACK_IMPORTED_MODULE_0__.default)(srsCode);
  if(typeof json !== 'object'){
    callback(srsCode);
    return;
  }
  var ourProj = Projection.projections.get(json.projName);
  if(!ourProj){
    callback(srsCode);
    return;
  }
  if (json.datumCode && json.datumCode !== 'none') {
    var datumDef = (0,_match__WEBPACK_IMPORTED_MODULE_6__.default)(_constants_Datum__WEBPACK_IMPORTED_MODULE_4__.default, json.datumCode);
    if (datumDef) {
      json.datum_params = json.datum_params || (datumDef.towgs84 ? datumDef.towgs84.split(',') : null);
      json.ellps = datumDef.ellipse;
      json.datumName = datumDef.datumName ? datumDef.datumName : json.datumCode;
    }
  }
  json.k0 = json.k0 || 1.0;
  json.axis = json.axis || 'enu';
  json.ellps = json.ellps || 'wgs84';
  json.lat1 = json.lat1 || json.lat0; // Lambert_Conformal_Conic_1SP, for example, needs this

  var sphere_ = (0,_deriveConstants__WEBPACK_IMPORTED_MODULE_3__.sphere)(json.a, json.b, json.rf, json.ellps, json.sphere);
  var ecc = (0,_deriveConstants__WEBPACK_IMPORTED_MODULE_3__.eccentricity)(sphere_.a, sphere_.b, sphere_.rf, json.R_A);
  var nadgrids = (0,_nadgrid__WEBPACK_IMPORTED_MODULE_7__.getNadgrids)(json.nadgrids);
  var datumObj = json.datum || (0,_datum__WEBPACK_IMPORTED_MODULE_5__.default)(json.datumCode, json.datum_params, sphere_.a, sphere_.b, ecc.es, ecc.ep2,
    nadgrids);

  (0,_extend__WEBPACK_IMPORTED_MODULE_1__.default)(this, json); // transfer everything over from the projection because we don't know what we'll need
  (0,_extend__WEBPACK_IMPORTED_MODULE_1__.default)(this, ourProj); // transfer all the methods from the projection

  // copy the 4 things over we calulated in deriveConstants.sphere
  this.a = sphere_.a;
  this.b = sphere_.b;
  this.rf = sphere_.rf;
  this.sphere = sphere_.sphere;

  // copy the 3 things we calculated in deriveConstants.eccentricity
  this.es = ecc.es;
  this.e = ecc.e;
  this.ep2 = ecc.ep2;

  // add in the datum object
  this.datum = datumObj;

  // init the projection
  this.init();

  // legecy callback from back in the day when it went to spatialreference.org
  callback(null, this);

}
Projection.projections = _projections__WEBPACK_IMPORTED_MODULE_2__.default;
Projection.projections.start();
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Projection);


/***/ }),

/***/ "./node_modules/proj4/lib/adjust_axis.js":
/*!***********************************************!*\
  !*** ./node_modules/proj4/lib/adjust_axis.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(crs, denorm, point) {
  var xin = point.x,
    yin = point.y,
    zin = point.z || 0.0;
  var v, t, i;
  var out = {};
  for (i = 0; i < 3; i++) {
    if (denorm && i === 2 && point.z === undefined) {
      continue;
    }
    if (i === 0) {
      v = xin;
      if ("ew".indexOf(crs.axis[i]) !== -1) {
        t = 'x';
      } else {
        t = 'y';
      }

    }
    else if (i === 1) {
      v = yin;
      if ("ns".indexOf(crs.axis[i]) !== -1) {
        t = 'y';
      } else {
        t = 'x';
      }
    }
    else {
      v = zin;
      t = 'z';
    }
    switch (crs.axis[i]) {
    case 'e':
      out[t] = v;
      break;
    case 'w':
      out[t] = -v;
      break;
    case 'n':
      out[t] = v;
      break;
    case 's':
      out[t] = -v;
      break;
    case 'u':
      if (point[t] !== undefined) {
        out.z = v;
      }
      break;
    case 'd':
      if (point[t] !== undefined) {
        out.z = -v;
      }
      break;
    default:
      //console.log("ERROR: unknow axis ("+crs.axis[i]+") - check definition of "+crs.projName);
      return null;
    }
  }
  return out;
}


/***/ }),

/***/ "./node_modules/proj4/lib/checkSanity.js":
/*!***********************************************!*\
  !*** ./node_modules/proj4/lib/checkSanity.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(point) {
  checkCoord(point.x);
  checkCoord(point.y);
}
function checkCoord(num) {
  if (typeof Number.isFinite === 'function') {
    if (Number.isFinite(num)) {
      return;
    }
    throw new TypeError('coordinates must be finite numbers');
  }
  if (typeof num !== 'number' || num !== num || !isFinite(num)) {
    throw new TypeError('coordinates must be finite numbers');
  }
}


/***/ }),

/***/ "./node_modules/proj4/lib/common/adjust_lat.js":
/*!*****************************************************!*\
  !*** ./node_modules/proj4/lib/common/adjust_lat.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _constants_values__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../constants/values */ "./node_modules/proj4/lib/constants/values.js");
/* harmony import */ var _sign__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./sign */ "./node_modules/proj4/lib/common/sign.js");



/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(x) {
  return (Math.abs(x) < _constants_values__WEBPACK_IMPORTED_MODULE_0__.HALF_PI) ? x : (x - ((0,_sign__WEBPACK_IMPORTED_MODULE_1__.default)(x) * Math.PI));
}


/***/ }),

/***/ "./node_modules/proj4/lib/common/adjust_lon.js":
/*!*****************************************************!*\
  !*** ./node_modules/proj4/lib/common/adjust_lon.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _constants_values__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../constants/values */ "./node_modules/proj4/lib/constants/values.js");
/* harmony import */ var _sign__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./sign */ "./node_modules/proj4/lib/common/sign.js");




/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(x) {
  return (Math.abs(x) <= _constants_values__WEBPACK_IMPORTED_MODULE_0__.SPI) ? x : (x - ((0,_sign__WEBPACK_IMPORTED_MODULE_1__.default)(x) * _constants_values__WEBPACK_IMPORTED_MODULE_0__.TWO_PI));
}


/***/ }),

/***/ "./node_modules/proj4/lib/common/adjust_zone.js":
/*!******************************************************!*\
  !*** ./node_modules/proj4/lib/common/adjust_zone.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _adjust_lon__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./adjust_lon */ "./node_modules/proj4/lib/common/adjust_lon.js");


/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(zone, lon) {
  if (zone === undefined) {
    zone = Math.floor(((0,_adjust_lon__WEBPACK_IMPORTED_MODULE_0__.default)(lon) + Math.PI) * 30 / Math.PI) + 1;

    if (zone < 0) {
      return 0;
    } else if (zone > 60) {
      return 60;
    }
  }
  return zone;
}


/***/ }),

/***/ "./node_modules/proj4/lib/common/asinhy.js":
/*!*************************************************!*\
  !*** ./node_modules/proj4/lib/common/asinhy.js ***!
  \*************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _hypot__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./hypot */ "./node_modules/proj4/lib/common/hypot.js");
/* harmony import */ var _log1py__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./log1py */ "./node_modules/proj4/lib/common/log1py.js");



/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(x) {
  var y = Math.abs(x);
  y = (0,_log1py__WEBPACK_IMPORTED_MODULE_1__.default)(y * (1 + y / ((0,_hypot__WEBPACK_IMPORTED_MODULE_0__.default)(1, y) + 1)));

  return x < 0 ? -y : y;
}


/***/ }),

/***/ "./node_modules/proj4/lib/common/asinz.js":
/*!************************************************!*\
  !*** ./node_modules/proj4/lib/common/asinz.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(x) {
  if (Math.abs(x) > 1) {
    x = (x > 1) ? 1 : -1;
  }
  return Math.asin(x);
}

/***/ }),

/***/ "./node_modules/proj4/lib/common/clens.js":
/*!************************************************!*\
  !*** ./node_modules/proj4/lib/common/clens.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(pp, arg_r) {
  var r = 2 * Math.cos(arg_r);
  var i = pp.length - 1;
  var hr1 = pp[i];
  var hr2 = 0;
  var hr;

  while (--i >= 0) {
    hr = -hr2 + r * hr1 + pp[i];
    hr2 = hr1;
    hr1 = hr;
  }

  return Math.sin(arg_r) * hr;
}


/***/ }),

/***/ "./node_modules/proj4/lib/common/clens_cmplx.js":
/*!******************************************************!*\
  !*** ./node_modules/proj4/lib/common/clens_cmplx.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _sinh__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./sinh */ "./node_modules/proj4/lib/common/sinh.js");
/* harmony import */ var _cosh__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./cosh */ "./node_modules/proj4/lib/common/cosh.js");



/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(pp, arg_r, arg_i) {
  var sin_arg_r = Math.sin(arg_r);
  var cos_arg_r = Math.cos(arg_r);
  var sinh_arg_i = (0,_sinh__WEBPACK_IMPORTED_MODULE_0__.default)(arg_i);
  var cosh_arg_i = (0,_cosh__WEBPACK_IMPORTED_MODULE_1__.default)(arg_i);
  var r = 2 * cos_arg_r * cosh_arg_i;
  var i = -2 * sin_arg_r * sinh_arg_i;
  var j = pp.length - 1;
  var hr = pp[j];
  var hi1 = 0;
  var hr1 = 0;
  var hi = 0;
  var hr2;
  var hi2;

  while (--j >= 0) {
    hr2 = hr1;
    hi2 = hi1;
    hr1 = hr;
    hi1 = hi;
    hr = -hr2 + r * hr1 - i * hi1 + pp[j];
    hi = -hi2 + i * hr1 + r * hi1;
  }

  r = sin_arg_r * cosh_arg_i;
  i = cos_arg_r * sinh_arg_i;

  return [r * hr - i * hi, r * hi + i * hr];
}


/***/ }),

/***/ "./node_modules/proj4/lib/common/cosh.js":
/*!***********************************************!*\
  !*** ./node_modules/proj4/lib/common/cosh.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(x) {
  var r = Math.exp(x);
  r = (r + 1 / r) / 2;
  return r;
}

/***/ }),

/***/ "./node_modules/proj4/lib/common/e0fn.js":
/*!***********************************************!*\
  !*** ./node_modules/proj4/lib/common/e0fn.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(x) {
  return (1 - 0.25 * x * (1 + x / 16 * (3 + 1.25 * x)));
}

/***/ }),

/***/ "./node_modules/proj4/lib/common/e1fn.js":
/*!***********************************************!*\
  !*** ./node_modules/proj4/lib/common/e1fn.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(x) {
  return (0.375 * x * (1 + 0.25 * x * (1 + 0.46875 * x)));
}

/***/ }),

/***/ "./node_modules/proj4/lib/common/e2fn.js":
/*!***********************************************!*\
  !*** ./node_modules/proj4/lib/common/e2fn.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(x) {
  return (0.05859375 * x * x * (1 + 0.75 * x));
}

/***/ }),

/***/ "./node_modules/proj4/lib/common/e3fn.js":
/*!***********************************************!*\
  !*** ./node_modules/proj4/lib/common/e3fn.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(x) {
  return (x * x * x * (35 / 3072));
}

/***/ }),

/***/ "./node_modules/proj4/lib/common/gN.js":
/*!*********************************************!*\
  !*** ./node_modules/proj4/lib/common/gN.js ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(a, e, sinphi) {
  var temp = e * sinphi;
  return a / Math.sqrt(1 - temp * temp);
}

/***/ }),

/***/ "./node_modules/proj4/lib/common/gatg.js":
/*!***********************************************!*\
  !*** ./node_modules/proj4/lib/common/gatg.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(pp, B) {
  var cos_2B = 2 * Math.cos(2 * B);
  var i = pp.length - 1;
  var h1 = pp[i];
  var h2 = 0;
  var h;

  while (--i >= 0) {
    h = -h2 + cos_2B * h1 + pp[i];
    h2 = h1;
    h1 = h;
  }

  return (B + h * Math.sin(2 * B));
}


/***/ }),

/***/ "./node_modules/proj4/lib/common/hypot.js":
/*!************************************************!*\
  !*** ./node_modules/proj4/lib/common/hypot.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(x, y) {
  x = Math.abs(x);
  y = Math.abs(y);
  var a = Math.max(x, y);
  var b = Math.min(x, y) / (a ? a : 1);

  return a * Math.sqrt(1 + Math.pow(b, 2));
}


/***/ }),

/***/ "./node_modules/proj4/lib/common/imlfn.js":
/*!************************************************!*\
  !*** ./node_modules/proj4/lib/common/imlfn.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(ml, e0, e1, e2, e3) {
  var phi;
  var dphi;

  phi = ml / e0;
  for (var i = 0; i < 15; i++) {
    dphi = (ml - (e0 * phi - e1 * Math.sin(2 * phi) + e2 * Math.sin(4 * phi) - e3 * Math.sin(6 * phi))) / (e0 - 2 * e1 * Math.cos(2 * phi) + 4 * e2 * Math.cos(4 * phi) - 6 * e3 * Math.cos(6 * phi));
    phi += dphi;
    if (Math.abs(dphi) <= 0.0000000001) {
      return phi;
    }
  }

  //..reportError("IMLFN-CONV:Latitude failed to converge after 15 iterations");
  return NaN;
}

/***/ }),

/***/ "./node_modules/proj4/lib/common/iqsfnz.js":
/*!*************************************************!*\
  !*** ./node_modules/proj4/lib/common/iqsfnz.js ***!
  \*************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _constants_values__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../constants/values */ "./node_modules/proj4/lib/constants/values.js");


/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(eccent, q) {
  var temp = 1 - (1 - eccent * eccent) / (2 * eccent) * Math.log((1 - eccent) / (1 + eccent));
  if (Math.abs(Math.abs(q) - temp) < 1.0E-6) {
    if (q < 0) {
      return (-1 * _constants_values__WEBPACK_IMPORTED_MODULE_0__.HALF_PI);
    }
    else {
      return _constants_values__WEBPACK_IMPORTED_MODULE_0__.HALF_PI;
    }
  }
  //var phi = 0.5* q/(1-eccent*eccent);
  var phi = Math.asin(0.5 * q);
  var dphi;
  var sin_phi;
  var cos_phi;
  var con;
  for (var i = 0; i < 30; i++) {
    sin_phi = Math.sin(phi);
    cos_phi = Math.cos(phi);
    con = eccent * sin_phi;
    dphi = Math.pow(1 - con * con, 2) / (2 * cos_phi) * (q / (1 - eccent * eccent) - sin_phi / (1 - con * con) + 0.5 / eccent * Math.log((1 - con) / (1 + con)));
    phi += dphi;
    if (Math.abs(dphi) <= 0.0000000001) {
      return phi;
    }
  }

  //console.log("IQSFN-CONV:Latitude failed to converge after 30 iterations");
  return NaN;
}


/***/ }),

/***/ "./node_modules/proj4/lib/common/log1py.js":
/*!*************************************************!*\
  !*** ./node_modules/proj4/lib/common/log1py.js ***!
  \*************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(x) {
  var y = 1 + x;
  var z = y - 1;

  return z === 0 ? x : x * Math.log(y) / z;
}


/***/ }),

/***/ "./node_modules/proj4/lib/common/mlfn.js":
/*!***********************************************!*\
  !*** ./node_modules/proj4/lib/common/mlfn.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(e0, e1, e2, e3, phi) {
  return (e0 * phi - e1 * Math.sin(2 * phi) + e2 * Math.sin(4 * phi) - e3 * Math.sin(6 * phi));
}

/***/ }),

/***/ "./node_modules/proj4/lib/common/msfnz.js":
/*!************************************************!*\
  !*** ./node_modules/proj4/lib/common/msfnz.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(eccent, sinphi, cosphi) {
  var con = eccent * sinphi;
  return cosphi / (Math.sqrt(1 - con * con));
}

/***/ }),

/***/ "./node_modules/proj4/lib/common/phi2z.js":
/*!************************************************!*\
  !*** ./node_modules/proj4/lib/common/phi2z.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _constants_values__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../constants/values */ "./node_modules/proj4/lib/constants/values.js");


/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(eccent, ts) {
  var eccnth = 0.5 * eccent;
  var con, dphi;
  var phi = _constants_values__WEBPACK_IMPORTED_MODULE_0__.HALF_PI - 2 * Math.atan(ts);
  for (var i = 0; i <= 15; i++) {
    con = eccent * Math.sin(phi);
    dphi = _constants_values__WEBPACK_IMPORTED_MODULE_0__.HALF_PI - 2 * Math.atan(ts * (Math.pow(((1 - con) / (1 + con)), eccnth))) - phi;
    phi += dphi;
    if (Math.abs(dphi) <= 0.0000000001) {
      return phi;
    }
  }
  //console.log("phi2z has NoConvergence");
  return -9999;
}


/***/ }),

/***/ "./node_modules/proj4/lib/common/pj_enfn.js":
/*!**************************************************!*\
  !*** ./node_modules/proj4/lib/common/pj_enfn.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
var C00 = 1;
var C02 = 0.25;
var C04 = 0.046875;
var C06 = 0.01953125;
var C08 = 0.01068115234375;
var C22 = 0.75;
var C44 = 0.46875;
var C46 = 0.01302083333333333333;
var C48 = 0.00712076822916666666;
var C66 = 0.36458333333333333333;
var C68 = 0.00569661458333333333;
var C88 = 0.3076171875;

/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(es) {
  var en = [];
  en[0] = C00 - es * (C02 + es * (C04 + es * (C06 + es * C08)));
  en[1] = es * (C22 - es * (C04 + es * (C06 + es * C08)));
  var t = es * es;
  en[2] = t * (C44 - es * (C46 + es * C48));
  t *= es;
  en[3] = t * (C66 - es * C68);
  en[4] = t * es * C88;
  return en;
}

/***/ }),

/***/ "./node_modules/proj4/lib/common/pj_inv_mlfn.js":
/*!******************************************************!*\
  !*** ./node_modules/proj4/lib/common/pj_inv_mlfn.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _pj_mlfn__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./pj_mlfn */ "./node_modules/proj4/lib/common/pj_mlfn.js");
/* harmony import */ var _constants_values__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../constants/values */ "./node_modules/proj4/lib/constants/values.js");



var MAX_ITER = 20;

/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(arg, es, en) {
  var k = 1 / (1 - es);
  var phi = arg;
  for (var i = MAX_ITER; i; --i) { /* rarely goes over 2 iterations */
    var s = Math.sin(phi);
    var t = 1 - es * s * s;
    //t = this.pj_mlfn(phi, s, Math.cos(phi), en) - arg;
    //phi -= t * (t * Math.sqrt(t)) * k;
    t = ((0,_pj_mlfn__WEBPACK_IMPORTED_MODULE_0__.default)(phi, s, Math.cos(phi), en) - arg) * (t * Math.sqrt(t)) * k;
    phi -= t;
    if (Math.abs(t) < _constants_values__WEBPACK_IMPORTED_MODULE_1__.EPSLN) {
      return phi;
    }
  }
  //..reportError("cass:pj_inv_mlfn: Convergence error");
  return phi;
}


/***/ }),

/***/ "./node_modules/proj4/lib/common/pj_mlfn.js":
/*!**************************************************!*\
  !*** ./node_modules/proj4/lib/common/pj_mlfn.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(phi, sphi, cphi, en) {
  cphi *= sphi;
  sphi *= sphi;
  return (en[0] * phi - cphi * (en[1] + sphi * (en[2] + sphi * (en[3] + sphi * en[4]))));
}

/***/ }),

/***/ "./node_modules/proj4/lib/common/qsfnz.js":
/*!************************************************!*\
  !*** ./node_modules/proj4/lib/common/qsfnz.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(eccent, sinphi) {
  var con;
  if (eccent > 1.0e-7) {
    con = eccent * sinphi;
    return ((1 - eccent * eccent) * (sinphi / (1 - con * con) - (0.5 / eccent) * Math.log((1 - con) / (1 + con))));
  }
  else {
    return (2 * sinphi);
  }
}

/***/ }),

/***/ "./node_modules/proj4/lib/common/sign.js":
/*!***********************************************!*\
  !*** ./node_modules/proj4/lib/common/sign.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(x) {
  return x<0 ? -1 : 1;
}

/***/ }),

/***/ "./node_modules/proj4/lib/common/sinh.js":
/*!***********************************************!*\
  !*** ./node_modules/proj4/lib/common/sinh.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(x) {
  var r = Math.exp(x);
  r = (r - 1 / r) / 2;
  return r;
}

/***/ }),

/***/ "./node_modules/proj4/lib/common/srat.js":
/*!***********************************************!*\
  !*** ./node_modules/proj4/lib/common/srat.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(esinp, exp) {
  return (Math.pow((1 - esinp) / (1 + esinp), exp));
}

/***/ }),

/***/ "./node_modules/proj4/lib/common/toPoint.js":
/*!**************************************************!*\
  !*** ./node_modules/proj4/lib/common/toPoint.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(array){
  var out = {
    x: array[0],
    y: array[1]
  };
  if (array.length>2) {
    out.z = array[2];
  }
  if (array.length>3) {
    out.m = array[3];
  }
  return out;
}

/***/ }),

/***/ "./node_modules/proj4/lib/common/tsfnz.js":
/*!************************************************!*\
  !*** ./node_modules/proj4/lib/common/tsfnz.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _constants_values__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../constants/values */ "./node_modules/proj4/lib/constants/values.js");


/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(eccent, phi, sinphi) {
  var con = eccent * sinphi;
  var com = 0.5 * eccent;
  con = Math.pow(((1 - con) / (1 + con)), com);
  return (Math.tan(0.5 * (_constants_values__WEBPACK_IMPORTED_MODULE_0__.HALF_PI - phi)) / con);
}


/***/ }),

/***/ "./node_modules/proj4/lib/constants/Datum.js":
/*!***************************************************!*\
  !*** ./node_modules/proj4/lib/constants/Datum.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ exports)
/* harmony export */ });
var exports = {};

exports.wgs84 = {
  towgs84: "0,0,0",
  ellipse: "WGS84",
  datumName: "WGS84"
};

exports.ch1903 = {
  towgs84: "674.374,15.056,405.346",
  ellipse: "bessel",
  datumName: "swiss"
};

exports.ggrs87 = {
  towgs84: "-199.87,74.79,246.62",
  ellipse: "GRS80",
  datumName: "Greek_Geodetic_Reference_System_1987"
};

exports.nad83 = {
  towgs84: "0,0,0",
  ellipse: "GRS80",
  datumName: "North_American_Datum_1983"
};

exports.nad27 = {
  nadgrids: "@conus,@alaska,@ntv2_0.gsb,@ntv1_can.dat",
  ellipse: "clrk66",
  datumName: "North_American_Datum_1927"
};

exports.potsdam = {
  towgs84: "606.0,23.0,413.0",
  ellipse: "bessel",
  datumName: "Potsdam Rauenberg 1950 DHDN"
};

exports.carthage = {
  towgs84: "-263.0,6.0,431.0",
  ellipse: "clark80",
  datumName: "Carthage 1934 Tunisia"
};

exports.hermannskogel = {
  towgs84: "653.0,-212.0,449.0",
  ellipse: "bessel",
  datumName: "Hermannskogel"
};

exports.osni52 = {
  towgs84: "482.530,-130.596,564.557,-1.042,-0.214,-0.631,8.15",
  ellipse: "airy",
  datumName: "Irish National"
};

exports.ire65 = {
  towgs84: "482.530,-130.596,564.557,-1.042,-0.214,-0.631,8.15",
  ellipse: "mod_airy",
  datumName: "Ireland 1965"
};

exports.rassadiran = {
  towgs84: "-133.63,-157.5,-158.62",
  ellipse: "intl",
  datumName: "Rassadiran"
};

exports.nzgd49 = {
  towgs84: "59.47,-5.04,187.44,0.47,-0.1,1.024,-4.5993",
  ellipse: "intl",
  datumName: "New Zealand Geodetic Datum 1949"
};

exports.osgb36 = {
  towgs84: "446.448,-125.157,542.060,0.1502,0.2470,0.8421,-20.4894",
  ellipse: "airy",
  datumName: "Airy 1830"
};

exports.s_jtsk = {
  towgs84: "589,76,480",
  ellipse: 'bessel',
  datumName: 'S-JTSK (Ferro)'
};

exports.beduaram = {
  towgs84: '-106,-87,188',
  ellipse: 'clrk80',
  datumName: 'Beduaram'
};

exports.gunung_segara = {
  towgs84: '-403,684,41',
  ellipse: 'bessel',
  datumName: 'Gunung Segara Jakarta'
};

exports.rnb72 = {
  towgs84: "106.869,-52.2978,103.724,-0.33657,0.456955,-1.84218,1",
  ellipse: "intl",
  datumName: "Reseau National Belge 1972"
};


/***/ }),

/***/ "./node_modules/proj4/lib/constants/Ellipsoid.js":
/*!*******************************************************!*\
  !*** ./node_modules/proj4/lib/constants/Ellipsoid.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ exports),
/* harmony export */   "WGS84": () => (/* binding */ WGS84)
/* harmony export */ });
var exports = {};

exports.MERIT = {
  a: 6378137.0,
  rf: 298.257,
  ellipseName: "MERIT 1983"
};

exports.SGS85 = {
  a: 6378136.0,
  rf: 298.257,
  ellipseName: "Soviet Geodetic System 85"
};

exports.GRS80 = {
  a: 6378137.0,
  rf: 298.257222101,
  ellipseName: "GRS 1980(IUGG, 1980)"
};

exports.IAU76 = {
  a: 6378140.0,
  rf: 298.257,
  ellipseName: "IAU 1976"
};

exports.airy = {
  a: 6377563.396,
  b: 6356256.910,
  ellipseName: "Airy 1830"
};

exports.APL4 = {
  a: 6378137,
  rf: 298.25,
  ellipseName: "Appl. Physics. 1965"
};

exports.NWL9D = {
  a: 6378145.0,
  rf: 298.25,
  ellipseName: "Naval Weapons Lab., 1965"
};

exports.mod_airy = {
  a: 6377340.189,
  b: 6356034.446,
  ellipseName: "Modified Airy"
};

exports.andrae = {
  a: 6377104.43,
  rf: 300.0,
  ellipseName: "Andrae 1876 (Den., Iclnd.)"
};

exports.aust_SA = {
  a: 6378160.0,
  rf: 298.25,
  ellipseName: "Australian Natl & S. Amer. 1969"
};

exports.GRS67 = {
  a: 6378160.0,
  rf: 298.2471674270,
  ellipseName: "GRS 67(IUGG 1967)"
};

exports.bessel = {
  a: 6377397.155,
  rf: 299.1528128,
  ellipseName: "Bessel 1841"
};

exports.bess_nam = {
  a: 6377483.865,
  rf: 299.1528128,
  ellipseName: "Bessel 1841 (Namibia)"
};

exports.clrk66 = {
  a: 6378206.4,
  b: 6356583.8,
  ellipseName: "Clarke 1866"
};

exports.clrk80 = {
  a: 6378249.145,
  rf: 293.4663,
  ellipseName: "Clarke 1880 mod."
};

exports.clrk58 = {
  a: 6378293.645208759,
  rf: 294.2606763692654,
  ellipseName: "Clarke 1858"
};

exports.CPM = {
  a: 6375738.7,
  rf: 334.29,
  ellipseName: "Comm. des Poids et Mesures 1799"
};

exports.delmbr = {
  a: 6376428.0,
  rf: 311.5,
  ellipseName: "Delambre 1810 (Belgium)"
};

exports.engelis = {
  a: 6378136.05,
  rf: 298.2566,
  ellipseName: "Engelis 1985"
};

exports.evrst30 = {
  a: 6377276.345,
  rf: 300.8017,
  ellipseName: "Everest 1830"
};

exports.evrst48 = {
  a: 6377304.063,
  rf: 300.8017,
  ellipseName: "Everest 1948"
};

exports.evrst56 = {
  a: 6377301.243,
  rf: 300.8017,
  ellipseName: "Everest 1956"
};

exports.evrst69 = {
  a: 6377295.664,
  rf: 300.8017,
  ellipseName: "Everest 1969"
};

exports.evrstSS = {
  a: 6377298.556,
  rf: 300.8017,
  ellipseName: "Everest (Sabah & Sarawak)"
};

exports.fschr60 = {
  a: 6378166.0,
  rf: 298.3,
  ellipseName: "Fischer (Mercury Datum) 1960"
};

exports.fschr60m = {
  a: 6378155.0,
  rf: 298.3,
  ellipseName: "Fischer 1960"
};

exports.fschr68 = {
  a: 6378150.0,
  rf: 298.3,
  ellipseName: "Fischer 1968"
};

exports.helmert = {
  a: 6378200.0,
  rf: 298.3,
  ellipseName: "Helmert 1906"
};

exports.hough = {
  a: 6378270.0,
  rf: 297.0,
  ellipseName: "Hough"
};

exports.intl = {
  a: 6378388.0,
  rf: 297.0,
  ellipseName: "International 1909 (Hayford)"
};

exports.kaula = {
  a: 6378163.0,
  rf: 298.24,
  ellipseName: "Kaula 1961"
};

exports.lerch = {
  a: 6378139.0,
  rf: 298.257,
  ellipseName: "Lerch 1979"
};

exports.mprts = {
  a: 6397300.0,
  rf: 191.0,
  ellipseName: "Maupertius 1738"
};

exports.new_intl = {
  a: 6378157.5,
  b: 6356772.2,
  ellipseName: "New International 1967"
};

exports.plessis = {
  a: 6376523.0,
  rf: 6355863.0,
  ellipseName: "Plessis 1817 (France)"
};

exports.krass = {
  a: 6378245.0,
  rf: 298.3,
  ellipseName: "Krassovsky, 1942"
};

exports.SEasia = {
  a: 6378155.0,
  b: 6356773.3205,
  ellipseName: "Southeast Asia"
};

exports.walbeck = {
  a: 6376896.0,
  b: 6355834.8467,
  ellipseName: "Walbeck"
};

exports.WGS60 = {
  a: 6378165.0,
  rf: 298.3,
  ellipseName: "WGS 60"
};

exports.WGS66 = {
  a: 6378145.0,
  rf: 298.25,
  ellipseName: "WGS 66"
};

exports.WGS7 = {
  a: 6378135.0,
  rf: 298.26,
  ellipseName: "WGS 72"
};

var WGS84 = exports.WGS84 = {
  a: 6378137.0,
  rf: 298.257223563,
  ellipseName: "WGS 84"
};

exports.sphere = {
  a: 6370997.0,
  b: 6370997.0,
  ellipseName: "Normal Sphere (r=6370997)"
};


/***/ }),

/***/ "./node_modules/proj4/lib/constants/PrimeMeridian.js":
/*!***********************************************************!*\
  !*** ./node_modules/proj4/lib/constants/PrimeMeridian.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ exports)
/* harmony export */ });
var exports = {};


exports.greenwich = 0.0; //"0dE",
exports.lisbon = -9.131906111111; //"9d07'54.862\"W",
exports.paris = 2.337229166667; //"2d20'14.025\"E",
exports.bogota = -74.080916666667; //"74d04'51.3\"W",
exports.madrid = -3.687938888889; //"3d41'16.58\"W",
exports.rome = 12.452333333333; //"12d27'8.4\"E",
exports.bern = 7.439583333333; //"7d26'22.5\"E",
exports.jakarta = 106.807719444444; //"106d48'27.79\"E",
exports.ferro = -17.666666666667; //"17d40'W",
exports.brussels = 4.367975; //"4d22'4.71\"E",
exports.stockholm = 18.058277777778; //"18d3'29.8\"E",
exports.athens = 23.7163375; //"23d42'58.815\"E",
exports.oslo = 10.722916666667; //"10d43'22.5\"E"


/***/ }),

/***/ "./node_modules/proj4/lib/constants/units.js":
/*!***************************************************!*\
  !*** ./node_modules/proj4/lib/constants/units.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
  ft: {to_meter: 0.3048},
  'us-ft': {to_meter: 1200 / 3937}
});


/***/ }),

/***/ "./node_modules/proj4/lib/constants/values.js":
/*!****************************************************!*\
  !*** ./node_modules/proj4/lib/constants/values.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "PJD_3PARAM": () => (/* binding */ PJD_3PARAM),
/* harmony export */   "PJD_7PARAM": () => (/* binding */ PJD_7PARAM),
/* harmony export */   "PJD_GRIDSHIFT": () => (/* binding */ PJD_GRIDSHIFT),
/* harmony export */   "PJD_WGS84": () => (/* binding */ PJD_WGS84),
/* harmony export */   "PJD_NODATUM": () => (/* binding */ PJD_NODATUM),
/* harmony export */   "SRS_WGS84_SEMIMAJOR": () => (/* binding */ SRS_WGS84_SEMIMAJOR),
/* harmony export */   "SRS_WGS84_SEMIMINOR": () => (/* binding */ SRS_WGS84_SEMIMINOR),
/* harmony export */   "SRS_WGS84_ESQUARED": () => (/* binding */ SRS_WGS84_ESQUARED),
/* harmony export */   "SEC_TO_RAD": () => (/* binding */ SEC_TO_RAD),
/* harmony export */   "HALF_PI": () => (/* binding */ HALF_PI),
/* harmony export */   "SIXTH": () => (/* binding */ SIXTH),
/* harmony export */   "RA4": () => (/* binding */ RA4),
/* harmony export */   "RA6": () => (/* binding */ RA6),
/* harmony export */   "EPSLN": () => (/* binding */ EPSLN),
/* harmony export */   "D2R": () => (/* binding */ D2R),
/* harmony export */   "R2D": () => (/* binding */ R2D),
/* harmony export */   "FORTPI": () => (/* binding */ FORTPI),
/* harmony export */   "TWO_PI": () => (/* binding */ TWO_PI),
/* harmony export */   "SPI": () => (/* binding */ SPI)
/* harmony export */ });
var PJD_3PARAM = 1;
var PJD_7PARAM = 2;
var PJD_GRIDSHIFT = 3;
var PJD_WGS84 = 4; // WGS84 or equivalent
var PJD_NODATUM = 5; // WGS84 or equivalent
var SRS_WGS84_SEMIMAJOR = 6378137.0;  // only used in grid shift transforms
var SRS_WGS84_SEMIMINOR = 6356752.314;  // only used in grid shift transforms
var SRS_WGS84_ESQUARED = 0.0066943799901413165; // only used in grid shift transforms
var SEC_TO_RAD = 4.84813681109535993589914102357e-6;
var HALF_PI = Math.PI/2;
// ellipoid pj_set_ell.c
var SIXTH = 0.1666666666666666667;
/* 1/6 */
var RA4 = 0.04722222222222222222;
/* 17/360 */
var RA6 = 0.02215608465608465608;
var EPSLN = 1.0e-10;
// you'd think you could use Number.EPSILON above but that makes
// Mollweide get into an infinate loop.

var D2R = 0.01745329251994329577;
var R2D = 57.29577951308232088;
var FORTPI = Math.PI/4;
var TWO_PI = Math.PI * 2;
// SPI is slightly greater than Math.PI, so values that exceed the -180..180
// degree range by a tiny amount don't get wrapped. This prevents points that
// have drifted from their original location along the 180th meridian (due to
// floating point error) from changing their sign.
var SPI = 3.14159265359;


/***/ }),

/***/ "./node_modules/proj4/lib/core.js":
/*!****************************************!*\
  !*** ./node_modules/proj4/lib/core.js ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _Proj__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Proj */ "./node_modules/proj4/lib/Proj.js");
/* harmony import */ var _transform__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./transform */ "./node_modules/proj4/lib/transform.js");


var wgs84 = (0,_Proj__WEBPACK_IMPORTED_MODULE_0__.default)('WGS84');

function transformer(from, to, coords) {
  var transformedArray, out, keys;
  if (Array.isArray(coords)) {
    transformedArray = (0,_transform__WEBPACK_IMPORTED_MODULE_1__.default)(from, to, coords) || {x: NaN, y: NaN};
    if (coords.length > 2) {
      if ((typeof from.name !== 'undefined' && from.name === 'geocent') || (typeof to.name !== 'undefined' && to.name === 'geocent')) {
        if (typeof transformedArray.z === 'number') {
          return [transformedArray.x, transformedArray.y, transformedArray.z].concat(coords.splice(3));
        } else {
          return [transformedArray.x, transformedArray.y, coords[2]].concat(coords.splice(3));
        }
      } else {
        return [transformedArray.x, transformedArray.y].concat(coords.splice(2));
      }
    } else {
      return [transformedArray.x, transformedArray.y];
    }
  } else {
    out = (0,_transform__WEBPACK_IMPORTED_MODULE_1__.default)(from, to, coords);
    keys = Object.keys(coords);
    if (keys.length === 2) {
      return out;
    }
    keys.forEach(function (key) {
      if ((typeof from.name !== 'undefined' && from.name === 'geocent') || (typeof to.name !== 'undefined' && to.name === 'geocent')) {
        if (key === 'x' || key === 'y' || key === 'z') {
          return;
        }
      } else {
        if (key === 'x' || key === 'y') {
          return;
        }
      }
      out[key] = coords[key];
    });
    return out;
  }
}

function checkProj(item) {
  if (item instanceof _Proj__WEBPACK_IMPORTED_MODULE_0__.default) {
    return item;
  }
  if (item.oProj) {
    return item.oProj;
  }
  return (0,_Proj__WEBPACK_IMPORTED_MODULE_0__.default)(item);
}

function proj4(fromProj, toProj, coord) {
  fromProj = checkProj(fromProj);
  var single = false;
  var obj;
  if (typeof toProj === 'undefined') {
    toProj = fromProj;
    fromProj = wgs84;
    single = true;
  } else if (typeof toProj.x !== 'undefined' || Array.isArray(toProj)) {
    coord = toProj;
    toProj = fromProj;
    fromProj = wgs84;
    single = true;
  }
  toProj = checkProj(toProj);
  if (coord) {
    return transformer(fromProj, toProj, coord);
  } else {
    obj = {
      forward: function (coords) {
        return transformer(fromProj, toProj, coords);
      },
      inverse: function (coords) {
        return transformer(toProj, fromProj, coords);
      }
    };
    if (single) {
      obj.oProj = toProj;
    }
    return obj;
  }
}
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (proj4);

/***/ }),

/***/ "./node_modules/proj4/lib/datum.js":
/*!*****************************************!*\
  !*** ./node_modules/proj4/lib/datum.js ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _constants_values__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./constants/values */ "./node_modules/proj4/lib/constants/values.js");


function datum(datumCode, datum_params, a, b, es, ep2, nadgrids) {
  var out = {};

  if (datumCode === undefined || datumCode === 'none') {
    out.datum_type = _constants_values__WEBPACK_IMPORTED_MODULE_0__.PJD_NODATUM;
  } else {
    out.datum_type = _constants_values__WEBPACK_IMPORTED_MODULE_0__.PJD_WGS84;
  }

  if (datum_params) {
    out.datum_params = datum_params.map(parseFloat);
    if (out.datum_params[0] !== 0 || out.datum_params[1] !== 0 || out.datum_params[2] !== 0) {
      out.datum_type = _constants_values__WEBPACK_IMPORTED_MODULE_0__.PJD_3PARAM;
    }
    if (out.datum_params.length > 3) {
      if (out.datum_params[3] !== 0 || out.datum_params[4] !== 0 || out.datum_params[5] !== 0 || out.datum_params[6] !== 0) {
        out.datum_type = _constants_values__WEBPACK_IMPORTED_MODULE_0__.PJD_7PARAM;
        out.datum_params[3] *= _constants_values__WEBPACK_IMPORTED_MODULE_0__.SEC_TO_RAD;
        out.datum_params[4] *= _constants_values__WEBPACK_IMPORTED_MODULE_0__.SEC_TO_RAD;
        out.datum_params[5] *= _constants_values__WEBPACK_IMPORTED_MODULE_0__.SEC_TO_RAD;
        out.datum_params[6] = (out.datum_params[6] / 1000000.0) + 1.0;
      }
    }
  }

  if (nadgrids) {
    out.datum_type = _constants_values__WEBPACK_IMPORTED_MODULE_0__.PJD_GRIDSHIFT;
    out.grids = nadgrids;
  }
  out.a = a; //datum object also uses these values
  out.b = b;
  out.es = es;
  out.ep2 = ep2;
  return out;
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (datum);


/***/ }),

/***/ "./node_modules/proj4/lib/datumUtils.js":
/*!**********************************************!*\
  !*** ./node_modules/proj4/lib/datumUtils.js ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "compareDatums": () => (/* binding */ compareDatums),
/* harmony export */   "geodeticToGeocentric": () => (/* binding */ geodeticToGeocentric),
/* harmony export */   "geocentricToGeodetic": () => (/* binding */ geocentricToGeodetic),
/* harmony export */   "geocentricToWgs84": () => (/* binding */ geocentricToWgs84),
/* harmony export */   "geocentricFromWgs84": () => (/* binding */ geocentricFromWgs84)
/* harmony export */ });
/* harmony import */ var _constants_values__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./constants/values */ "./node_modules/proj4/lib/constants/values.js");


function compareDatums(source, dest) {
  if (source.datum_type !== dest.datum_type) {
    return false; // false, datums are not equal
  } else if (source.a !== dest.a || Math.abs(source.es - dest.es) > 0.000000000050) {
    // the tolerance for es is to ensure that GRS80 and WGS84
    // are considered identical
    return false;
  } else if (source.datum_type === _constants_values__WEBPACK_IMPORTED_MODULE_0__.PJD_3PARAM) {
    return (source.datum_params[0] === dest.datum_params[0] && source.datum_params[1] === dest.datum_params[1] && source.datum_params[2] === dest.datum_params[2]);
  } else if (source.datum_type === _constants_values__WEBPACK_IMPORTED_MODULE_0__.PJD_7PARAM) {
    return (source.datum_params[0] === dest.datum_params[0] && source.datum_params[1] === dest.datum_params[1] && source.datum_params[2] === dest.datum_params[2] && source.datum_params[3] === dest.datum_params[3] && source.datum_params[4] === dest.datum_params[4] && source.datum_params[5] === dest.datum_params[5] && source.datum_params[6] === dest.datum_params[6]);
  } else {
    return true; // datums are equal
  }
} // cs_compare_datums()

/*
 * The function Convert_Geodetic_To_Geocentric converts geodetic coordinates
 * (latitude, longitude, and height) to geocentric coordinates (X, Y, Z),
 * according to the current ellipsoid parameters.
 *
 *    Latitude  : Geodetic latitude in radians                     (input)
 *    Longitude : Geodetic longitude in radians                    (input)
 *    Height    : Geodetic height, in meters                       (input)
 *    X         : Calculated Geocentric X coordinate, in meters    (output)
 *    Y         : Calculated Geocentric Y coordinate, in meters    (output)
 *    Z         : Calculated Geocentric Z coordinate, in meters    (output)
 *
 */
function geodeticToGeocentric(p, es, a) {
  var Longitude = p.x;
  var Latitude = p.y;
  var Height = p.z ? p.z : 0; //Z value not always supplied

  var Rn; /*  Earth radius at location  */
  var Sin_Lat; /*  Math.sin(Latitude)  */
  var Sin2_Lat; /*  Square of Math.sin(Latitude)  */
  var Cos_Lat; /*  Math.cos(Latitude)  */

  /*
   ** Don't blow up if Latitude is just a little out of the value
   ** range as it may just be a rounding issue.  Also removed longitude
   ** test, it should be wrapped by Math.cos() and Math.sin().  NFW for PROJ.4, Sep/2001.
   */
  if (Latitude < -_constants_values__WEBPACK_IMPORTED_MODULE_0__.HALF_PI && Latitude > -1.001 * _constants_values__WEBPACK_IMPORTED_MODULE_0__.HALF_PI) {
    Latitude = -_constants_values__WEBPACK_IMPORTED_MODULE_0__.HALF_PI;
  } else if (Latitude > _constants_values__WEBPACK_IMPORTED_MODULE_0__.HALF_PI && Latitude < 1.001 * _constants_values__WEBPACK_IMPORTED_MODULE_0__.HALF_PI) {
    Latitude = _constants_values__WEBPACK_IMPORTED_MODULE_0__.HALF_PI;
  } else if (Latitude < -_constants_values__WEBPACK_IMPORTED_MODULE_0__.HALF_PI) {
    /* Latitude out of range */
    //..reportError('geocent:lat out of range:' + Latitude);
    return { x: -Infinity, y: -Infinity, z: p.z };
  } else if (Latitude > _constants_values__WEBPACK_IMPORTED_MODULE_0__.HALF_PI) {
    /* Latitude out of range */
    return { x: Infinity, y: Infinity, z: p.z };
  }

  if (Longitude > Math.PI) {
    Longitude -= (2 * Math.PI);
  }
  Sin_Lat = Math.sin(Latitude);
  Cos_Lat = Math.cos(Latitude);
  Sin2_Lat = Sin_Lat * Sin_Lat;
  Rn = a / (Math.sqrt(1.0e0 - es * Sin2_Lat));
  return {
    x: (Rn + Height) * Cos_Lat * Math.cos(Longitude),
    y: (Rn + Height) * Cos_Lat * Math.sin(Longitude),
    z: ((Rn * (1 - es)) + Height) * Sin_Lat
  };
} // cs_geodetic_to_geocentric()

function geocentricToGeodetic(p, es, a, b) {
  /* local defintions and variables */
  /* end-criterium of loop, accuracy of sin(Latitude) */
  var genau = 1e-12;
  var genau2 = (genau * genau);
  var maxiter = 30;

  var P; /* distance between semi-minor axis and location */
  var RR; /* distance between center and location */
  var CT; /* sin of geocentric latitude */
  var ST; /* cos of geocentric latitude */
  var RX;
  var RK;
  var RN; /* Earth radius at location */
  var CPHI0; /* cos of start or old geodetic latitude in iterations */
  var SPHI0; /* sin of start or old geodetic latitude in iterations */
  var CPHI; /* cos of searched geodetic latitude */
  var SPHI; /* sin of searched geodetic latitude */
  var SDPHI; /* end-criterium: addition-theorem of sin(Latitude(iter)-Latitude(iter-1)) */
  var iter; /* # of continous iteration, max. 30 is always enough (s.a.) */

  var X = p.x;
  var Y = p.y;
  var Z = p.z ? p.z : 0.0; //Z value not always supplied
  var Longitude;
  var Latitude;
  var Height;

  P = Math.sqrt(X * X + Y * Y);
  RR = Math.sqrt(X * X + Y * Y + Z * Z);

  /*      special cases for latitude and longitude */
  if (P / a < genau) {

    /*  special case, if P=0. (X=0., Y=0.) */
    Longitude = 0.0;

    /*  if (X,Y,Z)=(0.,0.,0.) then Height becomes semi-minor axis
     *  of ellipsoid (=center of mass), Latitude becomes PI/2 */
    if (RR / a < genau) {
      Latitude = _constants_values__WEBPACK_IMPORTED_MODULE_0__.HALF_PI;
      Height = -b;
      return {
        x: p.x,
        y: p.y,
        z: p.z
      };
    }
  } else {
    /*  ellipsoidal (geodetic) longitude
     *  interval: -PI < Longitude <= +PI */
    Longitude = Math.atan2(Y, X);
  }

  /* --------------------------------------------------------------
   * Following iterative algorithm was developped by
   * "Institut for Erdmessung", University of Hannover, July 1988.
   * Internet: www.ife.uni-hannover.de
   * Iterative computation of CPHI,SPHI and Height.
   * Iteration of CPHI and SPHI to 10**-12 radian resp.
   * 2*10**-7 arcsec.
   * --------------------------------------------------------------
   */
  CT = Z / RR;
  ST = P / RR;
  RX = 1.0 / Math.sqrt(1.0 - es * (2.0 - es) * ST * ST);
  CPHI0 = ST * (1.0 - es) * RX;
  SPHI0 = CT * RX;
  iter = 0;

  /* loop to find sin(Latitude) resp. Latitude
   * until |sin(Latitude(iter)-Latitude(iter-1))| < genau */
  do {
    iter++;
    RN = a / Math.sqrt(1.0 - es * SPHI0 * SPHI0);

    /*  ellipsoidal (geodetic) height */
    Height = P * CPHI0 + Z * SPHI0 - RN * (1.0 - es * SPHI0 * SPHI0);

    RK = es * RN / (RN + Height);
    RX = 1.0 / Math.sqrt(1.0 - RK * (2.0 - RK) * ST * ST);
    CPHI = ST * (1.0 - RK) * RX;
    SPHI = CT * RX;
    SDPHI = SPHI * CPHI0 - CPHI * SPHI0;
    CPHI0 = CPHI;
    SPHI0 = SPHI;
  }
  while (SDPHI * SDPHI > genau2 && iter < maxiter);

  /*      ellipsoidal (geodetic) latitude */
  Latitude = Math.atan(SPHI / Math.abs(CPHI));
  return {
    x: Longitude,
    y: Latitude,
    z: Height
  };
} // cs_geocentric_to_geodetic()

/****************************************************************/
// pj_geocentic_to_wgs84( p )
//  p = point to transform in geocentric coordinates (x,y,z)


/** point object, nothing fancy, just allows values to be
    passed back and forth by reference rather than by value.
    Other point classes may be used as long as they have
    x and y properties, which will get modified in the transform method.
*/
function geocentricToWgs84(p, datum_type, datum_params) {

  if (datum_type === _constants_values__WEBPACK_IMPORTED_MODULE_0__.PJD_3PARAM) {
    // if( x[io] === HUGE_VAL )
    //    continue;
    return {
      x: p.x + datum_params[0],
      y: p.y + datum_params[1],
      z: p.z + datum_params[2],
    };
  } else if (datum_type === _constants_values__WEBPACK_IMPORTED_MODULE_0__.PJD_7PARAM) {
    var Dx_BF = datum_params[0];
    var Dy_BF = datum_params[1];
    var Dz_BF = datum_params[2];
    var Rx_BF = datum_params[3];
    var Ry_BF = datum_params[4];
    var Rz_BF = datum_params[5];
    var M_BF = datum_params[6];
    // if( x[io] === HUGE_VAL )
    //    continue;
    return {
      x: M_BF * (p.x - Rz_BF * p.y + Ry_BF * p.z) + Dx_BF,
      y: M_BF * (Rz_BF * p.x + p.y - Rx_BF * p.z) + Dy_BF,
      z: M_BF * (-Ry_BF * p.x + Rx_BF * p.y + p.z) + Dz_BF
    };
  }
} // cs_geocentric_to_wgs84

/****************************************************************/
// pj_geocentic_from_wgs84()
//  coordinate system definition,
//  point to transform in geocentric coordinates (x,y,z)
function geocentricFromWgs84(p, datum_type, datum_params) {

  if (datum_type === _constants_values__WEBPACK_IMPORTED_MODULE_0__.PJD_3PARAM) {
    //if( x[io] === HUGE_VAL )
    //    continue;
    return {
      x: p.x - datum_params[0],
      y: p.y - datum_params[1],
      z: p.z - datum_params[2],
    };

  } else if (datum_type === _constants_values__WEBPACK_IMPORTED_MODULE_0__.PJD_7PARAM) {
    var Dx_BF = datum_params[0];
    var Dy_BF = datum_params[1];
    var Dz_BF = datum_params[2];
    var Rx_BF = datum_params[3];
    var Ry_BF = datum_params[4];
    var Rz_BF = datum_params[5];
    var M_BF = datum_params[6];
    var x_tmp = (p.x - Dx_BF) / M_BF;
    var y_tmp = (p.y - Dy_BF) / M_BF;
    var z_tmp = (p.z - Dz_BF) / M_BF;
    //if( x[io] === HUGE_VAL )
    //    continue;

    return {
      x: x_tmp + Rz_BF * y_tmp - Ry_BF * z_tmp,
      y: -Rz_BF * x_tmp + y_tmp + Rx_BF * z_tmp,
      z: Ry_BF * x_tmp - Rx_BF * y_tmp + z_tmp
    };
  } //cs_geocentric_from_wgs84()
}


/***/ }),

/***/ "./node_modules/proj4/lib/datum_transform.js":
/*!***************************************************!*\
  !*** ./node_modules/proj4/lib/datum_transform.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__),
/* harmony export */   "applyGridShift": () => (/* binding */ applyGridShift)
/* harmony export */ });
/* harmony import */ var _constants_values__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./constants/values */ "./node_modules/proj4/lib/constants/values.js");
/* harmony import */ var _datumUtils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./datumUtils */ "./node_modules/proj4/lib/datumUtils.js");
/* harmony import */ var _common_adjust_lon__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./common/adjust_lon */ "./node_modules/proj4/lib/common/adjust_lon.js");




function checkParams(type) {
  return (type === _constants_values__WEBPACK_IMPORTED_MODULE_0__.PJD_3PARAM || type === _constants_values__WEBPACK_IMPORTED_MODULE_0__.PJD_7PARAM);
}

/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(source, dest, point) {
  // Short cut if the datums are identical.
  if ((0,_datumUtils__WEBPACK_IMPORTED_MODULE_1__.compareDatums)(source, dest)) {
    return point; // in this case, zero is sucess,
    // whereas cs_compare_datums returns 1 to indicate TRUE
    // confusing, should fix this
  }

  // Explicitly skip datum transform by setting 'datum=none' as parameter for either source or dest
  if (source.datum_type === _constants_values__WEBPACK_IMPORTED_MODULE_0__.PJD_NODATUM || dest.datum_type === _constants_values__WEBPACK_IMPORTED_MODULE_0__.PJD_NODATUM) {
    return point;
  }

  // If this datum requires grid shifts, then apply it to geodetic coordinates.
  var source_a = source.a;
  var source_es = source.es;
  if (source.datum_type === _constants_values__WEBPACK_IMPORTED_MODULE_0__.PJD_GRIDSHIFT) {
    var gridShiftCode = applyGridShift(source, false, point);
    if (gridShiftCode !== 0) {
      return undefined;
    }
    source_a = _constants_values__WEBPACK_IMPORTED_MODULE_0__.SRS_WGS84_SEMIMAJOR;
    source_es = _constants_values__WEBPACK_IMPORTED_MODULE_0__.SRS_WGS84_ESQUARED;
  }

  var dest_a = dest.a;
  var dest_b = dest.b;
  var dest_es = dest.es;
  if (dest.datum_type === _constants_values__WEBPACK_IMPORTED_MODULE_0__.PJD_GRIDSHIFT) {
    dest_a = _constants_values__WEBPACK_IMPORTED_MODULE_0__.SRS_WGS84_SEMIMAJOR;
    dest_b = _constants_values__WEBPACK_IMPORTED_MODULE_0__.SRS_WGS84_SEMIMINOR;
    dest_es = _constants_values__WEBPACK_IMPORTED_MODULE_0__.SRS_WGS84_ESQUARED;
  }

  // Do we need to go through geocentric coordinates?
  if (source_es === dest_es && source_a === dest_a && !checkParams(source.datum_type) &&  !checkParams(dest.datum_type)) {
    return point;
  }

  // Convert to geocentric coordinates.
  point = (0,_datumUtils__WEBPACK_IMPORTED_MODULE_1__.geodeticToGeocentric)(point, source_es, source_a);
  // Convert between datums
  if (checkParams(source.datum_type)) {
    point = (0,_datumUtils__WEBPACK_IMPORTED_MODULE_1__.geocentricToWgs84)(point, source.datum_type, source.datum_params);
  }
  if (checkParams(dest.datum_type)) {
    point = (0,_datumUtils__WEBPACK_IMPORTED_MODULE_1__.geocentricFromWgs84)(point, dest.datum_type, dest.datum_params);
  }
  point = (0,_datumUtils__WEBPACK_IMPORTED_MODULE_1__.geocentricToGeodetic)(point, dest_es, dest_a, dest_b);

  if (dest.datum_type === _constants_values__WEBPACK_IMPORTED_MODULE_0__.PJD_GRIDSHIFT) {
    var destGridShiftResult = applyGridShift(dest, true, point);
    if (destGridShiftResult !== 0) {
      return undefined;
    }
  }

  return point;
}

function applyGridShift(source, inverse, point) {
  if (source.grids === null || source.grids.length === 0) {
    console.log('Grid shift grids not found');
    return -1;
  }
  var input = {x: -point.x, y: point.y};
  var output = {x: Number.NaN, y: Number.NaN};
  var onlyMandatoryGrids = false;
  var attemptedGrids = [];
  for (var i = 0; i < source.grids.length; i++) {
    var grid = source.grids[i];
    attemptedGrids.push(grid.name);
    if (grid.isNull) {
      output = input;
      break;
    }
    onlyMandatoryGrids = grid.mandatory;
    if (grid.grid === null) {
      if (grid.mandatory) {
        console.log("Unable to find mandatory grid '" + grid.name + "'");
        return -1;
      }
      continue;
    }
    var subgrid = grid.grid.subgrids[0];
    // skip tables that don't match our point at all
    var epsilon = (Math.abs(subgrid.del[1]) + Math.abs(subgrid.del[0])) / 10000.0;
    var minX = subgrid.ll[0] - epsilon;
    var minY = subgrid.ll[1] - epsilon;
    var maxX = subgrid.ll[0] + (subgrid.lim[0] - 1) * subgrid.del[0] + epsilon;
    var maxY = subgrid.ll[1] + (subgrid.lim[1] - 1) * subgrid.del[1] + epsilon;
    if (minY > input.y || minX > input.x || maxY < input.y || maxX < input.x ) {
      continue;
    }
    output = applySubgridShift(input, inverse, subgrid);
    if (!isNaN(output.x)) {
      break;
    }
  }
  if (isNaN(output.x)) {
    console.log("Failed to find a grid shift table for location '"+
      -input.x * _constants_values__WEBPACK_IMPORTED_MODULE_0__.R2D + " " + input.y * _constants_values__WEBPACK_IMPORTED_MODULE_0__.R2D + " tried: '" + attemptedGrids + "'");
    return -1;
  }
  point.x = -output.x;
  point.y = output.y;
  return 0;
}

function applySubgridShift(pin, inverse, ct) {
  var val = {x: Number.NaN, y: Number.NaN};
  if (isNaN(pin.x)) { return val; }
  var tb = {x: pin.x, y: pin.y};
  tb.x -= ct.ll[0];
  tb.y -= ct.ll[1];
  tb.x = (0,_common_adjust_lon__WEBPACK_IMPORTED_MODULE_2__.default)(tb.x - Math.PI) + Math.PI;
  var t = nadInterpolate(tb, ct);
  if (inverse) {
    if (isNaN(t.x)) {
      return val;
    }
    t.x = tb.x - t.x;
    t.y = tb.y - t.y;
    var i = 9, tol = 1e-12;
    var dif, del;
    do {
      del = nadInterpolate(t, ct);
      if (isNaN(del.x)) {
        console.log("Inverse grid shift iteration failed, presumably at grid edge.  Using first approximation.");
        break;
      }
      dif = {x: tb.x - (del.x + t.x), y: tb.y - (del.y + t.y)};
      t.x += dif.x;
      t.y += dif.y;
    } while (i-- && Math.abs(dif.x) > tol && Math.abs(dif.y) > tol);
    if (i < 0) {
      console.log("Inverse grid shift iterator failed to converge.");
      return val;
    }
    val.x = (0,_common_adjust_lon__WEBPACK_IMPORTED_MODULE_2__.default)(t.x + ct.ll[0]);
    val.y = t.y + ct.ll[1];
  } else {
    if (!isNaN(t.x)) {
      val.x = pin.x + t.x;
      val.y = pin.y + t.y;
    }
  }
  return val;
}

function nadInterpolate(pin, ct) {
  var t = {x: pin.x / ct.del[0], y: pin.y / ct.del[1]};
  var indx = {x: Math.floor(t.x), y: Math.floor(t.y)};
  var frct = {x: t.x - 1.0 * indx.x, y: t.y - 1.0 * indx.y};
  var val= {x: Number.NaN, y: Number.NaN};
  var inx;
  if (indx.x < 0 || indx.x >= ct.lim[0]) {
    return val;
  }
  if (indx.y < 0 || indx.y >= ct.lim[1]) {
    return val;
  }
  inx = (indx.y * ct.lim[0]) + indx.x;
  var f00 = {x: ct.cvs[inx][0], y: ct.cvs[inx][1]};
  inx++;
  var f10= {x: ct.cvs[inx][0], y: ct.cvs[inx][1]};
  inx += ct.lim[0];
  var f11 = {x: ct.cvs[inx][0], y: ct.cvs[inx][1]};
  inx--;
  var f01 = {x: ct.cvs[inx][0], y: ct.cvs[inx][1]};
  var m11 = frct.x * frct.y, m10 = frct.x * (1.0 - frct.y),
    m00 = (1.0 - frct.x) * (1.0 - frct.y), m01 = (1.0 - frct.x) * frct.y;
  val.x = (m00 * f00.x + m10 * f10.x + m01 * f01.x + m11 * f11.x);
  val.y = (m00 * f00.y + m10 * f10.y + m01 * f01.y + m11 * f11.y);
  return val;
}


/***/ }),

/***/ "./node_modules/proj4/lib/defs.js":
/*!****************************************!*\
  !*** ./node_modules/proj4/lib/defs.js ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _global__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./global */ "./node_modules/proj4/lib/global.js");
/* harmony import */ var _projString__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./projString */ "./node_modules/proj4/lib/projString.js");
/* harmony import */ var wkt_parser__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! wkt-parser */ "./node_modules/wkt-parser/index.js");




function defs(name) {
  /*global console*/
  var that = this;
  if (arguments.length === 2) {
    var def = arguments[1];
    if (typeof def === 'string') {
      if (def.charAt(0) === '+') {
        defs[name] = (0,_projString__WEBPACK_IMPORTED_MODULE_1__.default)(arguments[1]);
      }
      else {
        defs[name] = (0,wkt_parser__WEBPACK_IMPORTED_MODULE_2__.default)(arguments[1]);
      }
    } else {
      defs[name] = def;
    }
  }
  else if (arguments.length === 1) {
    if (Array.isArray(name)) {
      return name.map(function(v) {
        if (Array.isArray(v)) {
          defs.apply(that, v);
        }
        else {
          defs(v);
        }
      });
    }
    else if (typeof name === 'string') {
      if (name in defs) {
        return defs[name];
      }
    }
    else if ('EPSG' in name) {
      defs['EPSG:' + name.EPSG] = name;
    }
    else if ('ESRI' in name) {
      defs['ESRI:' + name.ESRI] = name;
    }
    else if ('IAU2000' in name) {
      defs['IAU2000:' + name.IAU2000] = name;
    }
    else {
      console.log(name);
    }
    return;
  }


}
(0,_global__WEBPACK_IMPORTED_MODULE_0__.default)(defs);
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (defs);


/***/ }),

/***/ "./node_modules/proj4/lib/deriveConstants.js":
/*!***************************************************!*\
  !*** ./node_modules/proj4/lib/deriveConstants.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "eccentricity": () => (/* binding */ eccentricity),
/* harmony export */   "sphere": () => (/* binding */ sphere)
/* harmony export */ });
/* harmony import */ var _constants_values__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./constants/values */ "./node_modules/proj4/lib/constants/values.js");
/* harmony import */ var _constants_Ellipsoid__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./constants/Ellipsoid */ "./node_modules/proj4/lib/constants/Ellipsoid.js");
/* harmony import */ var _match__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./match */ "./node_modules/proj4/lib/match.js");




function eccentricity(a, b, rf, R_A) {
  var a2 = a * a; // used in geocentric
  var b2 = b * b; // used in geocentric
  var es = (a2 - b2) / a2; // e ^ 2
  var e = 0;
  if (R_A) {
    a *= 1 - es * (_constants_values__WEBPACK_IMPORTED_MODULE_0__.SIXTH + es * (_constants_values__WEBPACK_IMPORTED_MODULE_0__.RA4 + es * _constants_values__WEBPACK_IMPORTED_MODULE_0__.RA6));
    a2 = a * a;
    es = 0;
  } else {
    e = Math.sqrt(es); // eccentricity
  }
  var ep2 = (a2 - b2) / b2; // used in geocentric
  return {
    es: es,
    e: e,
    ep2: ep2
  };
}
function sphere(a, b, rf, ellps, sphere) {
  if (!a) { // do we have an ellipsoid?
    var ellipse = (0,_match__WEBPACK_IMPORTED_MODULE_2__.default)(_constants_Ellipsoid__WEBPACK_IMPORTED_MODULE_1__.default, ellps);
    if (!ellipse) {
      ellipse = _constants_Ellipsoid__WEBPACK_IMPORTED_MODULE_1__.WGS84;
    }
    a = ellipse.a;
    b = ellipse.b;
    rf = ellipse.rf;
  }

  if (rf && !b) {
    b = (1.0 - 1.0 / rf) * a;
  }
  if (rf === 0 || Math.abs(a - b) < _constants_values__WEBPACK_IMPORTED_MODULE_0__.EPSLN) {
    sphere = true;
    b = a;
  }
  return {
    a: a,
    b: b,
    rf: rf,
    sphere: sphere
  };
}


/***/ }),

/***/ "./node_modules/proj4/lib/extend.js":
/*!******************************************!*\
  !*** ./node_modules/proj4/lib/extend.js ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(destination, source) {
  destination = destination || {};
  var value, property;
  if (!source) {
    return destination;
  }
  for (property in source) {
    value = source[property];
    if (value !== undefined) {
      destination[property] = value;
    }
  }
  return destination;
}


/***/ }),

/***/ "./node_modules/proj4/lib/global.js":
/*!******************************************!*\
  !*** ./node_modules/proj4/lib/global.js ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(defs) {
  defs('EPSG:4326', "+title=WGS 84 (long/lat) +proj=longlat +ellps=WGS84 +datum=WGS84 +units=degrees");
  defs('EPSG:4269', "+title=NAD83 (long/lat) +proj=longlat +a=6378137.0 +b=6356752.31414036 +ellps=GRS80 +datum=NAD83 +units=degrees");
  defs('EPSG:3857', "+title=WGS 84 / Pseudo-Mercator +proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs");

  defs.WGS84 = defs['EPSG:4326'];
  defs['EPSG:3785'] = defs['EPSG:3857']; // maintain backward compat, official code is 3857
  defs.GOOGLE = defs['EPSG:3857'];
  defs['EPSG:900913'] = defs['EPSG:3857'];
  defs['EPSG:102113'] = defs['EPSG:3857'];
}


/***/ }),

/***/ "./node_modules/proj4/lib/index.js":
/*!*****************************************!*\
  !*** ./node_modules/proj4/lib/index.js ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./core */ "./node_modules/proj4/lib/core.js");
/* harmony import */ var _Proj__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Proj */ "./node_modules/proj4/lib/Proj.js");
/* harmony import */ var _Point__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Point */ "./node_modules/proj4/lib/Point.js");
/* harmony import */ var _common_toPoint__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./common/toPoint */ "./node_modules/proj4/lib/common/toPoint.js");
/* harmony import */ var _defs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./defs */ "./node_modules/proj4/lib/defs.js");
/* harmony import */ var _nadgrid__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./nadgrid */ "./node_modules/proj4/lib/nadgrid.js");
/* harmony import */ var _transform__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./transform */ "./node_modules/proj4/lib/transform.js");
/* harmony import */ var mgrs__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! mgrs */ "./node_modules/mgrs/mgrs.js");
/* harmony import */ var _projs__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../projs */ "./node_modules/proj4/projs.js");










_core__WEBPACK_IMPORTED_MODULE_0__.default.defaultDatum = 'WGS84'; //default datum
_core__WEBPACK_IMPORTED_MODULE_0__.default.Proj = _Proj__WEBPACK_IMPORTED_MODULE_1__.default;
_core__WEBPACK_IMPORTED_MODULE_0__.default.WGS84 = new _core__WEBPACK_IMPORTED_MODULE_0__.default.Proj('WGS84');
_core__WEBPACK_IMPORTED_MODULE_0__.default.Point = _Point__WEBPACK_IMPORTED_MODULE_2__.default;
_core__WEBPACK_IMPORTED_MODULE_0__.default.toPoint = _common_toPoint__WEBPACK_IMPORTED_MODULE_3__.default;
_core__WEBPACK_IMPORTED_MODULE_0__.default.defs = _defs__WEBPACK_IMPORTED_MODULE_4__.default;
_core__WEBPACK_IMPORTED_MODULE_0__.default.nadgrid = _nadgrid__WEBPACK_IMPORTED_MODULE_5__.default;
_core__WEBPACK_IMPORTED_MODULE_0__.default.transform = _transform__WEBPACK_IMPORTED_MODULE_6__.default;
_core__WEBPACK_IMPORTED_MODULE_0__.default.mgrs = mgrs__WEBPACK_IMPORTED_MODULE_7__.default;
_core__WEBPACK_IMPORTED_MODULE_0__.default.version = '__VERSION__';
(0,_projs__WEBPACK_IMPORTED_MODULE_8__.default)(_core__WEBPACK_IMPORTED_MODULE_0__.default);
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_core__WEBPACK_IMPORTED_MODULE_0__.default);


/***/ }),

/***/ "./node_modules/proj4/lib/match.js":
/*!*****************************************!*\
  !*** ./node_modules/proj4/lib/match.js ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ match)
/* harmony export */ });
var ignoredChar = /[\s_\-\/\(\)]/g;
function match(obj, key) {
  if (obj[key]) {
    return obj[key];
  }
  var keys = Object.keys(obj);
  var lkey = key.toLowerCase().replace(ignoredChar, '');
  var i = -1;
  var testkey, processedKey;
  while (++i < keys.length) {
    testkey = keys[i];
    processedKey = testkey.toLowerCase().replace(ignoredChar, '');
    if (processedKey === lkey) {
      return obj[testkey];
    }
  }
}


/***/ }),

/***/ "./node_modules/proj4/lib/nadgrid.js":
/*!*******************************************!*\
  !*** ./node_modules/proj4/lib/nadgrid.js ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ nadgrid),
/* harmony export */   "getNadgrids": () => (/* binding */ getNadgrids)
/* harmony export */ });
/**
 * Resources for details of NTv2 file formats:
 * - https://web.archive.org/web/20140127204822if_/http://www.mgs.gov.on.ca:80/stdprodconsume/groups/content/@mgs/@iandit/documents/resourcelist/stel02_047447.pdf
 * - http://mimaka.com/help/gs/html/004_NTV2%20Data%20Format.htm
 */

var loadedNadgrids = {};

/**
 * Load a binary NTv2 file (.gsb) to a key that can be used in a proj string like +nadgrids=<key>. Pass the NTv2 file
 * as an ArrayBuffer.
 */
function nadgrid(key, data) {
  var view = new DataView(data);
  var isLittleEndian = detectLittleEndian(view);
  var header = readHeader(view, isLittleEndian);
  if (header.nSubgrids > 1) {
    console.log('Only single NTv2 subgrids are currently supported, subsequent sub grids are ignored');
  }
  var subgrids = readSubgrids(view, header, isLittleEndian);
  var nadgrid = {header: header, subgrids: subgrids};
  loadedNadgrids[key] = nadgrid;
  return nadgrid;
}

/**
 * Given a proj4 value for nadgrids, return an array of loaded grids
 */
function getNadgrids(nadgrids) {
  // Format details: http://proj.maptools.org/gen_parms.html
  if (nadgrids === undefined) { return null; }
  var grids = nadgrids.split(',');
  return grids.map(parseNadgridString);
}

function parseNadgridString(value) {
  if (value.length === 0) {
    return null;
  }
  var optional = value[0] === '@';
  if (optional) {
    value = value.slice(1);
  }
  if (value === 'null') {
    return {name: 'null', mandatory: !optional, grid: null, isNull: true};
  }
  return {
    name: value,
    mandatory: !optional,
    grid: loadedNadgrids[value] || null,
    isNull: false
  };
}

function secondsToRadians(seconds) {
  return (seconds / 3600) * Math.PI / 180;
}

function detectLittleEndian(view) {
  var nFields = view.getInt32(8, false);
  if (nFields === 11) {
    return false;
  }
  nFields = view.getInt32(8, true);
  if (nFields !== 11) {
    console.warn('Failed to detect nadgrid endian-ness, defaulting to little-endian');
  }
  return true;
}

function readHeader(view, isLittleEndian) {
  return {
    nFields: view.getInt32(8, isLittleEndian),
    nSubgridFields: view.getInt32(24, isLittleEndian),
    nSubgrids: view.getInt32(40, isLittleEndian),
    shiftType: decodeString(view, 56, 56 + 8).trim(),
    fromSemiMajorAxis: view.getFloat64(120, isLittleEndian),
    fromSemiMinorAxis: view.getFloat64(136, isLittleEndian),
    toSemiMajorAxis: view.getFloat64(152, isLittleEndian),
    toSemiMinorAxis: view.getFloat64(168, isLittleEndian),
  };
}

function decodeString(view, start, end) {
  return String.fromCharCode.apply(null, new Uint8Array(view.buffer.slice(start, end)));
}

function readSubgrids(view, header, isLittleEndian) {
  var gridOffset = 176;
  var grids = [];
  for (var i = 0; i < header.nSubgrids; i++) {
    var subHeader = readGridHeader(view, gridOffset, isLittleEndian);
    var nodes = readGridNodes(view, gridOffset, subHeader, isLittleEndian);
    var lngColumnCount = Math.round(
      1 + (subHeader.upperLongitude - subHeader.lowerLongitude) / subHeader.longitudeInterval);
    var latColumnCount = Math.round(
      1 + (subHeader.upperLatitude - subHeader.lowerLatitude) / subHeader.latitudeInterval);
    // Proj4 operates on radians whereas the coordinates are in seconds in the grid
    grids.push({
      ll: [secondsToRadians(subHeader.lowerLongitude), secondsToRadians(subHeader.lowerLatitude)],
      del: [secondsToRadians(subHeader.longitudeInterval), secondsToRadians(subHeader.latitudeInterval)],
      lim: [lngColumnCount, latColumnCount],
      count: subHeader.gridNodeCount,
      cvs: mapNodes(nodes)
    });
  }
  return grids;
}

function mapNodes(nodes) {
  return nodes.map(function (r) {return [secondsToRadians(r.longitudeShift), secondsToRadians(r.latitudeShift)];});
}

function readGridHeader(view, offset, isLittleEndian) {
  return {
    name: decodeString(view, offset + 8, offset + 16).trim(),
    parent: decodeString(view, offset + 24, offset + 24 + 8).trim(),
    lowerLatitude: view.getFloat64(offset + 72, isLittleEndian),
    upperLatitude: view.getFloat64(offset + 88, isLittleEndian),
    lowerLongitude: view.getFloat64(offset + 104, isLittleEndian),
    upperLongitude: view.getFloat64(offset + 120, isLittleEndian),
    latitudeInterval: view.getFloat64(offset + 136, isLittleEndian),
    longitudeInterval: view.getFloat64(offset + 152, isLittleEndian),
    gridNodeCount: view.getInt32(offset + 168, isLittleEndian)
  };
}

function readGridNodes(view, offset, gridHeader, isLittleEndian) {
  var nodesOffset = offset + 176;
  var gridRecordLength = 16;
  var gridShiftRecords = [];
  for (var i = 0; i < gridHeader.gridNodeCount; i++) {
    var record = {
      latitudeShift: view.getFloat32(nodesOffset + i * gridRecordLength, isLittleEndian),
      longitudeShift: view.getFloat32(nodesOffset + i * gridRecordLength + 4, isLittleEndian),
      latitudeAccuracy: view.getFloat32(nodesOffset + i * gridRecordLength + 8, isLittleEndian),
      longitudeAccuracy: view.getFloat32(nodesOffset + i * gridRecordLength + 12, isLittleEndian),
    };
    gridShiftRecords.push(record);
  }
  return gridShiftRecords;
}


/***/ }),

/***/ "./node_modules/proj4/lib/parseCode.js":
/*!*********************************************!*\
  !*** ./node_modules/proj4/lib/parseCode.js ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _defs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./defs */ "./node_modules/proj4/lib/defs.js");
/* harmony import */ var wkt_parser__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! wkt-parser */ "./node_modules/wkt-parser/index.js");
/* harmony import */ var _projString__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./projString */ "./node_modules/proj4/lib/projString.js");
/* harmony import */ var _match__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./match */ "./node_modules/proj4/lib/match.js");




function testObj(code){
  return typeof code === 'string';
}
function testDef(code){
  return code in _defs__WEBPACK_IMPORTED_MODULE_0__.default;
}
var codeWords = ['PROJECTEDCRS', 'PROJCRS', 'GEOGCS','GEOCCS','PROJCS','LOCAL_CS', 'GEODCRS', 'GEODETICCRS', 'GEODETICDATUM', 'ENGCRS', 'ENGINEERINGCRS'];
function testWKT(code){
  return codeWords.some(function (word) {
    return code.indexOf(word) > -1;
  });
}
var codes = ['3857', '900913', '3785', '102113'];
function checkMercator(item) {
  var auth = (0,_match__WEBPACK_IMPORTED_MODULE_3__.default)(item, 'authority');
  if (!auth) {
    return;
  }
  var code = (0,_match__WEBPACK_IMPORTED_MODULE_3__.default)(auth, 'epsg');
  return code && codes.indexOf(code) > -1;
}
function checkProjStr(item) {
  var ext = (0,_match__WEBPACK_IMPORTED_MODULE_3__.default)(item, 'extension');
  if (!ext) {
    return;
  }
  return (0,_match__WEBPACK_IMPORTED_MODULE_3__.default)(ext, 'proj4');
}
function testProj(code){
  return code[0] === '+';
}
function parse(code){
  if (testObj(code)) {
    //check to see if this is a WKT string
    if (testDef(code)) {
      return _defs__WEBPACK_IMPORTED_MODULE_0__.default[code];
    }
    if (testWKT(code)) {
      var out = (0,wkt_parser__WEBPACK_IMPORTED_MODULE_1__.default)(code);
      // test of spetial case, due to this being a very common and often malformed
      if (checkMercator(out)) {
        return _defs__WEBPACK_IMPORTED_MODULE_0__.default["EPSG:3857"];
      }
      var maybeProjStr = checkProjStr(out);
      if (maybeProjStr) {
        return (0,_projString__WEBPACK_IMPORTED_MODULE_2__.default)(maybeProjStr);
      }
      return out;
    }
    if (testProj(code)) {
      return (0,_projString__WEBPACK_IMPORTED_MODULE_2__.default)(code);
    }
  }else{
    return code;
  }
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (parse);


/***/ }),

/***/ "./node_modules/proj4/lib/projString.js":
/*!**********************************************!*\
  !*** ./node_modules/proj4/lib/projString.js ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _constants_values__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./constants/values */ "./node_modules/proj4/lib/constants/values.js");
/* harmony import */ var _constants_PrimeMeridian__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./constants/PrimeMeridian */ "./node_modules/proj4/lib/constants/PrimeMeridian.js");
/* harmony import */ var _constants_units__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./constants/units */ "./node_modules/proj4/lib/constants/units.js");
/* harmony import */ var _match__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./match */ "./node_modules/proj4/lib/match.js");





/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(defData) {
  var self = {};
  var paramObj = defData.split('+').map(function(v) {
    return v.trim();
  }).filter(function(a) {
    return a;
  }).reduce(function(p, a) {
    var split = a.split('=');
    split.push(true);
    p[split[0].toLowerCase()] = split[1];
    return p;
  }, {});
  var paramName, paramVal, paramOutname;
  var params = {
    proj: 'projName',
    datum: 'datumCode',
    rf: function(v) {
      self.rf = parseFloat(v);
    },
    lat_0: function(v) {
      self.lat0 = v * _constants_values__WEBPACK_IMPORTED_MODULE_0__.D2R;
    },
    lat_1: function(v) {
      self.lat1 = v * _constants_values__WEBPACK_IMPORTED_MODULE_0__.D2R;
    },
    lat_2: function(v) {
      self.lat2 = v * _constants_values__WEBPACK_IMPORTED_MODULE_0__.D2R;
    },
    lat_ts: function(v) {
      self.lat_ts = v * _constants_values__WEBPACK_IMPORTED_MODULE_0__.D2R;
    },
    lon_0: function(v) {
      self.long0 = v * _constants_values__WEBPACK_IMPORTED_MODULE_0__.D2R;
    },
    lon_1: function(v) {
      self.long1 = v * _constants_values__WEBPACK_IMPORTED_MODULE_0__.D2R;
    },
    lon_2: function(v) {
      self.long2 = v * _constants_values__WEBPACK_IMPORTED_MODULE_0__.D2R;
    },
    alpha: function(v) {
      self.alpha = parseFloat(v) * _constants_values__WEBPACK_IMPORTED_MODULE_0__.D2R;
    },
    gamma: function(v) {
      self.rectified_grid_angle = parseFloat(v);
    },
    lonc: function(v) {
      self.longc = v * _constants_values__WEBPACK_IMPORTED_MODULE_0__.D2R;
    },
    x_0: function(v) {
      self.x0 = parseFloat(v);
    },
    y_0: function(v) {
      self.y0 = parseFloat(v);
    },
    k_0: function(v) {
      self.k0 = parseFloat(v);
    },
    k: function(v) {
      self.k0 = parseFloat(v);
    },
    a: function(v) {
      self.a = parseFloat(v);
    },
    b: function(v) {
      self.b = parseFloat(v);
    },
    r_a: function() {
      self.R_A = true;
    },
    zone: function(v) {
      self.zone = parseInt(v, 10);
    },
    south: function() {
      self.utmSouth = true;
    },
    towgs84: function(v) {
      self.datum_params = v.split(",").map(function(a) {
        return parseFloat(a);
      });
    },
    to_meter: function(v) {
      self.to_meter = parseFloat(v);
    },
    units: function(v) {
      self.units = v;
      var unit = (0,_match__WEBPACK_IMPORTED_MODULE_3__.default)(_constants_units__WEBPACK_IMPORTED_MODULE_2__.default, v);
      if (unit) {
        self.to_meter = unit.to_meter;
      }
    },
    from_greenwich: function(v) {
      self.from_greenwich = v * _constants_values__WEBPACK_IMPORTED_MODULE_0__.D2R;
    },
    pm: function(v) {
      var pm = (0,_match__WEBPACK_IMPORTED_MODULE_3__.default)(_constants_PrimeMeridian__WEBPACK_IMPORTED_MODULE_1__.default, v);
      self.from_greenwich = (pm ? pm : parseFloat(v)) * _constants_values__WEBPACK_IMPORTED_MODULE_0__.D2R;
    },
    nadgrids: function(v) {
      if (v === '@null') {
        self.datumCode = 'none';
      }
      else {
        self.nadgrids = v;
      }
    },
    axis: function(v) {
      var legalAxis = "ewnsud";
      if (v.length === 3 && legalAxis.indexOf(v.substr(0, 1)) !== -1 && legalAxis.indexOf(v.substr(1, 1)) !== -1 && legalAxis.indexOf(v.substr(2, 1)) !== -1) {
        self.axis = v;
      }
    },
    approx: function() {
      self.approx = true;
    }
  };
  for (paramName in paramObj) {
    paramVal = paramObj[paramName];
    if (paramName in params) {
      paramOutname = params[paramName];
      if (typeof paramOutname === 'function') {
        paramOutname(paramVal);
      }
      else {
        self[paramOutname] = paramVal;
      }
    }
    else {
      self[paramName] = paramVal;
    }
  }
  if(typeof self.datumCode === 'string' && self.datumCode !== "WGS84"){
    self.datumCode = self.datumCode.toLowerCase();
  }
  return self;
}


/***/ }),

/***/ "./node_modules/proj4/lib/projections.js":
/*!***********************************************!*\
  !*** ./node_modules/proj4/lib/projections.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "add": () => (/* binding */ add),
/* harmony export */   "get": () => (/* binding */ get),
/* harmony export */   "start": () => (/* binding */ start),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _projections_merc__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./projections/merc */ "./node_modules/proj4/lib/projections/merc.js");
/* harmony import */ var _projections_longlat__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./projections/longlat */ "./node_modules/proj4/lib/projections/longlat.js");


var projs = [_projections_merc__WEBPACK_IMPORTED_MODULE_0__.default, _projections_longlat__WEBPACK_IMPORTED_MODULE_1__.default];
var names = {};
var projStore = [];

function add(proj, i) {
  var len = projStore.length;
  if (!proj.names) {
    console.log(i);
    return true;
  }
  projStore[len] = proj;
  proj.names.forEach(function(n) {
    names[n.toLowerCase()] = len;
  });
  return this;
}



function get(name) {
  if (!name) {
    return false;
  }
  var n = name.toLowerCase();
  if (typeof names[n] !== 'undefined' && projStore[names[n]]) {
    return projStore[names[n]];
  }
}

function start() {
  projs.forEach(add);
}
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
  start: start,
  add: add,
  get: get
});


/***/ }),

/***/ "./node_modules/proj4/lib/projections/aea.js":
/*!***************************************************!*\
  !*** ./node_modules/proj4/lib/projections/aea.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "init": () => (/* binding */ init),
/* harmony export */   "forward": () => (/* binding */ forward),
/* harmony export */   "inverse": () => (/* binding */ inverse),
/* harmony export */   "phi1z": () => (/* binding */ phi1z),
/* harmony export */   "names": () => (/* binding */ names),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _common_msfnz__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../common/msfnz */ "./node_modules/proj4/lib/common/msfnz.js");
/* harmony import */ var _common_qsfnz__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../common/qsfnz */ "./node_modules/proj4/lib/common/qsfnz.js");
/* harmony import */ var _common_adjust_lon__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../common/adjust_lon */ "./node_modules/proj4/lib/common/adjust_lon.js");
/* harmony import */ var _common_asinz__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../common/asinz */ "./node_modules/proj4/lib/common/asinz.js");
/* harmony import */ var _constants_values__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../constants/values */ "./node_modules/proj4/lib/constants/values.js");






function init() {

  if (Math.abs(this.lat1 + this.lat2) < _constants_values__WEBPACK_IMPORTED_MODULE_4__.EPSLN) {
    return;
  }
  this.temp = this.b / this.a;
  this.es = 1 - Math.pow(this.temp, 2);
  this.e3 = Math.sqrt(this.es);

  this.sin_po = Math.sin(this.lat1);
  this.cos_po = Math.cos(this.lat1);
  this.t1 = this.sin_po;
  this.con = this.sin_po;
  this.ms1 = (0,_common_msfnz__WEBPACK_IMPORTED_MODULE_0__.default)(this.e3, this.sin_po, this.cos_po);
  this.qs1 = (0,_common_qsfnz__WEBPACK_IMPORTED_MODULE_1__.default)(this.e3, this.sin_po, this.cos_po);

  this.sin_po = Math.sin(this.lat2);
  this.cos_po = Math.cos(this.lat2);
  this.t2 = this.sin_po;
  this.ms2 = (0,_common_msfnz__WEBPACK_IMPORTED_MODULE_0__.default)(this.e3, this.sin_po, this.cos_po);
  this.qs2 = (0,_common_qsfnz__WEBPACK_IMPORTED_MODULE_1__.default)(this.e3, this.sin_po, this.cos_po);

  this.sin_po = Math.sin(this.lat0);
  this.cos_po = Math.cos(this.lat0);
  this.t3 = this.sin_po;
  this.qs0 = (0,_common_qsfnz__WEBPACK_IMPORTED_MODULE_1__.default)(this.e3, this.sin_po, this.cos_po);

  if (Math.abs(this.lat1 - this.lat2) > _constants_values__WEBPACK_IMPORTED_MODULE_4__.EPSLN) {
    this.ns0 = (this.ms1 * this.ms1 - this.ms2 * this.ms2) / (this.qs2 - this.qs1);
  }
  else {
    this.ns0 = this.con;
  }
  this.c = this.ms1 * this.ms1 + this.ns0 * this.qs1;
  this.rh = this.a * Math.sqrt(this.c - this.ns0 * this.qs0) / this.ns0;
}

/* Albers Conical Equal Area forward equations--mapping lat,long to x,y
  -------------------------------------------------------------------*/
function forward(p) {

  var lon = p.x;
  var lat = p.y;

  this.sin_phi = Math.sin(lat);
  this.cos_phi = Math.cos(lat);

  var qs = (0,_common_qsfnz__WEBPACK_IMPORTED_MODULE_1__.default)(this.e3, this.sin_phi, this.cos_phi);
  var rh1 = this.a * Math.sqrt(this.c - this.ns0 * qs) / this.ns0;
  var theta = this.ns0 * (0,_common_adjust_lon__WEBPACK_IMPORTED_MODULE_2__.default)(lon - this.long0);
  var x = rh1 * Math.sin(theta) + this.x0;
  var y = this.rh - rh1 * Math.cos(theta) + this.y0;

  p.x = x;
  p.y = y;
  return p;
}

function inverse(p) {
  var rh1, qs, con, theta, lon, lat;

  p.x -= this.x0;
  p.y = this.rh - p.y + this.y0;
  if (this.ns0 >= 0) {
    rh1 = Math.sqrt(p.x * p.x + p.y * p.y);
    con = 1;
  }
  else {
    rh1 = -Math.sqrt(p.x * p.x + p.y * p.y);
    con = -1;
  }
  theta = 0;
  if (rh1 !== 0) {
    theta = Math.atan2(con * p.x, con * p.y);
  }
  con = rh1 * this.ns0 / this.a;
  if (this.sphere) {
    lat = Math.asin((this.c - con * con) / (2 * this.ns0));
  }
  else {
    qs = (this.c - con * con) / this.ns0;
    lat = this.phi1z(this.e3, qs);
  }

  lon = (0,_common_adjust_lon__WEBPACK_IMPORTED_MODULE_2__.default)(theta / this.ns0 + this.long0);
  p.x = lon;
  p.y = lat;
  return p;
}

/* Function to compute phi1, the latitude for the inverse of the
   Albers Conical Equal-Area projection.
-------------------------------------------*/
function phi1z(eccent, qs) {
  var sinphi, cosphi, con, com, dphi;
  var phi = (0,_common_asinz__WEBPACK_IMPORTED_MODULE_3__.default)(0.5 * qs);
  if (eccent < _constants_values__WEBPACK_IMPORTED_MODULE_4__.EPSLN) {
    return phi;
  }

  var eccnts = eccent * eccent;
  for (var i = 1; i <= 25; i++) {
    sinphi = Math.sin(phi);
    cosphi = Math.cos(phi);
    con = eccent * sinphi;
    com = 1 - con * con;
    dphi = 0.5 * com * com / cosphi * (qs / (1 - eccnts) - sinphi / com + 0.5 / eccent * Math.log((1 - con) / (1 + con)));
    phi = phi + dphi;
    if (Math.abs(dphi) <= 1e-7) {
      return phi;
    }
  }
  return null;
}

var names = ["Albers_Conic_Equal_Area", "Albers", "aea"];
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
  init: init,
  forward: forward,
  inverse: inverse,
  names: names,
  phi1z: phi1z
});


/***/ }),

/***/ "./node_modules/proj4/lib/projections/aeqd.js":
/*!****************************************************!*\
  !*** ./node_modules/proj4/lib/projections/aeqd.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "init": () => (/* binding */ init),
/* harmony export */   "forward": () => (/* binding */ forward),
/* harmony export */   "inverse": () => (/* binding */ inverse),
/* harmony export */   "names": () => (/* binding */ names),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _common_adjust_lon__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../common/adjust_lon */ "./node_modules/proj4/lib/common/adjust_lon.js");
/* harmony import */ var _constants_values__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../constants/values */ "./node_modules/proj4/lib/constants/values.js");
/* harmony import */ var _common_mlfn__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../common/mlfn */ "./node_modules/proj4/lib/common/mlfn.js");
/* harmony import */ var _common_e0fn__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../common/e0fn */ "./node_modules/proj4/lib/common/e0fn.js");
/* harmony import */ var _common_e1fn__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../common/e1fn */ "./node_modules/proj4/lib/common/e1fn.js");
/* harmony import */ var _common_e2fn__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../common/e2fn */ "./node_modules/proj4/lib/common/e2fn.js");
/* harmony import */ var _common_e3fn__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../common/e3fn */ "./node_modules/proj4/lib/common/e3fn.js");
/* harmony import */ var _common_gN__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../common/gN */ "./node_modules/proj4/lib/common/gN.js");
/* harmony import */ var _common_asinz__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../common/asinz */ "./node_modules/proj4/lib/common/asinz.js");
/* harmony import */ var _common_imlfn__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../common/imlfn */ "./node_modules/proj4/lib/common/imlfn.js");














function init() {
  this.sin_p12 = Math.sin(this.lat0);
  this.cos_p12 = Math.cos(this.lat0);
}

function forward(p) {
  var lon = p.x;
  var lat = p.y;
  var sinphi = Math.sin(p.y);
  var cosphi = Math.cos(p.y);
  var dlon = (0,_common_adjust_lon__WEBPACK_IMPORTED_MODULE_0__.default)(lon - this.long0);
  var e0, e1, e2, e3, Mlp, Ml, tanphi, Nl1, Nl, psi, Az, G, H, GH, Hs, c, kp, cos_c, s, s2, s3, s4, s5;
  if (this.sphere) {
    if (Math.abs(this.sin_p12 - 1) <= _constants_values__WEBPACK_IMPORTED_MODULE_1__.EPSLN) {
      //North Pole case
      p.x = this.x0 + this.a * (_constants_values__WEBPACK_IMPORTED_MODULE_1__.HALF_PI - lat) * Math.sin(dlon);
      p.y = this.y0 - this.a * (_constants_values__WEBPACK_IMPORTED_MODULE_1__.HALF_PI - lat) * Math.cos(dlon);
      return p;
    }
    else if (Math.abs(this.sin_p12 + 1) <= _constants_values__WEBPACK_IMPORTED_MODULE_1__.EPSLN) {
      //South Pole case
      p.x = this.x0 + this.a * (_constants_values__WEBPACK_IMPORTED_MODULE_1__.HALF_PI + lat) * Math.sin(dlon);
      p.y = this.y0 + this.a * (_constants_values__WEBPACK_IMPORTED_MODULE_1__.HALF_PI + lat) * Math.cos(dlon);
      return p;
    }
    else {
      //default case
      cos_c = this.sin_p12 * sinphi + this.cos_p12 * cosphi * Math.cos(dlon);
      c = Math.acos(cos_c);
      kp = c ? c / Math.sin(c) : 1;
      p.x = this.x0 + this.a * kp * cosphi * Math.sin(dlon);
      p.y = this.y0 + this.a * kp * (this.cos_p12 * sinphi - this.sin_p12 * cosphi * Math.cos(dlon));
      return p;
    }
  }
  else {
    e0 = (0,_common_e0fn__WEBPACK_IMPORTED_MODULE_3__.default)(this.es);
    e1 = (0,_common_e1fn__WEBPACK_IMPORTED_MODULE_4__.default)(this.es);
    e2 = (0,_common_e2fn__WEBPACK_IMPORTED_MODULE_5__.default)(this.es);
    e3 = (0,_common_e3fn__WEBPACK_IMPORTED_MODULE_6__.default)(this.es);
    if (Math.abs(this.sin_p12 - 1) <= _constants_values__WEBPACK_IMPORTED_MODULE_1__.EPSLN) {
      //North Pole case
      Mlp = this.a * (0,_common_mlfn__WEBPACK_IMPORTED_MODULE_2__.default)(e0, e1, e2, e3, _constants_values__WEBPACK_IMPORTED_MODULE_1__.HALF_PI);
      Ml = this.a * (0,_common_mlfn__WEBPACK_IMPORTED_MODULE_2__.default)(e0, e1, e2, e3, lat);
      p.x = this.x0 + (Mlp - Ml) * Math.sin(dlon);
      p.y = this.y0 - (Mlp - Ml) * Math.cos(dlon);
      return p;
    }
    else if (Math.abs(this.sin_p12 + 1) <= _constants_values__WEBPACK_IMPORTED_MODULE_1__.EPSLN) {
      //South Pole case
      Mlp = this.a * (0,_common_mlfn__WEBPACK_IMPORTED_MODULE_2__.default)(e0, e1, e2, e3, _constants_values__WEBPACK_IMPORTED_MODULE_1__.HALF_PI);
      Ml = this.a * (0,_common_mlfn__WEBPACK_IMPORTED_MODULE_2__.default)(e0, e1, e2, e3, lat);
      p.x = this.x0 + (Mlp + Ml) * Math.sin(dlon);
      p.y = this.y0 + (Mlp + Ml) * Math.cos(dlon);
      return p;
    }
    else {
      //Default case
      tanphi = sinphi / cosphi;
      Nl1 = (0,_common_gN__WEBPACK_IMPORTED_MODULE_7__.default)(this.a, this.e, this.sin_p12);
      Nl = (0,_common_gN__WEBPACK_IMPORTED_MODULE_7__.default)(this.a, this.e, sinphi);
      psi = Math.atan((1 - this.es) * tanphi + this.es * Nl1 * this.sin_p12 / (Nl * cosphi));
      Az = Math.atan2(Math.sin(dlon), this.cos_p12 * Math.tan(psi) - this.sin_p12 * Math.cos(dlon));
      if (Az === 0) {
        s = Math.asin(this.cos_p12 * Math.sin(psi) - this.sin_p12 * Math.cos(psi));
      }
      else if (Math.abs(Math.abs(Az) - Math.PI) <= _constants_values__WEBPACK_IMPORTED_MODULE_1__.EPSLN) {
        s = -Math.asin(this.cos_p12 * Math.sin(psi) - this.sin_p12 * Math.cos(psi));
      }
      else {
        s = Math.asin(Math.sin(dlon) * Math.cos(psi) / Math.sin(Az));
      }
      G = this.e * this.sin_p12 / Math.sqrt(1 - this.es);
      H = this.e * this.cos_p12 * Math.cos(Az) / Math.sqrt(1 - this.es);
      GH = G * H;
      Hs = H * H;
      s2 = s * s;
      s3 = s2 * s;
      s4 = s3 * s;
      s5 = s4 * s;
      c = Nl1 * s * (1 - s2 * Hs * (1 - Hs) / 6 + s3 / 8 * GH * (1 - 2 * Hs) + s4 / 120 * (Hs * (4 - 7 * Hs) - 3 * G * G * (1 - 7 * Hs)) - s5 / 48 * GH);
      p.x = this.x0 + c * Math.sin(Az);
      p.y = this.y0 + c * Math.cos(Az);
      return p;
    }
  }


}

function inverse(p) {
  p.x -= this.x0;
  p.y -= this.y0;
  var rh, z, sinz, cosz, lon, lat, con, e0, e1, e2, e3, Mlp, M, N1, psi, Az, cosAz, tmp, A, B, D, Ee, F, sinpsi;
  if (this.sphere) {
    rh = Math.sqrt(p.x * p.x + p.y * p.y);
    if (rh > (2 * _constants_values__WEBPACK_IMPORTED_MODULE_1__.HALF_PI * this.a)) {
      return;
    }
    z = rh / this.a;

    sinz = Math.sin(z);
    cosz = Math.cos(z);

    lon = this.long0;
    if (Math.abs(rh) <= _constants_values__WEBPACK_IMPORTED_MODULE_1__.EPSLN) {
      lat = this.lat0;
    }
    else {
      lat = (0,_common_asinz__WEBPACK_IMPORTED_MODULE_8__.default)(cosz * this.sin_p12 + (p.y * sinz * this.cos_p12) / rh);
      con = Math.abs(this.lat0) - _constants_values__WEBPACK_IMPORTED_MODULE_1__.HALF_PI;
      if (Math.abs(con) <= _constants_values__WEBPACK_IMPORTED_MODULE_1__.EPSLN) {
        if (this.lat0 >= 0) {
          lon = (0,_common_adjust_lon__WEBPACK_IMPORTED_MODULE_0__.default)(this.long0 + Math.atan2(p.x, - p.y));
        }
        else {
          lon = (0,_common_adjust_lon__WEBPACK_IMPORTED_MODULE_0__.default)(this.long0 - Math.atan2(-p.x, p.y));
        }
      }
      else {
        /*con = cosz - this.sin_p12 * Math.sin(lat);
        if ((Math.abs(con) < EPSLN) && (Math.abs(p.x) < EPSLN)) {
          //no-op, just keep the lon value as is
        } else {
          var temp = Math.atan2((p.x * sinz * this.cos_p12), (con * rh));
          lon = adjust_lon(this.long0 + Math.atan2((p.x * sinz * this.cos_p12), (con * rh)));
        }*/
        lon = (0,_common_adjust_lon__WEBPACK_IMPORTED_MODULE_0__.default)(this.long0 + Math.atan2(p.x * sinz, rh * this.cos_p12 * cosz - p.y * this.sin_p12 * sinz));
      }
    }

    p.x = lon;
    p.y = lat;
    return p;
  }
  else {
    e0 = (0,_common_e0fn__WEBPACK_IMPORTED_MODULE_3__.default)(this.es);
    e1 = (0,_common_e1fn__WEBPACK_IMPORTED_MODULE_4__.default)(this.es);
    e2 = (0,_common_e2fn__WEBPACK_IMPORTED_MODULE_5__.default)(this.es);
    e3 = (0,_common_e3fn__WEBPACK_IMPORTED_MODULE_6__.default)(this.es);
    if (Math.abs(this.sin_p12 - 1) <= _constants_values__WEBPACK_IMPORTED_MODULE_1__.EPSLN) {
      //North pole case
      Mlp = this.a * (0,_common_mlfn__WEBPACK_IMPORTED_MODULE_2__.default)(e0, e1, e2, e3, _constants_values__WEBPACK_IMPORTED_MODULE_1__.HALF_PI);
      rh = Math.sqrt(p.x * p.x + p.y * p.y);
      M = Mlp - rh;
      lat = (0,_common_imlfn__WEBPACK_IMPORTED_MODULE_9__.default)(M / this.a, e0, e1, e2, e3);
      lon = (0,_common_adjust_lon__WEBPACK_IMPORTED_MODULE_0__.default)(this.long0 + Math.atan2(p.x, - 1 * p.y));
      p.x = lon;
      p.y = lat;
      return p;
    }
    else if (Math.abs(this.sin_p12 + 1) <= _constants_values__WEBPACK_IMPORTED_MODULE_1__.EPSLN) {
      //South pole case
      Mlp = this.a * (0,_common_mlfn__WEBPACK_IMPORTED_MODULE_2__.default)(e0, e1, e2, e3, _constants_values__WEBPACK_IMPORTED_MODULE_1__.HALF_PI);
      rh = Math.sqrt(p.x * p.x + p.y * p.y);
      M = rh - Mlp;

      lat = (0,_common_imlfn__WEBPACK_IMPORTED_MODULE_9__.default)(M / this.a, e0, e1, e2, e3);
      lon = (0,_common_adjust_lon__WEBPACK_IMPORTED_MODULE_0__.default)(this.long0 + Math.atan2(p.x, p.y));
      p.x = lon;
      p.y = lat;
      return p;
    }
    else {
      //default case
      rh = Math.sqrt(p.x * p.x + p.y * p.y);
      Az = Math.atan2(p.x, p.y);
      N1 = (0,_common_gN__WEBPACK_IMPORTED_MODULE_7__.default)(this.a, this.e, this.sin_p12);
      cosAz = Math.cos(Az);
      tmp = this.e * this.cos_p12 * cosAz;
      A = -tmp * tmp / (1 - this.es);
      B = 3 * this.es * (1 - A) * this.sin_p12 * this.cos_p12 * cosAz / (1 - this.es);
      D = rh / N1;
      Ee = D - A * (1 + A) * Math.pow(D, 3) / 6 - B * (1 + 3 * A) * Math.pow(D, 4) / 24;
      F = 1 - A * Ee * Ee / 2 - D * Ee * Ee * Ee / 6;
      psi = Math.asin(this.sin_p12 * Math.cos(Ee) + this.cos_p12 * Math.sin(Ee) * cosAz);
      lon = (0,_common_adjust_lon__WEBPACK_IMPORTED_MODULE_0__.default)(this.long0 + Math.asin(Math.sin(Az) * Math.sin(Ee) / Math.cos(psi)));
      sinpsi = Math.sin(psi);
      lat = Math.atan2((sinpsi - this.es * F * this.sin_p12) * Math.tan(psi), sinpsi * (1 - this.es));
      p.x = lon;
      p.y = lat;
      return p;
    }
  }

}

var names = ["Azimuthal_Equidistant", "aeqd"];
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
  init: init,
  forward: forward,
  inverse: inverse,
  names: names
});


/***/ }),

/***/ "./node_modules/proj4/lib/projections/cass.js":
/*!****************************************************!*\
  !*** ./node_modules/proj4/lib/projections/cass.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "init": () => (/* binding */ init),
/* harmony export */   "forward": () => (/* binding */ forward),
/* harmony export */   "inverse": () => (/* binding */ inverse),
/* harmony export */   "names": () => (/* binding */ names),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _common_mlfn__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../common/mlfn */ "./node_modules/proj4/lib/common/mlfn.js");
/* harmony import */ var _common_e0fn__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../common/e0fn */ "./node_modules/proj4/lib/common/e0fn.js");
/* harmony import */ var _common_e1fn__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../common/e1fn */ "./node_modules/proj4/lib/common/e1fn.js");
/* harmony import */ var _common_e2fn__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../common/e2fn */ "./node_modules/proj4/lib/common/e2fn.js");
/* harmony import */ var _common_e3fn__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../common/e3fn */ "./node_modules/proj4/lib/common/e3fn.js");
/* harmony import */ var _common_gN__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../common/gN */ "./node_modules/proj4/lib/common/gN.js");
/* harmony import */ var _common_adjust_lon__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../common/adjust_lon */ "./node_modules/proj4/lib/common/adjust_lon.js");
/* harmony import */ var _common_adjust_lat__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../common/adjust_lat */ "./node_modules/proj4/lib/common/adjust_lat.js");
/* harmony import */ var _common_imlfn__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../common/imlfn */ "./node_modules/proj4/lib/common/imlfn.js");
/* harmony import */ var _constants_values__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../constants/values */ "./node_modules/proj4/lib/constants/values.js");











function init() {
  if (!this.sphere) {
    this.e0 = (0,_common_e0fn__WEBPACK_IMPORTED_MODULE_1__.default)(this.es);
    this.e1 = (0,_common_e1fn__WEBPACK_IMPORTED_MODULE_2__.default)(this.es);
    this.e2 = (0,_common_e2fn__WEBPACK_IMPORTED_MODULE_3__.default)(this.es);
    this.e3 = (0,_common_e3fn__WEBPACK_IMPORTED_MODULE_4__.default)(this.es);
    this.ml0 = this.a * (0,_common_mlfn__WEBPACK_IMPORTED_MODULE_0__.default)(this.e0, this.e1, this.e2, this.e3, this.lat0);
  }
}

/* Cassini forward equations--mapping lat,long to x,y
  -----------------------------------------------------------------------*/
function forward(p) {

  /* Forward equations
      -----------------*/
  var x, y;
  var lam = p.x;
  var phi = p.y;
  lam = (0,_common_adjust_lon__WEBPACK_IMPORTED_MODULE_6__.default)(lam - this.long0);

  if (this.sphere) {
    x = this.a * Math.asin(Math.cos(phi) * Math.sin(lam));
    y = this.a * (Math.atan2(Math.tan(phi), Math.cos(lam)) - this.lat0);
  }
  else {
    //ellipsoid
    var sinphi = Math.sin(phi);
    var cosphi = Math.cos(phi);
    var nl = (0,_common_gN__WEBPACK_IMPORTED_MODULE_5__.default)(this.a, this.e, sinphi);
    var tl = Math.tan(phi) * Math.tan(phi);
    var al = lam * Math.cos(phi);
    var asq = al * al;
    var cl = this.es * cosphi * cosphi / (1 - this.es);
    var ml = this.a * (0,_common_mlfn__WEBPACK_IMPORTED_MODULE_0__.default)(this.e0, this.e1, this.e2, this.e3, phi);

    x = nl * al * (1 - asq * tl * (1 / 6 - (8 - tl + 8 * cl) * asq / 120));
    y = ml - this.ml0 + nl * sinphi / cosphi * asq * (0.5 + (5 - tl + 6 * cl) * asq / 24);


  }

  p.x = x + this.x0;
  p.y = y + this.y0;
  return p;
}

/* Inverse equations
  -----------------*/
function inverse(p) {
  p.x -= this.x0;
  p.y -= this.y0;
  var x = p.x / this.a;
  var y = p.y / this.a;
  var phi, lam;

  if (this.sphere) {
    var dd = y + this.lat0;
    phi = Math.asin(Math.sin(dd) * Math.cos(x));
    lam = Math.atan2(Math.tan(x), Math.cos(dd));
  }
  else {
    /* ellipsoid */
    var ml1 = this.ml0 / this.a + y;
    var phi1 = (0,_common_imlfn__WEBPACK_IMPORTED_MODULE_8__.default)(ml1, this.e0, this.e1, this.e2, this.e3);
    if (Math.abs(Math.abs(phi1) - _constants_values__WEBPACK_IMPORTED_MODULE_9__.HALF_PI) <= _constants_values__WEBPACK_IMPORTED_MODULE_9__.EPSLN) {
      p.x = this.long0;
      p.y = _constants_values__WEBPACK_IMPORTED_MODULE_9__.HALF_PI;
      if (y < 0) {
        p.y *= -1;
      }
      return p;
    }
    var nl1 = (0,_common_gN__WEBPACK_IMPORTED_MODULE_5__.default)(this.a, this.e, Math.sin(phi1));

    var rl1 = nl1 * nl1 * nl1 / this.a / this.a * (1 - this.es);
    var tl1 = Math.pow(Math.tan(phi1), 2);
    var dl = x * this.a / nl1;
    var dsq = dl * dl;
    phi = phi1 - nl1 * Math.tan(phi1) / rl1 * dl * dl * (0.5 - (1 + 3 * tl1) * dl * dl / 24);
    lam = dl * (1 - dsq * (tl1 / 3 + (1 + 3 * tl1) * tl1 * dsq / 15)) / Math.cos(phi1);

  }

  p.x = (0,_common_adjust_lon__WEBPACK_IMPORTED_MODULE_6__.default)(lam + this.long0);
  p.y = (0,_common_adjust_lat__WEBPACK_IMPORTED_MODULE_7__.default)(phi);
  return p;

}

var names = ["Cassini", "Cassini_Soldner", "cass"];
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
  init: init,
  forward: forward,
  inverse: inverse,
  names: names
});


/***/ }),

/***/ "./node_modules/proj4/lib/projections/cea.js":
/*!***************************************************!*\
  !*** ./node_modules/proj4/lib/projections/cea.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "init": () => (/* binding */ init),
/* harmony export */   "forward": () => (/* binding */ forward),
/* harmony export */   "inverse": () => (/* binding */ inverse),
/* harmony export */   "names": () => (/* binding */ names),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _common_adjust_lon__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../common/adjust_lon */ "./node_modules/proj4/lib/common/adjust_lon.js");
/* harmony import */ var _common_qsfnz__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../common/qsfnz */ "./node_modules/proj4/lib/common/qsfnz.js");
/* harmony import */ var _common_msfnz__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../common/msfnz */ "./node_modules/proj4/lib/common/msfnz.js");
/* harmony import */ var _common_iqsfnz__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../common/iqsfnz */ "./node_modules/proj4/lib/common/iqsfnz.js");





/*
  reference:
    "Cartographic Projection Procedures for the UNIX Environment-
    A User's Manual" by Gerald I. Evenden,
    USGS Open File Report 90-284and Release 4 Interim Reports (2003)
*/
function init() {
  //no-op
  if (!this.sphere) {
    this.k0 = (0,_common_msfnz__WEBPACK_IMPORTED_MODULE_2__.default)(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts));
  }
}

/* Cylindrical Equal Area forward equations--mapping lat,long to x,y
    ------------------------------------------------------------*/
function forward(p) {
  var lon = p.x;
  var lat = p.y;
  var x, y;
  /* Forward equations
      -----------------*/
  var dlon = (0,_common_adjust_lon__WEBPACK_IMPORTED_MODULE_0__.default)(lon - this.long0);
  if (this.sphere) {
    x = this.x0 + this.a * dlon * Math.cos(this.lat_ts);
    y = this.y0 + this.a * Math.sin(lat) / Math.cos(this.lat_ts);
  }
  else {
    var qs = (0,_common_qsfnz__WEBPACK_IMPORTED_MODULE_1__.default)(this.e, Math.sin(lat));
    x = this.x0 + this.a * this.k0 * dlon;
    y = this.y0 + this.a * qs * 0.5 / this.k0;
  }

  p.x = x;
  p.y = y;
  return p;
}

/* Cylindrical Equal Area inverse equations--mapping x,y to lat/long
    ------------------------------------------------------------*/
function inverse(p) {
  p.x -= this.x0;
  p.y -= this.y0;
  var lon, lat;

  if (this.sphere) {
    lon = (0,_common_adjust_lon__WEBPACK_IMPORTED_MODULE_0__.default)(this.long0 + (p.x / this.a) / Math.cos(this.lat_ts));
    lat = Math.asin((p.y / this.a) * Math.cos(this.lat_ts));
  }
  else {
    lat = (0,_common_iqsfnz__WEBPACK_IMPORTED_MODULE_3__.default)(this.e, 2 * p.y * this.k0 / this.a);
    lon = (0,_common_adjust_lon__WEBPACK_IMPORTED_MODULE_0__.default)(this.long0 + p.x / (this.a * this.k0));
  }

  p.x = lon;
  p.y = lat;
  return p;
}

var names = ["cea"];
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
  init: init,
  forward: forward,
  inverse: inverse,
  names: names
});


/***/ }),

/***/ "./node_modules/proj4/lib/projections/eqc.js":
/*!***************************************************!*\
  !*** ./node_modules/proj4/lib/projections/eqc.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "init": () => (/* binding */ init),
/* harmony export */   "forward": () => (/* binding */ forward),
/* harmony export */   "inverse": () => (/* binding */ inverse),
/* harmony export */   "names": () => (/* binding */ names),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _common_adjust_lon__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../common/adjust_lon */ "./node_modules/proj4/lib/common/adjust_lon.js");
/* harmony import */ var _common_adjust_lat__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../common/adjust_lat */ "./node_modules/proj4/lib/common/adjust_lat.js");



function init() {

  this.x0 = this.x0 || 0;
  this.y0 = this.y0 || 0;
  this.lat0 = this.lat0 || 0;
  this.long0 = this.long0 || 0;
  this.lat_ts = this.lat_ts || 0;
  this.title = this.title || "Equidistant Cylindrical (Plate Carre)";

  this.rc = Math.cos(this.lat_ts);
}

// forward equations--mapping lat,long to x,y
// -----------------------------------------------------------------
function forward(p) {

  var lon = p.x;
  var lat = p.y;

  var dlon = (0,_common_adjust_lon__WEBPACK_IMPORTED_MODULE_0__.default)(lon - this.long0);
  var dlat = (0,_common_adjust_lat__WEBPACK_IMPORTED_MODULE_1__.default)(lat - this.lat0);
  p.x = this.x0 + (this.a * dlon * this.rc);
  p.y = this.y0 + (this.a * dlat);
  return p;
}

// inverse equations--mapping x,y to lat/long
// -----------------------------------------------------------------
function inverse(p) {

  var x = p.x;
  var y = p.y;

  p.x = (0,_common_adjust_lon__WEBPACK_IMPORTED_MODULE_0__.default)(this.long0 + ((x - this.x0) / (this.a * this.rc)));
  p.y = (0,_common_adjust_lat__WEBPACK_IMPORTED_MODULE_1__.default)(this.lat0 + ((y - this.y0) / (this.a)));
  return p;
}

var names = ["Equirectangular", "Equidistant_Cylindrical", "eqc"];
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
  init: init,
  forward: forward,
  inverse: inverse,
  names: names
});


/***/ }),

/***/ "./node_modules/proj4/lib/projections/eqdc.js":
/*!****************************************************!*\
  !*** ./node_modules/proj4/lib/projections/eqdc.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "init": () => (/* binding */ init),
/* harmony export */   "forward": () => (/* binding */ forward),
/* harmony export */   "inverse": () => (/* binding */ inverse),
/* harmony export */   "names": () => (/* binding */ names),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _common_e0fn__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../common/e0fn */ "./node_modules/proj4/lib/common/e0fn.js");
/* harmony import */ var _common_e1fn__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../common/e1fn */ "./node_modules/proj4/lib/common/e1fn.js");
/* harmony import */ var _common_e2fn__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../common/e2fn */ "./node_modules/proj4/lib/common/e2fn.js");
/* harmony import */ var _common_e3fn__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../common/e3fn */ "./node_modules/proj4/lib/common/e3fn.js");
/* harmony import */ var _common_msfnz__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../common/msfnz */ "./node_modules/proj4/lib/common/msfnz.js");
/* harmony import */ var _common_mlfn__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../common/mlfn */ "./node_modules/proj4/lib/common/mlfn.js");
/* harmony import */ var _common_adjust_lon__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../common/adjust_lon */ "./node_modules/proj4/lib/common/adjust_lon.js");
/* harmony import */ var _common_adjust_lat__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../common/adjust_lat */ "./node_modules/proj4/lib/common/adjust_lat.js");
/* harmony import */ var _common_imlfn__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../common/imlfn */ "./node_modules/proj4/lib/common/imlfn.js");
/* harmony import */ var _constants_values__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../constants/values */ "./node_modules/proj4/lib/constants/values.js");











function init() {

  /* Place parameters in static storage for common use
      -------------------------------------------------*/
  // Standard Parallels cannot be equal and on opposite sides of the equator
  if (Math.abs(this.lat1 + this.lat2) < _constants_values__WEBPACK_IMPORTED_MODULE_9__.EPSLN) {
    return;
  }
  this.lat2 = this.lat2 || this.lat1;
  this.temp = this.b / this.a;
  this.es = 1 - Math.pow(this.temp, 2);
  this.e = Math.sqrt(this.es);
  this.e0 = (0,_common_e0fn__WEBPACK_IMPORTED_MODULE_0__.default)(this.es);
  this.e1 = (0,_common_e1fn__WEBPACK_IMPORTED_MODULE_1__.default)(this.es);
  this.e2 = (0,_common_e2fn__WEBPACK_IMPORTED_MODULE_2__.default)(this.es);
  this.e3 = (0,_common_e3fn__WEBPACK_IMPORTED_MODULE_3__.default)(this.es);

  this.sinphi = Math.sin(this.lat1);
  this.cosphi = Math.cos(this.lat1);

  this.ms1 = (0,_common_msfnz__WEBPACK_IMPORTED_MODULE_4__.default)(this.e, this.sinphi, this.cosphi);
  this.ml1 = (0,_common_mlfn__WEBPACK_IMPORTED_MODULE_5__.default)(this.e0, this.e1, this.e2, this.e3, this.lat1);

  if (Math.abs(this.lat1 - this.lat2) < _constants_values__WEBPACK_IMPORTED_MODULE_9__.EPSLN) {
    this.ns = this.sinphi;
  }
  else {
    this.sinphi = Math.sin(this.lat2);
    this.cosphi = Math.cos(this.lat2);
    this.ms2 = (0,_common_msfnz__WEBPACK_IMPORTED_MODULE_4__.default)(this.e, this.sinphi, this.cosphi);
    this.ml2 = (0,_common_mlfn__WEBPACK_IMPORTED_MODULE_5__.default)(this.e0, this.e1, this.e2, this.e3, this.lat2);
    this.ns = (this.ms1 - this.ms2) / (this.ml2 - this.ml1);
  }
  this.g = this.ml1 + this.ms1 / this.ns;
  this.ml0 = (0,_common_mlfn__WEBPACK_IMPORTED_MODULE_5__.default)(this.e0, this.e1, this.e2, this.e3, this.lat0);
  this.rh = this.a * (this.g - this.ml0);
}

/* Equidistant Conic forward equations--mapping lat,long to x,y
  -----------------------------------------------------------*/
function forward(p) {
  var lon = p.x;
  var lat = p.y;
  var rh1;

  /* Forward equations
      -----------------*/
  if (this.sphere) {
    rh1 = this.a * (this.g - lat);
  }
  else {
    var ml = (0,_common_mlfn__WEBPACK_IMPORTED_MODULE_5__.default)(this.e0, this.e1, this.e2, this.e3, lat);
    rh1 = this.a * (this.g - ml);
  }
  var theta = this.ns * (0,_common_adjust_lon__WEBPACK_IMPORTED_MODULE_6__.default)(lon - this.long0);
  var x = this.x0 + rh1 * Math.sin(theta);
  var y = this.y0 + this.rh - rh1 * Math.cos(theta);
  p.x = x;
  p.y = y;
  return p;
}

/* Inverse equations
  -----------------*/
function inverse(p) {
  p.x -= this.x0;
  p.y = this.rh - p.y + this.y0;
  var con, rh1, lat, lon;
  if (this.ns >= 0) {
    rh1 = Math.sqrt(p.x * p.x + p.y * p.y);
    con = 1;
  }
  else {
    rh1 = -Math.sqrt(p.x * p.x + p.y * p.y);
    con = -1;
  }
  var theta = 0;
  if (rh1 !== 0) {
    theta = Math.atan2(con * p.x, con * p.y);
  }

  if (this.sphere) {
    lon = (0,_common_adjust_lon__WEBPACK_IMPORTED_MODULE_6__.default)(this.long0 + theta / this.ns);
    lat = (0,_common_adjust_lat__WEBPACK_IMPORTED_MODULE_7__.default)(this.g - rh1 / this.a);
    p.x = lon;
    p.y = lat;
    return p;
  }
  else {
    var ml = this.g - rh1 / this.a;
    lat = (0,_common_imlfn__WEBPACK_IMPORTED_MODULE_8__.default)(ml, this.e0, this.e1, this.e2, this.e3);
    lon = (0,_common_adjust_lon__WEBPACK_IMPORTED_MODULE_6__.default)(this.long0 + theta / this.ns);
    p.x = lon;
    p.y = lat;
    return p;
  }

}

var names = ["Equidistant_Conic", "eqdc"];
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
  init: init,
  forward: forward,
  inverse: inverse,
  names: names
});


/***/ }),

/***/ "./node_modules/proj4/lib/projections/etmerc.js":
/*!******************************************************!*\
  !*** ./node_modules/proj4/lib/projections/etmerc.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "init": () => (/* binding */ init),
/* harmony export */   "forward": () => (/* binding */ forward),
/* harmony export */   "inverse": () => (/* binding */ inverse),
/* harmony export */   "names": () => (/* binding */ names),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _projections_tmerc__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../projections/tmerc */ "./node_modules/proj4/lib/projections/tmerc.js");
/* harmony import */ var _common_sinh__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../common/sinh */ "./node_modules/proj4/lib/common/sinh.js");
/* harmony import */ var _common_hypot__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../common/hypot */ "./node_modules/proj4/lib/common/hypot.js");
/* harmony import */ var _common_asinhy__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../common/asinhy */ "./node_modules/proj4/lib/common/asinhy.js");
/* harmony import */ var _common_gatg__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../common/gatg */ "./node_modules/proj4/lib/common/gatg.js");
/* harmony import */ var _common_clens__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../common/clens */ "./node_modules/proj4/lib/common/clens.js");
/* harmony import */ var _common_clens_cmplx__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../common/clens_cmplx */ "./node_modules/proj4/lib/common/clens_cmplx.js");
/* harmony import */ var _common_adjust_lon__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../common/adjust_lon */ "./node_modules/proj4/lib/common/adjust_lon.js");
// Heavily based on this etmerc projection implementation
// https://github.com/mbloch/mapshaper-proj/blob/master/src/projections/etmerc.js










function init() {
  if (!this.approx && (isNaN(this.es) || this.es <= 0)) {
    throw new Error('Incorrect elliptical usage. Try using the +approx option in the proj string, or PROJECTION["Fast_Transverse_Mercator"] in the WKT.');
  }
  if (this.approx) {
    // When '+approx' is set, use tmerc instead
    _projections_tmerc__WEBPACK_IMPORTED_MODULE_0__.default.init.apply(this);
    this.forward = _projections_tmerc__WEBPACK_IMPORTED_MODULE_0__.default.forward;
    this.inverse = _projections_tmerc__WEBPACK_IMPORTED_MODULE_0__.default.inverse;
  }

  this.x0 = this.x0 !== undefined ? this.x0 : 0;
  this.y0 = this.y0 !== undefined ? this.y0 : 0;
  this.long0 = this.long0 !== undefined ? this.long0 : 0;
  this.lat0 = this.lat0 !== undefined ? this.lat0 : 0;

  this.cgb = [];
  this.cbg = [];
  this.utg = [];
  this.gtu = [];

  var f = this.es / (1 + Math.sqrt(1 - this.es));
  var n = f / (2 - f);
  var np = n;

  this.cgb[0] = n * (2 + n * (-2 / 3 + n * (-2 + n * (116 / 45 + n * (26 / 45 + n * (-2854 / 675 ))))));
  this.cbg[0] = n * (-2 + n * ( 2 / 3 + n * ( 4 / 3 + n * (-82 / 45 + n * (32 / 45 + n * (4642 / 4725))))));

  np = np * n;
  this.cgb[1] = np * (7 / 3 + n * (-8 / 5 + n * (-227 / 45 + n * (2704 / 315 + n * (2323 / 945)))));
  this.cbg[1] = np * (5 / 3 + n * (-16 / 15 + n * ( -13 / 9 + n * (904 / 315 + n * (-1522 / 945)))));

  np = np * n;
  this.cgb[2] = np * (56 / 15 + n * (-136 / 35 + n * (-1262 / 105 + n * (73814 / 2835))));
  this.cbg[2] = np * (-26 / 15 + n * (34 / 21 + n * (8 / 5 + n * (-12686 / 2835))));

  np = np * n;
  this.cgb[3] = np * (4279 / 630 + n * (-332 / 35 + n * (-399572 / 14175)));
  this.cbg[3] = np * (1237 / 630 + n * (-12 / 5 + n * ( -24832 / 14175)));

  np = np * n;
  this.cgb[4] = np * (4174 / 315 + n * (-144838 / 6237));
  this.cbg[4] = np * (-734 / 315 + n * (109598 / 31185));

  np = np * n;
  this.cgb[5] = np * (601676 / 22275);
  this.cbg[5] = np * (444337 / 155925);

  np = Math.pow(n, 2);
  this.Qn = this.k0 / (1 + n) * (1 + np * (1 / 4 + np * (1 / 64 + np / 256)));

  this.utg[0] = n * (-0.5 + n * ( 2 / 3 + n * (-37 / 96 + n * ( 1 / 360 + n * (81 / 512 + n * (-96199 / 604800))))));
  this.gtu[0] = n * (0.5 + n * (-2 / 3 + n * (5 / 16 + n * (41 / 180 + n * (-127 / 288 + n * (7891 / 37800))))));

  this.utg[1] = np * (-1 / 48 + n * (-1 / 15 + n * (437 / 1440 + n * (-46 / 105 + n * (1118711 / 3870720)))));
  this.gtu[1] = np * (13 / 48 + n * (-3 / 5 + n * (557 / 1440 + n * (281 / 630 + n * (-1983433 / 1935360)))));

  np = np * n;
  this.utg[2] = np * (-17 / 480 + n * (37 / 840 + n * (209 / 4480 + n * (-5569 / 90720 ))));
  this.gtu[2] = np * (61 / 240 + n * (-103 / 140 + n * (15061 / 26880 + n * (167603 / 181440))));

  np = np * n;
  this.utg[3] = np * (-4397 / 161280 + n * (11 / 504 + n * (830251 / 7257600)));
  this.gtu[3] = np * (49561 / 161280 + n * (-179 / 168 + n * (6601661 / 7257600)));

  np = np * n;
  this.utg[4] = np * (-4583 / 161280 + n * (108847 / 3991680));
  this.gtu[4] = np * (34729 / 80640 + n * (-3418889 / 1995840));

  np = np * n;
  this.utg[5] = np * (-20648693 / 638668800);
  this.gtu[5] = np * (212378941 / 319334400);

  var Z = (0,_common_gatg__WEBPACK_IMPORTED_MODULE_4__.default)(this.cbg, this.lat0);
  this.Zb = -this.Qn * (Z + (0,_common_clens__WEBPACK_IMPORTED_MODULE_5__.default)(this.gtu, 2 * Z));
}

function forward(p) {
  var Ce = (0,_common_adjust_lon__WEBPACK_IMPORTED_MODULE_7__.default)(p.x - this.long0);
  var Cn = p.y;

  Cn = (0,_common_gatg__WEBPACK_IMPORTED_MODULE_4__.default)(this.cbg, Cn);
  var sin_Cn = Math.sin(Cn);
  var cos_Cn = Math.cos(Cn);
  var sin_Ce = Math.sin(Ce);
  var cos_Ce = Math.cos(Ce);

  Cn = Math.atan2(sin_Cn, cos_Ce * cos_Cn);
  Ce = Math.atan2(sin_Ce * cos_Cn, (0,_common_hypot__WEBPACK_IMPORTED_MODULE_2__.default)(sin_Cn, cos_Cn * cos_Ce));
  Ce = (0,_common_asinhy__WEBPACK_IMPORTED_MODULE_3__.default)(Math.tan(Ce));

  var tmp = (0,_common_clens_cmplx__WEBPACK_IMPORTED_MODULE_6__.default)(this.gtu, 2 * Cn, 2 * Ce);

  Cn = Cn + tmp[0];
  Ce = Ce + tmp[1];

  var x;
  var y;

  if (Math.abs(Ce) <= 2.623395162778) {
    x = this.a * (this.Qn * Ce) + this.x0;
    y = this.a * (this.Qn * Cn + this.Zb) + this.y0;
  }
  else {
    x = Infinity;
    y = Infinity;
  }

  p.x = x;
  p.y = y;

  return p;
}

function inverse(p) {
  var Ce = (p.x - this.x0) * (1 / this.a);
  var Cn = (p.y - this.y0) * (1 / this.a);

  Cn = (Cn - this.Zb) / this.Qn;
  Ce = Ce / this.Qn;

  var lon;
  var lat;

  if (Math.abs(Ce) <= 2.623395162778) {
    var tmp = (0,_common_clens_cmplx__WEBPACK_IMPORTED_MODULE_6__.default)(this.utg, 2 * Cn, 2 * Ce);

    Cn = Cn + tmp[0];
    Ce = Ce + tmp[1];
    Ce = Math.atan((0,_common_sinh__WEBPACK_IMPORTED_MODULE_1__.default)(Ce));

    var sin_Cn = Math.sin(Cn);
    var cos_Cn = Math.cos(Cn);
    var sin_Ce = Math.sin(Ce);
    var cos_Ce = Math.cos(Ce);

    Cn = Math.atan2(sin_Cn * cos_Ce, (0,_common_hypot__WEBPACK_IMPORTED_MODULE_2__.default)(sin_Ce, cos_Ce * cos_Cn));
    Ce = Math.atan2(sin_Ce, cos_Ce * cos_Cn);

    lon = (0,_common_adjust_lon__WEBPACK_IMPORTED_MODULE_7__.default)(Ce + this.long0);
    lat = (0,_common_gatg__WEBPACK_IMPORTED_MODULE_4__.default)(this.cgb, Cn);
  }
  else {
    lon = Infinity;
    lat = Infinity;
  }

  p.x = lon;
  p.y = lat;

  return p;
}

var names = ["Extended_Transverse_Mercator", "Extended Transverse Mercator", "etmerc", "Transverse_Mercator", "Transverse Mercator", "tmerc"];
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
  init: init,
  forward: forward,
  inverse: inverse,
  names: names
});


/***/ }),

/***/ "./node_modules/proj4/lib/projections/gauss.js":
/*!*****************************************************!*\
  !*** ./node_modules/proj4/lib/projections/gauss.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "init": () => (/* binding */ init),
/* harmony export */   "forward": () => (/* binding */ forward),
/* harmony export */   "inverse": () => (/* binding */ inverse),
/* harmony export */   "names": () => (/* binding */ names),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _common_srat__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../common/srat */ "./node_modules/proj4/lib/common/srat.js");
/* harmony import */ var _constants_values__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../constants/values */ "./node_modules/proj4/lib/constants/values.js");

var MAX_ITER = 20;


function init() {
  var sphi = Math.sin(this.lat0);
  var cphi = Math.cos(this.lat0);
  cphi *= cphi;
  this.rc = Math.sqrt(1 - this.es) / (1 - this.es * sphi * sphi);
  this.C = Math.sqrt(1 + this.es * cphi * cphi / (1 - this.es));
  this.phic0 = Math.asin(sphi / this.C);
  this.ratexp = 0.5 * this.C * this.e;
  this.K = Math.tan(0.5 * this.phic0 + _constants_values__WEBPACK_IMPORTED_MODULE_1__.FORTPI) / (Math.pow(Math.tan(0.5 * this.lat0 + _constants_values__WEBPACK_IMPORTED_MODULE_1__.FORTPI), this.C) * (0,_common_srat__WEBPACK_IMPORTED_MODULE_0__.default)(this.e * sphi, this.ratexp));
}

function forward(p) {
  var lon = p.x;
  var lat = p.y;

  p.y = 2 * Math.atan(this.K * Math.pow(Math.tan(0.5 * lat + _constants_values__WEBPACK_IMPORTED_MODULE_1__.FORTPI), this.C) * (0,_common_srat__WEBPACK_IMPORTED_MODULE_0__.default)(this.e * Math.sin(lat), this.ratexp)) - _constants_values__WEBPACK_IMPORTED_MODULE_1__.HALF_PI;
  p.x = this.C * lon;
  return p;
}

function inverse(p) {
  var DEL_TOL = 1e-14;
  var lon = p.x / this.C;
  var lat = p.y;
  var num = Math.pow(Math.tan(0.5 * lat + _constants_values__WEBPACK_IMPORTED_MODULE_1__.FORTPI) / this.K, 1 / this.C);
  for (var i = MAX_ITER; i > 0; --i) {
    lat = 2 * Math.atan(num * (0,_common_srat__WEBPACK_IMPORTED_MODULE_0__.default)(this.e * Math.sin(p.y), - 0.5 * this.e)) - _constants_values__WEBPACK_IMPORTED_MODULE_1__.HALF_PI;
    if (Math.abs(lat - p.y) < DEL_TOL) {
      break;
    }
    p.y = lat;
  }
  /* convergence failed */
  if (!i) {
    return null;
  }
  p.x = lon;
  p.y = lat;
  return p;
}

var names = ["gauss"];
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
  init: init,
  forward: forward,
  inverse: inverse,
  names: names
});


/***/ }),

/***/ "./node_modules/proj4/lib/projections/geocent.js":
/*!*******************************************************!*\
  !*** ./node_modules/proj4/lib/projections/geocent.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "init": () => (/* binding */ init),
/* harmony export */   "forward": () => (/* binding */ forward),
/* harmony export */   "inverse": () => (/* binding */ inverse),
/* harmony export */   "names": () => (/* binding */ names),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _datumUtils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../datumUtils */ "./node_modules/proj4/lib/datumUtils.js");


function init() {
    this.name = 'geocent';

}

function forward(p) {
    var point = (0,_datumUtils__WEBPACK_IMPORTED_MODULE_0__.geodeticToGeocentric)(p, this.es, this.a);
    return point;
}

function inverse(p) {
    var point = (0,_datumUtils__WEBPACK_IMPORTED_MODULE_0__.geocentricToGeodetic)(p, this.es, this.a, this.b);
    return point;
}

var names = ["Geocentric", 'geocentric', "geocent", "Geocent"];
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
    init: init,
    forward: forward,
    inverse: inverse,
    names: names
});

/***/ }),

/***/ "./node_modules/proj4/lib/projections/gnom.js":
/*!****************************************************!*\
  !*** ./node_modules/proj4/lib/projections/gnom.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "init": () => (/* binding */ init),
/* harmony export */   "forward": () => (/* binding */ forward),
/* harmony export */   "inverse": () => (/* binding */ inverse),
/* harmony export */   "names": () => (/* binding */ names),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _common_adjust_lon__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../common/adjust_lon */ "./node_modules/proj4/lib/common/adjust_lon.js");
/* harmony import */ var _common_asinz__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../common/asinz */ "./node_modules/proj4/lib/common/asinz.js");
/* harmony import */ var _constants_values__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../constants/values */ "./node_modules/proj4/lib/constants/values.js");




/*
  reference:
    Wolfram Mathworld "Gnomonic Projection"
    http://mathworld.wolfram.com/GnomonicProjection.html
    Accessed: 12th November 2009
  */
function init() {

  /* Place parameters in static storage for common use
      -------------------------------------------------*/
  this.sin_p14 = Math.sin(this.lat0);
  this.cos_p14 = Math.cos(this.lat0);
  // Approximation for projecting points to the horizon (infinity)
  this.infinity_dist = 1000 * this.a;
  this.rc = 1;
}

/* Gnomonic forward equations--mapping lat,long to x,y
    ---------------------------------------------------*/
function forward(p) {
  var sinphi, cosphi; /* sin and cos value        */
  var dlon; /* delta longitude value      */
  var coslon; /* cos of longitude        */
  var ksp; /* scale factor          */
  var g;
  var x, y;
  var lon = p.x;
  var lat = p.y;
  /* Forward equations
      -----------------*/
  dlon = (0,_common_adjust_lon__WEBPACK_IMPORTED_MODULE_0__.default)(lon - this.long0);

  sinphi = Math.sin(lat);
  cosphi = Math.cos(lat);

  coslon = Math.cos(dlon);
  g = this.sin_p14 * sinphi + this.cos_p14 * cosphi * coslon;
  ksp = 1;
  if ((g > 0) || (Math.abs(g) <= _constants_values__WEBPACK_IMPORTED_MODULE_2__.EPSLN)) {
    x = this.x0 + this.a * ksp * cosphi * Math.sin(dlon) / g;
    y = this.y0 + this.a * ksp * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon) / g;
  }
  else {

    // Point is in the opposing hemisphere and is unprojectable
    // We still need to return a reasonable point, so we project
    // to infinity, on a bearing
    // equivalent to the northern hemisphere equivalent
    // This is a reasonable approximation for short shapes and lines that
    // straddle the horizon.

    x = this.x0 + this.infinity_dist * cosphi * Math.sin(dlon);
    y = this.y0 + this.infinity_dist * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon);

  }
  p.x = x;
  p.y = y;
  return p;
}

function inverse(p) {
  var rh; /* Rho */
  var sinc, cosc;
  var c;
  var lon, lat;

  /* Inverse equations
      -----------------*/
  p.x = (p.x - this.x0) / this.a;
  p.y = (p.y - this.y0) / this.a;

  p.x /= this.k0;
  p.y /= this.k0;

  if ((rh = Math.sqrt(p.x * p.x + p.y * p.y))) {
    c = Math.atan2(rh, this.rc);
    sinc = Math.sin(c);
    cosc = Math.cos(c);

    lat = (0,_common_asinz__WEBPACK_IMPORTED_MODULE_1__.default)(cosc * this.sin_p14 + (p.y * sinc * this.cos_p14) / rh);
    lon = Math.atan2(p.x * sinc, rh * this.cos_p14 * cosc - p.y * this.sin_p14 * sinc);
    lon = (0,_common_adjust_lon__WEBPACK_IMPORTED_MODULE_0__.default)(this.long0 + lon);
  }
  else {
    lat = this.phic0;
    lon = 0;
  }

  p.x = lon;
  p.y = lat;
  return p;
}

var names = ["gnom"];
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
  init: init,
  forward: forward,
  inverse: inverse,
  names: names
});


/***/ }),

/***/ "./node_modules/proj4/lib/projections/krovak.js":
/*!******************************************************!*\
  !*** ./node_modules/proj4/lib/projections/krovak.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "init": () => (/* binding */ init),
/* harmony export */   "forward": () => (/* binding */ forward),
/* harmony export */   "inverse": () => (/* binding */ inverse),
/* harmony export */   "names": () => (/* binding */ names),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _common_adjust_lon__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../common/adjust_lon */ "./node_modules/proj4/lib/common/adjust_lon.js");


function init() {
  this.a = 6377397.155;
  this.es = 0.006674372230614;
  this.e = Math.sqrt(this.es);
  if (!this.lat0) {
    this.lat0 = 0.863937979737193;
  }
  if (!this.long0) {
    this.long0 = 0.7417649320975901 - 0.308341501185665;
  }
  /* if scale not set default to 0.9999 */
  if (!this.k0) {
    this.k0 = 0.9999;
  }
  this.s45 = 0.785398163397448; /* 45 */
  this.s90 = 2 * this.s45;
  this.fi0 = this.lat0;
  this.e2 = this.es;
  this.e = Math.sqrt(this.e2);
  this.alfa = Math.sqrt(1 + (this.e2 * Math.pow(Math.cos(this.fi0), 4)) / (1 - this.e2));
  this.uq = 1.04216856380474;
  this.u0 = Math.asin(Math.sin(this.fi0) / this.alfa);
  this.g = Math.pow((1 + this.e * Math.sin(this.fi0)) / (1 - this.e * Math.sin(this.fi0)), this.alfa * this.e / 2);
  this.k = Math.tan(this.u0 / 2 + this.s45) / Math.pow(Math.tan(this.fi0 / 2 + this.s45), this.alfa) * this.g;
  this.k1 = this.k0;
  this.n0 = this.a * Math.sqrt(1 - this.e2) / (1 - this.e2 * Math.pow(Math.sin(this.fi0), 2));
  this.s0 = 1.37008346281555;
  this.n = Math.sin(this.s0);
  this.ro0 = this.k1 * this.n0 / Math.tan(this.s0);
  this.ad = this.s90 - this.uq;
}

/* ellipsoid */
/* calculate xy from lat/lon */
/* Constants, identical to inverse transform function */
function forward(p) {
  var gfi, u, deltav, s, d, eps, ro;
  var lon = p.x;
  var lat = p.y;
  var delta_lon = (0,_common_adjust_lon__WEBPACK_IMPORTED_MODULE_0__.default)(lon - this.long0);
  /* Transformation */
  gfi = Math.pow(((1 + this.e * Math.sin(lat)) / (1 - this.e * Math.sin(lat))), (this.alfa * this.e / 2));
  u = 2 * (Math.atan(this.k * Math.pow(Math.tan(lat / 2 + this.s45), this.alfa) / gfi) - this.s45);
  deltav = -delta_lon * this.alfa;
  s = Math.asin(Math.cos(this.ad) * Math.sin(u) + Math.sin(this.ad) * Math.cos(u) * Math.cos(deltav));
  d = Math.asin(Math.cos(u) * Math.sin(deltav) / Math.cos(s));
  eps = this.n * d;
  ro = this.ro0 * Math.pow(Math.tan(this.s0 / 2 + this.s45), this.n) / Math.pow(Math.tan(s / 2 + this.s45), this.n);
  p.y = ro * Math.cos(eps) / 1;
  p.x = ro * Math.sin(eps) / 1;

  if (!this.czech) {
    p.y *= -1;
    p.x *= -1;
  }
  return (p);
}

/* calculate lat/lon from xy */
function inverse(p) {
  var u, deltav, s, d, eps, ro, fi1;
  var ok;

  /* Transformation */
  /* revert y, x*/
  var tmp = p.x;
  p.x = p.y;
  p.y = tmp;
  if (!this.czech) {
    p.y *= -1;
    p.x *= -1;
  }
  ro = Math.sqrt(p.x * p.x + p.y * p.y);
  eps = Math.atan2(p.y, p.x);
  d = eps / Math.sin(this.s0);
  s = 2 * (Math.atan(Math.pow(this.ro0 / ro, 1 / this.n) * Math.tan(this.s0 / 2 + this.s45)) - this.s45);
  u = Math.asin(Math.cos(this.ad) * Math.sin(s) - Math.sin(this.ad) * Math.cos(s) * Math.cos(d));
  deltav = Math.asin(Math.cos(s) * Math.sin(d) / Math.cos(u));
  p.x = this.long0 - deltav / this.alfa;
  fi1 = u;
  ok = 0;
  var iter = 0;
  do {
    p.y = 2 * (Math.atan(Math.pow(this.k, - 1 / this.alfa) * Math.pow(Math.tan(u / 2 + this.s45), 1 / this.alfa) * Math.pow((1 + this.e * Math.sin(fi1)) / (1 - this.e * Math.sin(fi1)), this.e / 2)) - this.s45);
    if (Math.abs(fi1 - p.y) < 0.0000000001) {
      ok = 1;
    }
    fi1 = p.y;
    iter += 1;
  } while (ok === 0 && iter < 15);
  if (iter >= 15) {
    return null;
  }

  return (p);
}

var names = ["Krovak", "krovak"];
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
  init: init,
  forward: forward,
  inverse: inverse,
  names: names
});


/***/ }),

/***/ "./node_modules/proj4/lib/projections/laea.js":
/*!****************************************************!*\
  !*** ./node_modules/proj4/lib/projections/laea.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "S_POLE": () => (/* binding */ S_POLE),
/* harmony export */   "N_POLE": () => (/* binding */ N_POLE),
/* harmony export */   "EQUIT": () => (/* binding */ EQUIT),
/* harmony export */   "OBLIQ": () => (/* binding */ OBLIQ),
/* harmony export */   "init": () => (/* binding */ init),
/* harmony export */   "forward": () => (/* binding */ forward),
/* harmony export */   "inverse": () => (/* binding */ inverse),
/* harmony export */   "names": () => (/* binding */ names),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _constants_values__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../constants/values */ "./node_modules/proj4/lib/constants/values.js");
/* harmony import */ var _common_qsfnz__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../common/qsfnz */ "./node_modules/proj4/lib/common/qsfnz.js");
/* harmony import */ var _common_adjust_lon__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../common/adjust_lon */ "./node_modules/proj4/lib/common/adjust_lon.js");






/*
  reference
    "New Equal-Area Map Projections for Noncircular Regions", John P. Snyder,
    The American Cartographer, Vol 15, No. 4, October 1988, pp. 341-355.
  */

var S_POLE = 1;

var N_POLE = 2;
var EQUIT = 3;
var OBLIQ = 4;

/* Initialize the Lambert Azimuthal Equal Area projection
  ------------------------------------------------------*/
function init() {
  var t = Math.abs(this.lat0);
  if (Math.abs(t - _constants_values__WEBPACK_IMPORTED_MODULE_0__.HALF_PI) < _constants_values__WEBPACK_IMPORTED_MODULE_0__.EPSLN) {
    this.mode = this.lat0 < 0 ? this.S_POLE : this.N_POLE;
  }
  else if (Math.abs(t) < _constants_values__WEBPACK_IMPORTED_MODULE_0__.EPSLN) {
    this.mode = this.EQUIT;
  }
  else {
    this.mode = this.OBLIQ;
  }
  if (this.es > 0) {
    var sinphi;

    this.qp = (0,_common_qsfnz__WEBPACK_IMPORTED_MODULE_1__.default)(this.e, 1);
    this.mmf = 0.5 / (1 - this.es);
    this.apa = authset(this.es);
    switch (this.mode) {
    case this.N_POLE:
      this.dd = 1;
      break;
    case this.S_POLE:
      this.dd = 1;
      break;
    case this.EQUIT:
      this.rq = Math.sqrt(0.5 * this.qp);
      this.dd = 1 / this.rq;
      this.xmf = 1;
      this.ymf = 0.5 * this.qp;
      break;
    case this.OBLIQ:
      this.rq = Math.sqrt(0.5 * this.qp);
      sinphi = Math.sin(this.lat0);
      this.sinb1 = (0,_common_qsfnz__WEBPACK_IMPORTED_MODULE_1__.default)(this.e, sinphi) / this.qp;
      this.cosb1 = Math.sqrt(1 - this.sinb1 * this.sinb1);
      this.dd = Math.cos(this.lat0) / (Math.sqrt(1 - this.es * sinphi * sinphi) * this.rq * this.cosb1);
      this.ymf = (this.xmf = this.rq) / this.dd;
      this.xmf *= this.dd;
      break;
    }
  }
  else {
    if (this.mode === this.OBLIQ) {
      this.sinph0 = Math.sin(this.lat0);
      this.cosph0 = Math.cos(this.lat0);
    }
  }
}

/* Lambert Azimuthal Equal Area forward equations--mapping lat,long to x,y
  -----------------------------------------------------------------------*/
function forward(p) {

  /* Forward equations
      -----------------*/
  var x, y, coslam, sinlam, sinphi, q, sinb, cosb, b, cosphi;
  var lam = p.x;
  var phi = p.y;

  lam = (0,_common_adjust_lon__WEBPACK_IMPORTED_MODULE_2__.default)(lam - this.long0);
  if (this.sphere) {
    sinphi = Math.sin(phi);
    cosphi = Math.cos(phi);
    coslam = Math.cos(lam);
    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {
      y = (this.mode === this.EQUIT) ? 1 + cosphi * coslam : 1 + this.sinph0 * sinphi + this.cosph0 * cosphi * coslam;
      if (y <= _constants_values__WEBPACK_IMPORTED_MODULE_0__.EPSLN) {
        return null;
      }
      y = Math.sqrt(2 / y);
      x = y * cosphi * Math.sin(lam);
      y *= (this.mode === this.EQUIT) ? sinphi : this.cosph0 * sinphi - this.sinph0 * cosphi * coslam;
    }
    else if (this.mode === this.N_POLE || this.mode === this.S_POLE) {
      if (this.mode === this.N_POLE) {
        coslam = -coslam;
      }
      if (Math.abs(phi + this.lat0) < _constants_values__WEBPACK_IMPORTED_MODULE_0__.EPSLN) {
        return null;
      }
      y = _constants_values__WEBPACK_IMPORTED_MODULE_0__.FORTPI - phi * 0.5;
      y = 2 * ((this.mode === this.S_POLE) ? Math.cos(y) : Math.sin(y));
      x = y * Math.sin(lam);
      y *= coslam;
    }
  }
  else {
    sinb = 0;
    cosb = 0;
    b = 0;
    coslam = Math.cos(lam);
    sinlam = Math.sin(lam);
    sinphi = Math.sin(phi);
    q = (0,_common_qsfnz__WEBPACK_IMPORTED_MODULE_1__.default)(this.e, sinphi);
    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {
      sinb = q / this.qp;
      cosb = Math.sqrt(1 - sinb * sinb);
    }
    switch (this.mode) {
    case this.OBLIQ:
      b = 1 + this.sinb1 * sinb + this.cosb1 * cosb * coslam;
      break;
    case this.EQUIT:
      b = 1 + cosb * coslam;
      break;
    case this.N_POLE:
      b = _constants_values__WEBPACK_IMPORTED_MODULE_0__.HALF_PI + phi;
      q = this.qp - q;
      break;
    case this.S_POLE:
      b = phi - _constants_values__WEBPACK_IMPORTED_MODULE_0__.HALF_PI;
      q = this.qp + q;
      break;
    }
    if (Math.abs(b) < _constants_values__WEBPACK_IMPORTED_MODULE_0__.EPSLN) {
      return null;
    }
    switch (this.mode) {
    case this.OBLIQ:
    case this.EQUIT:
      b = Math.sqrt(2 / b);
      if (this.mode === this.OBLIQ) {
        y = this.ymf * b * (this.cosb1 * sinb - this.sinb1 * cosb * coslam);
      }
      else {
        y = (b = Math.sqrt(2 / (1 + cosb * coslam))) * sinb * this.ymf;
      }
      x = this.xmf * b * cosb * sinlam;
      break;
    case this.N_POLE:
    case this.S_POLE:
      if (q >= 0) {
        x = (b = Math.sqrt(q)) * sinlam;
        y = coslam * ((this.mode === this.S_POLE) ? b : -b);
      }
      else {
        x = y = 0;
      }
      break;
    }
  }

  p.x = this.a * x + this.x0;
  p.y = this.a * y + this.y0;
  return p;
}

/* Inverse equations
  -----------------*/
function inverse(p) {
  p.x -= this.x0;
  p.y -= this.y0;
  var x = p.x / this.a;
  var y = p.y / this.a;
  var lam, phi, cCe, sCe, q, rho, ab;
  if (this.sphere) {
    var cosz = 0,
      rh, sinz = 0;

    rh = Math.sqrt(x * x + y * y);
    phi = rh * 0.5;
    if (phi > 1) {
      return null;
    }
    phi = 2 * Math.asin(phi);
    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {
      sinz = Math.sin(phi);
      cosz = Math.cos(phi);
    }
    switch (this.mode) {
    case this.EQUIT:
      phi = (Math.abs(rh) <= _constants_values__WEBPACK_IMPORTED_MODULE_0__.EPSLN) ? 0 : Math.asin(y * sinz / rh);
      x *= sinz;
      y = cosz * rh;
      break;
    case this.OBLIQ:
      phi = (Math.abs(rh) <= _constants_values__WEBPACK_IMPORTED_MODULE_0__.EPSLN) ? this.lat0 : Math.asin(cosz * this.sinph0 + y * sinz * this.cosph0 / rh);
      x *= sinz * this.cosph0;
      y = (cosz - Math.sin(phi) * this.sinph0) * rh;
      break;
    case this.N_POLE:
      y = -y;
      phi = _constants_values__WEBPACK_IMPORTED_MODULE_0__.HALF_PI - phi;
      break;
    case this.S_POLE:
      phi -= _constants_values__WEBPACK_IMPORTED_MODULE_0__.HALF_PI;
      break;
    }
    lam = (y === 0 && (this.mode === this.EQUIT || this.mode === this.OBLIQ)) ? 0 : Math.atan2(x, y);
  }
  else {
    ab = 0;
    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {
      x /= this.dd;
      y *= this.dd;
      rho = Math.sqrt(x * x + y * y);
      if (rho < _constants_values__WEBPACK_IMPORTED_MODULE_0__.EPSLN) {
        p.x = this.long0;
        p.y = this.lat0;
        return p;
      }
      sCe = 2 * Math.asin(0.5 * rho / this.rq);
      cCe = Math.cos(sCe);
      x *= (sCe = Math.sin(sCe));
      if (this.mode === this.OBLIQ) {
        ab = cCe * this.sinb1 + y * sCe * this.cosb1 / rho;
        q = this.qp * ab;
        y = rho * this.cosb1 * cCe - y * this.sinb1 * sCe;
      }
      else {
        ab = y * sCe / rho;
        q = this.qp * ab;
        y = rho * cCe;
      }
    }
    else if (this.mode === this.N_POLE || this.mode === this.S_POLE) {
      if (this.mode === this.N_POLE) {
        y = -y;
      }
      q = (x * x + y * y);
      if (!q) {
        p.x = this.long0;
        p.y = this.lat0;
        return p;
      }
      ab = 1 - q / this.qp;
      if (this.mode === this.S_POLE) {
        ab = -ab;
      }
    }
    lam = Math.atan2(x, y);
    phi = authlat(Math.asin(ab), this.apa);
  }

  p.x = (0,_common_adjust_lon__WEBPACK_IMPORTED_MODULE_2__.default)(this.long0 + lam);
  p.y = phi;
  return p;
}

/* determine latitude from authalic latitude */
var P00 = 0.33333333333333333333;

var P01 = 0.17222222222222222222;
var P02 = 0.10257936507936507936;
var P10 = 0.06388888888888888888;
var P11 = 0.06640211640211640211;
var P20 = 0.01641501294219154443;

function authset(es) {
  var t;
  var APA = [];
  APA[0] = es * P00;
  t = es * es;
  APA[0] += t * P01;
  APA[1] = t * P10;
  t *= es;
  APA[0] += t * P02;
  APA[1] += t * P11;
  APA[2] = t * P20;
  return APA;
}

function authlat(beta, APA) {
  var t = beta + beta;
  return (beta + APA[0] * Math.sin(t) + APA[1] * Math.sin(t + t) + APA[2] * Math.sin(t + t + t));
}

var names = ["Lambert Azimuthal Equal Area", "Lambert_Azimuthal_Equal_Area", "laea"];
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
  init: init,
  forward: forward,
  inverse: inverse,
  names: names,
  S_POLE: S_POLE,
  N_POLE: N_POLE,
  EQUIT: EQUIT,
  OBLIQ: OBLIQ
});


/***/ }),

/***/ "./node_modules/proj4/lib/projections/lcc.js":
/*!***************************************************!*\
  !*** ./node_modules/proj4/lib/projections/lcc.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "init": () => (/* binding */ init),
/* harmony export */   "forward": () => (/* binding */ forward),
/* harmony export */   "inverse": () => (/* binding */ inverse),
/* harmony export */   "names": () => (/* binding */ names),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _common_msfnz__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../common/msfnz */ "./node_modules/proj4/lib/common/msfnz.js");
/* harmony import */ var _common_tsfnz__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../common/tsfnz */ "./node_modules/proj4/lib/common/tsfnz.js");
/* harmony import */ var _common_sign__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../common/sign */ "./node_modules/proj4/lib/common/sign.js");
/* harmony import */ var _common_adjust_lon__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../common/adjust_lon */ "./node_modules/proj4/lib/common/adjust_lon.js");
/* harmony import */ var _common_phi2z__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../common/phi2z */ "./node_modules/proj4/lib/common/phi2z.js");
/* harmony import */ var _constants_values__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../constants/values */ "./node_modules/proj4/lib/constants/values.js");






function init() {

  // array of:  r_maj,r_min,lat1,lat2,c_lon,c_lat,false_east,false_north
  //double c_lat;                   /* center latitude                      */
  //double c_lon;                   /* center longitude                     */
  //double lat1;                    /* first standard parallel              */
  //double lat2;                    /* second standard parallel             */
  //double r_maj;                   /* major axis                           */
  //double r_min;                   /* minor axis                           */
  //double false_east;              /* x offset in meters                   */
  //double false_north;             /* y offset in meters                   */

  if (!this.lat2) {
    this.lat2 = this.lat1;
  } //if lat2 is not defined
  if (!this.k0) {
    this.k0 = 1;
  }
  this.x0 = this.x0 || 0;
  this.y0 = this.y0 || 0;
  // Standard Parallels cannot be equal and on opposite sides of the equator
  if (Math.abs(this.lat1 + this.lat2) < _constants_values__WEBPACK_IMPORTED_MODULE_5__.EPSLN) {
    return;
  }

  var temp = this.b / this.a;
  this.e = Math.sqrt(1 - temp * temp);

  var sin1 = Math.sin(this.lat1);
  var cos1 = Math.cos(this.lat1);
  var ms1 = (0,_common_msfnz__WEBPACK_IMPORTED_MODULE_0__.default)(this.e, sin1, cos1);
  var ts1 = (0,_common_tsfnz__WEBPACK_IMPORTED_MODULE_1__.default)(this.e, this.lat1, sin1);

  var sin2 = Math.sin(this.lat2);
  var cos2 = Math.cos(this.lat2);
  var ms2 = (0,_common_msfnz__WEBPACK_IMPORTED_MODULE_0__.default)(this.e, sin2, cos2);
  var ts2 = (0,_common_tsfnz__WEBPACK_IMPORTED_MODULE_1__.default)(this.e, this.lat2, sin2);

  var ts0 = (0,_common_tsfnz__WEBPACK_IMPORTED_MODULE_1__.default)(this.e, this.lat0, Math.sin(this.lat0));

  if (Math.abs(this.lat1 - this.lat2) > _constants_values__WEBPACK_IMPORTED_MODULE_5__.EPSLN) {
    this.ns = Math.log(ms1 / ms2) / Math.log(ts1 / ts2);
  }
  else {
    this.ns = sin1;
  }
  if (isNaN(this.ns)) {
    this.ns = sin1;
  }
  this.f0 = ms1 / (this.ns * Math.pow(ts1, this.ns));
  this.rh = this.a * this.f0 * Math.pow(ts0, this.ns);
  if (!this.title) {
    this.title = "Lambert Conformal Conic";
  }
}

// Lambert Conformal conic forward equations--mapping lat,long to x,y
// -----------------------------------------------------------------
function forward(p) {

  var lon = p.x;
  var lat = p.y;

  // singular cases :
  if (Math.abs(2 * Math.abs(lat) - Math.PI) <= _constants_values__WEBPACK_IMPORTED_MODULE_5__.EPSLN) {
    lat = (0,_common_sign__WEBPACK_IMPORTED_MODULE_2__.default)(lat) * (_constants_values__WEBPACK_IMPORTED_MODULE_5__.HALF_PI - 2 * _constants_values__WEBPACK_IMPORTED_MODULE_5__.EPSLN);
  }

  var con = Math.abs(Math.abs(lat) - _constants_values__WEBPACK_IMPORTED_MODULE_5__.HALF_PI);
  var ts, rh1;
  if (con > _constants_values__WEBPACK_IMPORTED_MODULE_5__.EPSLN) {
    ts = (0,_common_tsfnz__WEBPACK_IMPORTED_MODULE_1__.default)(this.e, lat, Math.sin(lat));
    rh1 = this.a * this.f0 * Math.pow(ts, this.ns);
  }
  else {
    con = lat * this.ns;
    if (con <= 0) {
      return null;
    }
    rh1 = 0;
  }
  var theta = this.ns * (0,_common_adjust_lon__WEBPACK_IMPORTED_MODULE_3__.default)(lon - this.long0);
  p.x = this.k0 * (rh1 * Math.sin(theta)) + this.x0;
  p.y = this.k0 * (this.rh - rh1 * Math.cos(theta)) + this.y0;

  return p;
}

// Lambert Conformal Conic inverse equations--mapping x,y to lat/long
// -----------------------------------------------------------------
function inverse(p) {

  var rh1, con, ts;
  var lat, lon;
  var x = (p.x - this.x0) / this.k0;
  var y = (this.rh - (p.y - this.y0) / this.k0);
  if (this.ns > 0) {
    rh1 = Math.sqrt(x * x + y * y);
    con = 1;
  }
  else {
    rh1 = -Math.sqrt(x * x + y * y);
    con = -1;
  }
  var theta = 0;
  if (rh1 !== 0) {
    theta = Math.atan2((con * x), (con * y));
  }
  if ((rh1 !== 0) || (this.ns > 0)) {
    con = 1 / this.ns;
    ts = Math.pow((rh1 / (this.a * this.f0)), con);
    lat = (0,_common_phi2z__WEBPACK_IMPORTED_MODULE_4__.default)(this.e, ts);
    if (lat === -9999) {
      return null;
    }
  }
  else {
    lat = -_constants_values__WEBPACK_IMPORTED_MODULE_5__.HALF_PI;
  }
  lon = (0,_common_adjust_lon__WEBPACK_IMPORTED_MODULE_3__.default)(theta / this.ns + this.long0);

  p.x = lon;
  p.y = lat;
  return p;
}

var names = [
  "Lambert Tangential Conformal Conic Projection",
  "Lambert_Conformal_Conic",
  "Lambert_Conformal_Conic_1SP",
  "Lambert_Conformal_Conic_2SP",
  "lcc"
];

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
  init: init,
  forward: forward,
  inverse: inverse,
  names: names
});


/***/ }),

/***/ "./node_modules/proj4/lib/projections/longlat.js":
/*!*******************************************************!*\
  !*** ./node_modules/proj4/lib/projections/longlat.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "init": () => (/* binding */ init),
/* harmony export */   "forward": () => (/* binding */ identity),
/* harmony export */   "inverse": () => (/* binding */ identity),
/* harmony export */   "names": () => (/* binding */ names),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
function init() {
  //no-op for longlat
}

function identity(pt) {
  return pt;
}


var names = ["longlat", "identity"];
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
  init: init,
  forward: identity,
  inverse: identity,
  names: names
});


/***/ }),

/***/ "./node_modules/proj4/lib/projections/merc.js":
/*!****************************************************!*\
  !*** ./node_modules/proj4/lib/projections/merc.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "init": () => (/* binding */ init),
/* harmony export */   "forward": () => (/* binding */ forward),
/* harmony export */   "inverse": () => (/* binding */ inverse),
/* harmony export */   "names": () => (/* binding */ names),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _common_msfnz__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../common/msfnz */ "./node_modules/proj4/lib/common/msfnz.js");
/* harmony import */ var _common_adjust_lon__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../common/adjust_lon */ "./node_modules/proj4/lib/common/adjust_lon.js");
/* harmony import */ var _common_tsfnz__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../common/tsfnz */ "./node_modules/proj4/lib/common/tsfnz.js");
/* harmony import */ var _common_phi2z__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../common/phi2z */ "./node_modules/proj4/lib/common/phi2z.js");
/* harmony import */ var _constants_values__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../constants/values */ "./node_modules/proj4/lib/constants/values.js");






function init() {
  var con = this.b / this.a;
  this.es = 1 - con * con;
  if(!('x0' in this)){
    this.x0 = 0;
  }
  if(!('y0' in this)){
    this.y0 = 0;
  }
  this.e = Math.sqrt(this.es);
  if (this.lat_ts) {
    if (this.sphere) {
      this.k0 = Math.cos(this.lat_ts);
    }
    else {
      this.k0 = (0,_common_msfnz__WEBPACK_IMPORTED_MODULE_0__.default)(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts));
    }
  }
  else {
    if (!this.k0) {
      if (this.k) {
        this.k0 = this.k;
      }
      else {
        this.k0 = 1;
      }
    }
  }
}

/* Mercator forward equations--mapping lat,long to x,y
  --------------------------------------------------*/

function forward(p) {
  var lon = p.x;
  var lat = p.y;
  // convert to radians
  if (lat * _constants_values__WEBPACK_IMPORTED_MODULE_4__.R2D > 90 && lat * _constants_values__WEBPACK_IMPORTED_MODULE_4__.R2D < -90 && lon * _constants_values__WEBPACK_IMPORTED_MODULE_4__.R2D > 180 && lon * _constants_values__WEBPACK_IMPORTED_MODULE_4__.R2D < -180) {
    return null;
  }

  var x, y;
  if (Math.abs(Math.abs(lat) - _constants_values__WEBPACK_IMPORTED_MODULE_4__.HALF_PI) <= _constants_values__WEBPACK_IMPORTED_MODULE_4__.EPSLN) {
    return null;
  }
  else {
    if (this.sphere) {
      x = this.x0 + this.a * this.k0 * (0,_common_adjust_lon__WEBPACK_IMPORTED_MODULE_1__.default)(lon - this.long0);
      y = this.y0 + this.a * this.k0 * Math.log(Math.tan(_constants_values__WEBPACK_IMPORTED_MODULE_4__.FORTPI + 0.5 * lat));
    }
    else {
      var sinphi = Math.sin(lat);
      var ts = (0,_common_tsfnz__WEBPACK_IMPORTED_MODULE_2__.default)(this.e, lat, sinphi);
      x = this.x0 + this.a * this.k0 * (0,_common_adjust_lon__WEBPACK_IMPORTED_MODULE_1__.default)(lon - this.long0);
      y = this.y0 - this.a * this.k0 * Math.log(ts);
    }
    p.x = x;
    p.y = y;
    return p;
  }
}

/* Mercator inverse equations--mapping x,y to lat/long
  --------------------------------------------------*/
function inverse(p) {

  var x = p.x - this.x0;
  var y = p.y - this.y0;
  var lon, lat;

  if (this.sphere) {
    lat = _constants_values__WEBPACK_IMPORTED_MODULE_4__.HALF_PI - 2 * Math.atan(Math.exp(-y / (this.a * this.k0)));
  }
  else {
    var ts = Math.exp(-y / (this.a * this.k0));
    lat = (0,_common_phi2z__WEBPACK_IMPORTED_MODULE_3__.default)(this.e, ts);
    if (lat === -9999) {
      return null;
    }
  }
  lon = (0,_common_adjust_lon__WEBPACK_IMPORTED_MODULE_1__.default)(this.long0 + x / (this.a * this.k0));

  p.x = lon;
  p.y = lat;
  return p;
}

var names = ["Mercator", "Popular Visualisation Pseudo Mercator", "Mercator_1SP", "Mercator_Auxiliary_Sphere", "merc"];
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
  init: init,
  forward: forward,
  inverse: inverse,
  names: names
});


/***/ }),

/***/ "./node_modules/proj4/lib/projections/mill.js":
/*!****************************************************!*\
  !*** ./node_modules/proj4/lib/projections/mill.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "init": () => (/* binding */ init),
/* harmony export */   "forward": () => (/* binding */ forward),
/* harmony export */   "inverse": () => (/* binding */ inverse),
/* harmony export */   "names": () => (/* binding */ names),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _common_adjust_lon__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../common/adjust_lon */ "./node_modules/proj4/lib/common/adjust_lon.js");


/*
  reference
    "New Equal-Area Map Projections for Noncircular Regions", John P. Snyder,
    The American Cartographer, Vol 15, No. 4, October 1988, pp. 341-355.
  */


/* Initialize the Miller Cylindrical projection
  -------------------------------------------*/
function init() {
  //no-op
}

/* Miller Cylindrical forward equations--mapping lat,long to x,y
    ------------------------------------------------------------*/
function forward(p) {
  var lon = p.x;
  var lat = p.y;
  /* Forward equations
      -----------------*/
  var dlon = (0,_common_adjust_lon__WEBPACK_IMPORTED_MODULE_0__.default)(lon - this.long0);
  var x = this.x0 + this.a * dlon;
  var y = this.y0 + this.a * Math.log(Math.tan((Math.PI / 4) + (lat / 2.5))) * 1.25;

  p.x = x;
  p.y = y;
  return p;
}

/* Miller Cylindrical inverse equations--mapping x,y to lat/long
    ------------------------------------------------------------*/
function inverse(p) {
  p.x -= this.x0;
  p.y -= this.y0;

  var lon = (0,_common_adjust_lon__WEBPACK_IMPORTED_MODULE_0__.default)(this.long0 + p.x / this.a);
  var lat = 2.5 * (Math.atan(Math.exp(0.8 * p.y / this.a)) - Math.PI / 4);

  p.x = lon;
  p.y = lat;
  return p;
}

var names = ["Miller_Cylindrical", "mill"];
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
  init: init,
  forward: forward,
  inverse: inverse,
  names: names
});


/***/ }),

/***/ "./node_modules/proj4/lib/projections/moll.js":
/*!****************************************************!*\
  !*** ./node_modules/proj4/lib/projections/moll.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "init": () => (/* binding */ init),
/* harmony export */   "forward": () => (/* binding */ forward),
/* harmony export */   "inverse": () => (/* binding */ inverse),
/* harmony export */   "names": () => (/* binding */ names),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _common_adjust_lon__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../common/adjust_lon */ "./node_modules/proj4/lib/common/adjust_lon.js");
/* harmony import */ var _constants_values__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../constants/values */ "./node_modules/proj4/lib/constants/values.js");

function init() {}

/* Mollweide forward equations--mapping lat,long to x,y
    ----------------------------------------------------*/
function forward(p) {

  /* Forward equations
      -----------------*/
  var lon = p.x;
  var lat = p.y;

  var delta_lon = (0,_common_adjust_lon__WEBPACK_IMPORTED_MODULE_0__.default)(lon - this.long0);
  var theta = lat;
  var con = Math.PI * Math.sin(lat);

  /* Iterate using the Newton-Raphson method to find theta
      -----------------------------------------------------*/
  while (true) {
    var delta_theta = -(theta + Math.sin(theta) - con) / (1 + Math.cos(theta));
    theta += delta_theta;
    if (Math.abs(delta_theta) < _constants_values__WEBPACK_IMPORTED_MODULE_1__.EPSLN) {
      break;
    }
  }
  theta /= 2;

  /* If the latitude is 90 deg, force the x coordinate to be "0 + false easting"
       this is done here because of precision problems with "cos(theta)"
       --------------------------------------------------------------------------*/
  if (Math.PI / 2 - Math.abs(lat) < _constants_values__WEBPACK_IMPORTED_MODULE_1__.EPSLN) {
    delta_lon = 0;
  }
  var x = 0.900316316158 * this.a * delta_lon * Math.cos(theta) + this.x0;
  var y = 1.4142135623731 * this.a * Math.sin(theta) + this.y0;

  p.x = x;
  p.y = y;
  return p;
}

function inverse(p) {
  var theta;
  var arg;

  /* Inverse equations
      -----------------*/
  p.x -= this.x0;
  p.y -= this.y0;
  arg = p.y / (1.4142135623731 * this.a);

  /* Because of division by zero problems, 'arg' can not be 1.  Therefore
       a number very close to one is used instead.
       -------------------------------------------------------------------*/
  if (Math.abs(arg) > 0.999999999999) {
    arg = 0.999999999999;
  }
  theta = Math.asin(arg);
  var lon = (0,_common_adjust_lon__WEBPACK_IMPORTED_MODULE_0__.default)(this.long0 + (p.x / (0.900316316158 * this.a * Math.cos(theta))));
  if (lon < (-Math.PI)) {
    lon = -Math.PI;
  }
  if (lon > Math.PI) {
    lon = Math.PI;
  }
  arg = (2 * theta + Math.sin(2 * theta)) / Math.PI;
  if (Math.abs(arg) > 1) {
    arg = 1;
  }
  var lat = Math.asin(arg);

  p.x = lon;
  p.y = lat;
  return p;
}

var names = ["Mollweide", "moll"];
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
  init: init,
  forward: forward,
  inverse: inverse,
  names: names
});


/***/ }),

/***/ "./node_modules/proj4/lib/projections/nzmg.js":
/*!****************************************************!*\
  !*** ./node_modules/proj4/lib/projections/nzmg.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "iterations": () => (/* binding */ iterations),
/* harmony export */   "init": () => (/* binding */ init),
/* harmony export */   "forward": () => (/* binding */ forward),
/* harmony export */   "inverse": () => (/* binding */ inverse),
/* harmony export */   "names": () => (/* binding */ names),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _constants_values__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../constants/values */ "./node_modules/proj4/lib/constants/values.js");


/*
  reference
    Department of Land and Survey Technical Circular 1973/32
      http://www.linz.govt.nz/docs/miscellaneous/nz-map-definition.pdf
    OSG Technical Report 4.1
      http://www.linz.govt.nz/docs/miscellaneous/nzmg.pdf
  */

/**
 * iterations: Number of iterations to refine inverse transform.
 *     0 -> km accuracy
 *     1 -> m accuracy -- suitable for most mapping applications
 *     2 -> mm accuracy
 */
var iterations = 1;

function init() {
  this.A = [];
  this.A[1] = 0.6399175073;
  this.A[2] = -0.1358797613;
  this.A[3] = 0.063294409;
  this.A[4] = -0.02526853;
  this.A[5] = 0.0117879;
  this.A[6] = -0.0055161;
  this.A[7] = 0.0026906;
  this.A[8] = -0.001333;
  this.A[9] = 0.00067;
  this.A[10] = -0.00034;

  this.B_re = [];
  this.B_im = [];
  this.B_re[1] = 0.7557853228;
  this.B_im[1] = 0;
  this.B_re[2] = 0.249204646;
  this.B_im[2] = 0.003371507;
  this.B_re[3] = -0.001541739;
  this.B_im[3] = 0.041058560;
  this.B_re[4] = -0.10162907;
  this.B_im[4] = 0.01727609;
  this.B_re[5] = -0.26623489;
  this.B_im[5] = -0.36249218;
  this.B_re[6] = -0.6870983;
  this.B_im[6] = -1.1651967;

  this.C_re = [];
  this.C_im = [];
  this.C_re[1] = 1.3231270439;
  this.C_im[1] = 0;
  this.C_re[2] = -0.577245789;
  this.C_im[2] = -0.007809598;
  this.C_re[3] = 0.508307513;
  this.C_im[3] = -0.112208952;
  this.C_re[4] = -0.15094762;
  this.C_im[4] = 0.18200602;
  this.C_re[5] = 1.01418179;
  this.C_im[5] = 1.64497696;
  this.C_re[6] = 1.9660549;
  this.C_im[6] = 2.5127645;

  this.D = [];
  this.D[1] = 1.5627014243;
  this.D[2] = 0.5185406398;
  this.D[3] = -0.03333098;
  this.D[4] = -0.1052906;
  this.D[5] = -0.0368594;
  this.D[6] = 0.007317;
  this.D[7] = 0.01220;
  this.D[8] = 0.00394;
  this.D[9] = -0.0013;
}

/**
    New Zealand Map Grid Forward  - long/lat to x/y
    long/lat in radians
  */
function forward(p) {
  var n;
  var lon = p.x;
  var lat = p.y;

  var delta_lat = lat - this.lat0;
  var delta_lon = lon - this.long0;

  // 1. Calculate d_phi and d_psi    ...                          // and d_lambda
  // For this algorithm, delta_latitude is in seconds of arc x 10-5, so we need to scale to those units. Longitude is radians.
  var d_phi = delta_lat / _constants_values__WEBPACK_IMPORTED_MODULE_0__.SEC_TO_RAD * 1E-5;
  var d_lambda = delta_lon;
  var d_phi_n = 1; // d_phi^0

  var d_psi = 0;
  for (n = 1; n <= 10; n++) {
    d_phi_n = d_phi_n * d_phi;
    d_psi = d_psi + this.A[n] * d_phi_n;
  }

  // 2. Calculate theta
  var th_re = d_psi;
  var th_im = d_lambda;

  // 3. Calculate z
  var th_n_re = 1;
  var th_n_im = 0; // theta^0
  var th_n_re1;
  var th_n_im1;

  var z_re = 0;
  var z_im = 0;
  for (n = 1; n <= 6; n++) {
    th_n_re1 = th_n_re * th_re - th_n_im * th_im;
    th_n_im1 = th_n_im * th_re + th_n_re * th_im;
    th_n_re = th_n_re1;
    th_n_im = th_n_im1;
    z_re = z_re + this.B_re[n] * th_n_re - this.B_im[n] * th_n_im;
    z_im = z_im + this.B_im[n] * th_n_re + this.B_re[n] * th_n_im;
  }

  // 4. Calculate easting and northing
  p.x = (z_im * this.a) + this.x0;
  p.y = (z_re * this.a) + this.y0;

  return p;
}

/**
    New Zealand Map Grid Inverse  -  x/y to long/lat
  */
function inverse(p) {
  var n;
  var x = p.x;
  var y = p.y;

  var delta_x = x - this.x0;
  var delta_y = y - this.y0;

  // 1. Calculate z
  var z_re = delta_y / this.a;
  var z_im = delta_x / this.a;

  // 2a. Calculate theta - first approximation gives km accuracy
  var z_n_re = 1;
  var z_n_im = 0; // z^0
  var z_n_re1;
  var z_n_im1;

  var th_re = 0;
  var th_im = 0;
  for (n = 1; n <= 6; n++) {
    z_n_re1 = z_n_re * z_re - z_n_im * z_im;
    z_n_im1 = z_n_im * z_re + z_n_re * z_im;
    z_n_re = z_n_re1;
    z_n_im = z_n_im1;
    th_re = th_re + this.C_re[n] * z_n_re - this.C_im[n] * z_n_im;
    th_im = th_im + this.C_im[n] * z_n_re + this.C_re[n] * z_n_im;
  }

  // 2b. Iterate to refine the accuracy of the calculation
  //        0 iterations gives km accuracy
  //        1 iteration gives m accuracy -- good enough for most mapping applications
  //        2 iterations bives mm accuracy
  for (var i = 0; i < this.iterations; i++) {
    var th_n_re = th_re;
    var th_n_im = th_im;
    var th_n_re1;
    var th_n_im1;

    var num_re = z_re;
    var num_im = z_im;
    for (n = 2; n <= 6; n++) {
      th_n_re1 = th_n_re * th_re - th_n_im * th_im;
      th_n_im1 = th_n_im * th_re + th_n_re * th_im;
      th_n_re = th_n_re1;
      th_n_im = th_n_im1;
      num_re = num_re + (n - 1) * (this.B_re[n] * th_n_re - this.B_im[n] * th_n_im);
      num_im = num_im + (n - 1) * (this.B_im[n] * th_n_re + this.B_re[n] * th_n_im);
    }

    th_n_re = 1;
    th_n_im = 0;
    var den_re = this.B_re[1];
    var den_im = this.B_im[1];
    for (n = 2; n <= 6; n++) {
      th_n_re1 = th_n_re * th_re - th_n_im * th_im;
      th_n_im1 = th_n_im * th_re + th_n_re * th_im;
      th_n_re = th_n_re1;
      th_n_im = th_n_im1;
      den_re = den_re + n * (this.B_re[n] * th_n_re - this.B_im[n] * th_n_im);
      den_im = den_im + n * (this.B_im[n] * th_n_re + this.B_re[n] * th_n_im);
    }

    // Complex division
    var den2 = den_re * den_re + den_im * den_im;
    th_re = (num_re * den_re + num_im * den_im) / den2;
    th_im = (num_im * den_re - num_re * den_im) / den2;
  }

  // 3. Calculate d_phi              ...                                    // and d_lambda
  var d_psi = th_re;
  var d_lambda = th_im;
  var d_psi_n = 1; // d_psi^0

  var d_phi = 0;
  for (n = 1; n <= 9; n++) {
    d_psi_n = d_psi_n * d_psi;
    d_phi = d_phi + this.D[n] * d_psi_n;
  }

  // 4. Calculate latitude and longitude
  // d_phi is calcuated in second of arc * 10^-5, so we need to scale back to radians. d_lambda is in radians.
  var lat = this.lat0 + (d_phi * _constants_values__WEBPACK_IMPORTED_MODULE_0__.SEC_TO_RAD * 1E5);
  var lon = this.long0 + d_lambda;

  p.x = lon;
  p.y = lat;

  return p;
}

var names = ["New_Zealand_Map_Grid", "nzmg"];
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
  init: init,
  forward: forward,
  inverse: inverse,
  names: names
});


/***/ }),

/***/ "./node_modules/proj4/lib/projections/omerc.js":
/*!*****************************************************!*\
  !*** ./node_modules/proj4/lib/projections/omerc.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "init": () => (/* binding */ init),
/* harmony export */   "forward": () => (/* binding */ forward),
/* harmony export */   "inverse": () => (/* binding */ inverse),
/* harmony export */   "names": () => (/* binding */ names),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _common_tsfnz__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../common/tsfnz */ "./node_modules/proj4/lib/common/tsfnz.js");
/* harmony import */ var _common_adjust_lon__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../common/adjust_lon */ "./node_modules/proj4/lib/common/adjust_lon.js");
/* harmony import */ var _common_phi2z__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../common/phi2z */ "./node_modules/proj4/lib/common/phi2z.js");
/* harmony import */ var _constants_values__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../constants/values */ "./node_modules/proj4/lib/constants/values.js");





var TOL = 1e-7;

function isTypeA(P) {
  var typeAProjections = ['Hotine_Oblique_Mercator','Hotine_Oblique_Mercator_Azimuth_Natural_Origin'];
  var projectionName = typeof P.PROJECTION === "object" ? Object.keys(P.PROJECTION)[0] : P.PROJECTION;
  
  return 'no_uoff' in P || 'no_off' in P || typeAProjections.indexOf(projectionName) !== -1;
}


/* Initialize the Oblique Mercator  projection
    ------------------------------------------*/
function init() {  
  var con, com, cosph0, D, F, H, L, sinph0, p, J, gamma = 0,
    gamma0, lamc = 0, lam1 = 0, lam2 = 0, phi1 = 0, phi2 = 0, alpha_c = 0, AB;
  
  // only Type A uses the no_off or no_uoff property
  // https://github.com/OSGeo/proj.4/issues/104
  this.no_off = isTypeA(this);
  this.no_rot = 'no_rot' in this;
  
  var alp = false;
  if ("alpha" in this) {
    alp = true;
  }

  var gam = false;
  if ("rectified_grid_angle" in this) {
    gam = true;
  }

  if (alp) {
    alpha_c = this.alpha;
  }
  
  if (gam) {
    gamma = (this.rectified_grid_angle * _constants_values__WEBPACK_IMPORTED_MODULE_3__.D2R);
  }
  
  if (alp || gam) {
    lamc = this.longc;
  } else {
    lam1 = this.long1;
    phi1 = this.lat1;
    lam2 = this.long2;
    phi2 = this.lat2;
    
    if (Math.abs(phi1 - phi2) <= TOL || (con = Math.abs(phi1)) <= TOL ||
        Math.abs(con - _constants_values__WEBPACK_IMPORTED_MODULE_3__.HALF_PI) <= TOL || Math.abs(Math.abs(this.lat0) - _constants_values__WEBPACK_IMPORTED_MODULE_3__.HALF_PI) <= TOL ||
        Math.abs(Math.abs(phi2) - _constants_values__WEBPACK_IMPORTED_MODULE_3__.HALF_PI) <= TOL) {
      throw new Error();
    }
  }
  
  var one_es = 1.0 - this.es;
  com = Math.sqrt(one_es);
  
  if (Math.abs(this.lat0) > _constants_values__WEBPACK_IMPORTED_MODULE_3__.EPSLN) {
    sinph0 = Math.sin(this.lat0);
    cosph0 = Math.cos(this.lat0);
    con = 1 - this.es * sinph0 * sinph0;
    this.B = cosph0 * cosph0;
    this.B = Math.sqrt(1 + this.es * this.B * this.B / one_es);
    this.A = this.B * this.k0 * com / con;
    D = this.B * com / (cosph0 * Math.sqrt(con));
    F = D * D -1;
    
    if (F <= 0) {
      F = 0;
    } else {
      F = Math.sqrt(F);
      if (this.lat0 < 0) {
        F = -F;
      }
    }
    
    this.E = F += D;
    this.E *= Math.pow((0,_common_tsfnz__WEBPACK_IMPORTED_MODULE_0__.default)(this.e, this.lat0, sinph0), this.B);
  } else {
    this.B = 1 / com;
    this.A = this.k0;
    this.E = D = F = 1;
  }
  
  if (alp || gam) {
    if (alp) {
      gamma0 = Math.asin(Math.sin(alpha_c) / D);
      if (!gam) {
        gamma = alpha_c;
      }
    } else {
      gamma0 = gamma;
      alpha_c = Math.asin(D * Math.sin(gamma0));
    }
    this.lam0 = lamc - Math.asin(0.5 * (F - 1 / F) * Math.tan(gamma0)) / this.B;
  } else {
    H = Math.pow((0,_common_tsfnz__WEBPACK_IMPORTED_MODULE_0__.default)(this.e, phi1, Math.sin(phi1)), this.B);
    L = Math.pow((0,_common_tsfnz__WEBPACK_IMPORTED_MODULE_0__.default)(this.e, phi2, Math.sin(phi2)), this.B);
    F = this.E / H;
    p = (L - H) / (L + H);
    J = this.E * this.E;
    J = (J - L * H) / (J + L * H);
    con = lam1 - lam2;
    
    if (con < -Math.pi) {
      lam2 -=_constants_values__WEBPACK_IMPORTED_MODULE_3__.TWO_PI;
    } else if (con > Math.pi) {
      lam2 += _constants_values__WEBPACK_IMPORTED_MODULE_3__.TWO_PI;
    }
    
    this.lam0 = (0,_common_adjust_lon__WEBPACK_IMPORTED_MODULE_1__.default)(0.5 * (lam1 + lam2) - Math.atan(J * Math.tan(0.5 * this.B * (lam1 - lam2)) / p) / this.B);
    gamma0 = Math.atan(2 * Math.sin(this.B * (0,_common_adjust_lon__WEBPACK_IMPORTED_MODULE_1__.default)(lam1 - this.lam0)) / (F - 1 / F));
    gamma = alpha_c = Math.asin(D * Math.sin(gamma0));
  }
  
  this.singam = Math.sin(gamma0);
  this.cosgam = Math.cos(gamma0);
  this.sinrot = Math.sin(gamma);
  this.cosrot = Math.cos(gamma);
  
  this.rB = 1 / this.B;
  this.ArB = this.A * this.rB;
  this.BrA = 1 / this.ArB;
  AB = this.A * this.B;
  
  if (this.no_off) {
    this.u_0 = 0;
  } else {
    this.u_0 = Math.abs(this.ArB * Math.atan(Math.sqrt(D * D - 1) / Math.cos(alpha_c)));
    
    if (this.lat0 < 0) {
      this.u_0 = - this.u_0;
    }  
  }
    
  F = 0.5 * gamma0;
  this.v_pole_n = this.ArB * Math.log(Math.tan(_constants_values__WEBPACK_IMPORTED_MODULE_3__.FORTPI - F));
  this.v_pole_s = this.ArB * Math.log(Math.tan(_constants_values__WEBPACK_IMPORTED_MODULE_3__.FORTPI + F));
}


/* Oblique Mercator forward equations--mapping lat,long to x,y
    ----------------------------------------------------------*/
function forward(p) {
  var coords = {};
  var S, T, U, V, W, temp, u, v;
  p.x = p.x - this.lam0;
  
  if (Math.abs(Math.abs(p.y) - _constants_values__WEBPACK_IMPORTED_MODULE_3__.HALF_PI) > _constants_values__WEBPACK_IMPORTED_MODULE_3__.EPSLN) {
    W = this.E / Math.pow((0,_common_tsfnz__WEBPACK_IMPORTED_MODULE_0__.default)(this.e, p.y, Math.sin(p.y)), this.B);
    
    temp = 1 / W;
    S = 0.5 * (W - temp);
    T = 0.5 * (W + temp);
    V = Math.sin(this.B * p.x);
    U = (S * this.singam - V * this.cosgam) / T;
        
    if (Math.abs(Math.abs(U) - 1.0) < _constants_values__WEBPACK_IMPORTED_MODULE_3__.EPSLN) {
      throw new Error();
    }
    
    v = 0.5 * this.ArB * Math.log((1 - U)/(1 + U));
    temp = Math.cos(this.B * p.x);
    
    if (Math.abs(temp) < TOL) {
      u = this.A * p.x;
    } else {
      u = this.ArB * Math.atan2((S * this.cosgam + V * this.singam), temp);
    }    
  } else {
    v = p.y > 0 ? this.v_pole_n : this.v_pole_s;
    u = this.ArB * p.y;
  }
     
  if (this.no_rot) {
    coords.x = u;
    coords.y = v;
  } else {
    u -= this.u_0;
    coords.x = v * this.cosrot + u * this.sinrot;
    coords.y = u * this.cosrot - v * this.sinrot;
  }
  
  coords.x = (this.a * coords.x + this.x0);
  coords.y = (this.a * coords.y + this.y0);
  
  return coords;
}

function inverse(p) {
  var u, v, Qp, Sp, Tp, Vp, Up;
  var coords = {};
  
  p.x = (p.x - this.x0) * (1.0 / this.a);
  p.y = (p.y - this.y0) * (1.0 / this.a);

  if (this.no_rot) {
    v = p.y;
    u = p.x;
  } else {
    v = p.x * this.cosrot - p.y * this.sinrot;
    u = p.y * this.cosrot + p.x * this.sinrot + this.u_0;
  }
  
  Qp = Math.exp(-this.BrA * v);
  Sp = 0.5 * (Qp - 1 / Qp);
  Tp = 0.5 * (Qp + 1 / Qp);
  Vp = Math.sin(this.BrA * u);
  Up = (Vp * this.cosgam + Sp * this.singam) / Tp;
  
  if (Math.abs(Math.abs(Up) - 1) < _constants_values__WEBPACK_IMPORTED_MODULE_3__.EPSLN) {
    coords.x = 0;
    coords.y = Up < 0 ? -_constants_values__WEBPACK_IMPORTED_MODULE_3__.HALF_PI : _constants_values__WEBPACK_IMPORTED_MODULE_3__.HALF_PI;
  } else {
    coords.y = this.E / Math.sqrt((1 + Up) / (1 - Up));
    coords.y = (0,_common_phi2z__WEBPACK_IMPORTED_MODULE_2__.default)(this.e, Math.pow(coords.y, 1 / this.B));
    
    if (coords.y === Infinity) {
      throw new Error();
    }
        
    coords.x = -this.rB * Math.atan2((Sp * this.cosgam - Vp * this.singam), Math.cos(this.BrA * u));
  }
  
  coords.x += this.lam0;
  
  return coords;
}

var names = ["Hotine_Oblique_Mercator", "Hotine Oblique Mercator", "Hotine_Oblique_Mercator_Azimuth_Natural_Origin", "Hotine_Oblique_Mercator_Two_Point_Natural_Origin", "Hotine_Oblique_Mercator_Azimuth_Center", "Oblique_Mercator", "omerc"];
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
  init: init,
  forward: forward,
  inverse: inverse,
  names: names
});


/***/ }),

/***/ "./node_modules/proj4/lib/projections/ortho.js":
/*!*****************************************************!*\
  !*** ./node_modules/proj4/lib/projections/ortho.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "init": () => (/* binding */ init),
/* harmony export */   "forward": () => (/* binding */ forward),
/* harmony export */   "inverse": () => (/* binding */ inverse),
/* harmony export */   "names": () => (/* binding */ names),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _common_adjust_lon__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../common/adjust_lon */ "./node_modules/proj4/lib/common/adjust_lon.js");
/* harmony import */ var _common_asinz__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../common/asinz */ "./node_modules/proj4/lib/common/asinz.js");
/* harmony import */ var _constants_values__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../constants/values */ "./node_modules/proj4/lib/constants/values.js");




function init() {
  //double temp;      /* temporary variable    */

  /* Place parameters in static storage for common use
      -------------------------------------------------*/
  this.sin_p14 = Math.sin(this.lat0);
  this.cos_p14 = Math.cos(this.lat0);
}

/* Orthographic forward equations--mapping lat,long to x,y
    ---------------------------------------------------*/
function forward(p) {
  var sinphi, cosphi; /* sin and cos value        */
  var dlon; /* delta longitude value      */
  var coslon; /* cos of longitude        */
  var ksp; /* scale factor          */
  var g, x, y;
  var lon = p.x;
  var lat = p.y;
  /* Forward equations
      -----------------*/
  dlon = (0,_common_adjust_lon__WEBPACK_IMPORTED_MODULE_0__.default)(lon - this.long0);

  sinphi = Math.sin(lat);
  cosphi = Math.cos(lat);

  coslon = Math.cos(dlon);
  g = this.sin_p14 * sinphi + this.cos_p14 * cosphi * coslon;
  ksp = 1;
  if ((g > 0) || (Math.abs(g) <= _constants_values__WEBPACK_IMPORTED_MODULE_2__.EPSLN)) {
    x = this.a * ksp * cosphi * Math.sin(dlon);
    y = this.y0 + this.a * ksp * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon);
  }
  p.x = x;
  p.y = y;
  return p;
}

function inverse(p) {
  var rh; /* height above ellipsoid      */
  var z; /* angle          */
  var sinz, cosz; /* sin of z and cos of z      */
  var con;
  var lon, lat;
  /* Inverse equations
      -----------------*/
  p.x -= this.x0;
  p.y -= this.y0;
  rh = Math.sqrt(p.x * p.x + p.y * p.y);
  z = (0,_common_asinz__WEBPACK_IMPORTED_MODULE_1__.default)(rh / this.a);

  sinz = Math.sin(z);
  cosz = Math.cos(z);

  lon = this.long0;
  if (Math.abs(rh) <= _constants_values__WEBPACK_IMPORTED_MODULE_2__.EPSLN) {
    lat = this.lat0;
    p.x = lon;
    p.y = lat;
    return p;
  }
  lat = (0,_common_asinz__WEBPACK_IMPORTED_MODULE_1__.default)(cosz * this.sin_p14 + (p.y * sinz * this.cos_p14) / rh);
  con = Math.abs(this.lat0) - _constants_values__WEBPACK_IMPORTED_MODULE_2__.HALF_PI;
  if (Math.abs(con) <= _constants_values__WEBPACK_IMPORTED_MODULE_2__.EPSLN) {
    if (this.lat0 >= 0) {
      lon = (0,_common_adjust_lon__WEBPACK_IMPORTED_MODULE_0__.default)(this.long0 + Math.atan2(p.x, - p.y));
    }
    else {
      lon = (0,_common_adjust_lon__WEBPACK_IMPORTED_MODULE_0__.default)(this.long0 - Math.atan2(-p.x, p.y));
    }
    p.x = lon;
    p.y = lat;
    return p;
  }
  lon = (0,_common_adjust_lon__WEBPACK_IMPORTED_MODULE_0__.default)(this.long0 + Math.atan2((p.x * sinz), rh * this.cos_p14 * cosz - p.y * this.sin_p14 * sinz));
  p.x = lon;
  p.y = lat;
  return p;
}

var names = ["ortho"];
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
  init: init,
  forward: forward,
  inverse: inverse,
  names: names
});


/***/ }),

/***/ "./node_modules/proj4/lib/projections/poly.js":
/*!****************************************************!*\
  !*** ./node_modules/proj4/lib/projections/poly.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "init": () => (/* binding */ init),
/* harmony export */   "forward": () => (/* binding */ forward),
/* harmony export */   "inverse": () => (/* binding */ inverse),
/* harmony export */   "names": () => (/* binding */ names),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _common_e0fn__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../common/e0fn */ "./node_modules/proj4/lib/common/e0fn.js");
/* harmony import */ var _common_e1fn__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../common/e1fn */ "./node_modules/proj4/lib/common/e1fn.js");
/* harmony import */ var _common_e2fn__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../common/e2fn */ "./node_modules/proj4/lib/common/e2fn.js");
/* harmony import */ var _common_e3fn__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../common/e3fn */ "./node_modules/proj4/lib/common/e3fn.js");
/* harmony import */ var _common_adjust_lon__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../common/adjust_lon */ "./node_modules/proj4/lib/common/adjust_lon.js");
/* harmony import */ var _common_adjust_lat__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../common/adjust_lat */ "./node_modules/proj4/lib/common/adjust_lat.js");
/* harmony import */ var _common_mlfn__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../common/mlfn */ "./node_modules/proj4/lib/common/mlfn.js");
/* harmony import */ var _constants_values__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../constants/values */ "./node_modules/proj4/lib/constants/values.js");
/* harmony import */ var _common_gN__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../common/gN */ "./node_modules/proj4/lib/common/gN.js");










var MAX_ITER = 20;

function init() {
  /* Place parameters in static storage for common use
      -------------------------------------------------*/
  this.temp = this.b / this.a;
  this.es = 1 - Math.pow(this.temp, 2); // devait etre dans tmerc.js mais n y est pas donc je commente sinon retour de valeurs nulles
  this.e = Math.sqrt(this.es);
  this.e0 = (0,_common_e0fn__WEBPACK_IMPORTED_MODULE_0__.default)(this.es);
  this.e1 = (0,_common_e1fn__WEBPACK_IMPORTED_MODULE_1__.default)(this.es);
  this.e2 = (0,_common_e2fn__WEBPACK_IMPORTED_MODULE_2__.default)(this.es);
  this.e3 = (0,_common_e3fn__WEBPACK_IMPORTED_MODULE_3__.default)(this.es);
  this.ml0 = this.a * (0,_common_mlfn__WEBPACK_IMPORTED_MODULE_6__.default)(this.e0, this.e1, this.e2, this.e3, this.lat0); //si que des zeros le calcul ne se fait pas
}

/* Polyconic forward equations--mapping lat,long to x,y
    ---------------------------------------------------*/
function forward(p) {
  var lon = p.x;
  var lat = p.y;
  var x, y, el;
  var dlon = (0,_common_adjust_lon__WEBPACK_IMPORTED_MODULE_4__.default)(lon - this.long0);
  el = dlon * Math.sin(lat);
  if (this.sphere) {
    if (Math.abs(lat) <= _constants_values__WEBPACK_IMPORTED_MODULE_7__.EPSLN) {
      x = this.a * dlon;
      y = -1 * this.a * this.lat0;
    }
    else {
      x = this.a * Math.sin(el) / Math.tan(lat);
      y = this.a * ((0,_common_adjust_lat__WEBPACK_IMPORTED_MODULE_5__.default)(lat - this.lat0) + (1 - Math.cos(el)) / Math.tan(lat));
    }
  }
  else {
    if (Math.abs(lat) <= _constants_values__WEBPACK_IMPORTED_MODULE_7__.EPSLN) {
      x = this.a * dlon;
      y = -1 * this.ml0;
    }
    else {
      var nl = (0,_common_gN__WEBPACK_IMPORTED_MODULE_8__.default)(this.a, this.e, Math.sin(lat)) / Math.tan(lat);
      x = nl * Math.sin(el);
      y = this.a * (0,_common_mlfn__WEBPACK_IMPORTED_MODULE_6__.default)(this.e0, this.e1, this.e2, this.e3, lat) - this.ml0 + nl * (1 - Math.cos(el));
    }

  }
  p.x = x + this.x0;
  p.y = y + this.y0;
  return p;
}

/* Inverse equations
  -----------------*/
function inverse(p) {
  var lon, lat, x, y, i;
  var al, bl;
  var phi, dphi;
  x = p.x - this.x0;
  y = p.y - this.y0;

  if (this.sphere) {
    if (Math.abs(y + this.a * this.lat0) <= _constants_values__WEBPACK_IMPORTED_MODULE_7__.EPSLN) {
      lon = (0,_common_adjust_lon__WEBPACK_IMPORTED_MODULE_4__.default)(x / this.a + this.long0);
      lat = 0;
    }
    else {
      al = this.lat0 + y / this.a;
      bl = x * x / this.a / this.a + al * al;
      phi = al;
      var tanphi;
      for (i = MAX_ITER; i; --i) {
        tanphi = Math.tan(phi);
        dphi = -1 * (al * (phi * tanphi + 1) - phi - 0.5 * (phi * phi + bl) * tanphi) / ((phi - al) / tanphi - 1);
        phi += dphi;
        if (Math.abs(dphi) <= _constants_values__WEBPACK_IMPORTED_MODULE_7__.EPSLN) {
          lat = phi;
          break;
        }
      }
      lon = (0,_common_adjust_lon__WEBPACK_IMPORTED_MODULE_4__.default)(this.long0 + (Math.asin(x * Math.tan(phi) / this.a)) / Math.sin(lat));
    }
  }
  else {
    if (Math.abs(y + this.ml0) <= _constants_values__WEBPACK_IMPORTED_MODULE_7__.EPSLN) {
      lat = 0;
      lon = (0,_common_adjust_lon__WEBPACK_IMPORTED_MODULE_4__.default)(this.long0 + x / this.a);
    }
    else {

      al = (this.ml0 + y) / this.a;
      bl = x * x / this.a / this.a + al * al;
      phi = al;
      var cl, mln, mlnp, ma;
      var con;
      for (i = MAX_ITER; i; --i) {
        con = this.e * Math.sin(phi);
        cl = Math.sqrt(1 - con * con) * Math.tan(phi);
        mln = this.a * (0,_common_mlfn__WEBPACK_IMPORTED_MODULE_6__.default)(this.e0, this.e1, this.e2, this.e3, phi);
        mlnp = this.e0 - 2 * this.e1 * Math.cos(2 * phi) + 4 * this.e2 * Math.cos(4 * phi) - 6 * this.e3 * Math.cos(6 * phi);
        ma = mln / this.a;
        dphi = (al * (cl * ma + 1) - ma - 0.5 * cl * (ma * ma + bl)) / (this.es * Math.sin(2 * phi) * (ma * ma + bl - 2 * al * ma) / (4 * cl) + (al - ma) * (cl * mlnp - 2 / Math.sin(2 * phi)) - mlnp);
        phi -= dphi;
        if (Math.abs(dphi) <= _constants_values__WEBPACK_IMPORTED_MODULE_7__.EPSLN) {
          lat = phi;
          break;
        }
      }

      //lat=phi4z(this.e,this.e0,this.e1,this.e2,this.e3,al,bl,0,0);
      cl = Math.sqrt(1 - this.es * Math.pow(Math.sin(lat), 2)) * Math.tan(lat);
      lon = (0,_common_adjust_lon__WEBPACK_IMPORTED_MODULE_4__.default)(this.long0 + Math.asin(x * cl / this.a) / Math.sin(lat));
    }
  }

  p.x = lon;
  p.y = lat;
  return p;
}

var names = ["Polyconic", "poly"];
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
  init: init,
  forward: forward,
  inverse: inverse,
  names: names
});


/***/ }),

/***/ "./node_modules/proj4/lib/projections/qsc.js":
/*!***************************************************!*\
  !*** ./node_modules/proj4/lib/projections/qsc.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "init": () => (/* binding */ init),
/* harmony export */   "forward": () => (/* binding */ forward),
/* harmony export */   "inverse": () => (/* binding */ inverse),
/* harmony export */   "names": () => (/* binding */ names),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _constants_values__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../constants/values */ "./node_modules/proj4/lib/constants/values.js");
// QSC projection rewritten from the original PROJ4
// https://github.com/OSGeo/proj.4/blob/master/src/PJ_qsc.c



/* constants */
var FACE_ENUM = {
    FRONT: 1,
    RIGHT: 2,
    BACK: 3,
    LEFT: 4,
    TOP: 5,
    BOTTOM: 6
};

var AREA_ENUM = {
    AREA_0: 1,
    AREA_1: 2,
    AREA_2: 3,
    AREA_3: 4
};

function init() {

  this.x0 = this.x0 || 0;
  this.y0 = this.y0 || 0;
  this.lat0 = this.lat0 || 0;
  this.long0 = this.long0 || 0;
  this.lat_ts = this.lat_ts || 0;
  this.title = this.title || "Quadrilateralized Spherical Cube";

  /* Determine the cube face from the center of projection. */
  if (this.lat0 >= _constants_values__WEBPACK_IMPORTED_MODULE_0__.HALF_PI - _constants_values__WEBPACK_IMPORTED_MODULE_0__.FORTPI / 2.0) {
    this.face = FACE_ENUM.TOP;
  } else if (this.lat0 <= -(_constants_values__WEBPACK_IMPORTED_MODULE_0__.HALF_PI - _constants_values__WEBPACK_IMPORTED_MODULE_0__.FORTPI / 2.0)) {
    this.face = FACE_ENUM.BOTTOM;
  } else if (Math.abs(this.long0) <= _constants_values__WEBPACK_IMPORTED_MODULE_0__.FORTPI) {
    this.face = FACE_ENUM.FRONT;
  } else if (Math.abs(this.long0) <= _constants_values__WEBPACK_IMPORTED_MODULE_0__.HALF_PI + _constants_values__WEBPACK_IMPORTED_MODULE_0__.FORTPI) {
    this.face = this.long0 > 0.0 ? FACE_ENUM.RIGHT : FACE_ENUM.LEFT;
  } else {
    this.face = FACE_ENUM.BACK;
  }

  /* Fill in useful values for the ellipsoid <-> sphere shift
   * described in [LK12]. */
  if (this.es !== 0) {
    this.one_minus_f = 1 - (this.a - this.b) / this.a;
    this.one_minus_f_squared = this.one_minus_f * this.one_minus_f;
  }
}

// QSC forward equations--mapping lat,long to x,y
// -----------------------------------------------------------------
function forward(p) {
  var xy = {x: 0, y: 0};
  var lat, lon;
  var theta, phi;
  var t, mu;
  /* nu; */
  var area = {value: 0};

  // move lon according to projection's lon
  p.x -= this.long0;

  /* Convert the geodetic latitude to a geocentric latitude.
   * This corresponds to the shift from the ellipsoid to the sphere
   * described in [LK12]. */
  if (this.es !== 0) {//if (P->es != 0) {
    lat = Math.atan(this.one_minus_f_squared * Math.tan(p.y));
  } else {
    lat = p.y;
  }

  /* Convert the input lat, lon into theta, phi as used by QSC.
   * This depends on the cube face and the area on it.
   * For the top and bottom face, we can compute theta and phi
   * directly from phi, lam. For the other faces, we must use
   * unit sphere cartesian coordinates as an intermediate step. */
  lon = p.x; //lon = lp.lam;
  if (this.face === FACE_ENUM.TOP) {
    phi = _constants_values__WEBPACK_IMPORTED_MODULE_0__.HALF_PI - lat;
    if (lon >= _constants_values__WEBPACK_IMPORTED_MODULE_0__.FORTPI && lon <= _constants_values__WEBPACK_IMPORTED_MODULE_0__.HALF_PI + _constants_values__WEBPACK_IMPORTED_MODULE_0__.FORTPI) {
      area.value = AREA_ENUM.AREA_0;
      theta = lon - _constants_values__WEBPACK_IMPORTED_MODULE_0__.HALF_PI;
    } else if (lon > _constants_values__WEBPACK_IMPORTED_MODULE_0__.HALF_PI + _constants_values__WEBPACK_IMPORTED_MODULE_0__.FORTPI || lon <= -(_constants_values__WEBPACK_IMPORTED_MODULE_0__.HALF_PI + _constants_values__WEBPACK_IMPORTED_MODULE_0__.FORTPI)) {
      area.value = AREA_ENUM.AREA_1;
      theta = (lon > 0.0 ? lon - _constants_values__WEBPACK_IMPORTED_MODULE_0__.SPI : lon + _constants_values__WEBPACK_IMPORTED_MODULE_0__.SPI);
    } else if (lon > -(_constants_values__WEBPACK_IMPORTED_MODULE_0__.HALF_PI + _constants_values__WEBPACK_IMPORTED_MODULE_0__.FORTPI) && lon <= -_constants_values__WEBPACK_IMPORTED_MODULE_0__.FORTPI) {
      area.value = AREA_ENUM.AREA_2;
      theta = lon + _constants_values__WEBPACK_IMPORTED_MODULE_0__.HALF_PI;
    } else {
      area.value = AREA_ENUM.AREA_3;
      theta = lon;
    }
  } else if (this.face === FACE_ENUM.BOTTOM) {
    phi = _constants_values__WEBPACK_IMPORTED_MODULE_0__.HALF_PI + lat;
    if (lon >= _constants_values__WEBPACK_IMPORTED_MODULE_0__.FORTPI && lon <= _constants_values__WEBPACK_IMPORTED_MODULE_0__.HALF_PI + _constants_values__WEBPACK_IMPORTED_MODULE_0__.FORTPI) {
      area.value = AREA_ENUM.AREA_0;
      theta = -lon + _constants_values__WEBPACK_IMPORTED_MODULE_0__.HALF_PI;
    } else if (lon < _constants_values__WEBPACK_IMPORTED_MODULE_0__.FORTPI && lon >= -_constants_values__WEBPACK_IMPORTED_MODULE_0__.FORTPI) {
      area.value = AREA_ENUM.AREA_1;
      theta = -lon;
    } else if (lon < -_constants_values__WEBPACK_IMPORTED_MODULE_0__.FORTPI && lon >= -(_constants_values__WEBPACK_IMPORTED_MODULE_0__.HALF_PI + _constants_values__WEBPACK_IMPORTED_MODULE_0__.FORTPI)) {
      area.value = AREA_ENUM.AREA_2;
      theta = -lon - _constants_values__WEBPACK_IMPORTED_MODULE_0__.HALF_PI;
    } else {
      area.value = AREA_ENUM.AREA_3;
      theta = (lon > 0.0 ? -lon + _constants_values__WEBPACK_IMPORTED_MODULE_0__.SPI : -lon - _constants_values__WEBPACK_IMPORTED_MODULE_0__.SPI);
    }
  } else {
    var q, r, s;
    var sinlat, coslat;
    var sinlon, coslon;

    if (this.face === FACE_ENUM.RIGHT) {
      lon = qsc_shift_lon_origin(lon, +_constants_values__WEBPACK_IMPORTED_MODULE_0__.HALF_PI);
    } else if (this.face === FACE_ENUM.BACK) {
      lon = qsc_shift_lon_origin(lon, +_constants_values__WEBPACK_IMPORTED_MODULE_0__.SPI);
    } else if (this.face === FACE_ENUM.LEFT) {
      lon = qsc_shift_lon_origin(lon, -_constants_values__WEBPACK_IMPORTED_MODULE_0__.HALF_PI);
    }
    sinlat = Math.sin(lat);
    coslat = Math.cos(lat);
    sinlon = Math.sin(lon);
    coslon = Math.cos(lon);
    q = coslat * coslon;
    r = coslat * sinlon;
    s = sinlat;

    if (this.face === FACE_ENUM.FRONT) {
      phi = Math.acos(q);
      theta = qsc_fwd_equat_face_theta(phi, s, r, area);
    } else if (this.face === FACE_ENUM.RIGHT) {
      phi = Math.acos(r);
      theta = qsc_fwd_equat_face_theta(phi, s, -q, area);
    } else if (this.face === FACE_ENUM.BACK) {
      phi = Math.acos(-q);
      theta = qsc_fwd_equat_face_theta(phi, s, -r, area);
    } else if (this.face === FACE_ENUM.LEFT) {
      phi = Math.acos(-r);
      theta = qsc_fwd_equat_face_theta(phi, s, q, area);
    } else {
      /* Impossible */
      phi = theta = 0;
      area.value = AREA_ENUM.AREA_0;
    }
  }

  /* Compute mu and nu for the area of definition.
   * For mu, see Eq. (3-21) in [OL76], but note the typos:
   * compare with Eq. (3-14). For nu, see Eq. (3-38). */
  mu = Math.atan((12 / _constants_values__WEBPACK_IMPORTED_MODULE_0__.SPI) * (theta + Math.acos(Math.sin(theta) * Math.cos(_constants_values__WEBPACK_IMPORTED_MODULE_0__.FORTPI)) - _constants_values__WEBPACK_IMPORTED_MODULE_0__.HALF_PI));
  t = Math.sqrt((1 - Math.cos(phi)) / (Math.cos(mu) * Math.cos(mu)) / (1 - Math.cos(Math.atan(1 / Math.cos(theta)))));

  /* Apply the result to the real area. */
  if (area.value === AREA_ENUM.AREA_1) {
    mu += _constants_values__WEBPACK_IMPORTED_MODULE_0__.HALF_PI;
  } else if (area.value === AREA_ENUM.AREA_2) {
    mu += _constants_values__WEBPACK_IMPORTED_MODULE_0__.SPI;
  } else if (area.value === AREA_ENUM.AREA_3) {
    mu += 1.5 * _constants_values__WEBPACK_IMPORTED_MODULE_0__.SPI;
  }

  /* Now compute x, y from mu and nu */
  xy.x = t * Math.cos(mu);
  xy.y = t * Math.sin(mu);
  xy.x = xy.x * this.a + this.x0;
  xy.y = xy.y * this.a + this.y0;

  p.x = xy.x;
  p.y = xy.y;
  return p;
}

// QSC inverse equations--mapping x,y to lat/long
// -----------------------------------------------------------------
function inverse(p) {
  var lp = {lam: 0, phi: 0};
  var mu, nu, cosmu, tannu;
  var tantheta, theta, cosphi, phi;
  var t;
  var area = {value: 0};

  /* de-offset */
  p.x = (p.x - this.x0) / this.a;
  p.y = (p.y - this.y0) / this.a;

  /* Convert the input x, y to the mu and nu angles as used by QSC.
   * This depends on the area of the cube face. */
  nu = Math.atan(Math.sqrt(p.x * p.x + p.y * p.y));
  mu = Math.atan2(p.y, p.x);
  if (p.x >= 0.0 && p.x >= Math.abs(p.y)) {
    area.value = AREA_ENUM.AREA_0;
  } else if (p.y >= 0.0 && p.y >= Math.abs(p.x)) {
    area.value = AREA_ENUM.AREA_1;
    mu -= _constants_values__WEBPACK_IMPORTED_MODULE_0__.HALF_PI;
  } else if (p.x < 0.0 && -p.x >= Math.abs(p.y)) {
    area.value = AREA_ENUM.AREA_2;
    mu = (mu < 0.0 ? mu + _constants_values__WEBPACK_IMPORTED_MODULE_0__.SPI : mu - _constants_values__WEBPACK_IMPORTED_MODULE_0__.SPI);
  } else {
    area.value = AREA_ENUM.AREA_3;
    mu += _constants_values__WEBPACK_IMPORTED_MODULE_0__.HALF_PI;
  }

  /* Compute phi and theta for the area of definition.
   * The inverse projection is not described in the original paper, but some
   * good hints can be found here (as of 2011-12-14):
   * http://fits.gsfc.nasa.gov/fitsbits/saf.93/saf.9302
   * (search for "Message-Id: <9302181759.AA25477 at fits.cv.nrao.edu>") */
  t = (_constants_values__WEBPACK_IMPORTED_MODULE_0__.SPI / 12) * Math.tan(mu);
  tantheta = Math.sin(t) / (Math.cos(t) - (1 / Math.sqrt(2)));
  theta = Math.atan(tantheta);
  cosmu = Math.cos(mu);
  tannu = Math.tan(nu);
  cosphi = 1 - cosmu * cosmu * tannu * tannu * (1 - Math.cos(Math.atan(1 / Math.cos(theta))));
  if (cosphi < -1) {
    cosphi = -1;
  } else if (cosphi > +1) {
    cosphi = +1;
  }

  /* Apply the result to the real area on the cube face.
   * For the top and bottom face, we can compute phi and lam directly.
   * For the other faces, we must use unit sphere cartesian coordinates
   * as an intermediate step. */
  if (this.face === FACE_ENUM.TOP) {
    phi = Math.acos(cosphi);
    lp.phi = _constants_values__WEBPACK_IMPORTED_MODULE_0__.HALF_PI - phi;
    if (area.value === AREA_ENUM.AREA_0) {
      lp.lam = theta + _constants_values__WEBPACK_IMPORTED_MODULE_0__.HALF_PI;
    } else if (area.value === AREA_ENUM.AREA_1) {
      lp.lam = (theta < 0.0 ? theta + _constants_values__WEBPACK_IMPORTED_MODULE_0__.SPI : theta - _constants_values__WEBPACK_IMPORTED_MODULE_0__.SPI);
    } else if (area.value === AREA_ENUM.AREA_2) {
      lp.lam = theta - _constants_values__WEBPACK_IMPORTED_MODULE_0__.HALF_PI;
    } else /* area.value == AREA_ENUM.AREA_3 */ {
      lp.lam = theta;
    }
  } else if (this.face === FACE_ENUM.BOTTOM) {
    phi = Math.acos(cosphi);
    lp.phi = phi - _constants_values__WEBPACK_IMPORTED_MODULE_0__.HALF_PI;
    if (area.value === AREA_ENUM.AREA_0) {
      lp.lam = -theta + _constants_values__WEBPACK_IMPORTED_MODULE_0__.HALF_PI;
    } else if (area.value === AREA_ENUM.AREA_1) {
      lp.lam = -theta;
    } else if (area.value === AREA_ENUM.AREA_2) {
      lp.lam = -theta - _constants_values__WEBPACK_IMPORTED_MODULE_0__.HALF_PI;
    } else /* area.value == AREA_ENUM.AREA_3 */ {
      lp.lam = (theta < 0.0 ? -theta - _constants_values__WEBPACK_IMPORTED_MODULE_0__.SPI : -theta + _constants_values__WEBPACK_IMPORTED_MODULE_0__.SPI);
    }
  } else {
    /* Compute phi and lam via cartesian unit sphere coordinates. */
    var q, r, s;
    q = cosphi;
    t = q * q;
    if (t >= 1) {
      s = 0;
    } else {
      s = Math.sqrt(1 - t) * Math.sin(theta);
    }
    t += s * s;
    if (t >= 1) {
      r = 0;
    } else {
      r = Math.sqrt(1 - t);
    }
    /* Rotate q,r,s into the correct area. */
    if (area.value === AREA_ENUM.AREA_1) {
      t = r;
      r = -s;
      s = t;
    } else if (area.value === AREA_ENUM.AREA_2) {
      r = -r;
      s = -s;
    } else if (area.value === AREA_ENUM.AREA_3) {
      t = r;
      r = s;
      s = -t;
    }
    /* Rotate q,r,s into the correct cube face. */
    if (this.face === FACE_ENUM.RIGHT) {
      t = q;
      q = -r;
      r = t;
    } else if (this.face === FACE_ENUM.BACK) {
      q = -q;
      r = -r;
    } else if (this.face === FACE_ENUM.LEFT) {
      t = q;
      q = r;
      r = -t;
    }
    /* Now compute phi and lam from the unit sphere coordinates. */
    lp.phi = Math.acos(-s) - _constants_values__WEBPACK_IMPORTED_MODULE_0__.HALF_PI;
    lp.lam = Math.atan2(r, q);
    if (this.face === FACE_ENUM.RIGHT) {
      lp.lam = qsc_shift_lon_origin(lp.lam, -_constants_values__WEBPACK_IMPORTED_MODULE_0__.HALF_PI);
    } else if (this.face === FACE_ENUM.BACK) {
      lp.lam = qsc_shift_lon_origin(lp.lam, -_constants_values__WEBPACK_IMPORTED_MODULE_0__.SPI);
    } else if (this.face === FACE_ENUM.LEFT) {
      lp.lam = qsc_shift_lon_origin(lp.lam, +_constants_values__WEBPACK_IMPORTED_MODULE_0__.HALF_PI);
    }
  }

  /* Apply the shift from the sphere to the ellipsoid as described
   * in [LK12]. */
  if (this.es !== 0) {
    var invert_sign;
    var tanphi, xa;
    invert_sign = (lp.phi < 0 ? 1 : 0);
    tanphi = Math.tan(lp.phi);
    xa = this.b / Math.sqrt(tanphi * tanphi + this.one_minus_f_squared);
    lp.phi = Math.atan(Math.sqrt(this.a * this.a - xa * xa) / (this.one_minus_f * xa));
    if (invert_sign) {
      lp.phi = -lp.phi;
    }
  }

  lp.lam += this.long0;
  p.x = lp.lam;
  p.y = lp.phi;
  return p;
}

/* Helper function for forward projection: compute the theta angle
 * and determine the area number. */
function qsc_fwd_equat_face_theta(phi, y, x, area) {
  var theta;
  if (phi < _constants_values__WEBPACK_IMPORTED_MODULE_0__.EPSLN) {
    area.value = AREA_ENUM.AREA_0;
    theta = 0.0;
  } else {
    theta = Math.atan2(y, x);
    if (Math.abs(theta) <= _constants_values__WEBPACK_IMPORTED_MODULE_0__.FORTPI) {
      area.value = AREA_ENUM.AREA_0;
    } else if (theta > _constants_values__WEBPACK_IMPORTED_MODULE_0__.FORTPI && theta <= _constants_values__WEBPACK_IMPORTED_MODULE_0__.HALF_PI + _constants_values__WEBPACK_IMPORTED_MODULE_0__.FORTPI) {
      area.value = AREA_ENUM.AREA_1;
      theta -= _constants_values__WEBPACK_IMPORTED_MODULE_0__.HALF_PI;
    } else if (theta > _constants_values__WEBPACK_IMPORTED_MODULE_0__.HALF_PI + _constants_values__WEBPACK_IMPORTED_MODULE_0__.FORTPI || theta <= -(_constants_values__WEBPACK_IMPORTED_MODULE_0__.HALF_PI + _constants_values__WEBPACK_IMPORTED_MODULE_0__.FORTPI)) {
      area.value = AREA_ENUM.AREA_2;
      theta = (theta >= 0.0 ? theta - _constants_values__WEBPACK_IMPORTED_MODULE_0__.SPI : theta + _constants_values__WEBPACK_IMPORTED_MODULE_0__.SPI);
    } else {
      area.value = AREA_ENUM.AREA_3;
      theta += _constants_values__WEBPACK_IMPORTED_MODULE_0__.HALF_PI;
    }
  }
  return theta;
}

/* Helper function: shift the longitude. */
function qsc_shift_lon_origin(lon, offset) {
  var slon = lon + offset;
  if (slon < -_constants_values__WEBPACK_IMPORTED_MODULE_0__.SPI) {
    slon += _constants_values__WEBPACK_IMPORTED_MODULE_0__.TWO_PI;
  } else if (slon > +_constants_values__WEBPACK_IMPORTED_MODULE_0__.SPI) {
    slon -= _constants_values__WEBPACK_IMPORTED_MODULE_0__.TWO_PI;
  }
  return slon;
}

var names = ["Quadrilateralized Spherical Cube", "Quadrilateralized_Spherical_Cube", "qsc"];
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
  init: init,
  forward: forward,
  inverse: inverse,
  names: names
});



/***/ }),

/***/ "./node_modules/proj4/lib/projections/robin.js":
/*!*****************************************************!*\
  !*** ./node_modules/proj4/lib/projections/robin.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "init": () => (/* binding */ init),
/* harmony export */   "forward": () => (/* binding */ forward),
/* harmony export */   "inverse": () => (/* binding */ inverse),
/* harmony export */   "names": () => (/* binding */ names),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _constants_values__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../constants/values */ "./node_modules/proj4/lib/constants/values.js");
/* harmony import */ var _common_adjust_lon__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../common/adjust_lon */ "./node_modules/proj4/lib/common/adjust_lon.js");
// Robinson projection
// Based on https://github.com/OSGeo/proj.4/blob/master/src/PJ_robin.c
// Polynomial coeficients from http://article.gmane.org/gmane.comp.gis.proj-4.devel/6039




var COEFS_X = [
    [1.0000, 2.2199e-17, -7.15515e-05, 3.1103e-06],
    [0.9986, -0.000482243, -2.4897e-05, -1.3309e-06],
    [0.9954, -0.00083103, -4.48605e-05, -9.86701e-07],
    [0.9900, -0.00135364, -5.9661e-05, 3.6777e-06],
    [0.9822, -0.00167442, -4.49547e-06, -5.72411e-06],
    [0.9730, -0.00214868, -9.03571e-05, 1.8736e-08],
    [0.9600, -0.00305085, -9.00761e-05, 1.64917e-06],
    [0.9427, -0.00382792, -6.53386e-05, -2.6154e-06],
    [0.9216, -0.00467746, -0.00010457, 4.81243e-06],
    [0.8962, -0.00536223, -3.23831e-05, -5.43432e-06],
    [0.8679, -0.00609363, -0.000113898, 3.32484e-06],
    [0.8350, -0.00698325, -6.40253e-05, 9.34959e-07],
    [0.7986, -0.00755338, -5.00009e-05, 9.35324e-07],
    [0.7597, -0.00798324, -3.5971e-05, -2.27626e-06],
    [0.7186, -0.00851367, -7.01149e-05, -8.6303e-06],
    [0.6732, -0.00986209, -0.000199569, 1.91974e-05],
    [0.6213, -0.010418, 8.83923e-05, 6.24051e-06],
    [0.5722, -0.00906601, 0.000182, 6.24051e-06],
    [0.5322, -0.00677797, 0.000275608, 6.24051e-06]
];

var COEFS_Y = [
    [-5.20417e-18, 0.0124, 1.21431e-18, -8.45284e-11],
    [0.0620, 0.0124, -1.26793e-09, 4.22642e-10],
    [0.1240, 0.0124, 5.07171e-09, -1.60604e-09],
    [0.1860, 0.0123999, -1.90189e-08, 6.00152e-09],
    [0.2480, 0.0124002, 7.10039e-08, -2.24e-08],
    [0.3100, 0.0123992, -2.64997e-07, 8.35986e-08],
    [0.3720, 0.0124029, 9.88983e-07, -3.11994e-07],
    [0.4340, 0.0123893, -3.69093e-06, -4.35621e-07],
    [0.4958, 0.0123198, -1.02252e-05, -3.45523e-07],
    [0.5571, 0.0121916, -1.54081e-05, -5.82288e-07],
    [0.6176, 0.0119938, -2.41424e-05, -5.25327e-07],
    [0.6769, 0.011713, -3.20223e-05, -5.16405e-07],
    [0.7346, 0.0113541, -3.97684e-05, -6.09052e-07],
    [0.7903, 0.0109107, -4.89042e-05, -1.04739e-06],
    [0.8435, 0.0103431, -6.4615e-05, -1.40374e-09],
    [0.8936, 0.00969686, -6.4636e-05, -8.547e-06],
    [0.9394, 0.00840947, -0.000192841, -4.2106e-06],
    [0.9761, 0.00616527, -0.000256, -4.2106e-06],
    [1.0000, 0.00328947, -0.000319159, -4.2106e-06]
];

var FXC = 0.8487;
var FYC = 1.3523;
var C1 = _constants_values__WEBPACK_IMPORTED_MODULE_0__.R2D/5; // rad to 5-degree interval
var RC1 = 1/C1;
var NODES = 18;

var poly3_val = function(coefs, x) {
    return coefs[0] + x * (coefs[1] + x * (coefs[2] + x * coefs[3]));
};

var poly3_der = function(coefs, x) {
    return coefs[1] + x * (2 * coefs[2] + x * 3 * coefs[3]);
};

function newton_rapshon(f_df, start, max_err, iters) {
    var x = start;
    for (; iters; --iters) {
        var upd = f_df(x);
        x -= upd;
        if (Math.abs(upd) < max_err) {
            break;
        }
    }
    return x;
}

function init() {
    this.x0 = this.x0 || 0;
    this.y0 = this.y0 || 0;
    this.long0 = this.long0 || 0;
    this.es = 0;
    this.title = this.title || "Robinson";
}

function forward(ll) {
    var lon = (0,_common_adjust_lon__WEBPACK_IMPORTED_MODULE_1__.default)(ll.x - this.long0);

    var dphi = Math.abs(ll.y);
    var i = Math.floor(dphi * C1);
    if (i < 0) {
        i = 0;
    } else if (i >= NODES) {
        i = NODES - 1;
    }
    dphi = _constants_values__WEBPACK_IMPORTED_MODULE_0__.R2D * (dphi - RC1 * i);
    var xy = {
        x: poly3_val(COEFS_X[i], dphi) * lon,
        y: poly3_val(COEFS_Y[i], dphi)
    };
    if (ll.y < 0) {
        xy.y = -xy.y;
    }

    xy.x = xy.x * this.a * FXC + this.x0;
    xy.y = xy.y * this.a * FYC + this.y0;
    return xy;
}

function inverse(xy) {
    var ll = {
        x: (xy.x - this.x0) / (this.a * FXC),
        y: Math.abs(xy.y - this.y0) / (this.a * FYC)
    };

    if (ll.y >= 1) { // pathologic case
        ll.x /= COEFS_X[NODES][0];
        ll.y = xy.y < 0 ? -_constants_values__WEBPACK_IMPORTED_MODULE_0__.HALF_PI : _constants_values__WEBPACK_IMPORTED_MODULE_0__.HALF_PI;
    } else {
        // find table interval
        var i = Math.floor(ll.y * NODES);
        if (i < 0) {
            i = 0;
        } else if (i >= NODES) {
            i = NODES - 1;
        }
        for (;;) {
            if (COEFS_Y[i][0] > ll.y) {
                --i;
            } else if (COEFS_Y[i+1][0] <= ll.y) {
                ++i;
            } else {
                break;
            }
        }
        // linear interpolation in 5 degree interval
        var coefs = COEFS_Y[i];
        var t = 5 * (ll.y - coefs[0]) / (COEFS_Y[i+1][0] - coefs[0]);
        // find t so that poly3_val(coefs, t) = ll.y
        t = newton_rapshon(function(x) {
            return (poly3_val(coefs, x) - ll.y) / poly3_der(coefs, x);
        }, t, _constants_values__WEBPACK_IMPORTED_MODULE_0__.EPSLN, 100);

        ll.x /= poly3_val(COEFS_X[i], t);
        ll.y = (5 * i + t) * _constants_values__WEBPACK_IMPORTED_MODULE_0__.D2R;
        if (xy.y < 0) {
            ll.y = -ll.y;
        }
    }

    ll.x = (0,_common_adjust_lon__WEBPACK_IMPORTED_MODULE_1__.default)(ll.x + this.long0);
    return ll;
}

var names = ["Robinson", "robin"];
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
  init: init,
  forward: forward,
  inverse: inverse,
  names: names
});


/***/ }),

/***/ "./node_modules/proj4/lib/projections/sinu.js":
/*!****************************************************!*\
  !*** ./node_modules/proj4/lib/projections/sinu.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "init": () => (/* binding */ init),
/* harmony export */   "forward": () => (/* binding */ forward),
/* harmony export */   "inverse": () => (/* binding */ inverse),
/* harmony export */   "names": () => (/* binding */ names),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _common_adjust_lon__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../common/adjust_lon */ "./node_modules/proj4/lib/common/adjust_lon.js");
/* harmony import */ var _common_adjust_lat__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../common/adjust_lat */ "./node_modules/proj4/lib/common/adjust_lat.js");
/* harmony import */ var _common_pj_enfn__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../common/pj_enfn */ "./node_modules/proj4/lib/common/pj_enfn.js");
/* harmony import */ var _common_pj_mlfn__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../common/pj_mlfn */ "./node_modules/proj4/lib/common/pj_mlfn.js");
/* harmony import */ var _common_pj_inv_mlfn__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../common/pj_inv_mlfn */ "./node_modules/proj4/lib/common/pj_inv_mlfn.js");
/* harmony import */ var _constants_values__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../constants/values */ "./node_modules/proj4/lib/constants/values.js");
/* harmony import */ var _common_asinz__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../common/asinz */ "./node_modules/proj4/lib/common/asinz.js");



var MAX_ITER = 20;







function init() {
  /* Place parameters in static storage for common use
    -------------------------------------------------*/


  if (!this.sphere) {
    this.en = (0,_common_pj_enfn__WEBPACK_IMPORTED_MODULE_2__.default)(this.es);
  }
  else {
    this.n = 1;
    this.m = 0;
    this.es = 0;
    this.C_y = Math.sqrt((this.m + 1) / this.n);
    this.C_x = this.C_y / (this.m + 1);
  }

}

/* Sinusoidal forward equations--mapping lat,long to x,y
  -----------------------------------------------------*/
function forward(p) {
  var x, y;
  var lon = p.x;
  var lat = p.y;
  /* Forward equations
    -----------------*/
  lon = (0,_common_adjust_lon__WEBPACK_IMPORTED_MODULE_0__.default)(lon - this.long0);

  if (this.sphere) {
    if (!this.m) {
      lat = this.n !== 1 ? Math.asin(this.n * Math.sin(lat)) : lat;
    }
    else {
      var k = this.n * Math.sin(lat);
      for (var i = MAX_ITER; i; --i) {
        var V = (this.m * lat + Math.sin(lat) - k) / (this.m + Math.cos(lat));
        lat -= V;
        if (Math.abs(V) < _constants_values__WEBPACK_IMPORTED_MODULE_5__.EPSLN) {
          break;
        }
      }
    }
    x = this.a * this.C_x * lon * (this.m + Math.cos(lat));
    y = this.a * this.C_y * lat;

  }
  else {

    var s = Math.sin(lat);
    var c = Math.cos(lat);
    y = this.a * (0,_common_pj_mlfn__WEBPACK_IMPORTED_MODULE_3__.default)(lat, s, c, this.en);
    x = this.a * lon * c / Math.sqrt(1 - this.es * s * s);
  }

  p.x = x;
  p.y = y;
  return p;
}

function inverse(p) {
  var lat, temp, lon, s;

  p.x -= this.x0;
  lon = p.x / this.a;
  p.y -= this.y0;
  lat = p.y / this.a;

  if (this.sphere) {
    lat /= this.C_y;
    lon = lon / (this.C_x * (this.m + Math.cos(lat)));
    if (this.m) {
      lat = (0,_common_asinz__WEBPACK_IMPORTED_MODULE_6__.default)((this.m * lat + Math.sin(lat)) / this.n);
    }
    else if (this.n !== 1) {
      lat = (0,_common_asinz__WEBPACK_IMPORTED_MODULE_6__.default)(Math.sin(lat) / this.n);
    }
    lon = (0,_common_adjust_lon__WEBPACK_IMPORTED_MODULE_0__.default)(lon + this.long0);
    lat = (0,_common_adjust_lat__WEBPACK_IMPORTED_MODULE_1__.default)(lat);
  }
  else {
    lat = (0,_common_pj_inv_mlfn__WEBPACK_IMPORTED_MODULE_4__.default)(p.y / this.a, this.es, this.en);
    s = Math.abs(lat);
    if (s < _constants_values__WEBPACK_IMPORTED_MODULE_5__.HALF_PI) {
      s = Math.sin(lat);
      temp = this.long0 + p.x * Math.sqrt(1 - this.es * s * s) / (this.a * Math.cos(lat));
      //temp = this.long0 + p.x / (this.a * Math.cos(lat));
      lon = (0,_common_adjust_lon__WEBPACK_IMPORTED_MODULE_0__.default)(temp);
    }
    else if ((s - _constants_values__WEBPACK_IMPORTED_MODULE_5__.EPSLN) < _constants_values__WEBPACK_IMPORTED_MODULE_5__.HALF_PI) {
      lon = this.long0;
    }
  }
  p.x = lon;
  p.y = lat;
  return p;
}

var names = ["Sinusoidal", "sinu"];
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
  init: init,
  forward: forward,
  inverse: inverse,
  names: names
});


/***/ }),

/***/ "./node_modules/proj4/lib/projections/somerc.js":
/*!******************************************************!*\
  !*** ./node_modules/proj4/lib/projections/somerc.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "init": () => (/* binding */ init),
/* harmony export */   "forward": () => (/* binding */ forward),
/* harmony export */   "inverse": () => (/* binding */ inverse),
/* harmony export */   "names": () => (/* binding */ names),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/*
  references:
    Formules et constantes pour le Calcul pour la
    projection cylindrique conforme à axe oblique et pour la transformation entre
    des systèmes de référence.
    http://www.swisstopo.admin.ch/internet/swisstopo/fr/home/topics/survey/sys/refsys/switzerland.parsysrelated1.31216.downloadList.77004.DownloadFile.tmp/swissprojectionfr.pdf
  */

function init() {
  var phy0 = this.lat0;
  this.lambda0 = this.long0;
  var sinPhy0 = Math.sin(phy0);
  var semiMajorAxis = this.a;
  var invF = this.rf;
  var flattening = 1 / invF;
  var e2 = 2 * flattening - Math.pow(flattening, 2);
  var e = this.e = Math.sqrt(e2);
  this.R = this.k0 * semiMajorAxis * Math.sqrt(1 - e2) / (1 - e2 * Math.pow(sinPhy0, 2));
  this.alpha = Math.sqrt(1 + e2 / (1 - e2) * Math.pow(Math.cos(phy0), 4));
  this.b0 = Math.asin(sinPhy0 / this.alpha);
  var k1 = Math.log(Math.tan(Math.PI / 4 + this.b0 / 2));
  var k2 = Math.log(Math.tan(Math.PI / 4 + phy0 / 2));
  var k3 = Math.log((1 + e * sinPhy0) / (1 - e * sinPhy0));
  this.K = k1 - this.alpha * k2 + this.alpha * e / 2 * k3;
}

function forward(p) {
  var Sa1 = Math.log(Math.tan(Math.PI / 4 - p.y / 2));
  var Sa2 = this.e / 2 * Math.log((1 + this.e * Math.sin(p.y)) / (1 - this.e * Math.sin(p.y)));
  var S = -this.alpha * (Sa1 + Sa2) + this.K;

  // spheric latitude
  var b = 2 * (Math.atan(Math.exp(S)) - Math.PI / 4);

  // spheric longitude
  var I = this.alpha * (p.x - this.lambda0);

  // psoeudo equatorial rotation
  var rotI = Math.atan(Math.sin(I) / (Math.sin(this.b0) * Math.tan(b) + Math.cos(this.b0) * Math.cos(I)));

  var rotB = Math.asin(Math.cos(this.b0) * Math.sin(b) - Math.sin(this.b0) * Math.cos(b) * Math.cos(I));

  p.y = this.R / 2 * Math.log((1 + Math.sin(rotB)) / (1 - Math.sin(rotB))) + this.y0;
  p.x = this.R * rotI + this.x0;
  return p;
}

function inverse(p) {
  var Y = p.x - this.x0;
  var X = p.y - this.y0;

  var rotI = Y / this.R;
  var rotB = 2 * (Math.atan(Math.exp(X / this.R)) - Math.PI / 4);

  var b = Math.asin(Math.cos(this.b0) * Math.sin(rotB) + Math.sin(this.b0) * Math.cos(rotB) * Math.cos(rotI));
  var I = Math.atan(Math.sin(rotI) / (Math.cos(this.b0) * Math.cos(rotI) - Math.sin(this.b0) * Math.tan(rotB)));

  var lambda = this.lambda0 + I / this.alpha;

  var S = 0;
  var phy = b;
  var prevPhy = -1000;
  var iteration = 0;
  while (Math.abs(phy - prevPhy) > 0.0000001) {
    if (++iteration > 20) {
      //...reportError("omercFwdInfinity");
      return;
    }
    //S = Math.log(Math.tan(Math.PI / 4 + phy / 2));
    S = 1 / this.alpha * (Math.log(Math.tan(Math.PI / 4 + b / 2)) - this.K) + this.e * Math.log(Math.tan(Math.PI / 4 + Math.asin(this.e * Math.sin(phy)) / 2));
    prevPhy = phy;
    phy = 2 * Math.atan(Math.exp(S)) - Math.PI / 2;
  }

  p.x = lambda;
  p.y = phy;
  return p;
}

var names = ["somerc"];
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
  init: init,
  forward: forward,
  inverse: inverse,
  names: names
});


/***/ }),

/***/ "./node_modules/proj4/lib/projections/stere.js":
/*!*****************************************************!*\
  !*** ./node_modules/proj4/lib/projections/stere.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ssfn_": () => (/* binding */ ssfn_),
/* harmony export */   "init": () => (/* binding */ init),
/* harmony export */   "forward": () => (/* binding */ forward),
/* harmony export */   "inverse": () => (/* binding */ inverse),
/* harmony export */   "names": () => (/* binding */ names),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _constants_values__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../constants/values */ "./node_modules/proj4/lib/constants/values.js");
/* harmony import */ var _common_sign__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../common/sign */ "./node_modules/proj4/lib/common/sign.js");
/* harmony import */ var _common_msfnz__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../common/msfnz */ "./node_modules/proj4/lib/common/msfnz.js");
/* harmony import */ var _common_tsfnz__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../common/tsfnz */ "./node_modules/proj4/lib/common/tsfnz.js");
/* harmony import */ var _common_phi2z__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../common/phi2z */ "./node_modules/proj4/lib/common/phi2z.js");
/* harmony import */ var _common_adjust_lon__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../common/adjust_lon */ "./node_modules/proj4/lib/common/adjust_lon.js");








function ssfn_(phit, sinphi, eccen) {
  sinphi *= eccen;
  return (Math.tan(0.5 * (_constants_values__WEBPACK_IMPORTED_MODULE_0__.HALF_PI + phit)) * Math.pow((1 - sinphi) / (1 + sinphi), 0.5 * eccen));
}

function init() {
  this.coslat0 = Math.cos(this.lat0);
  this.sinlat0 = Math.sin(this.lat0);
  if (this.sphere) {
    if (this.k0 === 1 && !isNaN(this.lat_ts) && Math.abs(this.coslat0) <= _constants_values__WEBPACK_IMPORTED_MODULE_0__.EPSLN) {
      this.k0 = 0.5 * (1 + (0,_common_sign__WEBPACK_IMPORTED_MODULE_1__.default)(this.lat0) * Math.sin(this.lat_ts));
    }
  }
  else {
    if (Math.abs(this.coslat0) <= _constants_values__WEBPACK_IMPORTED_MODULE_0__.EPSLN) {
      if (this.lat0 > 0) {
        //North pole
        //trace('stere:north pole');
        this.con = 1;
      }
      else {
        //South pole
        //trace('stere:south pole');
        this.con = -1;
      }
    }
    this.cons = Math.sqrt(Math.pow(1 + this.e, 1 + this.e) * Math.pow(1 - this.e, 1 - this.e));
    if (this.k0 === 1 && !isNaN(this.lat_ts) && Math.abs(this.coslat0) <= _constants_values__WEBPACK_IMPORTED_MODULE_0__.EPSLN) {
      this.k0 = 0.5 * this.cons * (0,_common_msfnz__WEBPACK_IMPORTED_MODULE_2__.default)(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts)) / (0,_common_tsfnz__WEBPACK_IMPORTED_MODULE_3__.default)(this.e, this.con * this.lat_ts, this.con * Math.sin(this.lat_ts));
    }
    this.ms1 = (0,_common_msfnz__WEBPACK_IMPORTED_MODULE_2__.default)(this.e, this.sinlat0, this.coslat0);
    this.X0 = 2 * Math.atan(this.ssfn_(this.lat0, this.sinlat0, this.e)) - _constants_values__WEBPACK_IMPORTED_MODULE_0__.HALF_PI;
    this.cosX0 = Math.cos(this.X0);
    this.sinX0 = Math.sin(this.X0);
  }
}

// Stereographic forward equations--mapping lat,long to x,y
function forward(p) {
  var lon = p.x;
  var lat = p.y;
  var sinlat = Math.sin(lat);
  var coslat = Math.cos(lat);
  var A, X, sinX, cosX, ts, rh;
  var dlon = (0,_common_adjust_lon__WEBPACK_IMPORTED_MODULE_5__.default)(lon - this.long0);

  if (Math.abs(Math.abs(lon - this.long0) - Math.PI) <= _constants_values__WEBPACK_IMPORTED_MODULE_0__.EPSLN && Math.abs(lat + this.lat0) <= _constants_values__WEBPACK_IMPORTED_MODULE_0__.EPSLN) {
    //case of the origine point
    //trace('stere:this is the origin point');
    p.x = NaN;
    p.y = NaN;
    return p;
  }
  if (this.sphere) {
    //trace('stere:sphere case');
    A = 2 * this.k0 / (1 + this.sinlat0 * sinlat + this.coslat0 * coslat * Math.cos(dlon));
    p.x = this.a * A * coslat * Math.sin(dlon) + this.x0;
    p.y = this.a * A * (this.coslat0 * sinlat - this.sinlat0 * coslat * Math.cos(dlon)) + this.y0;
    return p;
  }
  else {
    X = 2 * Math.atan(this.ssfn_(lat, sinlat, this.e)) - _constants_values__WEBPACK_IMPORTED_MODULE_0__.HALF_PI;
    cosX = Math.cos(X);
    sinX = Math.sin(X);
    if (Math.abs(this.coslat0) <= _constants_values__WEBPACK_IMPORTED_MODULE_0__.EPSLN) {
      ts = (0,_common_tsfnz__WEBPACK_IMPORTED_MODULE_3__.default)(this.e, lat * this.con, this.con * sinlat);
      rh = 2 * this.a * this.k0 * ts / this.cons;
      p.x = this.x0 + rh * Math.sin(lon - this.long0);
      p.y = this.y0 - this.con * rh * Math.cos(lon - this.long0);
      //trace(p.toString());
      return p;
    }
    else if (Math.abs(this.sinlat0) < _constants_values__WEBPACK_IMPORTED_MODULE_0__.EPSLN) {
      //Eq
      //trace('stere:equateur');
      A = 2 * this.a * this.k0 / (1 + cosX * Math.cos(dlon));
      p.y = A * sinX;
    }
    else {
      //other case
      //trace('stere:normal case');
      A = 2 * this.a * this.k0 * this.ms1 / (this.cosX0 * (1 + this.sinX0 * sinX + this.cosX0 * cosX * Math.cos(dlon)));
      p.y = A * (this.cosX0 * sinX - this.sinX0 * cosX * Math.cos(dlon)) + this.y0;
    }
    p.x = A * cosX * Math.sin(dlon) + this.x0;
  }
  //trace(p.toString());
  return p;
}

//* Stereographic inverse equations--mapping x,y to lat/long
function inverse(p) {
  p.x -= this.x0;
  p.y -= this.y0;
  var lon, lat, ts, ce, Chi;
  var rh = Math.sqrt(p.x * p.x + p.y * p.y);
  if (this.sphere) {
    var c = 2 * Math.atan(rh / (2 * this.a * this.k0));
    lon = this.long0;
    lat = this.lat0;
    if (rh <= _constants_values__WEBPACK_IMPORTED_MODULE_0__.EPSLN) {
      p.x = lon;
      p.y = lat;
      return p;
    }
    lat = Math.asin(Math.cos(c) * this.sinlat0 + p.y * Math.sin(c) * this.coslat0 / rh);
    if (Math.abs(this.coslat0) < _constants_values__WEBPACK_IMPORTED_MODULE_0__.EPSLN) {
      if (this.lat0 > 0) {
        lon = (0,_common_adjust_lon__WEBPACK_IMPORTED_MODULE_5__.default)(this.long0 + Math.atan2(p.x, - 1 * p.y));
      }
      else {
        lon = (0,_common_adjust_lon__WEBPACK_IMPORTED_MODULE_5__.default)(this.long0 + Math.atan2(p.x, p.y));
      }
    }
    else {
      lon = (0,_common_adjust_lon__WEBPACK_IMPORTED_MODULE_5__.default)(this.long0 + Math.atan2(p.x * Math.sin(c), rh * this.coslat0 * Math.cos(c) - p.y * this.sinlat0 * Math.sin(c)));
    }
    p.x = lon;
    p.y = lat;
    return p;
  }
  else {
    if (Math.abs(this.coslat0) <= _constants_values__WEBPACK_IMPORTED_MODULE_0__.EPSLN) {
      if (rh <= _constants_values__WEBPACK_IMPORTED_MODULE_0__.EPSLN) {
        lat = this.lat0;
        lon = this.long0;
        p.x = lon;
        p.y = lat;
        //trace(p.toString());
        return p;
      }
      p.x *= this.con;
      p.y *= this.con;
      ts = rh * this.cons / (2 * this.a * this.k0);
      lat = this.con * (0,_common_phi2z__WEBPACK_IMPORTED_MODULE_4__.default)(this.e, ts);
      lon = this.con * (0,_common_adjust_lon__WEBPACK_IMPORTED_MODULE_5__.default)(this.con * this.long0 + Math.atan2(p.x, - 1 * p.y));
    }
    else {
      ce = 2 * Math.atan(rh * this.cosX0 / (2 * this.a * this.k0 * this.ms1));
      lon = this.long0;
      if (rh <= _constants_values__WEBPACK_IMPORTED_MODULE_0__.EPSLN) {
        Chi = this.X0;
      }
      else {
        Chi = Math.asin(Math.cos(ce) * this.sinX0 + p.y * Math.sin(ce) * this.cosX0 / rh);
        lon = (0,_common_adjust_lon__WEBPACK_IMPORTED_MODULE_5__.default)(this.long0 + Math.atan2(p.x * Math.sin(ce), rh * this.cosX0 * Math.cos(ce) - p.y * this.sinX0 * Math.sin(ce)));
      }
      lat = -1 * (0,_common_phi2z__WEBPACK_IMPORTED_MODULE_4__.default)(this.e, Math.tan(0.5 * (_constants_values__WEBPACK_IMPORTED_MODULE_0__.HALF_PI + Chi)));
    }
  }
  p.x = lon;
  p.y = lat;

  //trace(p.toString());
  return p;

}

var names = ["stere", "Stereographic_South_Pole", "Polar Stereographic (variant B)"];
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
  init: init,
  forward: forward,
  inverse: inverse,
  names: names,
  ssfn_: ssfn_
});


/***/ }),

/***/ "./node_modules/proj4/lib/projections/sterea.js":
/*!******************************************************!*\
  !*** ./node_modules/proj4/lib/projections/sterea.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "init": () => (/* binding */ init),
/* harmony export */   "forward": () => (/* binding */ forward),
/* harmony export */   "inverse": () => (/* binding */ inverse),
/* harmony export */   "names": () => (/* binding */ names),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _gauss__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./gauss */ "./node_modules/proj4/lib/projections/gauss.js");
/* harmony import */ var _common_adjust_lon__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../common/adjust_lon */ "./node_modules/proj4/lib/common/adjust_lon.js");



function init() {
  _gauss__WEBPACK_IMPORTED_MODULE_0__.default.init.apply(this);
  if (!this.rc) {
    return;
  }
  this.sinc0 = Math.sin(this.phic0);
  this.cosc0 = Math.cos(this.phic0);
  this.R2 = 2 * this.rc;
  if (!this.title) {
    this.title = "Oblique Stereographic Alternative";
  }
}

function forward(p) {
  var sinc, cosc, cosl, k;
  p.x = (0,_common_adjust_lon__WEBPACK_IMPORTED_MODULE_1__.default)(p.x - this.long0);
  _gauss__WEBPACK_IMPORTED_MODULE_0__.default.forward.apply(this, [p]);
  sinc = Math.sin(p.y);
  cosc = Math.cos(p.y);
  cosl = Math.cos(p.x);
  k = this.k0 * this.R2 / (1 + this.sinc0 * sinc + this.cosc0 * cosc * cosl);
  p.x = k * cosc * Math.sin(p.x);
  p.y = k * (this.cosc0 * sinc - this.sinc0 * cosc * cosl);
  p.x = this.a * p.x + this.x0;
  p.y = this.a * p.y + this.y0;
  return p;
}

function inverse(p) {
  var sinc, cosc, lon, lat, rho;
  p.x = (p.x - this.x0) / this.a;
  p.y = (p.y - this.y0) / this.a;

  p.x /= this.k0;
  p.y /= this.k0;
  if ((rho = Math.sqrt(p.x * p.x + p.y * p.y))) {
    var c = 2 * Math.atan2(rho, this.R2);
    sinc = Math.sin(c);
    cosc = Math.cos(c);
    lat = Math.asin(cosc * this.sinc0 + p.y * sinc * this.cosc0 / rho);
    lon = Math.atan2(p.x * sinc, rho * this.cosc0 * cosc - p.y * this.sinc0 * sinc);
  }
  else {
    lat = this.phic0;
    lon = 0;
  }

  p.x = lon;
  p.y = lat;
  _gauss__WEBPACK_IMPORTED_MODULE_0__.default.inverse.apply(this, [p]);
  p.x = (0,_common_adjust_lon__WEBPACK_IMPORTED_MODULE_1__.default)(p.x + this.long0);
  return p;
}

var names = ["Stereographic_North_Pole", "Oblique_Stereographic", "Polar_Stereographic", "sterea","Oblique Stereographic Alternative","Double_Stereographic"];
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
  init: init,
  forward: forward,
  inverse: inverse,
  names: names
});


/***/ }),

/***/ "./node_modules/proj4/lib/projections/tmerc.js":
/*!*****************************************************!*\
  !*** ./node_modules/proj4/lib/projections/tmerc.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "init": () => (/* binding */ init),
/* harmony export */   "forward": () => (/* binding */ forward),
/* harmony export */   "inverse": () => (/* binding */ inverse),
/* harmony export */   "names": () => (/* binding */ names),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _common_pj_enfn__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../common/pj_enfn */ "./node_modules/proj4/lib/common/pj_enfn.js");
/* harmony import */ var _common_pj_mlfn__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../common/pj_mlfn */ "./node_modules/proj4/lib/common/pj_mlfn.js");
/* harmony import */ var _common_pj_inv_mlfn__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../common/pj_inv_mlfn */ "./node_modules/proj4/lib/common/pj_inv_mlfn.js");
/* harmony import */ var _common_adjust_lon__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../common/adjust_lon */ "./node_modules/proj4/lib/common/adjust_lon.js");
/* harmony import */ var _constants_values__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../constants/values */ "./node_modules/proj4/lib/constants/values.js");
/* harmony import */ var _common_sign__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../common/sign */ "./node_modules/proj4/lib/common/sign.js");
// Heavily based on this tmerc projection implementation
// https://github.com/mbloch/mapshaper-proj/blob/master/src/projections/tmerc.js









function init() {
  this.x0 = this.x0 !== undefined ? this.x0 : 0;
  this.y0 = this.y0 !== undefined ? this.y0 : 0;
  this.long0 = this.long0 !== undefined ? this.long0 : 0;
  this.lat0 = this.lat0 !== undefined ? this.lat0 : 0;

  if (this.es) {
    this.en = (0,_common_pj_enfn__WEBPACK_IMPORTED_MODULE_0__.default)(this.es);
    this.ml0 = (0,_common_pj_mlfn__WEBPACK_IMPORTED_MODULE_1__.default)(this.lat0, Math.sin(this.lat0), Math.cos(this.lat0), this.en);
  }
}

/**
    Transverse Mercator Forward  - long/lat to x/y
    long/lat in radians
  */
function forward(p) {
  var lon = p.x;
  var lat = p.y;

  var delta_lon = (0,_common_adjust_lon__WEBPACK_IMPORTED_MODULE_3__.default)(lon - this.long0);
  var con;
  var x, y;
  var sin_phi = Math.sin(lat);
  var cos_phi = Math.cos(lat);

  if (!this.es) {
    var b = cos_phi * Math.sin(delta_lon);

    if ((Math.abs(Math.abs(b) - 1)) < _constants_values__WEBPACK_IMPORTED_MODULE_4__.EPSLN) {
      return (93);
    }
    else {
      x = 0.5 * this.a * this.k0 * Math.log((1 + b) / (1 - b)) + this.x0;
      y = cos_phi * Math.cos(delta_lon) / Math.sqrt(1 - Math.pow(b, 2));
      b = Math.abs(y);

      if (b >= 1) {
        if ((b - 1) > _constants_values__WEBPACK_IMPORTED_MODULE_4__.EPSLN) {
          return (93);
        }
        else {
          y = 0;
        }
      }
      else {
        y = Math.acos(y);
      }

      if (lat < 0) {
        y = -y;
      }

      y = this.a * this.k0 * (y - this.lat0) + this.y0;
    }
  }
  else {
    var al = cos_phi * delta_lon;
    var als = Math.pow(al, 2);
    var c = this.ep2 * Math.pow(cos_phi, 2);
    var cs = Math.pow(c, 2);
    var tq = Math.abs(cos_phi) > _constants_values__WEBPACK_IMPORTED_MODULE_4__.EPSLN ? Math.tan(lat) : 0;
    var t = Math.pow(tq, 2);
    var ts = Math.pow(t, 2);
    con = 1 - this.es * Math.pow(sin_phi, 2);
    al = al / Math.sqrt(con);
    var ml = (0,_common_pj_mlfn__WEBPACK_IMPORTED_MODULE_1__.default)(lat, sin_phi, cos_phi, this.en);

    x = this.a * (this.k0 * al * (1 +
      als / 6 * (1 - t + c +
      als / 20 * (5 - 18 * t + ts + 14 * c - 58 * t * c +
      als / 42 * (61 + 179 * ts - ts * t - 479 * t))))) +
      this.x0;

    y = this.a * (this.k0 * (ml - this.ml0 +
      sin_phi * delta_lon * al / 2 * (1 +
      als / 12 * (5 - t + 9 * c + 4 * cs +
      als / 30 * (61 + ts - 58 * t + 270 * c - 330 * t * c +
      als / 56 * (1385 + 543 * ts - ts * t - 3111 * t)))))) +
      this.y0;
  }

  p.x = x;
  p.y = y;

  return p;
}

/**
    Transverse Mercator Inverse  -  x/y to long/lat
  */
function inverse(p) {
  var con, phi;
  var lat, lon;
  var x = (p.x - this.x0) * (1 / this.a);
  var y = (p.y - this.y0) * (1 / this.a);

  if (!this.es) {
    var f = Math.exp(x / this.k0);
    var g = 0.5 * (f - 1 / f);
    var temp = this.lat0 + y / this.k0;
    var h = Math.cos(temp);
    con = Math.sqrt((1 - Math.pow(h, 2)) / (1 + Math.pow(g, 2)));
    lat = Math.asin(con);

    if (y < 0) {
      lat = -lat;
    }

    if ((g === 0) && (h === 0)) {
      lon = 0;
    }
    else {
      lon = (0,_common_adjust_lon__WEBPACK_IMPORTED_MODULE_3__.default)(Math.atan2(g, h) + this.long0);
    }
  }
  else { // ellipsoidal form
    con = this.ml0 + y / this.k0;
    phi = (0,_common_pj_inv_mlfn__WEBPACK_IMPORTED_MODULE_2__.default)(con, this.es, this.en);

    if (Math.abs(phi) < _constants_values__WEBPACK_IMPORTED_MODULE_4__.HALF_PI) {
      var sin_phi = Math.sin(phi);
      var cos_phi = Math.cos(phi);
      var tan_phi = Math.abs(cos_phi) > _constants_values__WEBPACK_IMPORTED_MODULE_4__.EPSLN ? Math.tan(phi) : 0;
      var c = this.ep2 * Math.pow(cos_phi, 2);
      var cs = Math.pow(c, 2);
      var t = Math.pow(tan_phi, 2);
      var ts = Math.pow(t, 2);
      con = 1 - this.es * Math.pow(sin_phi, 2);
      var d = x * Math.sqrt(con) / this.k0;
      var ds = Math.pow(d, 2);
      con = con * tan_phi;

      lat = phi - (con * ds / (1 - this.es)) * 0.5 * (1 -
        ds / 12 * (5 + 3 * t - 9 * c * t + c - 4 * cs -
        ds / 30 * (61 + 90 * t - 252 * c * t + 45 * ts + 46 * c -
        ds / 56 * (1385 + 3633 * t + 4095 * ts + 1574 * ts * t))));

      lon = (0,_common_adjust_lon__WEBPACK_IMPORTED_MODULE_3__.default)(this.long0 + (d * (1 -
        ds / 6 * (1 + 2 * t + c -
        ds / 20 * (5 + 28 * t + 24 * ts + 8 * c * t + 6 * c -
        ds / 42 * (61 + 662 * t + 1320 * ts + 720 * ts * t)))) / cos_phi));
    }
    else {
      lat = _constants_values__WEBPACK_IMPORTED_MODULE_4__.HALF_PI * (0,_common_sign__WEBPACK_IMPORTED_MODULE_5__.default)(y);
      lon = 0;
    }
  }

  p.x = lon;
  p.y = lat;

  return p;
}

var names = ["Fast_Transverse_Mercator", "Fast Transverse Mercator"];
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
  init: init,
  forward: forward,
  inverse: inverse,
  names: names
});


/***/ }),

/***/ "./node_modules/proj4/lib/projections/tpers.js":
/*!*****************************************************!*\
  !*** ./node_modules/proj4/lib/projections/tpers.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "init": () => (/* binding */ init),
/* harmony export */   "forward": () => (/* binding */ forward),
/* harmony export */   "inverse": () => (/* binding */ inverse),
/* harmony export */   "names": () => (/* binding */ names),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _constants_values__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../constants/values */ "./node_modules/proj4/lib/constants/values.js");
/* harmony import */ var _common_hypot__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../common/hypot */ "./node_modules/proj4/lib/common/hypot.js");

var mode = {
  N_POLE: 0,
  S_POLE: 1,
  EQUIT: 2,
  OBLIQ: 3
};




var params = {
  h:     { def: 100000, num: true },           // default is Karman line, no default in PROJ.7
  azi:   { def: 0, num: true, degrees: true }, // default is North
  tilt:  { def: 0, num: true, degrees: true }, // default is Nadir
  long0: { def: 0, num: true },                // default is Greenwich, conversion to rad is automatic
  lat0:  { def: 0, num: true }                 // default is Equator, conversion to rad is automatic
};

function init() {
  Object.keys(params).forEach(function (p) {
    if (typeof this[p] === "undefined") {
      this[p] = params[p].def;
    } else if (params[p].num && isNaN(this[p])) {
      throw new Error("Invalid parameter value, must be numeric " + p + " = " + this[p]);
    } else if (params[p].num) {
      this[p] = parseFloat(this[p]);
    }
    if (params[p].degrees) {
      this[p] = this[p] * _constants_values__WEBPACK_IMPORTED_MODULE_0__.D2R;
    }
  }.bind(this));

  if (Math.abs((Math.abs(this.lat0) - _constants_values__WEBPACK_IMPORTED_MODULE_0__.HALF_PI)) < _constants_values__WEBPACK_IMPORTED_MODULE_0__.EPSLN) {
    this.mode = this.lat0 < 0 ? mode.S_POLE : mode.N_POLE;
  } else if (Math.abs(this.lat0) < _constants_values__WEBPACK_IMPORTED_MODULE_0__.EPSLN) {
    this.mode = mode.EQUIT;
  } else {
    this.mode = mode.OBLIQ;
    this.sinph0 = Math.sin(this.lat0);
    this.cosph0 = Math.cos(this.lat0);
  }

  this.pn1 = this.h / this.a;  // Normalize relative to the Earth's radius

  if (this.pn1 <= 0 || this.pn1 > 1e10) {
    throw new Error("Invalid height");
  }
  
  this.p = 1 + this.pn1;
  this.rp = 1 / this.p;
  this.h1 = 1 / this.pn1;
  this.pfact = (this.p + 1) * this.h1;
  this.es = 0;

  var omega = this.tilt;
  var gamma = this.azi;
  this.cg = Math.cos(gamma);
  this.sg = Math.sin(gamma);
  this.cw = Math.cos(omega);
  this.sw = Math.sin(omega);
}

function forward(p) {
  p.x -= this.long0;
  var sinphi = Math.sin(p.y);
  var cosphi = Math.cos(p.y);
  var coslam = Math.cos(p.x);
  var x, y;
  switch (this.mode) {
    case mode.OBLIQ:
      y = this.sinph0 * sinphi + this.cosph0 * cosphi * coslam;
      break;
    case mode.EQUIT:
      y = cosphi * coslam;
      break;
    case mode.S_POLE:
      y = -sinphi;
      break;
    case mode.N_POLE:
      y = sinphi;
      break;
  }
  y = this.pn1 / (this.p - y);
  x = y * cosphi * Math.sin(p.x);

  switch (this.mode) {
    case mode.OBLIQ:
      y *= this.cosph0 * sinphi - this.sinph0 * cosphi * coslam;
      break;
    case mode.EQUIT:
      y *= sinphi;
      break;
    case mode.N_POLE:
      y *= -(cosphi * coslam);
      break;
    case mode.S_POLE:
      y *= cosphi * coslam;
      break;
  }

  // Tilt 
  var yt, ba;
  yt = y * this.cg + x * this.sg;
  ba = 1 / (yt * this.sw * this.h1 + this.cw);
  x = (x * this.cg - y * this.sg) * this.cw * ba;
  y = yt * ba;

  p.x = x * this.a;
  p.y = y * this.a;
  return p;
}

function inverse(p) {
  p.x /= this.a;
  p.y /= this.a;
  var r = { x: p.x, y: p.y };

  // Un-Tilt
  var bm, bq, yt;
  yt = 1 / (this.pn1 - p.y * this.sw);
  bm = this.pn1 * p.x * yt;
  bq = this.pn1 * p.y * this.cw * yt;
  p.x = bm * this.cg + bq * this.sg;
  p.y = bq * this.cg - bm * this.sg;

  var rh = (0,_common_hypot__WEBPACK_IMPORTED_MODULE_1__.default)(p.x, p.y);
  if (Math.abs(rh) < _constants_values__WEBPACK_IMPORTED_MODULE_0__.EPSLN) {
    r.x = 0;
    r.y = p.y;
  } else {
    var cosz, sinz;
    sinz = 1 - rh * rh * this.pfact;
    sinz = (this.p - Math.sqrt(sinz)) / (this.pn1 / rh + rh / this.pn1);
    cosz = Math.sqrt(1 - sinz * sinz);
    switch (this.mode) {
      case mode.OBLIQ:
        r.y = Math.asin(cosz * this.sinph0 + p.y * sinz * this.cosph0 / rh);
        p.y = (cosz - this.sinph0 * Math.sin(r.y)) * rh;
        p.x *= sinz * this.cosph0;
        break;
      case mode.EQUIT:
        r.y = Math.asin(p.y * sinz / rh);
        p.y = cosz * rh;
        p.x *= sinz;
        break;
      case mode.N_POLE:
        r.y = Math.asin(cosz);
        p.y = -p.y;
        break;
      case mode.S_POLE:
        r.y = -Math.asin(cosz);
        break;
    }
    r.x = Math.atan2(p.x, p.y);
  }

  p.x = r.x + this.long0;
  p.y = r.y;
  return p;
}

var names = ["Tilted_Perspective", "tpers"];
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
  init: init,
  forward: forward,
  inverse: inverse,
  names: names
});


/***/ }),

/***/ "./node_modules/proj4/lib/projections/utm.js":
/*!***************************************************!*\
  !*** ./node_modules/proj4/lib/projections/utm.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "dependsOn": () => (/* binding */ dependsOn),
/* harmony export */   "init": () => (/* binding */ init),
/* harmony export */   "names": () => (/* binding */ names),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _common_adjust_zone__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../common/adjust_zone */ "./node_modules/proj4/lib/common/adjust_zone.js");
/* harmony import */ var _etmerc__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./etmerc */ "./node_modules/proj4/lib/projections/etmerc.js");
/* harmony import */ var _constants_values__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../constants/values */ "./node_modules/proj4/lib/constants/values.js");


var dependsOn = 'etmerc';



function init() {
  var zone = (0,_common_adjust_zone__WEBPACK_IMPORTED_MODULE_0__.default)(this.zone, this.long0);
  if (zone === undefined) {
    throw new Error('unknown utm zone');
  }
  this.lat0 = 0;
  this.long0 =  ((6 * Math.abs(zone)) - 183) * _constants_values__WEBPACK_IMPORTED_MODULE_2__.D2R;
  this.x0 = 500000;
  this.y0 = this.utmSouth ? 10000000 : 0;
  this.k0 = 0.9996;

  _etmerc__WEBPACK_IMPORTED_MODULE_1__.default.init.apply(this);
  this.forward = _etmerc__WEBPACK_IMPORTED_MODULE_1__.default.forward;
  this.inverse = _etmerc__WEBPACK_IMPORTED_MODULE_1__.default.inverse;
}

var names = ["Universal Transverse Mercator System", "utm"];
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
  init: init,
  names: names,
  dependsOn: dependsOn
});


/***/ }),

/***/ "./node_modules/proj4/lib/projections/vandg.js":
/*!*****************************************************!*\
  !*** ./node_modules/proj4/lib/projections/vandg.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "init": () => (/* binding */ init),
/* harmony export */   "forward": () => (/* binding */ forward),
/* harmony export */   "inverse": () => (/* binding */ inverse),
/* harmony export */   "names": () => (/* binding */ names),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _common_adjust_lon__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../common/adjust_lon */ "./node_modules/proj4/lib/common/adjust_lon.js");
/* harmony import */ var _constants_values__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../constants/values */ "./node_modules/proj4/lib/constants/values.js");
/* harmony import */ var _common_asinz__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../common/asinz */ "./node_modules/proj4/lib/common/asinz.js");






/* Initialize the Van Der Grinten projection
  ----------------------------------------*/
function init() {
  //this.R = 6370997; //Radius of earth
  this.R = this.a;
}

function forward(p) {

  var lon = p.x;
  var lat = p.y;

  /* Forward equations
    -----------------*/
  var dlon = (0,_common_adjust_lon__WEBPACK_IMPORTED_MODULE_0__.default)(lon - this.long0);
  var x, y;

  if (Math.abs(lat) <= _constants_values__WEBPACK_IMPORTED_MODULE_1__.EPSLN) {
    x = this.x0 + this.R * dlon;
    y = this.y0;
  }
  var theta = (0,_common_asinz__WEBPACK_IMPORTED_MODULE_2__.default)(2 * Math.abs(lat / Math.PI));
  if ((Math.abs(dlon) <= _constants_values__WEBPACK_IMPORTED_MODULE_1__.EPSLN) || (Math.abs(Math.abs(lat) - _constants_values__WEBPACK_IMPORTED_MODULE_1__.HALF_PI) <= _constants_values__WEBPACK_IMPORTED_MODULE_1__.EPSLN)) {
    x = this.x0;
    if (lat >= 0) {
      y = this.y0 + Math.PI * this.R * Math.tan(0.5 * theta);
    }
    else {
      y = this.y0 + Math.PI * this.R * -Math.tan(0.5 * theta);
    }
    //  return(OK);
  }
  var al = 0.5 * Math.abs((Math.PI / dlon) - (dlon / Math.PI));
  var asq = al * al;
  var sinth = Math.sin(theta);
  var costh = Math.cos(theta);

  var g = costh / (sinth + costh - 1);
  var gsq = g * g;
  var m = g * (2 / sinth - 1);
  var msq = m * m;
  var con = Math.PI * this.R * (al * (g - msq) + Math.sqrt(asq * (g - msq) * (g - msq) - (msq + asq) * (gsq - msq))) / (msq + asq);
  if (dlon < 0) {
    con = -con;
  }
  x = this.x0 + con;
  //con = Math.abs(con / (Math.PI * this.R));
  var q = asq + g;
  con = Math.PI * this.R * (m * q - al * Math.sqrt((msq + asq) * (asq + 1) - q * q)) / (msq + asq);
  if (lat >= 0) {
    //y = this.y0 + Math.PI * this.R * Math.sqrt(1 - con * con - 2 * al * con);
    y = this.y0 + con;
  }
  else {
    //y = this.y0 - Math.PI * this.R * Math.sqrt(1 - con * con - 2 * al * con);
    y = this.y0 - con;
  }
  p.x = x;
  p.y = y;
  return p;
}

/* Van Der Grinten inverse equations--mapping x,y to lat/long
  ---------------------------------------------------------*/
function inverse(p) {
  var lon, lat;
  var xx, yy, xys, c1, c2, c3;
  var a1;
  var m1;
  var con;
  var th1;
  var d;

  /* inverse equations
    -----------------*/
  p.x -= this.x0;
  p.y -= this.y0;
  con = Math.PI * this.R;
  xx = p.x / con;
  yy = p.y / con;
  xys = xx * xx + yy * yy;
  c1 = -Math.abs(yy) * (1 + xys);
  c2 = c1 - 2 * yy * yy + xx * xx;
  c3 = -2 * c1 + 1 + 2 * yy * yy + xys * xys;
  d = yy * yy / c3 + (2 * c2 * c2 * c2 / c3 / c3 / c3 - 9 * c1 * c2 / c3 / c3) / 27;
  a1 = (c1 - c2 * c2 / 3 / c3) / c3;
  m1 = 2 * Math.sqrt(-a1 / 3);
  con = ((3 * d) / a1) / m1;
  if (Math.abs(con) > 1) {
    if (con >= 0) {
      con = 1;
    }
    else {
      con = -1;
    }
  }
  th1 = Math.acos(con) / 3;
  if (p.y >= 0) {
    lat = (-m1 * Math.cos(th1 + Math.PI / 3) - c2 / 3 / c3) * Math.PI;
  }
  else {
    lat = -(-m1 * Math.cos(th1 + Math.PI / 3) - c2 / 3 / c3) * Math.PI;
  }

  if (Math.abs(xx) < _constants_values__WEBPACK_IMPORTED_MODULE_1__.EPSLN) {
    lon = this.long0;
  }
  else {
    lon = (0,_common_adjust_lon__WEBPACK_IMPORTED_MODULE_0__.default)(this.long0 + Math.PI * (xys - 1 + Math.sqrt(1 + 2 * (xx * xx - yy * yy) + xys * xys)) / 2 / xx);
  }

  p.x = lon;
  p.y = lat;
  return p;
}

var names = ["Van_der_Grinten_I", "VanDerGrinten", "vandg"];
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
  init: init,
  forward: forward,
  inverse: inverse,
  names: names
});


/***/ }),

/***/ "./node_modules/proj4/lib/transform.js":
/*!*********************************************!*\
  !*** ./node_modules/proj4/lib/transform.js ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ transform)
/* harmony export */ });
/* harmony import */ var _constants_values__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./constants/values */ "./node_modules/proj4/lib/constants/values.js");
/* harmony import */ var _datum_transform__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./datum_transform */ "./node_modules/proj4/lib/datum_transform.js");
/* harmony import */ var _adjust_axis__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./adjust_axis */ "./node_modules/proj4/lib/adjust_axis.js");
/* harmony import */ var _Proj__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Proj */ "./node_modules/proj4/lib/Proj.js");
/* harmony import */ var _common_toPoint__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./common/toPoint */ "./node_modules/proj4/lib/common/toPoint.js");
/* harmony import */ var _checkSanity__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./checkSanity */ "./node_modules/proj4/lib/checkSanity.js");







function checkNotWGS(source, dest) {
  return ((source.datum.datum_type === _constants_values__WEBPACK_IMPORTED_MODULE_0__.PJD_3PARAM || source.datum.datum_type === _constants_values__WEBPACK_IMPORTED_MODULE_0__.PJD_7PARAM) && dest.datumCode !== 'WGS84') || ((dest.datum.datum_type === _constants_values__WEBPACK_IMPORTED_MODULE_0__.PJD_3PARAM || dest.datum.datum_type === _constants_values__WEBPACK_IMPORTED_MODULE_0__.PJD_7PARAM) && source.datumCode !== 'WGS84');
}

function transform(source, dest, point) {
  var wgs84;
  if (Array.isArray(point)) {
    point = (0,_common_toPoint__WEBPACK_IMPORTED_MODULE_4__.default)(point);
  }
  (0,_checkSanity__WEBPACK_IMPORTED_MODULE_5__.default)(point);
  // Workaround for datum shifts towgs84, if either source or destination projection is not wgs84
  if (source.datum && dest.datum && checkNotWGS(source, dest)) {
    wgs84 = new _Proj__WEBPACK_IMPORTED_MODULE_3__.default('WGS84');
    point = transform(source, wgs84, point);
    source = wgs84;
  }
  // DGR, 2010/11/12
  if (source.axis !== 'enu') {
    point = (0,_adjust_axis__WEBPACK_IMPORTED_MODULE_2__.default)(source, false, point);
  }
  // Transform source points to long/lat, if they aren't already.
  if (source.projName === 'longlat') {
    point = {
      x: point.x * _constants_values__WEBPACK_IMPORTED_MODULE_0__.D2R,
      y: point.y * _constants_values__WEBPACK_IMPORTED_MODULE_0__.D2R,
      z: point.z || 0
    };
  } else {
    if (source.to_meter) {
      point = {
        x: point.x * source.to_meter,
        y: point.y * source.to_meter,
        z: point.z || 0
      };
    }
    point = source.inverse(point); // Convert Cartesian to longlat
    if (!point) {
      return;
    }
  }
  // Adjust for the prime meridian if necessary
  if (source.from_greenwich) {
    point.x += source.from_greenwich;
  }

  // Convert datums if needed, and if possible.
  point = (0,_datum_transform__WEBPACK_IMPORTED_MODULE_1__.default)(source.datum, dest.datum, point);
  if (!point) {
    return;
  }

  // Adjust for the prime meridian if necessary
  if (dest.from_greenwich) {
    point = {
      x: point.x - dest.from_greenwich,
      y: point.y,
      z: point.z || 0
    };
  }

  if (dest.projName === 'longlat') {
    // convert radians to decimal degrees
    point = {
      x: point.x * _constants_values__WEBPACK_IMPORTED_MODULE_0__.R2D,
      y: point.y * _constants_values__WEBPACK_IMPORTED_MODULE_0__.R2D,
      z: point.z || 0
    };
  } else { // else project
    point = dest.forward(point);
    if (dest.to_meter) {
      point = {
        x: point.x / dest.to_meter,
        y: point.y / dest.to_meter,
        z: point.z || 0
      };
    }
  }

  // DGR, 2010/11/12
  if (dest.axis !== 'enu') {
    return (0,_adjust_axis__WEBPACK_IMPORTED_MODULE_2__.default)(dest, true, point);
  }

  return point;
}


/***/ }),

/***/ "./node_modules/proj4/projs.js":
/*!*************************************!*\
  !*** ./node_modules/proj4/projs.js ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _lib_projections_tmerc__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./lib/projections/tmerc */ "./node_modules/proj4/lib/projections/tmerc.js");
/* harmony import */ var _lib_projections_etmerc__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./lib/projections/etmerc */ "./node_modules/proj4/lib/projections/etmerc.js");
/* harmony import */ var _lib_projections_utm__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./lib/projections/utm */ "./node_modules/proj4/lib/projections/utm.js");
/* harmony import */ var _lib_projections_sterea__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./lib/projections/sterea */ "./node_modules/proj4/lib/projections/sterea.js");
/* harmony import */ var _lib_projections_stere__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./lib/projections/stere */ "./node_modules/proj4/lib/projections/stere.js");
/* harmony import */ var _lib_projections_somerc__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./lib/projections/somerc */ "./node_modules/proj4/lib/projections/somerc.js");
/* harmony import */ var _lib_projections_omerc__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./lib/projections/omerc */ "./node_modules/proj4/lib/projections/omerc.js");
/* harmony import */ var _lib_projections_lcc__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./lib/projections/lcc */ "./node_modules/proj4/lib/projections/lcc.js");
/* harmony import */ var _lib_projections_krovak__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./lib/projections/krovak */ "./node_modules/proj4/lib/projections/krovak.js");
/* harmony import */ var _lib_projections_cass__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./lib/projections/cass */ "./node_modules/proj4/lib/projections/cass.js");
/* harmony import */ var _lib_projections_laea__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./lib/projections/laea */ "./node_modules/proj4/lib/projections/laea.js");
/* harmony import */ var _lib_projections_aea__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./lib/projections/aea */ "./node_modules/proj4/lib/projections/aea.js");
/* harmony import */ var _lib_projections_gnom__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./lib/projections/gnom */ "./node_modules/proj4/lib/projections/gnom.js");
/* harmony import */ var _lib_projections_cea__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./lib/projections/cea */ "./node_modules/proj4/lib/projections/cea.js");
/* harmony import */ var _lib_projections_eqc__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./lib/projections/eqc */ "./node_modules/proj4/lib/projections/eqc.js");
/* harmony import */ var _lib_projections_poly__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./lib/projections/poly */ "./node_modules/proj4/lib/projections/poly.js");
/* harmony import */ var _lib_projections_nzmg__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./lib/projections/nzmg */ "./node_modules/proj4/lib/projections/nzmg.js");
/* harmony import */ var _lib_projections_mill__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./lib/projections/mill */ "./node_modules/proj4/lib/projections/mill.js");
/* harmony import */ var _lib_projections_sinu__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./lib/projections/sinu */ "./node_modules/proj4/lib/projections/sinu.js");
/* harmony import */ var _lib_projections_moll__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./lib/projections/moll */ "./node_modules/proj4/lib/projections/moll.js");
/* harmony import */ var _lib_projections_eqdc__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./lib/projections/eqdc */ "./node_modules/proj4/lib/projections/eqdc.js");
/* harmony import */ var _lib_projections_vandg__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./lib/projections/vandg */ "./node_modules/proj4/lib/projections/vandg.js");
/* harmony import */ var _lib_projections_aeqd__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./lib/projections/aeqd */ "./node_modules/proj4/lib/projections/aeqd.js");
/* harmony import */ var _lib_projections_ortho__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./lib/projections/ortho */ "./node_modules/proj4/lib/projections/ortho.js");
/* harmony import */ var _lib_projections_qsc__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./lib/projections/qsc */ "./node_modules/proj4/lib/projections/qsc.js");
/* harmony import */ var _lib_projections_robin__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ./lib/projections/robin */ "./node_modules/proj4/lib/projections/robin.js");
/* harmony import */ var _lib_projections_geocent__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ./lib/projections/geocent */ "./node_modules/proj4/lib/projections/geocent.js");
/* harmony import */ var _lib_projections_tpers__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ./lib/projections/tpers */ "./node_modules/proj4/lib/projections/tpers.js");




























/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(proj4){
  proj4.Proj.projections.add(_lib_projections_tmerc__WEBPACK_IMPORTED_MODULE_0__.default);
  proj4.Proj.projections.add(_lib_projections_etmerc__WEBPACK_IMPORTED_MODULE_1__.default);
  proj4.Proj.projections.add(_lib_projections_utm__WEBPACK_IMPORTED_MODULE_2__.default);
  proj4.Proj.projections.add(_lib_projections_sterea__WEBPACK_IMPORTED_MODULE_3__.default);
  proj4.Proj.projections.add(_lib_projections_stere__WEBPACK_IMPORTED_MODULE_4__.default);
  proj4.Proj.projections.add(_lib_projections_somerc__WEBPACK_IMPORTED_MODULE_5__.default);
  proj4.Proj.projections.add(_lib_projections_omerc__WEBPACK_IMPORTED_MODULE_6__.default);
  proj4.Proj.projections.add(_lib_projections_lcc__WEBPACK_IMPORTED_MODULE_7__.default);
  proj4.Proj.projections.add(_lib_projections_krovak__WEBPACK_IMPORTED_MODULE_8__.default);
  proj4.Proj.projections.add(_lib_projections_cass__WEBPACK_IMPORTED_MODULE_9__.default);
  proj4.Proj.projections.add(_lib_projections_laea__WEBPACK_IMPORTED_MODULE_10__.default);
  proj4.Proj.projections.add(_lib_projections_aea__WEBPACK_IMPORTED_MODULE_11__.default);
  proj4.Proj.projections.add(_lib_projections_gnom__WEBPACK_IMPORTED_MODULE_12__.default);
  proj4.Proj.projections.add(_lib_projections_cea__WEBPACK_IMPORTED_MODULE_13__.default);
  proj4.Proj.projections.add(_lib_projections_eqc__WEBPACK_IMPORTED_MODULE_14__.default);
  proj4.Proj.projections.add(_lib_projections_poly__WEBPACK_IMPORTED_MODULE_15__.default);
  proj4.Proj.projections.add(_lib_projections_nzmg__WEBPACK_IMPORTED_MODULE_16__.default);
  proj4.Proj.projections.add(_lib_projections_mill__WEBPACK_IMPORTED_MODULE_17__.default);
  proj4.Proj.projections.add(_lib_projections_sinu__WEBPACK_IMPORTED_MODULE_18__.default);
  proj4.Proj.projections.add(_lib_projections_moll__WEBPACK_IMPORTED_MODULE_19__.default);
  proj4.Proj.projections.add(_lib_projections_eqdc__WEBPACK_IMPORTED_MODULE_20__.default);
  proj4.Proj.projections.add(_lib_projections_vandg__WEBPACK_IMPORTED_MODULE_21__.default);
  proj4.Proj.projections.add(_lib_projections_aeqd__WEBPACK_IMPORTED_MODULE_22__.default);
  proj4.Proj.projections.add(_lib_projections_ortho__WEBPACK_IMPORTED_MODULE_23__.default);
  proj4.Proj.projections.add(_lib_projections_qsc__WEBPACK_IMPORTED_MODULE_24__.default);
  proj4.Proj.projections.add(_lib_projections_robin__WEBPACK_IMPORTED_MODULE_25__.default);
  proj4.Proj.projections.add(_lib_projections_geocent__WEBPACK_IMPORTED_MODULE_26__.default);
  proj4.Proj.projections.add(_lib_projections_tpers__WEBPACK_IMPORTED_MODULE_27__.default);
}

/***/ }),

/***/ "./node_modules/rbush/rbush.min.js":
/*!*****************************************!*\
  !*** ./node_modules/rbush/rbush.min.js ***!
  \*****************************************/
/***/ (function(module) {

!function(t,i){ true?module.exports=i():0}(this,function(){"use strict";function t(t,r,e,a,h){!function t(n,r,e,a,h){for(;a>e;){if(a-e>600){var o=a-e+1,s=r-e+1,l=Math.log(o),f=.5*Math.exp(2*l/3),u=.5*Math.sqrt(l*f*(o-f)/o)*(s-o/2<0?-1:1),m=Math.max(e,Math.floor(r-s*f/o+u)),c=Math.min(a,Math.floor(r+(o-s)*f/o+u));t(n,r,m,c,h)}var p=n[r],d=e,x=a;for(i(n,e,r),h(n[a],p)>0&&i(n,e,a);d<x;){for(i(n,d,x),d++,x--;h(n[d],p)<0;)d++;for(;h(n[x],p)>0;)x--}0===h(n[e],p)?i(n,e,x):i(n,++x,a),x<=r&&(e=x+1),r<=x&&(a=x-1)}}(t,r,e||0,a||t.length-1,h||n)}function i(t,i,n){var r=t[i];t[i]=t[n],t[n]=r}function n(t,i){return t<i?-1:t>i?1:0}var r=function(t){void 0===t&&(t=9),this._maxEntries=Math.max(4,t),this._minEntries=Math.max(2,Math.ceil(.4*this._maxEntries)),this.clear()};function e(t,i,n){if(!n)return i.indexOf(t);for(var r=0;r<i.length;r++)if(n(t,i[r]))return r;return-1}function a(t,i){h(t,0,t.children.length,i,t)}function h(t,i,n,r,e){e||(e=p(null)),e.minX=1/0,e.minY=1/0,e.maxX=-1/0,e.maxY=-1/0;for(var a=i;a<n;a++){var h=t.children[a];o(e,t.leaf?r(h):h)}return e}function o(t,i){return t.minX=Math.min(t.minX,i.minX),t.minY=Math.min(t.minY,i.minY),t.maxX=Math.max(t.maxX,i.maxX),t.maxY=Math.max(t.maxY,i.maxY),t}function s(t,i){return t.minX-i.minX}function l(t,i){return t.minY-i.minY}function f(t){return(t.maxX-t.minX)*(t.maxY-t.minY)}function u(t){return t.maxX-t.minX+(t.maxY-t.minY)}function m(t,i){return t.minX<=i.minX&&t.minY<=i.minY&&i.maxX<=t.maxX&&i.maxY<=t.maxY}function c(t,i){return i.minX<=t.maxX&&i.minY<=t.maxY&&i.maxX>=t.minX&&i.maxY>=t.minY}function p(t){return{children:t,height:1,leaf:!0,minX:1/0,minY:1/0,maxX:-1/0,maxY:-1/0}}function d(i,n,r,e,a){for(var h=[n,r];h.length;)if(!((r=h.pop())-(n=h.pop())<=e)){var o=n+Math.ceil((r-n)/e/2)*e;t(i,o,n,r,a),h.push(n,o,o,r)}}return r.prototype.all=function(){return this._all(this.data,[])},r.prototype.search=function(t){var i=this.data,n=[];if(!c(t,i))return n;for(var r=this.toBBox,e=[];i;){for(var a=0;a<i.children.length;a++){var h=i.children[a],o=i.leaf?r(h):h;c(t,o)&&(i.leaf?n.push(h):m(t,o)?this._all(h,n):e.push(h))}i=e.pop()}return n},r.prototype.collides=function(t){var i=this.data;if(!c(t,i))return!1;for(var n=[];i;){for(var r=0;r<i.children.length;r++){var e=i.children[r],a=i.leaf?this.toBBox(e):e;if(c(t,a)){if(i.leaf||m(t,a))return!0;n.push(e)}}i=n.pop()}return!1},r.prototype.load=function(t){if(!t||!t.length)return this;if(t.length<this._minEntries){for(var i=0;i<t.length;i++)this.insert(t[i]);return this}var n=this._build(t.slice(),0,t.length-1,0);if(this.data.children.length)if(this.data.height===n.height)this._splitRoot(this.data,n);else{if(this.data.height<n.height){var r=this.data;this.data=n,n=r}this._insert(n,this.data.height-n.height-1,!0)}else this.data=n;return this},r.prototype.insert=function(t){return t&&this._insert(t,this.data.height-1),this},r.prototype.clear=function(){return this.data=p([]),this},r.prototype.remove=function(t,i){if(!t)return this;for(var n,r,a,h=this.data,o=this.toBBox(t),s=[],l=[];h||s.length;){if(h||(h=s.pop(),r=s[s.length-1],n=l.pop(),a=!0),h.leaf){var f=e(t,h.children,i);if(-1!==f)return h.children.splice(f,1),s.push(h),this._condense(s),this}a||h.leaf||!m(h,o)?r?(n++,h=r.children[n],a=!1):h=null:(s.push(h),l.push(n),n=0,r=h,h=h.children[0])}return this},r.prototype.toBBox=function(t){return t},r.prototype.compareMinX=function(t,i){return t.minX-i.minX},r.prototype.compareMinY=function(t,i){return t.minY-i.minY},r.prototype.toJSON=function(){return this.data},r.prototype.fromJSON=function(t){return this.data=t,this},r.prototype._all=function(t,i){for(var n=[];t;)t.leaf?i.push.apply(i,t.children):n.push.apply(n,t.children),t=n.pop();return i},r.prototype._build=function(t,i,n,r){var e,h=n-i+1,o=this._maxEntries;if(h<=o)return a(e=p(t.slice(i,n+1)),this.toBBox),e;r||(r=Math.ceil(Math.log(h)/Math.log(o)),o=Math.ceil(h/Math.pow(o,r-1))),(e=p([])).leaf=!1,e.height=r;var s=Math.ceil(h/o),l=s*Math.ceil(Math.sqrt(o));d(t,i,n,l,this.compareMinX);for(var f=i;f<=n;f+=l){var u=Math.min(f+l-1,n);d(t,f,u,s,this.compareMinY);for(var m=f;m<=u;m+=s){var c=Math.min(m+s-1,u);e.children.push(this._build(t,m,c,r-1))}}return a(e,this.toBBox),e},r.prototype._chooseSubtree=function(t,i,n,r){for(;r.push(i),!i.leaf&&r.length-1!==n;){for(var e=1/0,a=1/0,h=void 0,o=0;o<i.children.length;o++){var s=i.children[o],l=f(s),u=(m=t,c=s,(Math.max(c.maxX,m.maxX)-Math.min(c.minX,m.minX))*(Math.max(c.maxY,m.maxY)-Math.min(c.minY,m.minY))-l);u<a?(a=u,e=l<e?l:e,h=s):u===a&&l<e&&(e=l,h=s)}i=h||i.children[0]}var m,c;return i},r.prototype._insert=function(t,i,n){var r=n?t:this.toBBox(t),e=[],a=this._chooseSubtree(r,this.data,i,e);for(a.children.push(t),o(a,r);i>=0&&e[i].children.length>this._maxEntries;)this._split(e,i),i--;this._adjustParentBBoxes(r,e,i)},r.prototype._split=function(t,i){var n=t[i],r=n.children.length,e=this._minEntries;this._chooseSplitAxis(n,e,r);var h=this._chooseSplitIndex(n,e,r),o=p(n.children.splice(h,n.children.length-h));o.height=n.height,o.leaf=n.leaf,a(n,this.toBBox),a(o,this.toBBox),i?t[i-1].children.push(o):this._splitRoot(n,o)},r.prototype._splitRoot=function(t,i){this.data=p([t,i]),this.data.height=t.height+1,this.data.leaf=!1,a(this.data,this.toBBox)},r.prototype._chooseSplitIndex=function(t,i,n){for(var r,e,a,o,s,l,u,m=1/0,c=1/0,p=i;p<=n-i;p++){var d=h(t,0,p,this.toBBox),x=h(t,p,n,this.toBBox),v=(e=d,a=x,o=void 0,s=void 0,l=void 0,u=void 0,o=Math.max(e.minX,a.minX),s=Math.max(e.minY,a.minY),l=Math.min(e.maxX,a.maxX),u=Math.min(e.maxY,a.maxY),Math.max(0,l-o)*Math.max(0,u-s)),M=f(d)+f(x);v<m?(m=v,r=p,c=M<c?M:c):v===m&&M<c&&(c=M,r=p)}return r||n-i},r.prototype._chooseSplitAxis=function(t,i,n){var r=t.leaf?this.compareMinX:s,e=t.leaf?this.compareMinY:l;this._allDistMargin(t,i,n,r)<this._allDistMargin(t,i,n,e)&&t.children.sort(r)},r.prototype._allDistMargin=function(t,i,n,r){t.children.sort(r);for(var e=this.toBBox,a=h(t,0,i,e),s=h(t,n-i,n,e),l=u(a)+u(s),f=i;f<n-i;f++){var m=t.children[f];o(a,t.leaf?e(m):m),l+=u(a)}for(var c=n-i-1;c>=i;c--){var p=t.children[c];o(s,t.leaf?e(p):p),l+=u(s)}return l},r.prototype._adjustParentBBoxes=function(t,i,n){for(var r=n;r>=0;r--)o(i[r],t)},r.prototype._condense=function(t){for(var i=t.length-1,n=void 0;i>=0;i--)0===t[i].children.length?i>0?(n=t[i-1].children).splice(n.indexOf(t[i]),1):this.clear():a(t[i],this.toBBox)},r});


/***/ }),

/***/ "./node_modules/ol/ol.css":
/*!********************************!*\
  !*** ./node_modules/ol/ol.css ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! !../style-loader/dist/runtime/injectStylesIntoStyleTag.js */ "./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js");
/* harmony import */ var _style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _css_loader_dist_cjs_js_ol_css__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! !!../css-loader/dist/cjs.js!./ol.css */ "./node_modules/css-loader/dist/cjs.js!./node_modules/ol/ol.css");

            

var options = {};

options.insert = "head";
options.singleton = false;

var update = _style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default()(_css_loader_dist_cjs_js_ol_css__WEBPACK_IMPORTED_MODULE_1__.default, options);



/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_css_loader_dist_cjs_js_ol_css__WEBPACK_IMPORTED_MODULE_1__.default.locals || {});

/***/ }),

/***/ "./src/style.css":
/*!***********************!*\
  !*** ./src/style.css ***!
  \***********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! !../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js */ "./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js");
/* harmony import */ var _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _node_modules_css_loader_dist_cjs_js_style_css__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! !!../node_modules/css-loader/dist/cjs.js!./style.css */ "./node_modules/css-loader/dist/cjs.js!./src/style.css");

            

var options = {};

options.insert = "head";
options.singleton = false;

var update = _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default()(_node_modules_css_loader_dist_cjs_js_style_css__WEBPACK_IMPORTED_MODULE_1__.default, options);



/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_node_modules_css_loader_dist_cjs_js_style_css__WEBPACK_IMPORTED_MODULE_1__.default.locals || {});

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js":
/*!****************************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js ***!
  \****************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var isOldIE = function isOldIE() {
  var memo;
  return function memorize() {
    if (typeof memo === 'undefined') {
      // Test for IE <= 9 as proposed by Browserhacks
      // @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805
      // Tests for existence of standard globals is to allow style-loader
      // to operate correctly into non-standard environments
      // @see https://github.com/webpack-contrib/style-loader/issues/177
      memo = Boolean(window && document && document.all && !window.atob);
    }

    return memo;
  };
}();

var getTarget = function getTarget() {
  var memo = {};
  return function memorize(target) {
    if (typeof memo[target] === 'undefined') {
      var styleTarget = document.querySelector(target); // Special case to return head of iframe instead of iframe itself

      if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {
        try {
          // This will throw an exception if access to iframe is blocked
          // due to cross-origin restrictions
          styleTarget = styleTarget.contentDocument.head;
        } catch (e) {
          // istanbul ignore next
          styleTarget = null;
        }
      }

      memo[target] = styleTarget;
    }

    return memo[target];
  };
}();

var stylesInDom = [];

function getIndexByIdentifier(identifier) {
  var result = -1;

  for (var i = 0; i < stylesInDom.length; i++) {
    if (stylesInDom[i].identifier === identifier) {
      result = i;
      break;
    }
  }

  return result;
}

function modulesToDom(list, options) {
  var idCountMap = {};
  var identifiers = [];

  for (var i = 0; i < list.length; i++) {
    var item = list[i];
    var id = options.base ? item[0] + options.base : item[0];
    var count = idCountMap[id] || 0;
    var identifier = "".concat(id, " ").concat(count);
    idCountMap[id] = count + 1;
    var index = getIndexByIdentifier(identifier);
    var obj = {
      css: item[1],
      media: item[2],
      sourceMap: item[3]
    };

    if (index !== -1) {
      stylesInDom[index].references++;
      stylesInDom[index].updater(obj);
    } else {
      stylesInDom.push({
        identifier: identifier,
        updater: addStyle(obj, options),
        references: 1
      });
    }

    identifiers.push(identifier);
  }

  return identifiers;
}

function insertStyleElement(options) {
  var style = document.createElement('style');
  var attributes = options.attributes || {};

  if (typeof attributes.nonce === 'undefined') {
    var nonce =  true ? __webpack_require__.nc : 0;

    if (nonce) {
      attributes.nonce = nonce;
    }
  }

  Object.keys(attributes).forEach(function (key) {
    style.setAttribute(key, attributes[key]);
  });

  if (typeof options.insert === 'function') {
    options.insert(style);
  } else {
    var target = getTarget(options.insert || 'head');

    if (!target) {
      throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");
    }

    target.appendChild(style);
  }

  return style;
}

function removeStyleElement(style) {
  // istanbul ignore if
  if (style.parentNode === null) {
    return false;
  }

  style.parentNode.removeChild(style);
}
/* istanbul ignore next  */


var replaceText = function replaceText() {
  var textStore = [];
  return function replace(index, replacement) {
    textStore[index] = replacement;
    return textStore.filter(Boolean).join('\n');
  };
}();

function applyToSingletonTag(style, index, remove, obj) {
  var css = remove ? '' : obj.media ? "@media ".concat(obj.media, " {").concat(obj.css, "}") : obj.css; // For old IE

  /* istanbul ignore if  */

  if (style.styleSheet) {
    style.styleSheet.cssText = replaceText(index, css);
  } else {
    var cssNode = document.createTextNode(css);
    var childNodes = style.childNodes;

    if (childNodes[index]) {
      style.removeChild(childNodes[index]);
    }

    if (childNodes.length) {
      style.insertBefore(cssNode, childNodes[index]);
    } else {
      style.appendChild(cssNode);
    }
  }
}

function applyToTag(style, options, obj) {
  var css = obj.css;
  var media = obj.media;
  var sourceMap = obj.sourceMap;

  if (media) {
    style.setAttribute('media', media);
  } else {
    style.removeAttribute('media');
  }

  if (sourceMap && typeof btoa !== 'undefined') {
    css += "\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), " */");
  } // For old IE

  /* istanbul ignore if  */


  if (style.styleSheet) {
    style.styleSheet.cssText = css;
  } else {
    while (style.firstChild) {
      style.removeChild(style.firstChild);
    }

    style.appendChild(document.createTextNode(css));
  }
}

var singleton = null;
var singletonCounter = 0;

function addStyle(obj, options) {
  var style;
  var update;
  var remove;

  if (options.singleton) {
    var styleIndex = singletonCounter++;
    style = singleton || (singleton = insertStyleElement(options));
    update = applyToSingletonTag.bind(null, style, styleIndex, false);
    remove = applyToSingletonTag.bind(null, style, styleIndex, true);
  } else {
    style = insertStyleElement(options);
    update = applyToTag.bind(null, style, options);

    remove = function remove() {
      removeStyleElement(style);
    };
  }

  update(obj);
  return function updateStyle(newObj) {
    if (newObj) {
      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap) {
        return;
      }

      update(obj = newObj);
    } else {
      remove();
    }
  };
}

module.exports = function (list, options) {
  options = options || {}; // Force single-tag solution on IE6-9, which has a hard limit on the # of <style>
  // tags it will allow on a page

  if (!options.singleton && typeof options.singleton !== 'boolean') {
    options.singleton = isOldIE();
  }

  list = list || [];
  var lastIdentifiers = modulesToDom(list, options);
  return function update(newList) {
    newList = newList || [];

    if (Object.prototype.toString.call(newList) !== '[object Array]') {
      return;
    }

    for (var i = 0; i < lastIdentifiers.length; i++) {
      var identifier = lastIdentifiers[i];
      var index = getIndexByIdentifier(identifier);
      stylesInDom[index].references--;
    }

    var newLastIdentifiers = modulesToDom(newList, options);

    for (var _i = 0; _i < lastIdentifiers.length; _i++) {
      var _identifier = lastIdentifiers[_i];

      var _index = getIndexByIdentifier(_identifier);

      if (stylesInDom[_index].references === 0) {
        stylesInDom[_index].updater();

        stylesInDom.splice(_index, 1);
      }
    }

    lastIdentifiers = newLastIdentifiers;
  };
};

/***/ }),

/***/ "./node_modules/wkt-parser/index.js":
/*!******************************************!*\
  !*** ./node_modules/wkt-parser/index.js ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _parser__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./parser */ "./node_modules/wkt-parser/parser.js");
/* harmony import */ var _process__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./process */ "./node_modules/wkt-parser/process.js");
var D2R = 0.01745329251994329577;





function rename(obj, params) {
  var outName = params[0];
  var inName = params[1];
  if (!(outName in obj) && (inName in obj)) {
    obj[outName] = obj[inName];
    if (params.length === 3) {
      obj[outName] = params[2](obj[outName]);
    }
  }
}

function d2r(input) {
  return input * D2R;
}

function cleanWKT(wkt) {
  if (wkt.type === 'GEOGCS') {
    wkt.projName = 'longlat';
  } else if (wkt.type === 'LOCAL_CS') {
    wkt.projName = 'identity';
    wkt.local = true;
  } else {
    if (typeof wkt.PROJECTION === 'object') {
      wkt.projName = Object.keys(wkt.PROJECTION)[0];
    } else {
      wkt.projName = wkt.PROJECTION;
    }
  }
  if (wkt.AXIS) {
    var axisOrder = '';
    for (var i = 0, ii = wkt.AXIS.length; i < ii; ++i) {
      var axis = wkt.AXIS[i];
      var descriptor = axis[0].toLowerCase();
      if (descriptor.indexOf('north') !== -1) {
        axisOrder += 'n';
      } else if (descriptor.indexOf('south') !== -1) {
        axisOrder += 's';
      } else if (descriptor.indexOf('east') !== -1) {
        axisOrder += 'e';
      } else if (descriptor.indexOf('west') !== -1) {
        axisOrder += 'w';
      }
    }
    if (axisOrder.length === 2) {
      axisOrder += 'u';
    }
    if (axisOrder.length === 3) {
      wkt.axis = axisOrder;
    }
  }
  if (wkt.UNIT) {
    wkt.units = wkt.UNIT.name.toLowerCase();
    if (wkt.units === 'metre') {
      wkt.units = 'meter';
    }
    if (wkt.UNIT.convert) {
      if (wkt.type === 'GEOGCS') {
        if (wkt.DATUM && wkt.DATUM.SPHEROID) {
          wkt.to_meter = wkt.UNIT.convert*wkt.DATUM.SPHEROID.a;
        }
      } else {
        wkt.to_meter = wkt.UNIT.convert;
      }
    }
  }
  var geogcs = wkt.GEOGCS;
  if (wkt.type === 'GEOGCS') {
    geogcs = wkt;
  }
  if (geogcs) {
    //if(wkt.GEOGCS.PRIMEM&&wkt.GEOGCS.PRIMEM.convert){
    //  wkt.from_greenwich=wkt.GEOGCS.PRIMEM.convert*D2R;
    //}
    if (geogcs.DATUM) {
      wkt.datumCode = geogcs.DATUM.name.toLowerCase();
    } else {
      wkt.datumCode = geogcs.name.toLowerCase();
    }
    if (wkt.datumCode.slice(0, 2) === 'd_') {
      wkt.datumCode = wkt.datumCode.slice(2);
    }
    if (wkt.datumCode === 'new_zealand_geodetic_datum_1949' || wkt.datumCode === 'new_zealand_1949') {
      wkt.datumCode = 'nzgd49';
    }
    if (wkt.datumCode === 'wgs_1984' || wkt.datumCode === 'world_geodetic_system_1984') {
      if (wkt.PROJECTION === 'Mercator_Auxiliary_Sphere') {
        wkt.sphere = true;
      }
      wkt.datumCode = 'wgs84';
    }
    if (wkt.datumCode.slice(-6) === '_ferro') {
      wkt.datumCode = wkt.datumCode.slice(0, - 6);
    }
    if (wkt.datumCode.slice(-8) === '_jakarta') {
      wkt.datumCode = wkt.datumCode.slice(0, - 8);
    }
    if (~wkt.datumCode.indexOf('belge')) {
      wkt.datumCode = 'rnb72';
    }
    if (geogcs.DATUM && geogcs.DATUM.SPHEROID) {
      wkt.ellps = geogcs.DATUM.SPHEROID.name.replace('_19', '').replace(/[Cc]larke\_18/, 'clrk');
      if (wkt.ellps.toLowerCase().slice(0, 13) === 'international') {
        wkt.ellps = 'intl';
      }

      wkt.a = geogcs.DATUM.SPHEROID.a;
      wkt.rf = parseFloat(geogcs.DATUM.SPHEROID.rf, 10);
    }

    if (geogcs.DATUM && geogcs.DATUM.TOWGS84) {
      wkt.datum_params = geogcs.DATUM.TOWGS84;
    }
    if (~wkt.datumCode.indexOf('osgb_1936')) {
      wkt.datumCode = 'osgb36';
    }
    if (~wkt.datumCode.indexOf('osni_1952')) {
      wkt.datumCode = 'osni52';
    }
    if (~wkt.datumCode.indexOf('tm65')
      || ~wkt.datumCode.indexOf('geodetic_datum_of_1965')) {
      wkt.datumCode = 'ire65';
    }
    if (wkt.datumCode === 'ch1903+') {
      wkt.datumCode = 'ch1903';
    }
    if (~wkt.datumCode.indexOf('israel')) {
      wkt.datumCode = 'isr93';
    }
  }
  if (wkt.b && !isFinite(wkt.b)) {
    wkt.b = wkt.a;
  }

  function toMeter(input) {
    var ratio = wkt.to_meter || 1;
    return input * ratio;
  }
  var renamer = function(a) {
    return rename(wkt, a);
  };
  var list = [
    ['standard_parallel_1', 'Standard_Parallel_1'],
    ['standard_parallel_2', 'Standard_Parallel_2'],
    ['false_easting', 'False_Easting'],
    ['false_northing', 'False_Northing'],
    ['central_meridian', 'Central_Meridian'],
    ['latitude_of_origin', 'Latitude_Of_Origin'],
    ['latitude_of_origin', 'Central_Parallel'],
    ['scale_factor', 'Scale_Factor'],
    ['k0', 'scale_factor'],
    ['latitude_of_center', 'Latitude_Of_Center'],
    ['latitude_of_center', 'Latitude_of_center'],
    ['lat0', 'latitude_of_center', d2r],
    ['longitude_of_center', 'Longitude_Of_Center'],
    ['longitude_of_center', 'Longitude_of_center'],
    ['longc', 'longitude_of_center', d2r],
    ['x0', 'false_easting', toMeter],
    ['y0', 'false_northing', toMeter],
    ['long0', 'central_meridian', d2r],
    ['lat0', 'latitude_of_origin', d2r],
    ['lat0', 'standard_parallel_1', d2r],
    ['lat1', 'standard_parallel_1', d2r],
    ['lat2', 'standard_parallel_2', d2r],
    ['azimuth', 'Azimuth'],
    ['alpha', 'azimuth', d2r],
    ['srsCode', 'name']
  ];
  list.forEach(renamer);
  if (!wkt.long0 && wkt.longc && (wkt.projName === 'Albers_Conic_Equal_Area' || wkt.projName === 'Lambert_Azimuthal_Equal_Area')) {
    wkt.long0 = wkt.longc;
  }
  if (!wkt.lat_ts && wkt.lat1 && (wkt.projName === 'Stereographic_South_Pole' || wkt.projName === 'Polar Stereographic (variant B)')) {
    wkt.lat0 = d2r(wkt.lat1 > 0 ? 90 : -90);
    wkt.lat_ts = wkt.lat1;
  }
}
/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(wkt) {
  var lisp = (0,_parser__WEBPACK_IMPORTED_MODULE_0__.default)(wkt);
  var type = lisp.shift();
  var name = lisp.shift();
  lisp.unshift(['name', name]);
  lisp.unshift(['type', type]);
  var obj = {};
  (0,_process__WEBPACK_IMPORTED_MODULE_1__.sExpr)(lisp, obj);
  cleanWKT(obj);
  return obj;
}


/***/ }),

/***/ "./node_modules/wkt-parser/parser.js":
/*!*******************************************!*\
  !*** ./node_modules/wkt-parser/parser.js ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (parseString);

var NEUTRAL = 1;
var KEYWORD = 2;
var NUMBER = 3;
var QUOTED = 4;
var AFTERQUOTE = 5;
var ENDED = -1;
var whitespace = /\s/;
var latin = /[A-Za-z]/;
var keyword = /[A-Za-z84]/;
var endThings = /[,\]]/;
var digets = /[\d\.E\-\+]/;
// const ignoredChar = /[\s_\-\/\(\)]/g;
function Parser(text) {
  if (typeof text !== 'string') {
    throw new Error('not a string');
  }
  this.text = text.trim();
  this.level = 0;
  this.place = 0;
  this.root = null;
  this.stack = [];
  this.currentObject = null;
  this.state = NEUTRAL;
}
Parser.prototype.readCharicter = function() {
  var char = this.text[this.place++];
  if (this.state !== QUOTED) {
    while (whitespace.test(char)) {
      if (this.place >= this.text.length) {
        return;
      }
      char = this.text[this.place++];
    }
  }
  switch (this.state) {
    case NEUTRAL:
      return this.neutral(char);
    case KEYWORD:
      return this.keyword(char)
    case QUOTED:
      return this.quoted(char);
    case AFTERQUOTE:
      return this.afterquote(char);
    case NUMBER:
      return this.number(char);
    case ENDED:
      return;
  }
};
Parser.prototype.afterquote = function(char) {
  if (char === '"') {
    this.word += '"';
    this.state = QUOTED;
    return;
  }
  if (endThings.test(char)) {
    this.word = this.word.trim();
    this.afterItem(char);
    return;
  }
  throw new Error('havn\'t handled "' +char + '" in afterquote yet, index ' + this.place);
};
Parser.prototype.afterItem = function(char) {
  if (char === ',') {
    if (this.word !== null) {
      this.currentObject.push(this.word);
    }
    this.word = null;
    this.state = NEUTRAL;
    return;
  }
  if (char === ']') {
    this.level--;
    if (this.word !== null) {
      this.currentObject.push(this.word);
      this.word = null;
    }
    this.state = NEUTRAL;
    this.currentObject = this.stack.pop();
    if (!this.currentObject) {
      this.state = ENDED;
    }

    return;
  }
};
Parser.prototype.number = function(char) {
  if (digets.test(char)) {
    this.word += char;
    return;
  }
  if (endThings.test(char)) {
    this.word = parseFloat(this.word);
    this.afterItem(char);
    return;
  }
  throw new Error('havn\'t handled "' +char + '" in number yet, index ' + this.place);
};
Parser.prototype.quoted = function(char) {
  if (char === '"') {
    this.state = AFTERQUOTE;
    return;
  }
  this.word += char;
  return;
};
Parser.prototype.keyword = function(char) {
  if (keyword.test(char)) {
    this.word += char;
    return;
  }
  if (char === '[') {
    var newObjects = [];
    newObjects.push(this.word);
    this.level++;
    if (this.root === null) {
      this.root = newObjects;
    } else {
      this.currentObject.push(newObjects);
    }
    this.stack.push(this.currentObject);
    this.currentObject = newObjects;
    this.state = NEUTRAL;
    return;
  }
  if (endThings.test(char)) {
    this.afterItem(char);
    return;
  }
  throw new Error('havn\'t handled "' +char + '" in keyword yet, index ' + this.place);
};
Parser.prototype.neutral = function(char) {
  if (latin.test(char)) {
    this.word = char;
    this.state = KEYWORD;
    return;
  }
  if (char === '"') {
    this.word = '';
    this.state = QUOTED;
    return;
  }
  if (digets.test(char)) {
    this.word = char;
    this.state = NUMBER;
    return;
  }
  if (endThings.test(char)) {
    this.afterItem(char);
    return;
  }
  throw new Error('havn\'t handled "' +char + '" in neutral yet, index ' + this.place);
};
Parser.prototype.output = function() {
  while (this.place < this.text.length) {
    this.readCharicter();
  }
  if (this.state === ENDED) {
    return this.root;
  }
  throw new Error('unable to parse string "' +this.text + '". State is ' + this.state);
};

function parseString(txt) {
  var parser = new Parser(txt);
  return parser.output();
}


/***/ }),

/***/ "./node_modules/wkt-parser/process.js":
/*!********************************************!*\
  !*** ./node_modules/wkt-parser/process.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "sExpr": () => (/* binding */ sExpr)
/* harmony export */ });


function mapit(obj, key, value) {
  if (Array.isArray(key)) {
    value.unshift(key);
    key = null;
  }
  var thing = key ? {} : obj;

  var out = value.reduce(function(newObj, item) {
    sExpr(item, newObj);
    return newObj
  }, thing);
  if (key) {
    obj[key] = out;
  }
}

function sExpr(v, obj) {
  if (!Array.isArray(v)) {
    obj[v] = true;
    return;
  }
  var key = v.shift();
  if (key === 'PARAMETER') {
    key = v.shift();
  }
  if (v.length === 1) {
    if (Array.isArray(v[0])) {
      obj[key] = {};
      sExpr(v[0], obj[key]);
      return;
    }
    obj[key] = v[0];
    return;
  }
  if (!v.length) {
    obj[key] = true;
    return;
  }
  if (key === 'TOWGS84') {
    obj[key] = v;
    return;
  }
  if (key === 'AXIS') {
    if (!(key in obj)) {
      obj[key] = [];
    }
    obj[key].push(v);
    return;
  }
  if (!Array.isArray(key)) {
    obj[key] = {};
  }

  var i;
  switch (key) {
    case 'UNIT':
    case 'PRIMEM':
    case 'VERT_DATUM':
      obj[key] = {
        name: v[0].toLowerCase(),
        convert: v[1]
      };
      if (v.length === 3) {
        sExpr(v[2], obj[key]);
      }
      return;
    case 'SPHEROID':
    case 'ELLIPSOID':
      obj[key] = {
        name: v[0],
        a: v[1],
        rf: v[2]
      };
      if (v.length === 4) {
        sExpr(v[3], obj[key]);
      }
      return;
    case 'PROJECTEDCRS':
    case 'PROJCRS':
    case 'GEOGCS':
    case 'GEOCCS':
    case 'PROJCS':
    case 'LOCAL_CS':
    case 'GEODCRS':
    case 'GEODETICCRS':
    case 'GEODETICDATUM':
    case 'EDATUM':
    case 'ENGINEERINGDATUM':
    case 'VERT_CS':
    case 'VERTCRS':
    case 'VERTICALCRS':
    case 'COMPD_CS':
    case 'COMPOUNDCRS':
    case 'ENGINEERINGCRS':
    case 'ENGCRS':
    case 'FITTED_CS':
    case 'LOCAL_DATUM':
    case 'DATUM':
      v[0] = ['name', v[0]];
      mapit(obj, key, v);
      return;
    default:
      i = -1;
      while (++i < v.length) {
        if (!Array.isArray(v[i])) {
          return sExpr(v, obj[key]);
        }
      }
      return mapit(obj, key, v);
  }
}


/***/ }),

/***/ "./src/assets/Azerbaijan.json":
/*!************************************!*\
  !*** ./src/assets/Azerbaijan.json ***!
  \************************************/
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"type":"GeometryCollection","geometries":[{"type":"LineString","coordinates":[[5135661.396275226,4695562.314483106],[5136253.566124192,4696746.654181038],[5136253.566124192,4697338.824030004],[5137437.905822123,4700299.718454497],[5138030.120850753,4701484.103332092],[5138030.120850753,4702076.2731810585],[5138030.120850753,4703852.827907619],[5138030.120850753,4705037.167605551],[5138030.120850753,4706221.507303483],[5138030.120850753,4706813.7223321125],[5138030.120850753,4707405.892181078],[5138030.120850753,4708590.23187901],[5138030.120850753,4709774.616756605],[5138030.120850753,4710366.786605571],[5138030.120850753,4710958.956454537],[5138030.120850753,4712143.296152469],[5138030.120850753,4712735.511181098],[5138030.120850753,4713919.85087903],[5138030.120850753,4716288.575454557],[5137437.905822123,4716880.745303524],[5136845.735973158,4718065.085001456],[5134477.011397631,4719841.639728016],[5133884.8415486645,4721025.979425948],[5132700.5018507335,4721618.194454578],[5131516.1169731375,4722802.53415251],[5129739.60742624,4723986.873850442],[5129147.437577274,4725171.258728037],[5127963.052699679,4726355.598425969],[5126778.713001747,4726947.768274934],[5125594.328124152,4727539.983303564],[5124409.98842622,4728724.323001496],[5124409.98842622,4729908.662699427],[5123817.818577254,4729908.662699427],[5123225.648728288,4731093.047577023],[5122633.433699659,4731685.217425989],[5122633.433699659,4733461.77215255],[5122041.263850693,4735238.281699448],[5122041.263850693,4736422.666577043],[5122041.263850693,4737014.8364260085],[5122041.263850693,4738791.345972907],[5121449.094001727,4739383.5610015355],[5121449.094001727,4739975.730850502],[5121449.094001727,4740567.900699467],[5121449.094001727,4741160.070548434],[5121449.094001727,4741752.240397399],[5121449.094001727,4742936.625274994],[5122633.433699659,4744120.964972926],[5123225.648728288,4745305.349850522],[5123817.818577254,4746489.689548453],[5125002.158275186,4747674.029246385],[5125594.328124152,4748858.414123981],[5126186.543152781,4749450.583972947],[5126186.543152781,4750634.923670879],[5126778.713001747,4751227.138699508],[5126778.713001747,4751819.308548474],[5126778.713001747,4753003.648246406],[5126778.713001747,4753595.818095371],[5126778.713001747,4754188.033124001],[5126778.713001747,4754780.202972967],[5126778.713001747,4755372.372821933],[5126186.543152781,4756556.712519865],[5125594.328124152,4757741.09739746],[5123225.648728288,4758925.437095392],[5122041.263850693,4759517.606944358],[5120264.754303795,4760701.991821953],[5119080.3694262,4761294.161670919],[5117303.859879302,4761886.331519885],[5114935.135303775,4762478.5013688505],[5112566.410728248,4763662.886246446],[5110197.686152721,4764255.056095412],[5108421.1766058225,4764847.2259443775],[5107236.791728227,4765439.395793344],[5106644.621879262,4765439.395793344],[5104868.0671527,4765439.395793344],[5104868.0671527,4766031.6108219735],[5104868.0671527,4766623.780670939],[5104868.0671527,4767215.9505199045],[5104275.897303735,4768400.290217836],[5104275.897303735,4769584.675095432],[5103683.7274547685,4770769.014793364],[5103091.557605803,4771953.399670959],[5102499.387756837,4773137.739368891],[5101907.172728207,4774914.294095452],[5101315.0028792415,4775506.463944418],[5100722.833030276,4775506.463944418],[5100722.833030276,4776098.633793384],[5100722.833030276,4776690.80364235],[5100722.833030276,4777282.973491316],[5100722.833030276,4777875.188519945],[5101315.0028792415,4779059.528217877],[5101907.172728207,4779651.698066843],[5102499.387756837,4780836.082944438],[5102499.387756837,4781428.252793404],[5102499.387756837,4782020.42264237],[5102499.387756837,4782612.592491336],[5102499.387756837,4783204.762340302],[5103091.557605803,4784389.147217898],[5103683.7274547685,4784981.317066863],[5103683.7274547685,4786165.656764795],[5103683.7274547685,4786757.871793425],[5103683.7274547685,4787350.04164239],[5103683.7274547685,4787942.211491357],[5103683.7274547685,4789126.5511892885],[5103091.557605803,4789718.766217917],[5102499.387756837,4790310.936066884],[5101907.172728207,4792087.445613781],[5101907.172728207,4792679.660642411],[5101315.0028792415,4793271.830491376],[5101315.0028792415,4793864.0003403425],[5101315.0028792415,4794456.170189308],[5100722.833030276,4795048.317448443],[5100130.66318131,4796824.894764835],[5099538.493332344,4798009.211872935],[5099538.493332344,4799193.619340362],[5098946.2783037145,4799193.619340362],[5097761.938605783,4800377.9816281255],[5097761.938605783,4800970.106297429],[5096577.598907851,4800970.106297429],[5095985.383879221,4800970.106297429],[5094801.044181289,4801562.321326057],[5093616.704483357,4802154.513764855],[5093024.489454729,4802746.683613822],[5091247.97990783,4803338.876052619],[5090063.595030235,4803338.876052619],[5088879.255332303,4803338.876052619],[5087102.700605743,4803338.876052619],[5086510.530756776,4803338.876052619],[5085326.168469013,4803338.876052619],[5084141.828771081,4803338.876052619],[5083549.636332284,4803338.876052619],[5082365.274044519,4803338.876052619],[5081773.104195554,4803338.876052619],[5081180.934346588,4803338.876052619],[5080588.74190779,4803338.876052619],[5078220.039922095,4803338.876052619],[5077035.677634331,4803338.876052619],[5075259.1454976015,4802154.513764855],[5073482.590771041,4801562.321326057],[5072298.251073109,4800377.9816281255],[5071706.058634311,4799785.789189328],[5069929.526497582,4799193.619340362],[5069337.356648616,4799193.619340362],[5068745.1642098185,4799193.619340362],[5068152.994360852,4799193.619340362],[5067560.801922055,4798601.426901565],[5066376.462224123,4798601.426901565],[5065784.269785325,4798601.426901565],[5064007.737648596,4798601.426901565],[5063415.56779963,4798601.426901565],[5062823.375360832,4798601.426901565],[5062231.205511866,4798601.426901565],[5061639.013073068,4799785.789189328],[5060454.673375136,4800377.9816281255],[5058678.118648576,4801562.321326057],[5056309.41666288,4802746.683613822],[5053348.522238387,4803931.000721921],[5050979.79766286,4805115.408189349],[5047426.733389401,4805707.578038314],[5045058.008813874,4806891.895146415],[5042689.306828178,4807484.110175044],[5041504.944540415,4808076.302613841],[5040320.582252651,4808076.302613841],[5039136.219964888,4808668.472462808],[5038544.050115922,4809260.664901605],[5037951.857677124,4809260.664901605],[5037359.687828158,4809852.789570907],[5036767.517979193,4810445.004599537],[5036175.3255403945,4811037.197038335],[5035583.155691429,4811037.197038335],[5033214.431115902,4811037.197038335],[5030845.729130207,4811629.3668873],[5029069.174403645,4812221.559326098],[5028477.00455468,4812221.559326098],[5026108.279979152,4812813.683995401],[5024331.747842423,4813405.89902403],[5023147.385554659,4813998.091462827],[5023147.385554659,4814590.261311794],[5023147.385554659,4815182.453750591],[5023147.385554659,4815774.578419894],[5023147.385554659,4816366.793448523],[5023147.385554659,4816958.985887321],[5023147.385554659,4818143.348175084],[5023147.385554659,4818735.4728443865],[5021963.045856727,4820512.05016078],[5021370.853417929,4821696.36726888],[5020778.683568964,4822288.58229751],[5020778.683568964,4822880.774736307],[5020186.491130166,4822880.774736307],[5020186.491130166,4823472.944585273],[5020186.491130166,4824065.13702407],[5019594.3212812,4824657.261693372],[5019002.151432234,4825249.476722002],[5018409.958993437,4825841.6691608],[5016633.426856707,4827026.031448564],[5014264.70228118,4827618.156117866],[5011896.000295484,4828802.563585293],[5010119.468158755,4829394.733434259],[5008342.913432194,4829986.925873056],[5006566.381295464,4829986.925873056],[5003605.4868709715,4830579.050542358],[5001828.954734242,4830579.050542358],[5000644.592446478,4830579.050542358],[5000052.422597513,4830579.050542358],[4999460.230158715,4830579.050542358],[4996499.335734222,4830579.050542358],[4994722.803597492,4829986.925873056],[4992946.271460763,4829394.733434259],[4992946.271460763,4828802.563585293],[4992354.101611797,4828802.563585293],[4991169.739324033,4828802.563585293],[4990577.546885235,4827618.156117866],[4989985.37703627,4826433.839009766],[4989393.207187304,4824657.261693372],[4988801.014748506,4823472.944585273],[4988801.014748506,4822288.58229751],[4988801.014748506,4821104.242599578],[4988801.014748506,4819919.880311813],[4988801.014748506,4816366.793448523],[4988801.014748506,4814590.261311794],[4989393.207187304,4812813.683995401],[4990577.546885235,4811037.197038335],[4991761.909173,4809260.664901605],[4992354.101611797,4807484.110175044],[4992946.271460763,4806299.770477112],[4994130.633748527,4804523.215750551],[4995314.99603629,4803338.876052619],[4996499.335734222,4802154.513764855],[4997683.698021986,4801562.321326057],[4998275.890460783,4800970.106297429],[4999460.230158715,4800377.9816281255],[5001236.784885276,4799193.619340362],[5003605.4868709715,4798009.211872935],[5005974.2114464985,4796824.894764835],[5009527.275719957,4795640.5324770715],[5012488.170144451,4793864.0003403425],[5016041.257007741,4792087.445613781],[5019594.3212812,4789718.766217917],[5021963.045856727,4787942.211491357],[5025516.110130186,4784981.317066863],[5028477.00455468,4782612.592491336],[5030845.729130207,4780836.082944438],[5033214.431115902,4777282.973491316],[5034398.793403666,4775506.463944418],[5035583.155691429,4774322.079066823],[5035583.155691429,4773137.739368891],[5035583.155691429,4771953.399670959],[5036175.3255403945,4770176.844944398],[5036175.3255403945,4768992.505246466],[5036175.3255403945,4767808.120368871],[5036175.3255403945,4766031.6108219735],[5036175.3255403945,4764847.2259443775],[5036175.3255403945,4763662.886246446],[5036175.3255403945,4763070.71639748],[5036175.3255403945,4761294.161670919],[5036175.3255403945,4759517.606944358],[5036175.3255403945,4758925.437095392],[5036175.3255403945,4757148.927548494],[5036175.3255403945,4755964.542670899],[5036175.3255403945,4754188.033124001],[5036175.3255403945,4752411.47839744],[5036175.3255403945,4750634.923670879],[5036175.3255403945,4749450.583972947],[5036175.3255403945,4747674.029246385],[5036175.3255403945,4745897.519699488],[5036175.3255403945,4745305.349850522],[5036175.3255403945,4744713.134821893],[5036175.3255403945,4744120.964972926],[5036175.3255403945,4743528.795123961],[5036175.3255403945,4742936.625274994],[5036175.3255403945,4741160.070548434],[5036767.517979193,4740567.900699467],[5037951.857677124,4739975.730850502],[5039728.412403685,4739383.5610015355],[5040912.752101617,4738791.345972907],[5042689.306828178,4738791.345972907],[5045058.008813874,4738791.345972907],[5046834.540950604,4738791.345972907],[5050387.627813894,4738199.17612394],[5052164.159950623,4737607.006274975],[5054532.88452615,4737014.8364260085],[5055717.224224082,4737014.8364260085],[5058085.948799609,4736422.666577043],[5058678.118648576,4735830.451548413],[5059270.311087373,4735830.451548413],[5059862.480936339,4735830.451548413],[5061046.843224103,4735238.281699448],[5062823.375360832,4733461.77215255],[5064007.737648596,4733461.77215255],[5066376.462224123,4732277.3872749545],[5068152.994360852,4731685.217425989],[5069929.526497582,4730500.877728057],[5071113.8887853455,4729908.662699427],[5071706.058634311,4728724.323001496],[5072298.251073109,4728132.153152529],[5072890.4209220745,4728132.153152529],[5072890.4209220745,4727539.983303564],[5072890.4209220745,4726947.768274934],[5072890.4209220745,4726355.598425969],[5072890.4209220745,4725171.258728037],[5072890.4209220745,4724579.08887907],[5072890.4209220745,4722802.53415251],[5072890.4209220745,4721618.194454578],[5072890.4209220745,4720433.809576983],[5072298.251073109,4718065.085001456],[5072298.251073109,4716880.745303524],[5072298.251073109,4715104.190576962],[5072298.251073109,4714512.020727996],[5072298.251073109,4713327.681030065],[5072298.251073109,4711551.126303503],[5072298.251073109,4710366.786605571],[5072890.4209220745,4709774.616756605],[5073482.590771041,4709182.401727976],[5074074.783209838,4709182.401727976],[5075259.1454976015,4709182.401727976],[5075851.315346568,4709182.401727976],[5076443.485195533,4709182.401727976],[5077627.847483297,4708590.23187901],[5078220.039922095,4708590.23187901],[5079996.572058825,4707998.062030044],[5081773.104195554,4707405.892181078],[5083549.636332284,4706221.507303483],[5085918.360907811,4705629.337454517],[5088287.085483338,4705037.167605551],[5088879.255332303,4705037.167605551],[5090655.810058865,4705037.167605551],[5093024.489454729,4704444.9977565855],[5093616.704483357,4704444.9977565855],[5094801.044181289,4704444.9977565855],[5095985.383879221,4703852.827907619],[5097169.768756817,4703260.61287899],[5098354.108454748,4702668.443030024],[5100722.833030276,4701484.103332092],[5102499.387756837,4700299.718454497],[5104275.897303735,4699707.548605531],[5106052.4520302955,4699115.378756565],[5107236.791728227,4698523.2089076],[5109013.346454789,4697931.039058633],[5110197.686152721,4697931.039058633],[5110789.856001686,4697931.039058633],[5111382.071030316,4697338.824030004],[5111974.240879281,4696746.654181038],[5111974.240879281,4696154.484332073],[5113158.580577213,4696154.484332073],[5113750.75042618,4696154.484332073],[5115527.30515274,4695562.314483106],[5116711.644850672,4694970.144634141],[5117303.859879302,4694970.144634141],[5118488.199577234,4694970.144634141],[5119672.539275166,4695562.314483106],[5120264.754303795,4695562.314483106],[5120856.924152761,4695562.314483106],[5122041.263850693,4695562.314483106],[5122633.433699659,4695562.314483106],[5124409.98842622,4695562.314483106],[5126186.543152781,4695562.314483106],[5127370.882850713,4695562.314483106],[5129147.437577274,4695562.314483106],[5130331.777275206,4695562.314483106],[5130923.947124172,4695562.314483106],[5131516.1169731375,4695562.314483106],[5132108.332001767,4696154.484332073],[5132700.5018507335,4696154.484332073],[5133292.671699699,4696746.654181038],[5133292.671699699,4697338.824030004],[5133884.8415486645,4698523.2089076],[5133884.8415486645,4699707.548605531],[5134477.011397631,4699707.548605531],[5135661.396275226,4700891.933483127],[5135661.396275226,4701484.103332092],[5136253.566124192,4702076.2731810585],[5136845.735973158,4702668.443030024],[5137437.905822123,4702668.443030024],[5138622.290699719,4702668.443030024],[5140398.800246617,4702668.443030024],[5140991.015275246,4702668.443030024],[5142175.354973178,4702668.443030024],[5142767.524822144,4702668.443030024],[5143951.909699739,4702668.443030024],[5145728.419246637,4703260.61287899],[5146912.804124232,4703852.827907619],[5148689.31367113,4704444.9977565855],[5149281.483520096,4704444.9977565855],[5150465.868397691,4704444.9977565855],[5152242.377944589,4704444.9977565855],[5154018.93267115,4704444.9977565855],[5157571.996944609,4704444.9977565855],[5159348.551671171,4703852.827907619],[5161717.276246698,4703260.61287899],[5164085.955642561,4702076.2731810585],[5166454.680218088,4701484.103332092],[5168231.234944649,4700299.718454497],[5170007.744491547,4699707.548605531],[5171784.299218109,4699707.548605531],[5172968.63891604,4699707.548605531],[5174153.023793636,4699707.548605531],[5175337.363491568,4699707.548605531],[5175929.533340533,4699707.548605531],[5176521.748369163,4699707.548605531],[5177113.918218128,4700299.718454497],[5177113.918218128,4700891.933483127],[5177706.088067095,4700891.933483127],[5178298.25791606,4700891.933483127],[5178890.427765027,4700891.933483127],[5180074.812642622,4701484.103332092],[5181259.152340554,4702668.443030024],[5181851.322189519,4703260.61287899],[5182443.537218149,4703260.61287899],[5183035.707067114,4704444.9977565855],[5184220.046765046,4705037.167605551],[5184812.216614013,4705037.167605551],[5184812.216614013,4705629.337454517],[5184812.216614013,4706813.7223321125],[5184812.216614013,4707405.892181078],[5184812.216614013,4707998.062030044],[5184812.216614013,4708590.23187901],[5184812.216614013,4709182.401727976],[5184812.216614013,4709774.616756605],[5184220.046765046,4709774.616756605],[5183627.876916081,4711551.126303503],[5183035.707067114,4713327.681030065],[5181851.322189519,4714512.020727996],[5181259.152340554,4716288.575454557],[5180074.812642622,4717472.915152489],[5179482.642793655,4718657.300030084],[5179482.642793655,4719249.469879051],[5179482.642793655,4719841.639728016],[5179482.642793655,4720433.809576983],[5179482.642793655,4721025.979425948],[5179482.642793655,4722210.364303543],[5179482.642793655,4722802.53415251],[5179482.642793655,4723394.704001475],[5178890.427765027,4725171.258728037],[5178298.25791606,4725763.428577002],[5178298.25791606,4726355.598425969],[5178298.25791606,4726947.768274934],[5178298.25791606,4727539.983303564],[5178298.25791606,4728132.153152529],[5178298.25791606,4728724.323001496],[5178298.25791606,4729316.492850461],[5178298.25791606,4729908.662699427],[5178298.25791606,4730500.877728057],[5178298.25791606,4731093.047577023],[5178298.25791606,4732277.3872749545],[5178298.25791606,4733461.77215255],[5178890.427765027,4735238.281699448],[5178890.427765027,4735830.451548413],[5178890.427765027,4736422.666577043],[5178890.427765027,4737014.8364260085],[5178890.427765027,4738199.17612394],[5178890.427765027,4738791.345972907],[5178890.427765027,4739975.730850502],[5178298.25791606,4739975.730850502],[5178298.25791606,4740567.900699467],[5178298.25791606,4741160.070548434],[5178298.25791606,4741752.240397399],[5178298.25791606,4742344.455426029],[5178298.25791606,4742936.625274994],[5178298.25791606,4743528.795123961],[5178298.25791606,4744713.134821893],[5178890.427765027,4744713.134821893],[5179482.642793655,4745305.349850522],[5180074.812642622,4745897.519699488],[5180666.982491587,4745897.519699488],[5181851.322189519,4746489.689548453],[5183627.876916081,4747081.85939742],[5184812.216614013,4747674.029246385],[5185404.431642642,4747674.029246385],[5185996.601491608,4748266.244275015],[5187180.94118954,4748858.414123981],[5187773.111038505,4749450.583972947],[5187773.111038505,4750634.923670879],[5187773.111038505,4753003.648246406],[5187180.94118954,4754780.202972967],[5185996.601491608,4756556.712519865],[5184812.216614013,4758333.267246426],[5181851.322189519,4760109.821972987],[5179482.642793655,4761294.161670919],[5177113.918218128,4762478.5013688505],[5175337.363491568,4763070.71639748],[5173560.8539446695,4764255.056095412],[5172376.469067074,4764847.2259443775],[5170599.959520177,4766031.6108219735],[5169415.574642581,4766031.6108219735],[5168823.404793615,4767215.9505199045],[5168823.404793615,4767808.120368871],[5168231.234944649,4768400.290217836],[5168231.234944649,4768992.505246466],[5167639.065095684,4770769.014793364],[5167639.065095684,4771953.399670959],[5167639.065095684,4772545.569519925],[5167639.065095684,4773729.909217857],[5167639.065095684,4774322.079066823],[5167639.065095684,4776098.633793384],[5167639.065095684,4776690.80364235],[5167639.065095684,4778467.358368911],[5168231.234944649,4779651.698066843],[5168823.404793615,4780836.082944438],[5169415.574642581,4781428.252793404],[5170007.744491547,4782020.42264237],[5171192.129369142,4783204.762340302],[5172376.469067074,4783796.977368931],[5173560.8539446695,4784389.147217898],[5175337.363491568,4784981.317066863],[5176521.748369163,4785573.486915829],[5177706.088067095,4786165.656764795],[5178890.427765027,4786757.871793425],[5179482.642793655,4787350.04164239],[5180666.982491587,4787350.04164239],[5181259.152340554,4787942.211491357],[5181851.322189519,4789126.5511892885],[5181851.322189519,4789718.766217917],[5181851.322189519,4790310.936066884],[5181851.322189519,4790903.105915849],[5181851.322189519,4791495.2757648155],[5181851.322189519,4792087.445613781],[5181851.322189519,4792679.660642411],[5181851.322189519,4793864.0003403425],[5181851.322189519,4794456.170189308],[5181851.322189519,4795640.5324770715],[5180666.982491587,4796824.894764835],[5179482.642793655,4798601.426901565],[5178298.25791606,4799193.619340362],[5177113.918218128,4800377.9816281255],[5176521.748369163,4800970.106297429],[5175337.363491568,4802154.513764855],[5174153.023793636,4802746.683613822],[5173560.8539446695,4803338.876052619],[5172968.63891604,4804523.215750551],[5171784.299218109,4805707.578038314],[5170007.744491547,4806891.895146415],[5168231.234944649,4807484.110175044],[5165862.510369122,4808076.302613841],[5164085.955642561,4808668.472462808],[5161717.276246698,4809260.664901605],[5160532.8913691025,4809260.664901605],[5158164.1667935755,4809852.789570907],[5156979.827095644,4809852.789570907],[5156387.657246677,4809852.789570907],[5155203.272369082,4809852.789570907],[5154611.102520116,4810445.004599537],[5152834.592973218,4811037.197038335],[5152242.377944589,4811037.197038335],[5149873.698548726,4811629.3668873],[5147504.973973198,4812221.559326098],[5145728.419246637,4812221.559326098],[5143951.909699739,4812813.683995401],[5143359.69467111,4812813.683995401],[5142175.354973178,4812813.683995401],[5141583.185124212,4812813.683995401],[5140398.800246617,4812813.683995401],[5139806.630397651,4812813.683995401],[5139214.460548685,4812813.683995401],[5138622.290699719,4812813.683995401],[5138030.120850753,4812813.683995401],[5137437.905822123,4812813.683995401],[5136845.735973158,4812813.683995401],[5136253.566124192,4812813.683995401],[5135661.396275226,4812813.683995401],[5135069.226426261,4812813.683995401],[5134477.011397631,4812813.683995401],[5133884.8415486645,4812813.683995401],[5132700.5018507335,4813998.091462827],[5131516.1169731375,4815182.453750591],[5130331.777275206,4816366.793448523],[5129739.60742624,4817551.155736286],[5128555.222548645,4818735.4728443865],[5127963.052699679,4819919.880311813],[5126778.713001747,4821104.242599578],[5125594.328124152,4822288.58229751],[5123817.818577254,4824065.13702407],[5123817.818577254,4825249.476722002],[5122633.433699659,4827026.031448564],[5121449.094001727,4827618.156117866],[5119672.539275166,4829394.733434259],[5118488.199577234,4830579.050542358],[5117896.029728268,4831763.458009786],[5116119.475001707,4832947.8202975495],[5114935.135303775,4834132.159995481],[5113158.580577213,4834724.3524342785],[5111382.071030316,4835908.714722043],[5110197.686152721,4837093.054419974],[5108421.1766058225,4838277.416707737],[5106644.621879262,4838869.609146535],[5104868.0671527,4839461.733815838],[5103683.7274547685,4840053.948844467],[5101907.172728207,4840646.141283265],[5100130.66318131,4841238.311132231],[5098946.2783037145,4841238.311132231],[5098354.108454748,4841238.311132231],[5097169.768756817,4841238.311132231],[5096577.598907851,4841238.311132231],[5095393.214030256,4841830.503571029],[5094801.044181289,4842422.628240331],[5093616.704483357,4843607.035707758],[5091840.149756797,4844791.397995521],[5090655.810058865,4845383.522664824],[5088287.085483338,4846567.930132251],[5085326.168469013,4847752.292420015],[5082957.466483317,4848936.632117947],[5082365.274044519,4850120.99440571],[5081180.934346588,4850713.186844507],[5079404.379620027,4851897.526542439],[5078812.20977106,4851897.526542439],[5078812.20977106,4853081.888830203],[5078220.039922095,4853081.888830203],[5078220.039922095,4853674.081269001],[5078220.039922095,4854266.205938303],[5078220.039922095,4854858.420966933],[5078220.039922095,4855450.613405731],[5078220.039922095,4856634.975693494],[5078220.039922095,4857819.315391425],[5078220.039922095,4859595.870117987],[5078812.20977106,4861372.4022547165],[5079996.572058825,4862556.76454248],[5080588.74190779,4863148.889211782],[5081180.934346588,4863741.104240412],[5081773.104195554,4864333.296679209],[5082365.274044519,4864925.466528175],[5082365.274044519,4865517.6589669725],[5083549.636332284,4865517.6589669725],[5084733.998620047,4866109.783636276],[5085326.168469013,4866109.783636276],[5086510.530756776,4866109.783636276],[5087694.915634371,4866109.783636276],[5088879.255332303,4866109.783636276],[5090063.595030235,4866109.783636276],[5090655.810058865,4866109.783636276],[5091840.149756797,4866109.783636276],[5093024.489454729,4866109.783636276],[5094208.874332324,4866109.783636276],[5094801.044181289,4866109.783636276],[5095985.383879221,4865517.6589669725],[5096577.598907851,4865517.6589669725],[5097169.768756817,4865517.6589669725],[5097761.938605783,4865517.6589669725],[5098946.2783037145,4865517.6589669725],[5100722.833030276,4865517.6589669725],[5102499.387756837,4866109.783636276],[5104275.897303735,4866701.998664904],[5105460.28218133,4867886.360952668],[5108421.1766058225,4869662.893089398],[5110789.856001686,4871439.425226127],[5112566.410728248,4873215.979952688],[5113750.75042618,4874400.31965062],[5114342.965454809,4875584.681938384],[5115527.30515274,4877361.236664945],[5116119.475001707,4877953.406513911],[5116711.644850672,4879729.938650641],[5117303.859879302,4881506.47078737],[5117896.029728268,4883283.025513931],[5117896.029728268,4883875.195362897],[5117896.029728268,4887428.259636356],[5117896.029728268,4889204.814362917],[5117896.029728268,4890389.154060849],[5117896.029728268,4892165.70878741],[5117303.859879302,4894534.410773106],[5116711.644850672,4895718.773060869],[5115527.30515274,4897495.305197598],[5113750.75042618,4899271.837334328],[5111382.071030316,4901048.392060889],[5107828.961577194,4903417.094046584],[5102499.387756837,4905785.818622111],[5098354.108454748,4907562.350758841],[5093024.489454729,4909338.88289557],[5088879.255332303,4910523.245183334],[5085326.168469013,4911707.607471098],[5082365.274044519,4913484.139607827],[5079404.379620027,4914668.501895591],[5078220.039922095,4915260.671744557],[5077035.677634331,4915260.671744557],[5076443.485195533,4915260.671744557],[5075851.315346568,4915852.864183354],[5075259.1454976015,4916445.034032321],[5074074.783209838,4917037.203881286],[5071706.058634311,4918221.56616905],[5069929.526497582,4918813.758607848],[5069929.526497582,4919405.928456813],[5068745.1642098185,4919405.928456813],[5067560.801922055,4919998.0983057795],[5066968.632073089,4921182.460593543],[5066968.632073089,4921774.65303234],[5066376.462224123,4923551.18516907],[5066376.462224123,4924143.3550180355],[5066376.462224123,4924735.5474568335],[5066376.462224123,4926512.0795935625],[5065784.269785325,4928880.781579258],[5065192.09993636,4930065.143867021],[5064599.907497562,4931841.676003751],[5064007.737648596,4933618.230730313],[5063415.56779963,4935394.762867042],[5062231.205511866,4936579.125154805],[5061639.013073068,4938355.657291535],[5060454.673375136,4941908.721564994],[5060454.673375136,4942500.914003791],[5059862.480936339,4944869.615989487],[5059862.480936339,4945461.808428285],[5059862.480936339,4946053.97827725],[5059862.480936339,4947238.340565015],[5059862.480936339,4948422.702852778],[5059862.480936339,4949014.872701744],[5059862.480936339,4949607.042550709],[5059862.480936339,4950199.234989507],[5059862.480936339,4950791.404838474],[5059862.480936339,4951975.767126237],[5059862.480936339,4952567.9369752025],[5059862.480936339,4954344.491701764],[5059862.480936339,4954936.66155073],[5059862.480936339,4956121.023838493],[5060454.673375136,4957305.386126257],[5061046.843224103,4957897.555975223],[5061046.843224103,4958489.725824188],[5061046.843224103,4960266.28055075],[5061639.013073068,4961450.620248682],[5062231.205511866,4962634.982536445],[5062231.205511866,4963819.344824209],[5062231.205511866,4964411.514673174],[5062823.375360832,4966780.239248702],[5062823.375360832,4968556.771385431],[5063415.56779963,4970333.303522161],[5064007.737648596,4970925.495960958],[5064007.737648596,4971517.665809925],[5064599.907497562,4973294.197946654],[5065192.09993636,4973886.390385452],[5065784.269785325,4975070.752673215],[5065784.269785325,4975662.922522181],[5066376.462224123,4976255.092371147],[5066376.462224123,4977439.454658911],[5066968.632073089,4978031.647097708],[5067560.801922055,4978623.816946674],[5068152.994360852,4980400.349083403],[5068745.1642098185,4981584.711371167],[5069337.356648616,4982769.07365893],[5069337.356648616,4984545.60579566],[5069929.526497582,4986322.149227305],[5070521.696346547,4988098.658774203],[5071113.8887853455,4988690.862507917],[5071706.058634311,4989875.213500764],[5071706.058634311,4991059.553198696],[5071706.058634311,4991651.7569324095],[5071706.058634311,4994020.44762319],[5071706.058634311,4995204.832500785],[5071706.058634311,4996981.342047682],[5070521.696346547,4998757.896774244],[5069337.356648616,4999942.236472175],[5068745.1642098185,5000534.440205889],[5066968.632073089,5001718.791198736],[5065192.09993636,5003495.334630382],[5063415.56779963,5004679.6856232295],[5061046.843224103,5005864.025321161],[5058678.118648576,5007048.4101987565],[5055125.054375117,5008232.761191605],[5052756.32979959,5009417.123479368],[5049203.265526131,5011785.814170147],[5046834.540950604,5012970.199047742],[5043873.64652611,5014154.550040591],[5039136.219964888,5015931.093472236],[5034990.963252631,5017115.444465083],[5032030.0688281385,5018299.806752847],[5028477.00455468,5019484.157745695],[5025516.110130186,5020668.497443627],[5022555.215705693,5021852.882321222],[5021963.045856727,5021852.882321222],[5020186.491130166,5022445.052170188],[5019002.151432234,5023037.23331407],[5018409.958993437,5024221.595601833],[5017225.596705673,5024221.595601833],[5016633.426856707,5025405.946594681],[5016633.426856707,5025998.127738562],[5016633.426856707,5027182.490026326],[5016041.257007741,5029551.180717106],[5015449.064568943,5030735.554299785],[5014264.70228118,5032512.0751415985],[5013672.532432214,5034288.62986816],[5012488.170144451,5035472.969566092],[5011896.000295484,5037841.705436534],[5011303.807856687,5039026.067724299],[5010711.638007721,5040802.599861028],[5010711.638007721,5041986.962148791],[5010119.468158755,5043171.313141639],[5010119.468158755,5044355.652839571],[5010119.468158755,5045540.02642225],[5010119.468158755,5046724.388710014],[5009527.275719957,5048500.9208467435],[5008935.105870992,5049093.101990625],[5008935.105870992,5051461.815271236],[5008935.105870992,5052646.1775589995],[5008935.105870992,5053830.539846763],[5008935.105870992,5055014.890839611],[5008935.105870992,5056791.434271256],[5008935.105870992,5057975.785264105],[5008935.105870992,5059160.124962036],[5008935.105870992,5060936.679688597],[5008935.105870992,5062121.019386529],[5008935.105870992,5062713.223120242],[5008935.105870992,5064489.755256972],[5008935.105870992,5065674.117544736],[5008935.105870992,5066266.298688618],[5008935.105870992,5066858.468537583],[5008935.105870992,5067450.649681465],[5008935.105870992,5068042.8308253465],[5008935.105870992,5068635.011969228],[5008935.105870992,5069227.19311311],[5010119.468158755,5070411.544105958],[5010711.638007721,5070411.544105958],[5011303.807856687,5071003.72524984],[5011896.000295484,5071595.906393722],[5013080.362583248,5072188.087537603],[5013672.532432214,5073372.438530451],[5016041.257007741,5073964.619674332],[5018409.958993437,5074556.800818215],[5020186.491130166,5075148.981962097],[5021963.045856727,5075741.151811062],[5024331.747842423,5076333.332954944],[5026700.47241795,5076925.514098826],[5028477.00455468,5076925.514098826],[5031437.898979172,5077517.695242708],[5032622.261266936,5077517.695242708],[5035583.155691429,5077517.695242708],[5038544.050115922,5077517.695242708],[5042097.11438938,5077517.695242708],[5046834.540950604,5077517.695242708],[5052164.159950623,5076925.514098826],[5056901.586511846,5075741.151811062],[5062231.205511866,5074556.800818215],[5068152.994360852,5073964.619674332],[5073482.590771041,5072188.087537603],[5079404.379620027,5071595.906393722],[5084141.828771081,5069819.362962076],[5088287.085483338,5069227.19311311],[5090063.595030235,5068635.011969228],[5092432.319605762,5068042.8308253465],[5095985.383879221,5066266.298688618],[5097169.768756817,5066266.298688618],[5097761.938605783,5065081.913811022],[5098354.108454748,5063897.5741130905],[5099538.493332344,5062713.223120242],[5100130.66318131,5062121.019386529],[5100722.833030276,5060936.679688597],[5101315.0028792415,5059752.32869575],[5101315.0028792415,5059160.124962036],[5101907.172728207,5057975.785264105],[5101907.172728207,5057383.604120223],[5102499.387756837,5056199.230537543],[5103091.557605803,5055014.890839611],[5103091.557605803,5053830.539846763],[5103683.7274547685,5052646.1775589995],[5103683.7274547685,5052053.996415118],[5104275.897303735,5050277.441688557],[5104868.0671527,5049685.283134507],[5105460.28218133,5048500.9208467435],[5106052.4520302955,5047908.750997777],[5107236.791728227,5047316.547264064],[5107828.961577194,5046724.388710014],[5109013.346454789,5046132.207566132],[5109605.516303754,5046132.207566132],[5110789.856001686,5045540.02642225],[5112566.410728248,5044947.856573285],[5116119.475001707,5044355.652839571],[5120264.754303795,5043763.494285521],[5124409.98842622,5043171.313141639],[5129739.60742624,5042579.131997758],[5133292.671699699,5042579.131997758],[5138622.290699719,5042579.131997758],[5143359.69467111,5042579.131997758],[5148689.31367113,5042579.131997758],[5154611.102520116,5041986.962148791],[5159348.551671171,5040802.599861028],[5164678.17067119,5039618.237573264],[5168823.404793615,5039026.067724299],[5172968.63891604,5037249.5242926525],[5177113.918218128,5036657.343148771],[5180666.982491587,5036065.173299805],[5183035.707067114,5035472.969566092],[5184220.046765046,5034880.811012042],[5185404.431642642,5034880.811012042],[5186588.771340573,5034288.62986816],[5187180.94118954,5033696.448724278],[5187773.111038505,5033696.448724278],[5188365.326067135,5032512.0751415985],[5188365.326067135,5031919.916587548],[5188365.326067135,5031327.735443667],[5188957.495916101,5029551.180717106],[5188957.495916101,5028959.022163056],[5188957.495916101,5028366.841019174],[5190141.835614032,5028366.841019174],[5190734.0054629985,5029551.180717106],[5191326.220491628,5030143.384450819],[5191918.390340594,5030735.554299785],[5193102.730038526,5032512.0751415985],[5194287.114916121,5034288.62986816],[5195471.454614053,5036065.173299805],[5196655.794311984,5038433.863990584],[5199024.518887511,5041394.758415078],[5199024.518887511,5043171.313141639],[5199616.688736478,5044947.856573285],[5199616.688736478,5045540.02642225],[5199616.688736478,5047316.547264064],[5199616.688736478,5049093.101990625],[5199616.688736478,5050277.441688557],[5199616.688736478,5052053.996415118],[5199616.688736478,5053238.33611305],[5199616.688736478,5056199.230537543],[5199024.518887511,5058567.966407986],[5199024.518887511,5059752.32869575],[5197840.17918958,5060936.679688597],[5196655.794311984,5062713.223120242],[5194879.284765087,5064489.755256972],[5192510.56018956,5066266.298688618],[5187773.111038505,5068042.8308253465],[5184812.216614013,5069227.19311311],[5180666.982491587,5070411.544105958],[5175929.533340533,5072780.257386569],[5171784.299218109,5073964.619674332],[5168231.234944649,5075741.151811062],[5165270.340520157,5076925.514098826],[5161125.061218068,5079294.233026895],[5159940.721520136,5079886.408523319],[5158756.381822204,5080478.589667201],[5158164.1667935755,5081662.93501259],[5156979.827095644,5083439.484091694],[5156387.657246677,5084623.829437084],[5155203.272369082,5085808.197372305],[5154611.102520116,5086992.554012611],[5153426.762822185,5088769.091796798],[5152242.377944589,5090545.6182860695],[5151650.208095623,5092322.167365173],[5150465.868397691,5094690.880645785],[5149873.698548726,5095875.23728609],[5148689.31367113,5097651.775070277],[5148097.143822164,5099428.301559549],[5146912.804124232,5101204.850638652],[5146320.589095603,5103573.563919263],[5146320.589095603,5104165.745063145],[5146320.589095603,5105942.277199875],[5146320.589095603,5107718.814984062],[5146320.589095603,5108310.984833028],[5146320.589095603,5109495.352768249],[5146320.589095603,5110087.533912132],[5146320.589095603,5111864.066048861],[5146320.589095603,5113640.603833048],[5146912.804124232,5117785.8548978465],[5148097.143822164,5119562.392682034],[5148689.31367113,5120746.74932234],[5149873.698548726,5123115.456955493],[5150465.868397691,5124299.824890714],[5150465.868397691,5126668.538171326],[5151058.038246657,5128445.078779242],[5152242.377944589,5129629.432595819],[5153426.762822185,5131405.973203735],[5154611.102520116,5132590.327020312],[5156387.657246677,5134959.037477194],[5157571.996944609,5136143.402588687],[5158756.381822204,5137919.934725416],[5159940.721520136,5139696.478157061],[5160532.8913691025,5140880.829149909],[5162309.446095663,5142065.191437673],[5163493.785793595,5143841.723574402],[5164678.17067119,5145026.085862165],[5165862.510369122,5146210.44814993],[5167046.850067054,5146210.44814993],[5168823.404793615,5146802.617998895],[5170007.744491547,5146802.617998895],[5176521.748369163,5146802.617998895],[5181851.322189519,5146802.617998895],[5185996.601491608,5146802.617998895],[5191918.390340594,5146802.617998895],[5197840.17918958,5146802.617998895],[5202577.58316097,5146210.44814993],[5207907.202160991,5145618.267006047],[5213236.821161011,5143841.723574402],[5217382.055283436,5143249.553725436],[5221527.334585524,5142065.191437673],[5225080.398858983,5140288.659300943],[5227449.12343451,5139104.297013179],[5229225.632981408,5137919.934725416],[5231002.187707969,5136143.402588687],[5232186.527405901,5133774.689308075],[5233370.912283496,5131405.973203735],[5233963.082132462,5129037.248628208],[5235147.421830394,5126668.538171326],[5235739.636859023,5123707.643746832],[5236923.976556955,5121338.930466222],[5238108.316254887,5117785.8548978465],[5239292.701132482,5115417.141617236],[5239884.870981448,5113640.603833048],[5240477.040830414,5111864.066048861],[5241661.42570801,5110087.533912132],[5241661.42570801,5109495.352768249],[5241661.42570801,5108903.171624367],[5241661.42570801,5107126.639487638],[5242253.595556975,5104165.745063145],[5242845.765405942,5102389.195984041],[5243437.935254907,5100020.488350889],[5243437.935254907,5099428.301559549],[5244030.105103873,5097059.599573853],[5244030.105103873,5095283.061789666],[5244622.320132502,5093506.512710563],[5244622.320132502,5092914.3428615965],[5245214.489981469,5090545.6182860695],[5245806.659830434,5089361.272940679],[5246398.8296794,5088769.091796798],[5246990.999528366,5087584.723861577],[5247583.214556996,5086400.378516187],[5248767.554254928,5085216.021875882],[5248767.554254928,5084623.829437084],[5249951.89395286,5082847.302947812],[5251136.278830455,5081662.93501259],[5252912.788377352,5080478.589667201],[5254689.343103914,5079886.408523319],[5255873.6828018455,5078702.046235556],[5258834.577226338,5077517.695242708],[5260018.962103933,5076925.514098826],[5260018.962103933,5075741.151811062],[5261203.301801865,5074556.800818215],[5262979.8565284265,5073964.619674332],[5264756.366075324,5072780.257386569],[5267125.090650852,5071003.72524984],[5269493.815226379,5068635.011969228],[5271862.539801906,5066266.298688618],[5274231.264377433,5064489.755256972],[5276599.943773297,5062713.223120242],[5278968.668348824,5060936.679688597],[5281929.562773317,5059752.32869575],[5284298.287348844,5057975.785264105],[5286667.011924371,5056791.434271256],[5288443.5214712685,5055607.071983493],[5290220.07619783,5054422.709695729],[5291404.415895762,5053830.539846763],[5293180.9706223225,5053830.539846763],[5294957.525348884,5052646.1775589995],[5296734.034895781,5051461.815271236],[5298510.589622343,5050277.441688557],[5299694.929320275,5049093.101990625],[5301471.484046836,5047908.750997777],[5305024.548320295,5045540.02642225],[5306208.888018227,5045540.02642225],[5308577.612593754,5044947.856573285],[5310946.337169281,5044355.652839571],[5314499.40144274,5043763.494285521],[5315683.786320335,5043763.494285521],[5318052.465716199,5043763.494285521],[5321013.360140692,5043763.494285521],[5325158.63944278,5043763.494285521],[5328119.5338672735,5044355.652839571],[5331672.598140732,5044947.856573285],[5334633.492565226,5046132.207566132],[5339370.94171628,5047908.750997777],[5343516.175838704,5049093.101990625],[5347661.40996113,5051461.815271236],[5352398.859112184,5054422.709695729],[5356544.093234608,5057383.604120223],[5361281.542385663,5060936.679688597],[5364834.606659122,5063897.5741130905],[5369572.055810176,5067450.649681465],[5373125.120083635,5070411.544105958],[5375493.844659162,5072188.087537603],[5377270.35420606,5073964.619674332],[5379639.078781587,5076925.514098826],[5383192.143055046,5079886.408523319],[5384376.527932641,5081662.93501259],[5385560.867630573,5084031.659588118],[5386745.252508168,5086400.378516187],[5387337.4223571345,5088769.091796798],[5388521.7620550655,5090545.6182860695],[5389113.931904032,5092322.167365173],[5390298.316781627,5094690.880645785],[5390890.486630593,5096467.407135055],[5392074.826328525,5098836.131710582],[5392667.041357154,5099428.301559549],[5392667.041357154,5100612.6694947705],[5393259.21120612,5102981.382775381],[5393259.21120612,5105350.090408535],[5393851.381055086,5105942.277199875],[5394443.550904052,5107126.639487638],[5394443.550904052,5107718.814984062],[5394443.550904052,5108310.984833028],[5394443.550904052,5109495.352768249],[5394443.550904052,5110087.533912132],[5395035.720753018,5111271.879257521],[5395627.935781647,5111864.066048861],[5395627.935781647,5112456.247192742],[5397996.615177511,5114824.960473354],[5398588.83020614,5116009.3227611175],[5399773.169904072,5116601.498257541],[5400365.339753038,5118378.036041728],[5400957.509602004,5119562.392682034],[5402141.894479599,5120746.74932234],[5403326.234177531,5121931.111610103],[5404510.619055127,5123115.456955493],[5405694.958753058,5124299.824890714],[5406287.128602024,5125484.18153102],[5407471.513479619,5126668.538171326],[5408655.853177551,5127260.722138937],[5409840.192875483,5127852.900459089],[5410432.407904113,5128445.078779242],[5411616.747602045,5129037.248628208],[5412801.0872999765,5130221.616563429],[5413393.302328605,5130813.794883583],[5414577.642026537,5131405.973203735],[5415169.8118755035,5132590.327020312],[5415761.981724469,5133774.689308075],[5416946.366602064,5134959.037477194],[5418130.706299996,5136143.402588687],[5419315.091177591,5137327.76487645],[5420499.430875523,5137919.934725416],[5422275.985602085,5139104.297013179],[5423460.325300016,5140288.659300943],[5424644.664997948,5140880.829149909],[5424644.664997948,5141473.010293791],[5425829.049875543,5142065.191437673],[5426421.21972451,5143249.553725436],[5427013.389573475,5144433.904718284],[5427605.559422441,5145026.085862165],[5428789.944300037,5146210.44814993],[5430566.453846934,5147394.799142777],[5432343.008573496,5148579.1614305405],[5432935.178422461,5149763.512423389],[5434711.733149023,5150355.69356727],[5436488.24269592,5151540.055855034],[5438856.967271447,5152724.406847881],[5441225.691846974,5153908.769135645],[5443594.416422502,5155093.131423408],[5445370.9259693995,5156277.482416256],[5447147.480695961,5156869.663560138],[5448924.035422522,5157461.84470402],[5449516.205271488,5157461.84470402],[5450108.375120454,5157461.84470402],[5451292.714818385,5157461.84470402],[5453661.439393912,5156277.482416256],[5453661.439393912,5153908.769135645],[5454845.824271508,5152132.236998916],[5455437.994120474,5149763.512423389],[5456622.333818406,5147986.980286659],[5457214.503667371,5146210.44814993],[5458398.8885449665,5143841.723574402],[5458991.058393933,5140288.659300943],[5459583.228242898,5137919.934725416],[5460175.398091865,5134959.037477194],[5460767.613120494,5131405.973203735],[5461951.952818425,5127260.722138937],[5462544.122667392,5124299.824890714],[5463136.292516358,5121338.930466222],[5463728.507544987,5118970.21718561],[5464320.677393953,5116601.498257541],[5464912.847242919,5114824.960473354],[5464912.847242919,5113640.603833048],[5464912.847242919,5112456.247192742],[5464912.847242919,5110679.709408555],[5464912.847242919,5108903.171624367],[5464912.847242919,5106534.458343756],[5464912.847242919,5104757.920559569],[5465505.017091885,5102981.382775381],[5465505.017091885,5101797.026135076],[5465505.017091885,5100020.488350889],[5466097.232120514,5099428.301559549],[5466689.356789816,5097651.775070277],[5467281.571818446,5095875.23728609],[5467873.786847075,5094690.880645785],[5467873.786847075,5094098.70514936],[5468465.911516378,5091729.986221291],[5468465.911516378,5090545.6182860695],[5469058.126545007,5088176.916300374],[5469650.25121431,5086992.554012611],[5469650.25121431,5085808.197372305],[5470242.466242939,5083439.484091694],[5470242.466242939,5082255.127451388],[5470242.466242939,5081662.93501259],[5470834.681271568,5079294.233026895],[5471426.805940871,5076925.514098826],[5471426.805940871,5073964.619674332],[5471426.805940871,5072188.087537603],[5471426.805940871,5071003.72524984],[5471426.805940871,5069819.362962076],[5471426.805940871,5068635.011969228],[5471426.805940871,5068042.8308253465],[5471426.805940871,5066858.468537583],[5471426.805940871,5066266.298688618],[5471426.805940871,5064489.755256972],[5471426.805940871,5062713.223120242],[5471426.805940871,5062121.019386529],[5471426.805940871,5060936.679688597],[5471426.805940871,5059160.124962036],[5471426.805940871,5057975.785264105],[5471426.805940871,5055607.071983493],[5471426.805940871,5053830.539846763],[5471426.805940871,5052646.1775589995],[5471426.805940871,5050869.6454222705],[5471426.805940871,5049685.283134507],[5471426.805940871,5049093.101990625],[5471426.805940871,5047908.750997777],[5471426.805940871,5047316.547264064],[5471426.805940871,5046132.207566132],[5471426.805940871,5043171.313141639],[5471426.805940871,5041394.758415078],[5471426.805940871,5039618.237573264],[5472019.020969501,5038433.863990584],[5472019.020969501,5037841.705436534],[5472019.020969501,5036657.343148771],[5472019.020969501,5036065.173299805],[5472019.020969501,5034288.62986816],[5472611.145638803,5033696.448724278],[5472611.145638803,5033104.278875312],[5472611.145638803,5031919.916587548],[5473203.360667432,5030143.384450819],[5473203.360667432,5029551.180717106],[5473203.360667432,5027774.659875292],[5473203.360667432,5025998.127738562],[5473795.575696061,5024221.595601833],[5474387.700365364,5022445.052170188],[5475572.0400632955,5020668.497443627],[5476164.255091925,5019484.157745695],[5476164.255091925,5018299.806752847],[5476756.470120555,5016523.263321201],[5476756.470120555,5015338.912328354],[5476756.470120555,5014154.550040591],[5477348.594789857,5010601.474472215],[5477940.809818487,5009417.123479368],[5478532.934487789,5008232.761191605],[5479125.149516419,5006456.229054875],[5480309.48921435,5004679.6856232295],[5480901.704242979,5003495.334630382],[5481493.828912281,5002903.130896668],[5482086.043940911,5001718.791198736],[5482086.043940911,5001126.621349771],[5482678.258969541,5000534.440205889],[5483270.383638843,4999942.236472175],[5483862.598667473,4998757.896774244],[5483862.598667473,4998165.726925277],[5483862.598667473,4997573.545781395],[5484454.723336775,4996389.183493632],[5485046.9383654045,4995797.00234975],[5486231.278063336,4994612.651356903],[5486231.278063336,4994020.44762319],[5486823.493091965,4993428.289069139],[5487415.617761268,4992836.107925258],[5488007.832789897,4992836.107925258],[5489784.3875164585,4992243.938076291],[5490968.72721439,4991651.7569324095],[5493337.406610254,4990467.394644646],[5493929.621638883,4989875.213500764],[5495113.961336815,4989283.043651799],[5496298.301034747,4989283.043651799],[5498074.855761308,4988690.862507917],[5499259.19545924,4988098.658774203],[5499851.41048787,4987506.5002201535],[5500443.625516498,4986914.319076272],[5501627.96521443,4986322.149227305],[5502220.089883734,4985729.968083424],[5503404.519940992,4985729.968083424],[5503404.519940992,4985137.76434971],[5504588.859638924,4984545.60579566],[5505180.984308226,4983953.435946695],[5505773.199336856,4983953.435946695],[5506365.414365485,4983361.243507897],[5507549.754063416,4982176.881220133],[5508141.878732719,4981584.711371167],[5508734.093761348,4980992.541522201],[5508734.093761348,4980400.349083403],[5509326.308789978,4980400.349083403],[5509326.308789978,4979808.179234438],[5509918.43345928,4978623.816946674],[5510510.64848791,4978031.647097708],[5510510.64848791,4976847.284809944],[5511102.773157212,4975070.752673215],[5511694.988185842,4973886.390385452],[5512287.203214471,4973294.197946654],[5512879.3278837735,4971517.665809925],[5513471.542912403,4969741.133673195],[5514655.882610334,4967964.601536466],[5515248.097638964,4966780.239248702],[5515840.222308267,4965595.876960938],[5516432.437336896,4964411.514673174],[5517024.562006198,4963227.1749752425],[5517616.7770348275,4962634.982536445],[5518208.992063457,4961450.620248682],[5518801.116732759,4960266.28055075],[5519393.331761389,4958489.725824188],[5520577.671459321,4957897.555975223],[5521762.011157253,4956713.193687459],[5524722.905581745,4953752.299262966],[5525315.120610375,4952567.9369752025],[5527091.6753369365,4951975.767126237],[5528868.139704171,4951383.597277271],[5530644.694430731,4950199.234989507],[5531829.034128663,4949607.042550709],[5533605.588855225,4949014.872701744],[5534197.803883854,4949014.872701744],[5535382.143581786,4948422.702852778],[5536566.483279718,4947830.51041398],[5537750.822977649,4947830.51041398],[5538343.038006279,4947830.51041398],[5540119.59273284,4947830.51041398],[5541896.147459401,4947830.51041398],[5544857.041883894,4947238.340565015],[5547225.721279758,4946646.148126217],[5550186.615704251,4946053.97827725],[5552555.295100114,4945461.808428285],[5554924.0648553055,4944869.615989487],[5556700.619581866,4944277.446140521],[5557884.959279798,4944277.446140521],[5560253.638675662,4943685.253701723],[5562030.193402223,4943685.253701723],[5563214.533100155,4943685.253701723],[5566175.427524648,4943093.083852758],[5566767.642553277,4943093.083852758],[5568544.197279839,4943093.083852758],[5570320.661647073,4942500.914003791],[5571505.091704331,4941908.721564994],[5572689.431402263,4941316.551716028],[5574465.986128825,4940724.359277231],[5576242.450496059,4940132.189428264],[5578019.00522262,4939540.019579299],[5580387.774977811,4938355.657291535],[5582164.239345045,4937763.464852737],[5583940.794071606,4936579.125154805],[5586309.563826797,4935986.932716008],[5588678.24322266,4934802.570428245],[5591046.922618524,4934210.400579278],[5592231.3526757825,4934210.400579278],[5593415.692373714,4933618.230730313],[5594007.817043018,4933618.230730313],[5594600.032071646,4933618.230730313],[5595784.371769578,4933618.230730313],[5596376.586798208,4933026.038291515],[5597560.92649614,4931841.676003751],[5598745.266194072,4931249.506154786],[5601706.160618564,4929472.974018056],[5603482.715345126,4928288.611730292],[5604667.055043058,4927104.249442529],[5605259.270071687,4926512.0795935625],[5606443.609769618,4926512.0795935625],[5606443.609769618,4925919.887154765],[5606443.609769618,4924735.5474568335],[5607035.824798248,4922958.992730272],[5607035.824798248,4922366.8228813065],[5607035.824798248,4921182.460593543],[5607035.824798248,4920590.290744577],[5607035.824798248,4919405.928456813],[5607035.824798248,4918221.56616905],[5607035.824798248,4917037.203881286],[5606443.609769618,4915852.864183354],[5606443.609769618,4914668.501895591],[5605851.394740989,4914076.309456794],[5605259.270071687,4912891.969758862],[5604667.055043058,4912299.777320064],[5604074.930373755,4911707.607471098],[5603482.715345126,4911707.607471098],[5602890.500316496,4911707.607471098],[5602298.375647194,4911707.607471098],[5601114.035949262,4911707.607471098],[5599337.4812227,4911707.607471098],[5598745.266194072,4911707.607471098],[5597560.92649614,4911707.607471098],[5596376.586798208,4911707.607471098],[5594600.032071646,4911707.607471098],[5592823.477345086,4911707.607471098],[5592231.3526757825,4911707.607471098],[5591046.922618524,4911707.607471098],[5589270.45825129,4912299.777320064],[5586901.688496099,4912891.969758862],[5585717.348798167,4913484.139607827],[5583940.794071606,4913484.139607827],[5581572.114675743,4914076.309456794],[5579203.344920552,4914668.501895591],[5578019.00522262,4914668.501895591],[5575650.325826757,4914668.501895591],[5573281.5560715655,4914668.501895591],[5569728.536977771,4914668.501895591],[5567359.76722258,4914668.501895591],[5565583.302855345,4914668.501895591],[5563806.748128785,4914668.501895591],[5561437.978373594,4914668.501895591],[5558477.0839491,4914668.501895591],[5556108.404553237,4914668.501895591],[5553739.725157374,4914668.501895591],[5551963.170430812,4914668.501895591],[5549594.400675622,4914668.501895591],[5547225.721279758,4914668.501895591],[5545449.1665531965,4914668.501895591],[5544264.826855265,4914668.501895591],[5542488.272128704,4914668.501895591],[5540119.59273284,4914668.501895591],[5538935.253034908,4914076.309456794],[5537750.822977649,4914076.309456794],[5535974.358610415,4913484.139607827],[5535382.143581786,4913484.139607827],[5534789.928553157,4913484.139607827],[5533013.464185922,4912891.969758862],[5532421.249157293,4912299.777320064],[5531829.034128663,4912299.777320064],[5530644.694430731,4911707.607471098],[5527683.800006239,4909931.075334368],[5525907.245279677,4909338.88289557],[5524130.780912443,4908154.520607807],[5522354.2261858815,4906970.180909875],[5521169.88648795,4906970.180909875],[5519985.456430691,4906377.988471078],[5518208.992063457,4905785.818622111],[5517024.562006198,4905193.626183314],[5516432.437336896,4904601.456334348],[5515840.222308267,4904009.286485382],[5514655.882610334,4904009.286485382],[5514655.882610334,4903417.094046584],[5513471.542912403,4902232.731758821],[5512879.3278837735,4902232.731758821],[5512287.203214471,4901640.561909855],[5511694.988185842,4901048.392060889],[5511102.773157212,4900456.199622092],[5510510.64848791,4900456.199622092],[5509918.43345928,4899864.029773125],[5509326.308789978,4898679.667485362],[5508734.093761348,4898087.497636396],[5508141.878732719,4896903.135348633],[5507549.754063416,4895126.603211903],[5506957.539034788,4893942.2409241395],[5506957.539034788,4893350.0484853415],[5506365.414365485,4892165.70878741],[5505773.199336856,4890981.346499646],[5505773.199336856,4890389.154060849],[5505773.199336856,4889204.814362917],[5505773.199336856,4887428.259636356],[5505773.199336856,4886836.08978739],[5505773.199336856,4885651.727499627],[5505773.199336856,4883283.025513931],[5504588.859638924,4880322.131089438],[5504588.859638924,4877953.406513911],[5504588.859638924,4876769.044226147],[5504588.859638924,4874992.466909754],[5504588.859638924,4873808.149801654],[5504588.859638924,4873215.979952688],[5504588.859638924,4872623.78751389],[5504588.859638924,4872031.572485262],[5504588.859638924,4870847.255377161],[5504588.859638924,4869662.893089398],[5504588.859638924,4868478.553391466],[5504588.859638924,4867886.360952668],[5504588.859638924,4867294.191103702],[5504588.859638924,4866701.998664904],[5504588.859638924,4866109.783636276],[5504588.859638924,4865517.6589669725],[5503996.644610294,4864333.296679209],[5503996.644610294,4863741.104240412],[5503996.644610294,4863148.889211782],[5503404.519940992,4862556.76454248],[5502812.304912362,4861372.4022547165],[5502812.304912362,4860780.2098159185],[5502812.304912362,4860187.994787289],[5502812.304912362,4859003.6776791895],[5502220.089883734,4857227.100362796],[5502220.089883734,4856042.783254696],[5502220.089883734,4855450.613405731],[5502220.089883734,4853674.081269001],[5502220.089883734,4852489.718981237],[5502220.089883734,4851897.526542439],[5502220.089883734,4850713.186844507],[5502220.089883734,4848936.632117947],[5502220.089883734,4848344.417089317],[5502220.089883734,4847752.292420015],[5502220.089883734,4845975.737693453],[5502220.089883734,4843607.035707758],[5502220.089883734,4843014.843268961],[5502812.304912362,4840053.948844467],[5503404.519940992,4838277.416707737],[5503996.644610294,4835908.714722043],[5503996.644610294,4834724.3524342785],[5503996.644610294,4833539.944966852],[5503996.644610294,4832355.627858751],[5503996.644610294,4831171.265570988],[5504588.859638924,4830579.050542358],[5505180.984308226,4829394.733434259],[5505180.984308226,4828802.563585293],[5505180.984308226,4828210.371146495],[5505180.984308226,4827026.031448564],[5505180.984308226,4826433.839009766],[5505180.984308226,4825249.476722002],[5505180.984308226,4824065.13702407],[5505180.984308226,4822880.774736307],[5505180.984308226,4821696.36726888],[5505180.984308226,4819919.880311813],[5505180.984308226,4818735.4728443865],[5505180.984308226,4818143.348175084],[5505180.984308226,4816958.985887321],[5505180.984308226,4815774.578419894],[5505180.984308226,4815182.453750591],[5504588.859638924,4813998.091462827],[5504588.859638924,4812813.683995401],[5503996.644610294,4811037.197038335],[5503996.644610294,4810445.004599537],[5503996.644610294,4809260.664901605],[5503404.519940992,4807484.110175044],[5502812.304912362,4806891.895146415],[5502812.304912362,4805707.578038314],[5502220.089883734,4805115.408189349],[5501627.96521443,4803931.000721921],[5501035.750185801,4803338.876052619],[5500443.625516498,4801562.321326057],[5499259.19545924,4800377.9816281255],[5498074.855761308,4799193.619340362],[5496890.516063376,4799193.619340362],[5495706.176365444,4798009.211872935],[5494521.836667513,4796824.894764835],[5493337.406610254,4795640.5324770715],[5492153.066912322,4794456.170189308],[5491560.94224302,4793864.0003403425],[5490968.72721439,4792679.660642411],[5489784.3875164585,4791495.2757648155],[5489192.172487829,4790903.105915849],[5488600.047818527,4790310.936066884],[5488007.832789897,4789718.766217917],[5486823.493091965,4789126.5511892885],[5486823.493091965,4787942.211491357],[5486231.278063336,4786757.871793425],[5485639.153394033,4785573.486915829],[5485046.9383654045,4784389.147217898],[5483862.598667473,4783204.762340302],[5483270.383638843,4781428.252793404],[5482086.043940911,4779651.698066843],[5481493.828912281,4778467.358368911],[5480901.704242979,4777282.973491316],[5479125.149516419,4775506.463944418],[5478532.934487789,4774914.294095452],[5478532.934487789,4773729.909217857],[5477940.809818487,4772545.569519925],[5477348.594789857,4771361.18464233],[5476756.470120555,4770176.844944398],[5476756.470120555,4769584.675095432],[5476756.470120555,4768992.505246466],[5476756.470120555,4768400.290217836],[5476756.470120555,4767808.120368871],[5476756.470120555,4767215.9505199045],[5476756.470120555,4766623.780670939],[5476756.470120555,4766031.6108219735],[5476756.470120555,4765439.395793344],[5476164.255091925,4764847.2259443775],[5476164.255091925,4764255.056095412],[5475572.0400632955,4763070.71639748],[5475572.0400632955,4761886.331519885],[5475572.0400632955,4761294.161670919],[5475572.0400632955,4759517.606944358],[5475572.0400632955,4758925.437095392],[5475572.0400632955,4757741.09739746],[5475572.0400632955,4757148.927548494],[5475572.0400632955,4755964.542670899],[5475572.0400632955,4755372.372821933],[5475572.0400632955,4754780.202972967],[5475572.0400632955,4754188.033124001],[5475572.0400632955,4753595.818095371],[5475572.0400632955,4753003.648246406],[5475572.0400632955,4752411.47839744],[5475572.0400632955,4751819.308548474],[5475572.0400632955,4750634.923670879],[5475572.0400632955,4750042.753821913],[5475572.0400632955,4748858.414123981],[5474979.915393993,4747674.029246385],[5474387.700365364,4747674.029246385],[5473795.575696061,4747081.85939742],[5473203.360667432,4747081.85939742],[5472611.145638803,4747081.85939742],[5472019.020969501,4747081.85939742],[5471426.805940871,4747081.85939742],[5470242.466242939,4747081.85939742],[5469650.25121431,4747081.85939742],[5469058.126545007,4748266.244275015],[5467873.786847075,4748858.414123981],[5466689.356789816,4750042.753821913],[5466097.232120514,4750634.923670879],[5464912.847242919,4751227.138699508],[5463728.507544987,4751819.308548474],[5462544.122667392,4753003.648246406],[5461951.952818425,4753595.818095371],[5461359.78296946,4754188.033124001],[5460175.398091865,4754188.033124001],[5460175.398091865,4754780.202972967],[5459583.228242898,4755372.372821933],[5458991.058393933,4755372.372821933],[5457806.718696001,4755964.542670899],[5457214.503667371,4755964.542670899],[5456622.333818406,4755964.542670899],[5455437.994120474,4755964.542670899],[5454845.824271508,4755964.542670899],[5453661.439393912,4755964.542670899],[5452477.099695981,4755964.542670899],[5451884.929847015,4755964.542670899],[5450108.375120454,4755964.542670899],[5448924.035422522,4755964.542670899],[5448924.035422522,4755372.372821933],[5448331.820393893,4755372.372821933],[5447147.480695961,4754780.202972967],[5446555.310846995,4754188.033124001],[5445963.140998029,4753595.818095371],[5444778.756120434,4752411.47839744],[5444186.586271468,4750634.923670879],[5443002.246573536,4749450.583972947],[5443002.246573536,4748858.414123981],[5442410.031544906,4747081.85939742],[5441817.861695941,4745305.349850522],[5441225.691846974,4743528.795123961],[5440041.352149043,4742344.455426029],[5439449.137120414,4739975.730850502],[5438264.797422482,4738199.17612394],[5437672.627573515,4735830.451548413],[5437672.627573515,4734053.942001516],[5436488.24269592,4728132.153152529],[5435896.072846955,4725763.428577002],[5435896.072846955,4724579.08887907],[5435896.072846955,4723986.873850442],[5435896.072846955,4722210.364303543],[5435896.072846955,4721025.979425948],[5435896.072846955,4720433.809576983],[5435896.072846955,4719249.469879051],[5435896.072846955,4718657.300030084],[5435896.072846955,4716880.745303524],[5435896.072846955,4715696.405605592],[5435896.072846955,4715104.190576962],[5435896.072846955,4713919.85087903],[5435896.072846955,4713327.681030065],[5435896.072846955,4712735.511181098],[5435896.072846955,4711551.126303503],[5435303.902997988,4710366.786605571],[5435303.902997988,4709774.616756605],[5434711.733149023,4708590.23187901],[5434711.733149023,4707405.892181078],[5434119.563300056,4706813.7223321125],[5433527.348271428,4705629.337454517],[5432343.008573496,4704444.9977565855],[5432343.008573496,4703260.61287899],[5431750.838724529,4702668.443030024],[5431158.668875564,4702668.443030024],[5431158.668875564,4702076.2731810585],[5430566.453846934,4700891.933483127],[5430566.453846934,4700299.718454497],[5429974.283997969,4699707.548605531],[5429974.283997969,4699115.378756565],[5429974.283997969,4698523.2089076],[5429974.283997969,4697338.824030004],[5429974.283997969,4696746.654181038],[5429974.283997969,4695562.314483106],[5429974.283997969,4694377.929605511],[5429974.283997969,4693785.759756545],[5429974.283997969,4693193.589907579],[5429974.283997969,4692009.250209647],[5430566.453846934,4690824.865332052],[5431158.668875564,4689640.52563412],[5432343.008573496,4687863.970907559],[5433527.348271428,4685495.246332032],[5434711.733149023,4683718.736785134],[5436488.24269592,4681350.012209607],[5437672.627573515,4679573.457483046],[5438856.967271447,4678389.117785114],[5439449.137120414,4677204.778087182],[5440633.521998009,4675428.22336062],[5441225.691846974,4675428.22336062],[5441225.691846974,4674836.053511655],[5441225.691846974,4673651.66863406],[5441225.691846974,4673059.498785093],[5441225.691846974,4671875.1590871615],[5441225.691846974,4670098.604360601],[5441225.691846974,4669506.4345116345],[5441225.691846974,4668322.094813703],[5441225.691846974,4667729.879785074],[5440633.521998009,4665953.370238176],[5440633.521998009,4665361.20038921],[5440633.521998009,4664176.815511615],[5440633.521998009,4663584.645662649],[5440633.521998009,4662400.305964717],[5440633.521998009,4661808.090936087],[5440633.521998009,4661215.921087122],[5440633.521998009,4660623.751238156],[5440633.521998009,4660031.58138919],[5440633.521998009,4658847.196511595],[5440633.521998009,4657662.856813663],[5440633.521998009,4655886.302087101],[5440633.521998009,4654701.962389169],[5440633.521998009,4654109.792540204],[5440633.521998009,4652925.407662609],[5440633.521998009,4651741.067964677],[5440633.521998009,4651148.89811571],[5440633.521998009,4650556.728266745],[5440633.521998009,4649964.513238115],[5440633.521998009,4649372.34338915],[5440633.521998009,4648780.173540183],[5439449.137120414,4648188.003691218],[5438856.967271447,4648188.003691218],[5438264.797422482,4648188.003691218],[5436488.24269592,4647595.833842251],[5435303.902997988,4647595.833842251],[5434119.563300056,4647595.833842251],[5432343.008573496,4647595.833842251],[5431750.838724529,4647595.833842251],[5430566.453846934,4647595.833842251],[5429974.283997969,4647595.833842251],[5429382.114149002,4647595.833842251],[5428789.944300037,4647595.833842251],[5428197.77445107,4647595.833842251],[5427013.389573475,4647595.833842251],[5426421.21972451,4647595.833842251],[5424644.664997948,4647595.833842251],[5422868.15545105,4647595.833842251],[5421091.600724489,4647595.833842251],[5419315.091177591,4648188.003691218],[5417538.5364510305,4649372.34338915],[5415761.981724469,4650556.728266745],[5415169.8118755035,4651148.89811571],[5413393.302328605,4651741.067964677],[5411616.747602045,4652333.237813642],[5409840.192875483,4653517.622691238],[5409248.023026517,4654109.792540204],[5408063.683328586,4655294.132238136],[5407471.513479619,4655886.302087101],[5406879.29845099,4655886.302087101],[5406287.128602024,4657070.686964696],[5405102.788904092,4658255.026662628],[5404510.619055127,4660031.58138919],[5403326.234177531,4661215.921087122],[5402734.064328565,4663584.645662649],[5401549.724630633,4665361.20038921],[5400957.509602004,4667137.7099361075],[5400957.509602004,4668914.264662669],[5400365.339753038,4669506.4345116345],[5399773.169904072,4670690.774209566],[5399181.000055106,4671875.1590871615],[5397996.615177511,4672467.328936128],[5396220.105630613,4674243.8836626895],[5395035.720753018,4674836.053511655],[5394443.550904052,4674836.053511655],[5393259.21120612,4675428.22336062],[5392074.826328525,4675428.22336062],[5391482.656479559,4675428.22336062],[5389706.1469326615,4675428.22336062],[5387929.5922061,4675428.22336062],[5387337.4223571345,4675428.22336062],[5384968.697781607,4675428.22336062],[5383784.358083675,4675428.22336062],[5382007.803357114,4675428.22336062],[5379639.078781587,4674836.053511655],[5377862.569234689,4674243.8836626895],[5376086.014508128,4673651.66863406],[5375493.844659162,4673651.66863406],[5373717.289932601,4673059.498785093],[5373717.289932601,4672467.328936128],[5373125.120083635,4672467.328936128],[5372532.950234669,4672467.328936128],[5371940.780385703,4672467.328936128],[5371348.565357073,4673059.498785093],[5370164.225659141,4673651.66863406],[5368387.670932581,4674836.053511655],[5367795.501083614,4675428.22336062],[5366018.991536717,4677204.778087182],[5364242.436810155,4678981.28763408],[5363058.0971122235,4681350.012209607],[5361281.542385663,4683126.566936168],[5359504.987659101,4684903.076483066],[5358320.6479611695,4686679.631209627],[5357136.308263238,4688456.140756525],[5355951.9233856425,4690232.695483086],[5355951.9233856425,4690824.865332052],[5355359.753536677,4692009.250209647],[5354767.583687711,4692601.420058614],[5354175.413838745,4692601.420058614],[5354175.413838745,4693193.589907579],[5353583.198810115,4694377.929605511],[5353583.198810115,4695562.314483106],[5352991.028961149,4696746.654181038],[5352398.859112184,4696746.654181038],[5351806.689263218,4696746.654181038],[5350622.304385622,4697338.824030004],[5350030.134536657,4697338.824030004],[5348253.624989759,4697931.039058633],[5346477.070263198,4698523.2089076],[5345292.730565266,4698523.2089076],[5342924.005989739,4698523.2089076],[5340555.281414212,4698523.2089076],[5338186.556838685,4699115.378756565],[5337002.217140753,4699707.548605531],[5335817.832263157,4700299.718454497],[5335225.662414191,4700299.718454497],[5335225.662414191,4700891.933483127],[5335225.662414191,4701484.103332092],[5335225.662414191,4702668.443030024],[5335225.662414191,4703260.61287899],[5335817.832263157,4704444.9977565855],[5335817.832263157,4705037.167605551],[5336410.047291786,4705037.167605551],[5337002.217140753,4706221.507303483],[5337594.386989718,4706813.7223321125],[5338186.556838685,4707405.892181078],[5339963.111565245,4707998.062030044],[5341739.621112144,4708590.23187901],[5342924.005989739,4708590.23187901],[5345884.900414231,4708590.23187901],[5348253.624989759,4708590.23187901],[5351214.519414252,4708590.23187901],[5353583.198810115,4708590.23187901],[5354175.413838745,4708590.23187901],[5355359.753536677,4708590.23187901],[5355951.9233856425,4708590.23187901],[5356544.093234608,4708590.23187901],[5357136.308263238,4709182.401727976],[5357728.478112204,4709774.616756605],[5358912.817810136,4710958.956454537],[5359504.987659101,4710958.956454537],[5360097.202687731,4711551.126303503],[5360689.3725366965,4712735.511181098],[5361873.712234628,4713919.85087903],[5363058.0971122235,4715104.190576962],[5363650.26696119,4715696.405605592],[5364242.436810155,4716880.745303524],[5364834.606659122,4718065.085001456],[5365426.776508087,4719249.469879051],[5366611.161385682,4720433.809576983],[5367203.331234649,4722210.364303543],[5368387.670932581,4723986.873850442],[5368387.670932581,4725171.258728037],[5368387.670932581,4726947.768274934],[5368979.88596121,4728724.323001496],[5368979.88596121,4729908.662699427],[5368979.88596121,4731093.047577023],[5368979.88596121,4732277.3872749545],[5368979.88596121,4734053.942001516],[5368979.88596121,4735238.281699448],[5368979.88596121,4735830.451548413],[5368979.88596121,4736422.666577043],[5368979.88596121,4738791.345972907],[5368979.88596121,4741160.070548434],[5368979.88596121,4742344.455426029],[5368387.670932581,4743528.795123961],[5367795.501083614,4744120.964972926],[5367795.501083614,4744713.134821893],[5367203.331234649,4746489.689548453],[5366018.991536717,4749450.583972947],[5364834.606659122,4751819.308548474],[5363650.26696119,4753595.818095371],[5363058.0971122235,4754780.202972967],[5362465.882083595,4756556.712519865],[5362465.882083595,4757741.09739746],[5361873.712234628,4758925.437095392],[5361873.712234628,4760109.821972987],[5361873.712234628,4761294.161670919],[5361873.712234628,4761886.331519885],[5361873.712234628,4763070.71639748],[5361873.712234628,4763662.886246446],[5361873.712234628,4764847.2259443775],[5361873.712234628,4766623.780670939],[5361873.712234628,4767808.120368871],[5362465.882083595,4767808.120368871],[5363058.0971122235,4768992.505246466],[5363058.0971122235,4769584.675095432],[5363650.26696119,4769584.675095432],[5364242.436810155,4770176.844944398],[5364834.606659122,4770769.014793364],[5365426.776508087,4771361.18464233],[5366018.991536717,4771953.399670959],[5366611.161385682,4772545.569519925],[5367203.331234649,4772545.569519925],[5368387.670932581,4772545.569519925],[5368387.670932581,4773137.739368891],[5368979.88596121,4773137.739368891],[5369572.055810176,4773137.739368891],[5370164.225659141,4773137.739368891],[5371348.565357073,4773729.909217857],[5371940.780385703,4773729.909217857],[5371940.780385703,4774322.079066823],[5372532.950234669,4774322.079066823],[5373717.289932601,4774914.294095452],[5374309.459781567,4776098.633793384],[5374309.459781567,4777282.973491316],[5374901.674810196,4779651.698066843],[5375493.844659162,4780243.867915809],[5375493.844659162,4780836.082944438],[5376086.014508128,4782612.592491336],[5376086.014508128,4783204.762340302],[5376086.014508128,4784389.147217898],[5376086.014508128,4786165.656764795],[5376086.014508128,4787350.04164239],[5376086.014508128,4788534.381340322],[5376086.014508128,4789718.766217917],[5376086.014508128,4792087.445613781],[5376086.014508128,4792679.660642411],[5375493.844659162,4795048.317448443],[5374901.674810196,4797417.087203633],[5373717.289932601,4798601.426901565],[5373125.120083635,4800377.9816281255],[5371940.780385703,4801562.321326057],[5370756.395508108,4803338.876052619],[5369572.055810176,4805115.408189349],[5367203.331234649,4808076.302613841],[5365426.776508087,4809852.789570907],[5364242.436810155,4810445.004599537],[5362465.882083595,4811629.3668873],[5361281.542385663,4812813.683995401],[5359504.987659101,4813998.091462827],[5357728.478112204,4814590.261311794],[5355951.9233856425,4815182.453750591],[5355359.753536677,4815774.578419894],[5354767.583687711,4815774.578419894],[5354175.413838745,4815774.578419894],[5353583.198810115,4815774.578419894],[5352991.028961149,4815774.578419894],[5352398.859112184,4815774.578419894],[5351806.689263218,4815774.578419894],[5351214.519414252,4815774.578419894],[5350622.304385622,4815774.578419894],[5349437.96468769,4815774.578419894],[5348845.794838725,4815774.578419894],[5348253.624989759,4815774.578419894],[5347661.40996113,4815774.578419894],[5346477.070263198,4815774.578419894],[5345884.900414231,4815774.578419894],[5345292.730565266,4815774.578419894],[5344108.345687671,4815774.578419894],[5342924.005989739,4815182.453750591],[5341739.621112144,4814590.261311794],[5341147.451263177,4814590.261311794],[5339963.111565245,4814590.261311794],[5338186.556838685,4813998.091462827],[5337594.386989718,4813998.091462827],[5335225.662414191,4813405.89902403],[5333449.152867294,4813405.89902403],[5331080.428291766,4812813.683995401],[5330488.2584428005,4812221.559326098],[5329303.873565205,4812221.559326098],[5326342.979140712,4811629.3668873],[5322789.914867253,4811037.197038335],[5320421.190291726,4810445.004599537],[5319829.020442761,4809852.789570907],[5318644.680744829,4809260.664901605],[5316868.126018267,4809260.664901605],[5315091.571291706,4808076.302613841],[5313907.231593774,4807484.110175044],[5312130.676867213,4806299.770477112],[5309761.997471349,4804523.215750551],[5306801.103046856,4802746.683613822],[5304432.378471329,4800377.9816281255],[5302063.653895802,4798009.211872935],[5299102.759471308,4795048.317448443],[5296734.034895781,4792679.660642411],[5294365.310320254,4789718.766217917],[5292588.800773357,4788534.381340322],[5291404.415895762,4787350.04164239],[5289627.906348864,4786165.656764795],[5287851.351622303,4784981.317066863],[5286667.011924371,4783796.977368931],[5286074.842075405,4783204.762340302],[5284890.45719781,4782020.42264237],[5283706.117499878,4782020.42264237],[5282521.732622283,4780836.082944438],[5280153.053226419,4777875.188519945],[5278376.498499857,4776690.80364235],[5276599.943773297,4775506.463944418],[5274823.434226398,4774914.294095452],[5273046.879499838,4773729.909217857],[5272454.709650871,4772545.569519925],[5271270.369952939,4771953.399670959],[5270678.154924311,4771361.18464233],[5270085.985075344,4771361.18464233],[5269493.815226379,4770769.014793364],[5268309.475528447,4770176.844944398],[5267717.260499817,4769584.675095432],[5265940.75095292,4768992.505246466],[5264164.196226358,4767808.120368871],[5262387.686679461,4767808.120368871],[5261795.471650831,4766623.780670939],[5260611.1319528995,4765439.395793344],[5259426.792254968,4764255.056095412],[5258242.4073773725,4763070.71639748],[5257650.237528406,4763070.71639748],[5256465.897830474,4761886.331519885],[5254689.343103914,4760701.991821953],[5253505.003405982,4759517.606944358],[5252320.618528387,4758333.267246426],[5250544.108981488,4757148.927548494],[5249359.724103893,4756556.712519865],[5248175.384405961,4755372.372821933],[5247583.214556996,4754780.202972967],[5246398.8296794,4753595.818095371],[5245214.489981469,4753003.648246406],[5243437.935254907,4751227.138699508],[5242253.595556975,4749450.583972947],[5241661.42570801,4747674.029246385],[5240477.040830414,4745897.519699488],[5239292.701132482,4745305.349850522],[5238108.316254887,4744120.964972926],[5237516.146405921,4743528.795123961],[5236923.976556955,4742936.625274994],[5235739.636859023,4742344.455426029],[5234555.251981428,4741160.070548434],[5234555.251981428,4740567.900699467],[5233963.082132462,4739975.730850502],[5233370.912283496,4739975.730850502],[5232778.7424345305,4739383.5610015355],[5232186.527405901,4738199.17612394],[5231002.187707969,4737607.006274975],[5229817.848010037,4737607.006274975],[5229225.632981408,4737014.8364260085],[5226856.953585545,4735830.451548413],[5226264.738556915,4735830.451548413],[5225080.398858983,4735238.281699448],[5224488.229010018,4734646.1118504815],[5222119.50443449,4734646.1118504815],[5219750.779858963,4734053.942001516],[5218566.440161031,4733461.77215255],[5216789.88543447,4732869.55712392],[5216197.715585504,4732869.55712392],[5215605.545736538,4732869.55712392],[5215013.375887572,4732869.55712392],[5213236.821161011,4732277.3872749545],[5212052.481463079,4731685.217425989],[5210275.926736518,4731685.217425989],[5209683.756887552,4731685.217425989],[5209091.587038586,4731093.047577023],[5207907.202160991,4730500.877728057],[5206722.862463059,4729908.662699427],[5206130.692614093,4729316.492850461],[5205538.477585464,4729316.492850461],[5204946.307736497,4728724.323001496],[5204354.137887532,4727539.983303564],[5203761.9680385655,4726947.768274934],[5203169.7981896,4726947.768274934],[5203169.7981896,4726355.598425969],[5203169.7981896,4725763.428577002],[5202577.58316097,4725171.258728037],[5201985.413312005,4724579.08887907],[5201393.2434630385,4723986.873850442],[5201393.2434630385,4723394.704001475],[5200208.903765107,4722802.53415251],[5199616.688736478,4721618.194454578],[5198432.349038546,4721025.979425948],[5197840.17918958,4720433.809576983],[5197248.009340614,4719841.639728016],[5196655.794311984,4718657.300030084],[5196655.794311984,4718065.085001456],[5196063.624463019,4717472.915152489],[5195471.454614053,4716880.745303524],[5194879.284765087,4716288.575454557],[5194879.284765087,4715104.190576962],[5194879.284765087,4714512.020727996],[5194287.114916121,4713919.85087903],[5193694.899887492,4713327.681030065],[5193102.730038526,4712143.296152469],[5192510.56018956,4711551.126303503],[5191918.390340594,4710958.956454537],[5191326.220491628,4709774.616756605],[5190141.835614032,4709182.401727976],[5189549.665765067,4709182.401727976],[5189549.665765067,4708590.23187901],[5188957.495916101,4707405.892181078],[5187773.111038505,4706813.7223321125],[5187180.94118954,4706813.7223321125],[5186588.771340573,4706221.507303483],[5185996.601491608,4705629.337454517],[5184812.216614013,4705037.167605551],[5184220.046765046,4705037.167605551],[5183627.876916081,4705037.167605551]]}]}');

/***/ }),

/***/ "./src/assets/Line.json":
/*!******************************!*\
  !*** ./src/assets/Line.json ***!
  \******************************/
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"type":"GeometryCollection","geometries":[{"type":"LineString","coordinates":[[48.095665790993344,41.16721833363305],[48.09609106721975,41.167433999017284],[48.0968457824031,41.1676246131021],[48.09765887509906,41.167921543591504],[48.09847617499304,41.16826623369773],[48.09935775209619,41.16829798808995],[48.10000140322089,41.16814740207879],[48.10120700921697,41.16798237393204],[48.101770225334754,41.16793936815422],[48.10215116263334,41.16788223759013],[48.10301088666536,41.16755120507497],[48.10366376084345,41.167334108281686],[48.1045094119589,41.16717904882898],[48.10564781926302,41.16708483889313],[48.107082626218876,41.16715665827189],[48.10826137123046,41.167457939534394],[48.109521122709666,41.16806864446718],[48.11061296151184,41.16841061123841],[48.1126265713403,41.16909024897771],[48.11418642382499,41.17040902067995],[48.11575632035988,41.171284793275504],[48.11753495721646,41.17150092897596],[48.119461881550755,41.171356155792594],[48.12126187428861,41.17130111084664],[48.122586521312535,41.171298493145855],[48.12403652781037,41.171241802049266],[48.125304080485265,41.17103040961854],[48.12727644565335,41.17114399926666],[48.12863974320406,41.170906364363645],[48.129701548737415,41.17063974719301],[48.130492183120566,41.17051648498039],[48.13141243149722,41.170024706867395],[48.13356195186941,41.16976371425441],[48.13670398554788,41.16995631111048],[48.13874710159763,41.17040031308433],[48.14073217092067,41.17065696598491],[48.14315930487359,41.170538518712924],[48.14500808040872,41.17044856737185],[48.146920206164346,41.1708605802694],[48.148273985386254,41.17105855804892],[48.149439687065325,41.171230414543345],[48.15117138580762,41.172095416508974],[48.153170097571135,41.173131422680406],[48.15450583626126,41.17352905088663],[48.15675972798814,41.17369913818864],[48.15936363958871,41.1738706728564],[48.162473821720425,41.174369183329866],[48.16371112579717,41.17485721317126],[48.1661097384481,41.17474472829077],[48.1687532499708,41.174438048277366],[48.17208747043099,41.17374913362917],[48.17560286080819,41.17267376084502],[48.180092415990075,41.1718604491847],[48.18407233665184,41.17189832190704],[48.18733323899805,41.17215678466347],[48.19215914478293,41.174538452192365],[48.19834361820537,41.17927640166822],[48.202929179329175,41.18269432228738],[48.20596355191368,41.184585051425465],[48.207841889811334,41.186775318715846],[48.2082415299448,41.18789177001981],[48.2082573224362,41.18850110745637]]},{"type":"LineString","coordinates":[[48.13359300002748,41.1819170001986],[48.133734000176766,41.18193599959441],[48.13431200013571,41.18220199984139],[48.134611999541285,41.1822789996305],[48.134965128823026,41.18241182113532],[48.13526450036227,41.18247800037609],[48.13547300013223,41.1825099999167],[48.13576158279319,41.18233617140169],[48.136074986193,41.181916053682606],[48.136306166352746,41.18156837229475],[48.136743000109796,41.181326000391714],[48.13692102943216,41.18126095129182],[48.137104500214924,41.18127550022276],[48.13723299984787,41.18137100029121],[48.13743400053687,41.18156200038216],[48.13772000003929,41.181751999812356],[48.13781300038301,41.18197741776321],[48.137788282218544,41.182192959406535],[48.137589849715816,41.18243326305138],[48.13723546799013,41.182613024788665],[48.13715850035995,41.18274799989375],[48.13717247100062,41.182901717217476],[48.13725900010425,41.18302299974456],[48.1375323461026,41.18317007270752],[48.13770049975416,41.18330249970088],[48.13775683745852,41.183527639831716],[48.137796861513436,41.18407470296997],[48.13805913468515,41.18485463939922],[48.138237160926494,41.185562055242585],[48.13816900029059,41.186102999917644],[48.13804499986096,41.18629100032985],[48.13786100010726,41.18645500037017],[48.13781599999237,41.18664099978923],[48.13784900045089,41.186952500296904],[48.137688115730306,41.18761357182001],[48.13760376952068,41.18803551484317],[48.13749899958942,41.18836999982313],[48.13750999974545,41.188675999562754],[48.13742449989188,41.188966499905845],[48.137328000177874,41.18926300041596],[48.1374009997283,41.18966100032924],[48.13727599994446,41.189937999878374],[48.13698100026917,41.190303999997994],[48.13695150038821,41.190726499884796],[48.13696900035664,41.19112399999589],[48.13710699943368,41.191388499967736],[48.13735893389974,41.1917609607654],[48.13757149992307,41.19218700000687],[48.13766947783989,41.19247312524146],[48.13779499991428,41.19289200036331],[48.137910000004595,41.19309700005118],[48.13844199973421,41.193533000390005],[48.138587999620626,41.19386400016874],[48.13900699964531,41.19441450038761],[48.13929027620667,41.194887863371456],[48.139360000008445,41.195164000029415],[48.139284000335444,41.195237000068644],[48.13927099939933,41.19534100012619],[48.13936326836007,41.195613673166946],[48.13943800042821,41.195952000255815],[48.13951799985242,41.19604400003758],[48.13950099942227,41.19625400000986],[48.139334000314335,41.19653899995381],[48.139097500097165,41.19692599965413],[48.139010999746745,41.197125500254714],[48.138969500371765,41.197430499607705],[48.138924999746735,41.197822000370614],[48.138980000328665,41.19801800029311],[48.13916300019762,41.19816299982532],[48.13954600018456,41.1983830002821],[48.13963049928288,41.19857099963448],[48.13977199948619,41.198972000084844],[48.13999300057461,41.19921399998153],[48.14053399971904,41.19948099993195],[48.140677326526955,41.19972492308998],[48.14069500044774,41.200093499845416],[48.14074199978498,41.20033799963936],[48.14088800019163,41.20049300008988],[48.140937000253054,41.20101699991351],[48.140965000051956,41.20140600031838],[48.141200000078165,41.20180449998319],[48.14140950001867,41.20196699995663],[48.14199906131662,41.202246714213935],[48.1423269997263,41.20247750022763],[48.142611499418685,41.2027730003869],[48.14327079677311,41.20327379306303],[48.14395231391566,41.2038240167604],[48.14433800016493,41.20417100014386],[48.14476899977231,41.20440799978398],[48.1449870004891,41.204867999957536],[48.145003000237445,41.20506199989546],[48.14505600013285,41.205152999928174],[48.145194999901115,41.20513600034371],[48.14573511328152,41.2053160097363],[48.1460090003438,41.20548900045699],[48.146012999888185,41.205691999957686],[48.14624599966817,41.20592100017711],[48.14639299983418,41.20618799986198],[48.14630799982479,41.20626149991762],[48.146276999952065,41.20643100023787],[48.14634499968262,41.20650599980494],[48.14692750012759,41.206747499648365],[48.14722338963062,41.20708084931826],[48.14764656829653,41.207480956055825],[48.14772200014251,41.20777149972016],[48.14771000014869,41.20817900044792],[48.147638999964386,41.20843900041284],[48.14729499966482,41.20876100015757],[48.14732399970633,41.208957999638734],[48.14715200032334,41.209290000008984],[48.147321500441286,41.20956349964701],[48.14737550047355,41.2100719997657],[48.1474153035325,41.2105051712438],[48.147517000222315,41.21099599963802],[48.147778500010595,41.21141599989167],[48.14811200022952,41.21207699995437],[48.14847700042954,41.212266000393925],[48.148759999949725,41.21256799956544],[48.148854499601306,41.21280149987719],[48.14882499963943,41.21290999964021],[48.14900250043749,41.21306049985787],[48.14932400032133,41.213232999927534],[48.149647384690766,41.21323493361376],[48.14993000051503,41.21317999968828],[48.15007549989644,41.213189000141746],[48.150243999422855,41.21334199996072],[48.150364999528456,41.2134920003028],[48.15057400004087,41.21354999964396],[48.15092400034476,41.21345199976105],[48.151410000012206,41.21354700038962],[48.15171199978869,41.21370400007619],[48.15248899966375,41.21382299970714],[48.152897015751066,41.2138184985386],[48.153447000343284,41.213971999757],[48.15373900056197,41.21388300027297],[48.15430549974881,41.21392649978083],[48.15489399995912,41.2139570002446],[48.15504749976235,41.214090999635005],[48.155207999770354,41.21442999955059],[48.155404999560474,41.214687000168304],[48.15573099979243,41.21494799984716],[48.155930999542264,41.21527399987549],[48.156100000186285,41.2155020000652],[48.156315999905146,41.215528999797414],[48.15654400007546,41.21561200040027],[48.15688000034833,41.21567899976131],[48.15709699955587,41.21558400010933],[48.15741600010621,41.21530699995599],[48.157771999470874,41.21523699960014],[48.157954999709084,41.215354999811005],[48.158384000404745,41.21535100022781],[48.158837999885456,41.215495999861574],[48.15911749968418,41.21587850033495],[48.15948800021706,41.21613699998686],[48.15972399999945,41.21618400037887],[48.15981600026619,41.21643150003448],[48.15976512645878,41.21666473014302],[48.15956299962836,41.216995500159264],[48.15956700035827,41.21737599962534],[48.15975899955163,41.21762199957398],[48.159706999970496,41.21782149978877],[48.15960699972097,41.218041999682974],[48.1595709996234,41.21818399968984],[48.15970899987388,41.218288999599544],[48.15992700032063,41.218378999592275],[48.15987550038931,41.21853099971612],[48.159889999839706,41.218760999755226],[48.159937000381255,41.218938000344465],[48.159757999532516,41.21904799955871],[48.15934750042275,41.21908700048177],[48.15893600027706,41.219089999970386],[48.158471999770406,41.21918599959291],[48.15816089222086,41.219293801935045],[48.15761959203558,41.2195588451391],[48.15722699991853,41.21975900033077],[48.15702600054263,41.2201019998316],[48.15698099944567,41.22032800004833],[48.15678900020834,41.2204459998081],[48.1567325002928,41.22066900033487],[48.15664799955407,41.220753000053264],[48.15627700029844,41.2207550003476],[48.1559529998833,41.220710999956665],[48.15573599982869,41.22079099973897],[48.15531600049586,41.22090400018338],[48.15482400027679,41.22088699978979],[48.15459749951403,41.22081150000499],[48.1543199995643,41.22088000023143],[48.15399600036712,41.2209100000533],[48.153624000164484,41.220884000297666],[48.1533459995133,41.221066999606414],[48.15299849980664,41.22105349963676],[48.152610682370614,41.22115807736224],[48.152026999910014,41.22142299970199],[48.1517609997336,41.221573499803874],[48.15158591041107,41.221627193778204],[48.15147399968139,41.22155100033942],[48.151205499571084,41.2217925001533],[48.15072799992419,41.22187950045178],[48.14992099953335,41.22205300016481],[48.14960999998317,41.22236099960174],[48.14962399986454,41.222453000120524],[48.14957000026589,41.22253399985431],[48.14921099958188,41.222731000195445],[48.148746000325765,41.22301899972443],[48.14823100047714,41.22320100007548],[48.147869999822156,41.22327699957921],[48.14771500046047,41.2234599996651],[48.14772399974849,41.22364400022171],[48.14766099957349,41.22381999970124],[48.14746999993978,41.2238469996007],[48.14734499945274,41.2239970003894],[48.146965000213726,41.22407500002646],[48.14665500019149,41.22418500033767],[48.14649499970317,41.22438850025036],[48.146301000088734,41.22455900023027],[48.145988499740696,41.22451049969872],[48.14558700034236,41.224662000341375],[48.14530300032016,41.224836000188596],[48.14515982548412,41.22482895514108],[48.14500199976161,41.224660000392674],[48.1448579995589,41.22470699990708],[48.144600999740234,41.224808999868564],[48.144459906494006,41.224748230201676],[48.14423699944671,41.22450899982252],[48.143998000166384,41.22452599970307],[48.143914999695404,41.22447399984859],[48.14377485319617,41.2242781721798],[48.143539999787336,41.224183999976425],[48.1434289998593,41.22413700030201],[48.143263000355944,41.2241470000449],[48.14311700007415,41.22406500041435],[48.14299199984641,41.22395199965583],[48.14275899947912,41.22389499985654],[48.142518835457295,41.224021329736296],[48.14229099957867,41.224074000259854],[48.14210599978874,41.224171000152175],[48.14188699963739,41.22418499971119],[48.141514999908075,41.22418799997117],[48.14139700008022,41.22413400029356],[48.14123800008395,41.22401800040118],[48.14112600019978,41.22386350034106],[48.14098134326561,41.22379810226392],[48.14094593361454,41.22391818189449],[48.140738999522675,41.22421650028779],[48.140194999477124,41.22442099997208],[48.13988500007463,41.224509000012084],[48.139544999763544,41.22448800010989],[48.13906600001962,41.224611000241296],[48.13851300027715,41.22480899965475],[48.13795950065273,41.224859499769636],[48.13754099971359,41.22494300037021],[48.136979999719806,41.225210500064065],[48.13631599982285,41.22540849976115],[48.1358708309774,41.22561859706468],[48.13552299969399,41.225926000075134],[48.135433000372366,41.22618999995054],[48.13491800007774,41.22656450019446],[48.13439600030082,41.22681399973169],[48.13395499997329,41.226975000394646],[48.13355400045821,41.22719400001403],[48.1330660004177,41.227240499861296],[48.13256679894881,41.22724547823833],[48.13195500036993,41.22741250059618],[48.13149499940523,41.22745500025687],[48.13116799974873,41.227488999845455]]},{"type":"LineString","coordinates":[[48.20347093543769,41.185202927653705],[48.20316245090315,41.18539708853607],[48.202964373045056,41.18572872786868],[48.202894879244404,41.18645114563677],[48.2028401095664,41.187737115836654],[48.202861134300946,41.18883475755823],[48.202891159305615,41.18949376622034],[48.202813182030035,41.18973323973191],[48.20253243263219,41.18989209540038],[48.20195836846338,41.19022367085404],[48.20061785689385,41.19114425931189],[48.200143399955024,41.191543779706194],[48.20008876971959,41.19171521675822],[48.200118011850506,41.191954225679005],[48.19991903083828,41.19218172395657],[48.19825135708431,41.19300496161536],[48.197920714123335,41.193175634220026],[48.19735981518462,41.193567081051604],[48.19705560162083,41.19385754343369],[48.19653535398075,41.19403550833303],[48.19626417387119,41.19410634849161],[48.19596478197341,41.19428373364082],[48.195534243605096,41.194577070636186],[48.19540157177144,41.19491341071227],[48.195284913030804,41.195059503290956],[48.19477634045807,41.1953330638776],[48.194331563733485,41.19540562442986],[48.19393736525424,41.19540197070808],[48.19362576501907,41.19549564830048],[48.19350960889857,41.195629836606926],[48.19336675652113,41.196019542406255],[48.1930796839666,41.19676352003177],[48.19286396673523,41.19726429539333],[48.19257343795892,41.19760273890048],[48.19244634328603,41.19780814812827],[48.19247683150985,41.19801740098235],[48.1925293015152,41.19822168084524],[48.19242940653446,41.198344349102406],[48.19232061334366,41.198490630408884],[48.1922179176611,41.19867876218164],[48.19210937793576,41.1988190925732],[48.19201126309498,41.19890010208317],[48.19186561836336,41.19898590945085],[48.191759877745696,41.199060775766675],[48.19173038424013,41.19919707607272],[48.191908044928596,41.19928481601529],[48.19203792049066,41.1993833034549],[48.19213957621037,41.199588336911916],[48.19230985705103,41.19984866023082],[48.192401842158304,41.20027983891836],[48.19251900568117,41.200491207277445],[48.193099279255435,41.20075557442972],[48.193595926692446,41.20113109086521],[48.19433354280979,41.20158992637632],[48.19548548850005,41.201951621900776],[48.19607061754696,41.202102901785054],[48.19691323728145,41.20213534489877],[48.1979480195207,41.20210097220727],[48.19888875277637,41.202052386229035],[48.1993432360638,41.20212302253696],[48.199676488554914,41.20244687565164],[48.19991112364872,41.202863648302895],[48.200003151800686,41.20311014157301],[48.19993758423141,41.20335280103218],[48.19948285441767,41.20365747818903],[48.19900549618657,41.203937773362135],[48.1987904578763,41.204170835956965],[48.19869591041097,41.20453789456877],[48.198738116403575,41.20484275106535],[48.198579759590075,41.20504144810582],[48.19816008831339,41.205263569729084],[48.19788734107221,41.205554799638364],[48.197598831294364,41.20584564500005],[48.197561466501604,41.205981755956266],[48.19770763193955,41.20606871911121],[48.198221373437164,41.20623016444671],[48.19860140673024,41.206382394700164],[48.19881875135326,41.20646513238794],[48.19886095204474,41.20658530814577],[48.198746818748916,41.20667189115514],[48.198659627322705,41.20668168324343],[48.19854930408431,41.206678997450986],[48.19835153533051,41.20669205500429],[48.19803480460863,41.206904767616415],[48.197726205565395,41.20711171957733],[48.1973299027618,41.20715568529273],[48.19625309662132,41.207248602095305],[48.195982115112535,41.207313488110856],[48.195742397381736,41.20756977267296],[48.1955903745278,41.20798904414599],[48.195216685576625,41.20824206334592],[48.19477028823639,41.20853500967057],[48.19448328493956,41.208605459281976],[48.19401986348641,41.208558414867845],[48.193534838390185,41.20846318306723],[48.193201060169486,41.2085205731026],[48.192728222372125,41.20869371899787],[48.19211581221315,41.20899452024209],[48.19199174788143,41.20912851269848],[48.191974699473036,41.209342564050765],[48.19220424067589,41.20950901534392],[48.192605373479175,41.20972135442479],[48.19316791848243,41.21021762790263],[48.19334661891788,41.21046624117544],[48.19355073336929,41.21085845165055],[48.193712403100164,41.211136435173515],[48.19373857250493,41.211446858876585],[48.193770331585526,41.21181103616838],[48.193843795501884,41.211937932942156],[48.1941577502666,41.21216005620969],[48.194351202039876,41.21243285602408],[48.19438677475026,41.21289244422735],[48.19449506570909,41.21312742430401],[48.194710129393286,41.213448409940234],[48.19488019911972,41.21371468194375],[48.19497019234204,41.21382410942028],[48.195140523428904,41.213899750293386],[48.1953001761904,41.21404066257214],[48.19540516516399,41.214353006990436],[48.19533321187763,41.214559762754654],[48.195106676389884,41.21506062119933],[48.19503980434801,41.21533303162735],[48.195190305162576,41.21550350803338],[48.195441484625356,41.21571813987809],[48.19559732657972,41.2159483191804],[48.1957140158253,41.216171587215904],[48.195698498875046,41.21653461167103],[48.195507558744424,41.21675633998567],[48.19541170485188,41.21696847006066],[48.195431781972516,41.21723704301114],[48.1954503339536,41.21754132271449],[48.19534888009994,41.21788438001428],[48.19533336650915,41.21806272425646],[48.19553115968803,41.21841903216887],[48.19575438100336,41.21873425774369],[48.1958182110834,41.21890272551912],[48.19582888651259,41.219022133924796],[48.195736845866044,41.21914499684307],[48.19513604036904,41.21954141400895],[48.194940974321206,41.21963793464924],[48.194635107449855,41.21970554120831],[48.194379274178495,41.219820834836284],[48.19421191782194,41.219970454639885],[48.1941118377239,41.220096694832094],[48.194087270192455,41.22022835013537],[48.19416155606273,41.220373139092594],[48.194172230322785,41.2204556112068],[48.19416978135412,41.22062355069593],[48.19418121927629,41.22068816992041],[48.194260240410124,41.22072226606371],[48.1943549759264,41.220721002305446],[48.19465566149049,41.22066399330105],[48.194950090228105,41.22064257579718],[48.19505962353638,41.22062737354858],[48.19517235585034,41.22075880222465],[48.19551833100297,41.2213034012804],[48.19569117136829,41.221468463721216],[48.19590611785455,41.22164527602064],[48.19598955951328,41.22190824358004],[48.19607361449467,41.2220461209552],[48.1961216685844,41.22214022775979],[48.1960957291852,41.22230401930716],[48.196070553987546,41.22244995795863],[48.19602814057071,41.222556157947444],[48.196063379937435,41.22261778233571],[48.19612790936889,41.222769481599485],[48.196127443744636,41.22311261705707],[48.19618891983504,41.22333573060398],[48.19641332993564,41.22362357987172],[48.19667511917435,41.223923062478974],[48.19682126969845,41.224158961698535],[48.19685589913524,41.22434567602332],[48.19685726813738,41.22464596290376],[48.196694233123466,41.22508200477466],[48.19626123393844,41.226129490168375],[48.19622461423577,41.22632161687776],[48.196238947094926,41.22665081504227],[48.196248946317176,41.22703709854568],[48.19618465999201,41.22721187110107],[48.19616757008278,41.22731630502919],[48.19620214707929,41.22754114609378],[48.196297139579556,41.227829415573375],[48.19625298472759,41.22827157036784],[48.19614963801129,41.22847398742236],[48.196114031056794,41.22871618122677],[48.19621065764689,41.22881862001148],[48.196464739395914,41.22892966156132],[48.1965581130534,41.228960532120745],[48.196638671006724,41.2289958565715],[48.196687086032114,41.22904469557873],[48.196685457883895,41.229082782904484],[48.19665840162762,41.22912501691008],[48.196525967277935,41.22912179018114],[48.19617057352896,41.22916555597546],[48.19592055349358,41.229254781035536],[48.1956699231666,41.22935828930439],[48.1953952879422,41.22943261553178],[48.19517863121383,41.22947975989532],[48.195075285262625,41.22953443150284],[48.195035003309826,41.22959064042921],[48.19506348017328,41.22966282330249],[48.19509480196921,41.229816096599876],[48.19507770208307,41.23006827358816],[48.19493081535917,41.23025532939006],[48.19459615017099,41.2305521885161],[48.19428732860375,41.23068763651356],[48.193910559797835,41.230788064007875],[48.19344609951366,41.231019797938394],[48.19290249293262,41.23133061918743],[48.19152717029414,41.23219304913595],[48.190306641541795,41.23297822230186],[48.19001935344502,41.23319996987066],[48.18978741513316,41.233308687774304],[48.18941672798101,41.23341401507328],[48.18911688797067,41.23352345510673],[48.18880477438961,41.23373506156717],[48.18849021019568,41.23400379812659],[48.18828977690843,41.234261026124706],[48.18810111727142,41.234685347819216],[48.187942582517934,41.23499602286008],[48.187892717667296,41.23512824970872],[48.18794641653991,41.235201050705385],[48.18810141072042,41.23541453910371],[48.18818174493616,41.235602373513096],[48.188189457967006,41.23571694368132],[48.18799453254225,41.2358456253879],[48.186936028948644,41.23638351136979]]},{"type":"LineString","coordinates":[[48.2082573224362,41.18850110745637],[48.20827020498722,41.18899816668363],[48.20794754976871,41.190057912645514],[48.20833565104321,41.191020518836154],[48.20897102032897,41.19210350261431],[48.20907545973214,41.193802713932925],[48.20899832212459,41.19442994910087],[48.208638176463104,41.19518376552964],[48.20889620052408,41.196238532693606],[48.20948686471668,41.19718698333351],[48.20955266897707,41.19769836121897],[48.209204104096315,41.198476290114876],[48.209136154954386,41.199332511881785],[48.20877158568569,41.19996707294993],[48.20854261269615,41.20045479373164],[48.2086496043428,41.20172274817663],[48.2089840212788,41.20231707053488],[48.209798477385576,41.20252984225784],[48.21082617519615,41.20284786163347],[48.211196570229475,41.203264327537894],[48.21136141551934,41.203840235607366],[48.211325208621204,41.20424684611954],[48.21172676431697,41.20482134131977],[48.21175083765191,41.20603724070745],[48.211915087893736,41.20662743124188],[48.21220925171558,41.20705634375535],[48.212905749143815,41.207373470019924],[48.21356321554002,41.20771824258675],[48.214019918265286,41.20788657642478],[48.21443340090722,41.20840415977133],[48.21502450822539,41.20919769892106],[48.21614642956416,41.20997548235445],[48.21767398182678,41.21034127782335],[48.218931232064534,41.21060758447849],[48.21990191072923,41.211381676216384],[48.22094874268923,41.21211661228831],[48.22189507608107,41.21212516535573],[48.22271125128397,41.21163014501789],[48.223256449408936,41.2108551375932],[48.224080220078825,41.21024909451188],[48.22536092457001,41.20986394150716],[48.22604649364778,41.2093967255075],[48.22620390985004,41.20914469044247],[48.22645176726414,41.208953729465435],[48.22771435657114,41.20875777128563],[48.228974268955504,41.2082475112562],[48.23008212173602,41.20779606786431],[48.231223458012636,41.20766864216327],[48.23187845196546,41.207475889486915],[48.23222810981938,41.2072281297067],[48.2327133412901,41.20713256623527],[48.23335141437132,41.207153865704086],[48.23365499276717,41.2072505257511],[48.23419599281341,41.20732906225818],[48.234828337799,41.20711191795987],[48.2353473171598,41.206808643578206]]},{"type":"LineString","coordinates":[[48.094406190595066,41.19569931409112],[48.095136326337304,41.195231627756066],[48.095703285398926,41.19482415724316],[48.09622042119819,41.19468708254331],[48.09650310644296,41.1945011971383],[48.09675963882124,41.19426460991569],[48.097158940262744,41.19379571137622],[48.09786548374881,41.193227328635],[48.098220343150835,41.19269296645749],[48.09843559132989,41.19231950621568],[48.09893475306093,41.19194605426829],[48.100301415111865,41.19143003990225],[48.10121586941535,41.19129580522076],[48.10193558327243,41.191070872154114],[48.10313362011866,41.19030036746566],[48.10333969709463,41.190133983202905],[48.1037553162231,41.189937128022606],[48.10424151909246,41.1898564287728],[48.10480429129777,41.18975620787847],[48.105132936898556,41.18960005239723],[48.10561533898735,41.18917610785167],[48.106454115276726,41.18882546177132],[48.10769055284401,41.188684972317134],[48.10852493013777,41.188648749943816],[48.10925276496177,41.18823810489888],[48.110167710978786,41.18744611701836],[48.11071623377493,41.18702381007957],[48.11131609562754,41.18650985475004],[48.112200783443456,41.185974448752624],[48.11296853767397,41.18530027384281],[48.11376424395405,41.18420501169894],[48.11444469502098,41.18357867917781],[48.11525083364924,41.182891153186674],[48.11589667351685,41.182621386359614],[48.11654402867021,41.182101443771714],[48.116786287053934,41.181971685986206],[48.11727967637343,41.181941152398814],[48.11764862103217,41.18194324541997],[48.11800649472563,41.18176633747054],[48.118359300966965,41.181489218528036],[48.119131581276044,41.18049341579909],[48.12016987107617,41.178825121464705],[48.120578360629196,41.178356369361964],[48.12108361383439,41.17805445961712],[48.12164425542392,41.17756806274801],[48.1224083723337,41.17697236937225],[48.12313178620347,41.176225525920096],[48.12367967317719,41.17538135612772],[48.12354206722102,41.17463443465197],[48.12342374950667,41.174095311544654],[48.12363840558116,41.173514469404324],[48.1239424164487,41.17262130910723],[48.12401803988625,41.171758184512754],[48.12415374644743,41.17122225388806]]},{"type":"LineString","coordinates":[[48.130901997412174,41.1702974828497],[48.130927362206485,41.170595455888574],[48.13093275219693,41.17090537515625],[48.130954277492584,41.17113467645569],[48.13113019532538,41.17143931523943],[48.131157189668976,41.171687815871245],[48.1312209479013,41.17196106218106],[48.13138730824693,41.17248469454978],[48.131489560800006,41.17288758070371],[48.13154176979535,41.17311356942753],[48.13143775518559,41.17349632754058],[48.1314318575737,41.173920347190084],[48.13128201747973,41.17417397227669],[48.131014813183256,41.174515223075424],[48.131009328137566,41.174929721390946],[48.1312561490501,41.175488721280374],[48.1312180694909,41.17596595201493],[48.13128923672872,41.17635853178431],[48.131164722261474,41.17689874240519],[48.13126150891824,41.17728242838202],[48.13140275618581,41.177514713756054],[48.131310225487184,41.17818916740224],[48.13117006546907,41.17850975582658],[48.13066443661982,41.178821232405035],[48.13062426069518,41.179163376892646],[48.13089111608789,41.1794083261362],[48.130978756392125,41.18000148470232],[48.130742054717366,41.18051030216608],[48.13051325200071,41.1808382110211],[48.130157586628755,41.18118201972095],[48.12995313118549,41.1816022785996],[48.129727347033054,41.18225791872571],[48.129725417480145,41.18266297276405],[48.129829604092514,41.18316599212491],[48.12986576088292,41.183601783893394],[48.13000216234715,41.18390901231339],[48.1304510492505,41.184283607809064],[48.1308614141071,41.18481808971587],[48.131443625817106,41.185029198124184],[48.13241346644845,41.18539294050925],[48.133628725232256,41.18609640150342],[48.13404085898867,41.18641049372624],[48.13554736167249,41.18712714528814],[48.13575377990166,41.18732450837083],[48.13583592549097,41.18775548522503],[48.13597486323587,41.18833085257683],[48.13618708682961,41.189251189527226],[48.13594042070842,41.18998853341688],[48.13571409954658,41.19025932310168],[48.13569609498089,41.19038278903147],[48.13589002365048,41.19085467490975],[48.13618396290742,41.19134811330642],[48.13609172298932,41.191727090526804],[48.13582965796995,41.19194933234771],[48.13577288203248,41.19267233773892],[48.135813479011894,41.19318806641957],[48.13568896166815,41.19372828072617],[48.135719300675206,41.19390060830859],[48.135989141072876,41.194078897831616],[48.13611673136714,41.194625386826104],[48.136247230715924,41.1951052257515],[48.136207069010716,41.19544737106367],[48.13564467328942,41.19590043318767],[48.13530917515428,41.19635914030909],[48.13456432761867,41.196655145431606],[48.13416565091104,41.19682632198199],[48.13366127168944,41.19739519960944],[48.13339473421237,41.198008127903556],[48.133054633824976,41.19857156347595],[48.13212171011287,41.20028310613101],[48.13159523228353,41.20135660926227],[48.13116560245437,41.2019464032203],[48.13073929449479,41.2024600228187],[48.13045189322007,41.20354901364025],[48.13030554201148,41.20429837620981],[48.13038725018784,41.20473887646675],[48.13028484360247,41.20506040373318],[48.12994206306698,41.205394999521246],[48.129604390287646,41.205901293687766],[48.129766666054905,41.207096816927546],[48.129758868265384,41.207563680124025],[48.1295123534404,41.20800552547081],[48.12942129585629,41.20835593020214],[48.129251256830564,41.20878061888464],[48.129335877378686,41.2091544701565],[48.12959023566533,41.209399109680824],[48.129724041876855,41.209802782948806],[48.12941155987692,41.21030970444579]]},{"type":"LineString","coordinates":[[48.17858409419492,41.17213371296328],[48.179454141456716,41.173384436643126],[48.180117116503276,41.1744111530707],[48.18072810086252,41.17504203104722],[48.1810631035206,41.17539338454298],[48.181243160068384,41.176048346452404],[48.181244858663966,41.1766703441346],[48.1810075495203,41.17712921171722],[48.1808967880231,41.177505390950024],[48.180810705438375,41.17796796233331],[48.18067981228502,41.178372243749756],[48.18068718169883,41.17952339975951],[48.1805673282405,41.18099313980748],[48.18050167389887,41.1814204662146],[48.18021804712078,41.18163513347179],[48.17963009653029,41.181885235693244],[48.179337066223965,41.18187805398135],[48.17882447941375,41.1819155322227],[48.17780655013293,41.182262317554965],[48.176970912458096,41.18277084129464],[48.17593583139981,41.18329591189504],[48.17560546536903,41.18371673892799],[48.175526023530814,41.184243808192505],[48.17529662889342,41.18451698515588],[48.17501781800057,41.18483899128898],[48.17403026179204,41.18535806148285],[48.173490675551534,41.18580233983608],[48.172849556072954,41.18618693017624],[48.17236213988978,41.18651810249383],[48.17183813606402,41.18681977708674],[48.17142395782181,41.18698832031606],[48.17073862557507,41.18730032305211],[48.17013898167495,41.1876001310091],[48.16997735150573,41.187617602549764],[48.169328764690384,41.18751586418254],[48.168691698813994,41.18758597883421],[48.16794694805204,41.18773922742208],[48.16709462657452,41.18841169198744],[48.166243003949816,41.18884825373238],[48.16557889947839,41.189325171777895],[48.164206263479095,41.19064964469712],[48.163257476741464,41.191362596027304],[48.1628165162858,41.19193078544176],[48.1627773541651,41.19218003097981],[48.1629147318131,41.19250511775584],[48.162889850310485,41.192861948949684],[48.162936391891,41.19309900967808],[48.163161833588404,41.193576394015935],[48.16306039363262,41.19395278494177],[48.163013937158254,41.19415180810389],[48.163162007434686,41.194448562654976],[48.16329692395013,41.19483078013807],[48.163205243599464,41.19520026147936],[48.162996211053866,41.19543817085108],[48.162571266737444,41.195635011445084],[48.16211382899854,41.196145600330496],[48.16109894610699,41.197071368570974],[48.16098351747568,41.19729081173237],[48.16092842433472,41.1976528536862],[48.16075318733679,41.19787491172492],[48.16047526361308,41.198100392524886],[48.1603609955716,41.198371613781326],[48.16036285401781,41.19869335909878],[48.160396484505966,41.19900993066531],[48.16017788237041,41.19950495854683],[48.15994568143122,41.19976731018486],[48.159028502297325,41.20000083856554],[48.158790991044675,41.20020348358437],[48.158637421356865,41.20028905277848],[48.158503217125556,41.20029169669978],[48.15830247991485,41.200191420919424],[48.158146699093756,41.20014587220326],[48.1579235045613,41.20019993394283],[48.15731956910763,41.200667565170875],[48.156755537142615,41.20112426446885],[48.156577955189114,41.20139987415064],[48.15657099492353,41.20156055175821],[48.15669514832773,41.20179000087334],[48.15701709826715,41.202369865244385],[48.157013267383896,41.202822533246795],[48.15678416787816,41.20337686785555],[48.1565289937973,41.204168853502466],[48.15626756213703,41.20437685878158],[48.156052519255326,41.20478856196408],[48.15592492425836,41.205184553737375],[48.1559044089292,41.20547595870274],[48.15581864752327,41.205634688461444],[48.155559013023975,41.20580103486188],[48.15555863871839,41.205991662968444],[48.15569849581871,41.20713298187798],[48.15566522374241,41.20790066197894],[48.15553905135973,41.208445623088416],[48.15564166132539,41.20899028264771],[48.1556105668065,41.20952567843039],[48.15536541047143,41.21008557028968],[48.15515020151007,41.210318545449326],[48.15513575357583,41.21065180160596],[48.155111265314986,41.21158054855358],[48.15520599522877,41.21212501346167],[48.15532926963966,41.21255699300683],[48.15514791843027,41.21310058821043],[48.15510504273149,41.21336165380682]]},{"type":"LineString","coordinates":[[48.21172676431697,41.20482134131977],[48.21041181086809,41.20562331538828],[48.20866254076564,41.206319617590715],[48.207269593388645,41.2067981585963],[48.20652073649945,41.206970619432354],[48.206096211384704,41.206936483571546],[48.2056955556183,41.20671228733929],[48.205276101208455,41.20655912302861],[48.20507729558694,41.2064113166125],[48.20471627928875,41.20599744224405],[48.204209873786695,41.205663439027056],[48.203416239189174,41.20540585714147],[48.201653091945865,41.20494597443037],[48.20099573442059,41.204822753949536],[48.200336369705674,41.2051164998266],[48.19964090746399,41.20551659634952],[48.19897491331631,41.2055957062053],[48.198405511546234,41.20562950432644],[48.19774308710271,41.20570022243597],[48.197144186038294,41.205980063441245],[48.19611010299557,41.20618125345911],[48.19528344323572,41.206327914841964],[48.194305778272444,41.20668535602311],[48.19338858024661,41.20747319854082],[48.19270932300778,41.207861733049256],[48.192211065158354,41.20807595844809],[48.191700099581446,41.208218381789344],[48.19113016380353,41.2082640452535],[48.18996331625913,41.20861683088529],[48.18899578667641,41.208736178075014],[48.187862483144094,41.20904210212584],[48.186935083638396,41.20932921945079],[48.18679062098218,41.20946032531781],[48.18654042759372,41.20977590829583],[48.18628904321343,41.20989844233948],[48.186146274116496,41.20991639739788],[48.18601479958061,41.209891736121804],[48.18583757263294,41.20983021003707],[48.185497744889716,41.20980760087468],[48.18520244427609,41.20985042026805],[48.18488030578601,41.20985683749349],[48.18462983617575,41.20995794317987],[48.18422136101355,41.2099908416439],[48.18379248337186,41.20983736856489],[48.18291336984575,41.20958708485341],[48.182571398588784,41.20961445714406],[48.18139412763213,41.20991447424004],[48.18058098373522,41.2101801616224],[48.17976458443227,41.21045325947175],[48.17864187671627,41.210804628843405],[48.178424309551204,41.21102090953292],[48.17821797703968,41.21141618748377],[48.1779637427406,41.21182458798121],[48.177494145661704,41.2121776628851],[48.17681287086938,41.21238971355091],[48.176483037896645,41.21257464045837],[48.176267538159316,41.21296254133779],[48.176242099286945,41.21333365810423],[48.17583130524425,41.21385974267458],[48.17530309412566,41.21425426378811],[48.175088271490004,41.21440626503908],[48.17480540158912,41.21459948832908],[48.174709755029404,41.21506181736083],[48.17460326380535,41.21511639346367],[48.17425118964272,41.21515779036895],[48.1739988398716,41.21530171862478],[48.173887118249404,41.21547769670091],[48.173423010912835,41.21570220975631],[48.17324693186535,41.215833713061016],[48.17322947507547,41.21601915549412],[48.17323854382436,41.216248141828636],[48.1731072880485,41.21643793692753],[48.17296534366001,41.21665606469793],[48.172923430224174,41.21696958565426],[48.17279155649181,41.21717366289262],[48.17260663068217,41.217290649161114],[48.17236434162909,41.21742052409314],[48.17221047169583,41.21769554867251]]},{"type":"LineString","coordinates":[[48.20630847387607,41.20695355169611],[48.205870146533165,41.20712223735237],[48.20572893888387,41.20732612694796],[48.20563440514244,41.20754544757135],[48.20542976531082,41.207905072978384],[48.205214726838435,41.20806427548863],[48.20512964618242,41.208283825244806],[48.20503939435953,41.20862478007025],[48.20506964442751,41.209025853752365],[48.2052960550663,41.20948888283648],[48.205761625497026,41.209893379604864],[48.205863552343125,41.21016751256874],[48.205948998737014,41.21038405503186],[48.20619524591873,41.21082611686761],[48.20672030922025,41.21116771372804],[48.207277701037874,41.2114171567661],[48.20758161521518,41.211839168989826],[48.20797064716498,41.21226324573077],[48.20821505300971,41.21252653583645],[48.208479324852,41.21299047725887],[48.20874481668133,41.213425852096954],[48.20905057054747,41.213805011733115],[48.209690419904994,41.214342399745405],[48.210225594917425,41.21466992727927],[48.21052568555315,41.21562800731943],[48.211031334267744,41.21620502792543],[48.211224882012836,41.216774482666686],[48.2111700028107,41.21695187532344],[48.21130250799468,41.21739831793504],[48.211578099643,41.21781963323168],[48.21184914197407,41.21834807143806],[48.211910541631084,41.21868555745871],[48.21189137155844,41.21891385833071],[48.2116629056809,41.21916568228556],[48.21144394369381,41.219639352983336],[48.21121617387293,41.22032012703467],[48.211148586058066,41.22101908167794],[48.21098735548069,41.22169352499273],[48.21092430702121,41.22273097054657],[48.210904354823406,41.22364554595789],[48.210648142516625,41.224104013098035],[48.20992938886799,41.224751434385006],[48.20934084351189,41.22500882014254],[48.208701691050486,41.225565228172066],[48.208324345842186,41.22619947456253],[48.208067766643744,41.22644346030579],[48.20738369300411,41.22671996400098],[48.20660623880096,41.22696560106463],[48.205870874711835,41.227112170652276],[48.20545557751587,41.22708063784767],[48.20477235303678,41.22689246906798],[48.204489793039066,41.226857008904446]]},{"type":"LineString","coordinates":[[48.1630371654348,41.19405229652707],[48.162779503155264,41.19417708888618],[48.162459802321024,41.19463984108266],[48.16184771917944,41.19529793305504],[48.16114792780258,41.19597768808892],[48.160736075242994,41.196199865595624],[48.16001087219407,41.19637260701975],[48.15948963814865,41.19675293111019],[48.15885356340366,41.19705297011112],[48.15837825726113,41.19710080800536],[48.15794558683279,41.19725693037622],[48.15711484756909,41.19749853545346],[48.15639967350069,41.19743916330826],[48.15589141548825,41.19733724154595],[48.15549901992522,41.197291798752154],[48.15505367799526,41.197376107400466],[48.15449158409045,41.19760646328324],[48.15404600148753,41.19806012067515],[48.15385615307341,41.19843669847914],[48.15391352857463,41.198932581888904],[48.153936153424986,41.199320372408906],[48.1541073108079,41.19955694367492],[48.15407319108604,41.19990973044485],[48.15422387643966,41.200363836585225],[48.154184676187796,41.20061307768839],[48.1540049104959,41.20126632776838],[48.1540784551039,41.202626432479434],[48.15411213222449,41.203377896757274],[48.15393545204144,41.20395973507522],[48.153297629279,41.20491620400203],[48.15275667496886,41.2060394901374]]},{"type":"LineString","coordinates":[[48.208638176463104,41.19518376552964],[48.20772765239792,41.19503900128358],[48.20617583145643,41.19480831636276],[48.205726553136316,41.19471519499739],[48.20500906953689,41.194709686813745],[48.20435613674187,41.19466999644069],[48.20386154353543,41.19461627816389],[48.20337432241832,41.19457465161186],[48.20277350156286,41.19460770861951],[48.20235032673484,41.19454380420937],[48.20168341604889,41.19446205788436],[48.20127904490964,41.194327117738446],[48.201024880446035,41.194183915860854],[48.20060094798859,41.1941378590927],[48.199868223242895,41.194120032499214],[48.199442516535775,41.19411563105238],[48.19928671827079,41.194070136669396],[48.19878832527137,41.194105665636755],[48.19812219302451,41.19419072505598],[48.19637971814591,41.19417807397098],[48.196010505552785,41.194256643930956],[48.19524161859518,41.19441842551808],[48.19410578925445,41.19497456504219],[48.19371310635287,41.19530456303486],[48.192718561197296,41.19587604762685]]},{"type":"LineString","coordinates":[[48.11214248683074,41.186367269345176],[48.11247409203274,41.186208387413394],[48.1131500232086,41.18560111881582],[48.11384110903794,41.1846486734988],[48.11442955723162,41.18401690933673],[48.11505773938135,41.183386216487605],[48.115771020109555,41.183153552539096],[48.11647895744492,41.1827403606621],[48.11756236634653,41.18253700292888],[48.11894518565946,41.18216074063817],[48.1202074194327,41.18181150838899],[48.1208447608584,41.18179739133352],[48.12125070214861,41.18191778542539],[48.12142339712065,41.181912082959826],[48.12152448616534,41.181724199490446],[48.12198285416439,41.18148615865772],[48.122409454991256,41.181413377620835],[48.12382223305655,41.181100990774496],[48.12530916223363,41.180776531008746],[48.12594836766853,41.18047260784277],[48.126381487253674,41.179829738787596],[48.126567490177635,41.17894425845882],[48.12675000098155,41.178559386143704],[48.126641177660694,41.17768045193488],[48.12660590783504,41.176803354959],[48.12663507430468,41.17613648914396],[48.127051444388485,41.17519150104049],[48.12713089814797,41.174816976607566],[48.12722722653609,41.174633510840636],[48.12746196360021,41.17445826510705],[48.12768597033093,41.174239857894314],[48.12799001187054,41.17406634075851],[48.12825077904605,41.17387267993062],[48.12847790206359,41.173582860246604],[48.128692272629245,41.17344046541065],[48.12927207958297,41.17330718636791],[48.12964984818128,41.17317839700006],[48.12994722528029,41.17315721809033],[48.13019045376402,41.173220474532265],[48.130491219967276,41.17326610207335],[48.130889615536034,41.17324267325054],[48.13142302590086,41.173160652225654],[48.13166051352463,41.17306648650093],[48.131716322572125,41.172943964060416],[48.13182136351766,41.17256054223358],[48.131950010082974,41.172358813812764],[48.13228255774599,41.17210974062161],[48.13293788356112,41.171835347287725],[48.13339588218676,41.17174667205203],[48.133908715145516,41.17170225380345],[48.134966162540486,41.17175241281921],[48.13564073215187,41.1717596725507],[48.13614332220886,41.171805541154534],[48.13677718553477,41.171878503760766],[48.13738120742765,41.17191259359379],[48.13788753170129,41.171872761889844],[48.13813234370499,41.17175493553424],[48.138445134950416,41.1715244169528],[48.1387881833887,41.17132324523444],[48.13937251340662,41.17108517774631],[48.13993926457765,41.1709610515003],[48.14041872215399,41.17095866792654],[48.140888977759566,41.171022776292894],[48.14177071923589,41.17119718809234],[48.14226597347991,41.171266677910744],[48.143607155489725,41.17131903716096],[48.14565699020597,41.17146521283158],[48.14695304347923,41.17154024308857],[48.148039941074956,41.171638672286804],[48.14836529803136,41.17169915931385],[48.14865440160348,41.17186836402358],[48.14887853847714,41.171935874215606],[48.14949455200778,41.17198449523915],[48.15005220925124,41.172069794952435],[48.15041878473535,41.17219802040839],[48.150533335671746,41.17232000502319],[48.15079219165969,41.17275058150616],[48.15110723610163,41.17304910221722],[48.151359580491814,41.17319356091877],[48.151729781953655,41.17338382927921],[48.152337876096325,41.173761087811954],[48.15272760621916,41.173937538432654],[48.15334478704594,41.17410531620539],[48.15374783541076,41.174120050243424],[48.15427710530231,41.17413313868734],[48.154488859894734,41.17419556561433],[48.15464929371079,41.174423531237586],[48.1549262628051,41.174873610369794],[48.15526983858374,41.1750965709642],[48.15555650083812,41.17532288920769],[48.15576970325812,41.17535198782398],[48.15595366839839,41.17532793866748],[48.156153119909675,41.17523754926775],[48.15644605484005,41.175173297777015],[48.1568574713743,41.175140569079446],[48.157330577328565,41.17528570217366],[48.157697185936385,41.175413905409926],[48.158174619130016,41.17545905750954],[48.158632739541204,41.17551326236322],[48.159000586181875,41.1756128964816],[48.15920864630023,41.17576101021152],[48.159363826966846,41.17596501036294],[48.159480459565565,41.17603937800433],[48.15958654782123,41.17606582573589],[48.15972051756791,41.176031005058775],[48.15988154284856,41.175953957687476],[48.159988660126366,41.175956601117136],[48.160351651674425,41.1760227493486],[48.16088230490898,41.17615022472642],[48.161251805765986,41.176211764482936],[48.16178410787808,41.17630114838035],[48.16206402863808,41.17624609406313],[48.16242017993397,41.17617862086891],[48.162844203967445,41.176146181610285],[48.16333466006994,41.17618210181866],[48.163512529547596,41.17615312407925],[48.16375361558552,41.17612093780545],[48.16435345175929,41.17610712344956],[48.16474939368921,41.17614070880325],[48.16523478351064,41.17614789962425],[48.1657882540704,41.17618536060742],[48.16595715137639,41.17621811638516],[48.16614125701936,41.17633703221514],[48.16627782719704,41.17638805461242],[48.16641138388325,41.17636274659596],[48.166470557885596,41.17630701239625],[48.16659602837858,41.17617665524253],[48.16679279993455,41.17614813867957],[48.16727901161882,41.1761362770802],[48.16787624082824,41.17603659342475],[48.168590787439015,41.175849240048585],[48.16944943502544,41.17568448957607],[48.16981085176451,41.1756409531374],[48.17014178969363,41.1755728358619],[48.17087077225423,41.17534292978395],[48.17166342730422,41.17495254185485],[48.17215029593005,41.17477863369675],[48.17348702678751,41.17449691974005],[48.174227896639714,41.17440072964445],[48.1749673188026,41.17451420183062],[48.17540716014357,41.17455359334141],[48.17570592401215,41.17464671236422],[48.175986442954894,41.17457734083816],[48.176341345565156,41.17453839015659],[48.17685066436258,41.17472245881094],[48.177619389200494,41.174741313475934],[48.17906052353869,41.174671795704484],[48.17981181136908,41.1745091020878],[48.1808607044989,41.17417258859745],[48.18187253957498,41.17411158273902],[48.18298840265349,41.174272347790314],[48.18431279314422,41.17457165057463],[48.18547903778848,41.17502911210077],[48.18990391560981,41.17687204607951],[48.19529622961327,41.17911013548317],[48.19720542954388,41.180195625806334],[48.19808809514334,41.18079856542819],[48.20024504521986,41.18258586560691],[48.20379399259727,41.185464997864216],[48.20481017021359,41.18619504452484],[48.20570757114346,41.186455135309934],[48.20651431612256,41.18677020993405],[48.20727637147484,41.18724623685308],[48.207531354453984,41.18748119048886],[48.20774250729041,41.18815354664267],[48.20784712263814,41.1884554666107],[48.20794041144867,41.18851682797364],[48.2082573224362,41.18850110745637],[48.20840191681171,41.18852421050102],[48.20865005238686,41.188623642175926],[48.20883112705534,41.18887586343845],[48.2089078112997,41.18926853187759],[48.20915409186466,41.18982735564209],[48.20945350541425,41.190287624746],[48.20950965393757,41.19045102861902],[48.209461519441156,41.190692925436004],[48.20948268312726,41.19078875808051],[48.20956016813898,41.19089548707927],[48.20970597168161,41.19102770374044],[48.20983876612697,41.19116913549514],[48.20998783970778,41.19137292022765],[48.210369309549144,41.19160140162031],[48.2106426891642,41.192146581248025],[48.210614881688144,41.192355608409926],[48.21043580421692,41.192560969739965],[48.21050904527726,41.19276768091356],[48.21071259245385,41.192877465667024],[48.21097573232375,41.193069715960775],[48.21117001402732,41.19354625350535],[48.21142163244158,41.194009882272596],[48.2114060978166,41.194524228447065],[48.21147796239111,41.194912012007165],[48.21166139633268,41.19504990338369],[48.21178115660183,41.19505280509215],[48.211892757650745,41.19495065798224],[48.212045210778165,41.19477801134274],[48.212237336860134,41.194711175687964],[48.212435601264666,41.19479700004237],[48.21277038745211,41.19523404478139],[48.21303972025834,41.19572669472791],[48.21332873587677,41.19605301211457],[48.21346772727181,41.19649484589209],[48.21324544367929,41.19679639045771],[48.212925298948605,41.19720327506386],[48.21266442122857,41.19743092745399],[48.212495680888644,41.197541222776046],[48.212224468941116,41.1976871636139],[48.21215617790363,41.197809424266836],[48.2121513256744,41.19792368927385],[48.212237551569046,41.197973437838456],[48.21275362642043,41.1980050018234],[48.21370690225507,41.19814247030244],[48.21406110903325,41.198122450296644],[48.21496145355655,41.19802032839149],[48.215286002373105,41.19810443784279],[48.2155540667097,41.19833015792416],[48.21598692111999,41.198836289100896],[48.216157363739256,41.19898339156539],[48.21696189158872,41.1993555314677],[48.217403641894236,41.19965217138205],[48.2178047505529,41.20001454991508],[48.218381964064726,41.20039071557348],[48.21925641719235,41.200602487441174],[48.22034439657253,41.20083847465852],[48.221686624006296,41.2012176116567],[48.22267066137417,41.20144987495011],[48.22342485614974,41.20152169229066],[48.22397777982316,41.20168992501392],[48.22434946820661,41.201853784714736],[48.22469567956553,41.20187404957147],[48.22562852150303,41.20182505409101],[48.22635682178997,41.20194984459327],[48.22667126291884,41.20197529465686],[48.22695871069804,41.20189286007626],[48.227268954889475,41.20164416625227],[48.227540301533395,41.20138261882369],[48.22792607309758,41.20121318887767],[48.22840288207772,41.201129354183884],[48.22916562262421,41.20099878677877],[48.22940201632154,41.201004478454706],[48.229826112456244,41.20123511368076],[48.23044133638438,41.20142268762868],[48.23100617495786,41.201495854750476],[48.231213811951086,41.20143531845146],[48.23168725643303,41.201244155772315],[48.232187600068585,41.20097619105324],[48.23232883322521,41.200806822164026],[48.23231884505598,41.200669560386885],[48.23225495349419,41.20050121492215],[48.232311265486246,41.20028810157],[48.23248988811919,41.200167290582364],[48.23266349240644,41.2001655085685],[48.23333236839344,41.20039010230859],[48.233881944454346,41.200450972692146],[48.23427131163065,41.20038288509732],[48.23475050610838,41.200054826232126],[48.23496429403759,41.1996608140248],[48.2353165440581,41.199162893575554],[48.235566465348974,41.198847195321726],[48.235687263000045,41.198736904898745]]}]}');

/***/ }),

/***/ "./src/assets/Point.json":
/*!*******************************!*\
  !*** ./src/assets/Point.json ***!
  \*******************************/
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"type":"GeometryCollection","geometries":[{"type":"Point","coordinates":[172047.14180000033,4473821.7304]},{"type":"Point","coordinates":[169158.72229999956,4473636.331900001]},{"type":"Point","coordinates":[162561.92669999972,4473433.5396]},{"type":"Point","coordinates":[170884.72439999972,4473428.7793000005]},{"type":"Point","coordinates":[165975.27080000006,4473400.9065000005]},{"type":"Point","coordinates":[165785.14250000007,4473264.3113]},{"type":"Point","coordinates":[164402.47690000013,4473116.086300001]},{"type":"Point","coordinates":[162722.77479999978,4473130.9461]},{"type":"Point","coordinates":[163232.7067999998,4472794.7457]},{"type":"Point","coordinates":[166542.3680999996,4472688.5591]},{"type":"Point","coordinates":[172035.9676000001,4472429.9103]},{"type":"Point","coordinates":[164118.13430000003,4471980.043199999]},{"type":"Point","coordinates":[163389.91469999962,4471435.856000001]},{"type":"Point","coordinates":[163880.3141999999,4471637.0646]},{"type":"Point","coordinates":[163555.34949999955,4471294.2184]},{"type":"Point","coordinates":[162435.06759999972,4471347.0623]},{"type":"Point","coordinates":[163419.23280000035,4470844.0702]},{"type":"Point","coordinates":[163017.95519999973,4470929.022700001]},{"type":"Point","coordinates":[162519.8470999999,4471282.6763]},{"type":"Point","coordinates":[162194.19940000027,4470469.8445999995]},{"type":"Point","coordinates":[163558.50769999996,4470286.7762]},{"type":"Point","coordinates":[163023.49299999978,4470440.019099999]},{"type":"Point","coordinates":[162524.3015999999,4470128.4418]},{"type":"Point","coordinates":[166015.78399999999,4469804.274900001]},{"type":"Point","coordinates":[168178.6880999999,4469711.723200001]},{"type":"Point","coordinates":[166795.35879999958,4469640.8092]},{"type":"Point","coordinates":[166356.43939999957,4469573.8083999995]},{"type":"Point","coordinates":[167407.55310000014,4469158.432399999]},{"type":"Point","coordinates":[166274.8655000003,4469038.3083999995]},{"type":"Point","coordinates":[169812.94629999995,4469013.519200001]},{"type":"Point","coordinates":[166781.6185999997,4469062.096899999]},{"type":"Point","coordinates":[163532.40809999965,4468740.087300001]},{"type":"Point","coordinates":[163248.1793999998,4468462.451099999]},{"type":"Point","coordinates":[167107.81670000032,4468535.527899999]},{"type":"Point","coordinates":[162085.78749999963,4468484.235300001]},{"type":"Point","coordinates":[171930.01790000033,4468388.5907000005]},{"type":"Point","coordinates":[166729.46100000013,4468297.569399999]},{"type":"Point","coordinates":[164170.06620000023,4468285.989499999]},{"type":"Point","coordinates":[166156.09090000018,4468191.278899999]},{"type":"Point","coordinates":[171336.80539999995,4468298.965]},{"type":"Point","coordinates":[167053.15490000043,4468163.2475000005]},{"type":"Point","coordinates":[162727.18450000044,4468090.7665]},{"type":"Point","coordinates":[166843.79470000044,4467778.0427]},{"type":"Point","coordinates":[167598.90919999965,4467590.565199999]},{"type":"Point","coordinates":[163088.0603,4467562.687000001]},{"type":"Point","coordinates":[164627.66089999955,4467551.2546999995]},{"type":"Point","coordinates":[165541.42320000008,4467464.0469]},{"type":"Point","coordinates":[168669.42080000043,4467491.947899999]},{"type":"Point","coordinates":[171868.5231999997,4467438.8728]},{"type":"Point","coordinates":[168038.24120000005,4467469.8847]},{"type":"Point","coordinates":[166166.39499999955,4467306.9386]},{"type":"Point","coordinates":[167305.79150000028,4467439.1447]},{"type":"Point","coordinates":[172152.84649999999,4467174.426200001]},{"type":"Point","coordinates":[170678.72649999987,4466884.0317]},{"type":"Point","coordinates":[163211.3844999997,4467151.9124]},{"type":"Point","coordinates":[167153.23080000002,4466817.9034]},{"type":"Point","coordinates":[165515.82859999966,4466711.544600001]},{"type":"Point","coordinates":[162188.66849999968,4466733.2828]},{"type":"Point","coordinates":[171819.86930000037,4466590.2698]},{"type":"Point","coordinates":[163572.7237999998,4466432.4067]},{"type":"Point","coordinates":[162175.98919999972,4466350.7422]},{"type":"Point","coordinates":[165228.27720000036,4466057.891000001]},{"type":"Point","coordinates":[163913.52770000044,4466007.592599999]},{"type":"Point","coordinates":[171955.89769999962,4466089.9747]},{"type":"Point","coordinates":[168044.35450000037,4466246.0351]},{"type":"Point","coordinates":[170739.30200000014,4466419.3807]},{"type":"Point","coordinates":[165881.20359999966,4465819.7105]},{"type":"Point","coordinates":[162191.3618999999,4465854.220000001]},{"type":"Point","coordinates":[171564.74590000045,4465710.3071]},{"type":"Point","coordinates":[166328.1679999996,4465731.2897]},{"type":"Point","coordinates":[172030.73419999983,4465677.0647]},{"type":"Point","coordinates":[168512.46490000002,4465471.350400001]},{"type":"Point","coordinates":[169020.25930000003,4465555.928300001]},{"type":"Point","coordinates":[162355.60309999995,4465120.843]},{"type":"Point","coordinates":[171241.52639999986,4465206.2973]},{"type":"Point","coordinates":[167822.2366000004,4465101.162900001]},{"type":"Point","coordinates":[170271.28469999973,4464685.912900001]},{"type":"Point","coordinates":[170793.6958999997,4464616.4792]},{"type":"Point","coordinates":[162748.99789999984,4464567.8871]},{"type":"Point","coordinates":[164618.6325000003,4464549.0384]},{"type":"Point","coordinates":[163948.3936999999,4464574.3561]},{"type":"Point","coordinates":[166552.1690999996,4464237.617000001]},{"type":"Point","coordinates":[168131.28249999974,4464080.9583]},{"type":"Point","coordinates":[169046.38900000043,4464071.554400001]},{"type":"Point","coordinates":[170892.11000000034,4463980.729699999]},{"type":"Point","coordinates":[167816.79169999994,4463726.106000001]},{"type":"Point","coordinates":[168538.52190000005,4463797.2213]},{"type":"Point","coordinates":[169501.11980000045,4463815.126499999]},{"type":"Point","coordinates":[169670.5427000001,4464236.548]},{"type":"Point","coordinates":[165808.3236999996,4463385.422900001]},{"type":"Point","coordinates":[166200.73450000025,4463405.1559]},{"type":"Point","coordinates":[166582.48230000027,4463369.2467]},{"type":"Point","coordinates":[164632.16309999954,4463395.453600001]},{"type":"Point","coordinates":[168064.35869999975,4463388.676899999]},{"type":"Point","coordinates":[161719.61149999965,4463150.281400001]},{"type":"Point","coordinates":[166540.51429999992,4463042.6951]},{"type":"Point","coordinates":[168363.53419999965,4463207.9386]},{"type":"Point","coordinates":[165692.09630000032,4462858.436799999]},{"type":"Point","coordinates":[167862.71520000044,4462860.178099999]},{"type":"Point","coordinates":[169489.4927000003,4462752.551999999]},{"type":"Point","coordinates":[168953.03019999992,4462798.6164]},{"type":"Point","coordinates":[167210.8010999998,4462787.4759]},{"type":"Point","coordinates":[165348.87579999957,4462590.256200001]},{"type":"Point","coordinates":[164461.4149000002,4462635.6052]},{"type":"Point","coordinates":[161827.06840000022,4462583.250399999]},{"type":"Point","coordinates":[164684.38430000003,4462415.671]},{"type":"Point","coordinates":[166189.65479999967,4462476.4265]},{"type":"Point","coordinates":[168511.7268000003,4462757.0045]},{"type":"Point","coordinates":[168500.71910000034,4462331.6022]},{"type":"Point","coordinates":[168957.27419999987,4462662.7995]},{"type":"Point","coordinates":[170133.0268000001,4462408.844900001]},{"type":"Point","coordinates":[164949.19189999998,4462096.7765]},{"type":"Point","coordinates":[168787.32019999996,4461990.269099999]},{"type":"Point","coordinates":[163023.72699999996,4461921.609999999]},{"type":"Point","coordinates":[167286.9260999998,4461949.478499999]},{"type":"Point","coordinates":[171674.21580000035,4461681.7103]},{"type":"Point","coordinates":[164961.59669999965,4461559.304199999]},{"type":"Point","coordinates":[168473.9149000002,4461645.015900001]},{"type":"Point","coordinates":[163465.84559999965,4461495.7294]},{"type":"Point","coordinates":[163100.05059999973,4461604.3749]},{"type":"Point","coordinates":[161732.15550000034,4461225.155300001]},{"type":"Point","coordinates":[168487.7993999999,4461295.9944]},{"type":"Point","coordinates":[167257.13630000036,4461260.7193]},{"type":"Point","coordinates":[167381.43850000016,4461148.7367]},{"type":"Point","coordinates":[167565.43039999995,4461104.022399999]},{"type":"Point","coordinates":[164175.81199999992,4461195.263]},{"type":"Point","coordinates":[164144.29229999986,4461091.6894000005]},{"type":"Point","coordinates":[162515.9826999996,4460900.856899999]},{"type":"Point","coordinates":[163681.80289999954,4461097.374500001]},{"type":"Point","coordinates":[163707.92080000043,4460738.963300001]},{"type":"Point","coordinates":[161929.64169999957,4460608.6394]},{"type":"Point","coordinates":[165107.79530000035,4460866.458799999]},{"type":"Point","coordinates":[167755.34300000034,4460869.9384]},{"type":"Point","coordinates":[162620.45299999975,4460584.538699999]},{"type":"Point","coordinates":[163764.5767000001,4460348.9143]},{"type":"Point","coordinates":[162946.17250000034,4460272.6537999995]},{"type":"Point","coordinates":[161974.48550000042,4460263.0516]},{"type":"Point","coordinates":[163044.51680000033,4460059.5155]},{"type":"Point","coordinates":[164367.4846999999,4460250.9399999995]},{"type":"Point","coordinates":[167903.45129999984,4460032.2797]},{"type":"Point","coordinates":[171588.39790000021,4459999.625399999]},{"type":"Point","coordinates":[163754.49170000013,4459756.0075]},{"type":"Point","coordinates":[162512.73680000007,4459491.3873]},{"type":"Point","coordinates":[162717.18209999986,4459142.185900001]},{"type":"Point","coordinates":[163153.30260000005,4458976.8303]},{"type":"Point","coordinates":[170927.34350000042,4458768.061799999]},{"type":"Point","coordinates":[163264.5758999996,4458790.5484]},{"type":"Point","coordinates":[161796.76080000028,4459383.339299999]},{"type":"Point","coordinates":[171738.21449999977,4458401.5768]},{"type":"Point","coordinates":[163072.93900000025,4458234.4966]},{"type":"Point","coordinates":[171263.28359999973,4458180.6171]},{"type":"Point","coordinates":[162102.8169999998,4458203.8111000005]},{"type":"Point","coordinates":[163091.86990000028,4458019.118000001]},{"type":"Point","coordinates":[163699.7394000003,4458110.4268]},{"type":"Point","coordinates":[171498.0549999997,4457531.8683]},{"type":"Point","coordinates":[166289.74210000038,4457506.2916]},{"type":"Point","coordinates":[167845.90309999976,4457464.2797]},{"type":"Point","coordinates":[163706.69189999998,4457486.6647]},{"type":"Point","coordinates":[165448.92119999975,4457418.9461]},{"type":"Point","coordinates":[168290.6579,4457318.0024999995]},{"type":"Point","coordinates":[163736.8004999999,4457229.606000001]},{"type":"Point","coordinates":[164615.1297000004,4457018.041300001]},{"type":"Point","coordinates":[165810.34759999998,4456828.9541]},{"type":"Point","coordinates":[167970.82320000045,4456716.898800001]},{"type":"Point","coordinates":[164641.32079999987,4456683.810699999]},{"type":"Point","coordinates":[165561.8892000001,4456542.052100001]},{"type":"Point","coordinates":[164547.75980000012,4456403.8608]},{"type":"Point","coordinates":[165897.6311999997,4456172.7838]},{"type":"Point","coordinates":[164833.6853,4456293.543500001]},{"type":"Point","coordinates":[165712.86099999957,4455851.334899999]},{"type":"Point","coordinates":[164918.21420000028,4455692.8651]},{"type":"Point","coordinates":[165406.90060000028,4455674.5896000005]},{"type":"Point","coordinates":[165716.8459999999,4454738.009199999]},{"type":"Point","coordinates":[166326.16839999985,4454707.9244]},{"type":"Point","coordinates":[167509.36139999982,4454388.7631]},{"type":"Point","coordinates":[166824.58320000023,4454453.4164]},{"type":"Point","coordinates":[166129.23230000027,4454110.0452]},{"type":"Point","coordinates":[163723.3666000003,4454131.545399999]},{"type":"Point","coordinates":[166197.71879999992,4453937.383300001]},{"type":"Point","coordinates":[163465.07430000044,4453907.025699999]},{"type":"Point","coordinates":[168024.9068,4453847.0174]},{"type":"Point","coordinates":[167322.9885999998,4453716.293]}]}');

/***/ }),

/***/ "./src/assets/Point1.json":
/*!********************************!*\
  !*** ./src/assets/Point1.json ***!
  \********************************/
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"type":"GeometryCollection","geometries":[{"type":"Point","coordinates":[48.127491666945595,41.17957132153009]},{"type":"Point","coordinates":[48.181903263602976,41.17716341075527]},{"type":"Point","coordinates":[48.18999919811458,41.19803365060194]},{"type":"Point","coordinates":[48.2082573224362,41.18850110745637]},{"type":"Point","coordinates":[48.12973943264368,41.22745798217413]},{"type":"Point","coordinates":[48.10319311189355,41.21637257431299]},{"type":"Point","coordinates":[48.17173008025419,41.22381310757611]},{"type":"Point","coordinates":[48.217455185499624,41.227291544768086]},{"type":"Point","coordinates":[48.198297517770264,41.21831471547767]},{"type":"Point","coordinates":[48.16683574973243,41.20699261822147]},{"type":"Point","coordinates":[48.18335604968142,41.1896689097931]},{"type":"Point","coordinates":[48.22887636022651,41.17247271252816]},{"type":"Point","coordinates":[48.219739666852206,41.19595349062005]},{"type":"Point","coordinates":[48.199818913849796,41.172150685034644]},{"type":"Point","coordinates":[48.10521181753905,41.178216979909784]},{"type":"Point","coordinates":[48.13562225211018,41.21365466507665]},{"type":"Point","coordinates":[48.116817232595906,41.19850605148008]},{"type":"Point","coordinates":[48.15638027677802,41.189041240724166]},{"type":"Point","coordinates":[48.13742954923316,41.16642178099266]},{"type":"Point","coordinates":[48.111852582815665,41.22411103885681]},{"type":"Point","coordinates":[48.13359300002748,41.1819170001986]},{"type":"Point","coordinates":[48.13100415579971,41.22748952569209]},{"type":"Point","coordinates":[48.13154176979535,41.17311356942753]},{"type":"Point","coordinates":[48.19774308587297,41.205700223306685]},{"type":"Point","coordinates":[48.180117116503276,41.1744111530707]},{"type":"Point","coordinates":[48.196010503170555,41.19425664387291]},{"type":"Point","coordinates":[48.141155139828854,41.176086406945686]},{"type":"Point","coordinates":[48.19635536804174,41.20951348901104]}]}');

/***/ }),

/***/ "./src/assets/Poliqon1.json":
/*!**********************************!*\
  !*** ./src/assets/Poliqon1.json ***!
  \**********************************/
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"type":"GeometryCollection","geometries":[{"type":"MultiPolygon","coordinates":[[[[48.23320875850561,41.20440846708155],[48.233094544449926,41.20452268133028],[48.23316592924003,41.20460834201827],[48.233161170273306,41.204708279154154],[48.233027920426764,41.20483677028958],[48.23276617850118,41.20482249395088],[48.23241877815008,41.204789180567225],[48.232190350433946,41.20474159196183],[48.232109447853,41.20465593141325],[48.232104688983455,41.204579789372474],[48.232099929456055,41.204446538818445],[48.23190481475374,41.20437991408114],[48.23173349285189,41.204360878078106],[48.23158596747103,41.204427503331985],[48.231386092061626,41.204427503243856],[48.231271877996775,41.20438943174974],[48.23108628015578,41.2044275029389],[48.2307912275795,41.204441780021725],[48.23060086979023,41.204327566364505],[48.230400994946315,41.2042514226305],[48.23022015544308,41.204251422937496],[48.23006311194376,41.20425142293409],[48.22983468270425,41.20433232461889],[48.22968715739254,41.20427045874118],[48.22968959346752,41.204267385823364],[48.22968596668175,41.20426451009663],[48.229768059198065,41.204161003005716],[48.22977281842535,41.20402775366497],[48.229948897521595,41.20398492338557],[48.23012021939472,41.20384691459818],[48.23033912924696,41.203713665228264],[48.23053900355965,41.20372794061634],[48.23065797692797,41.20368511108596],[48.230867369489246,41.20363752226415],[48.23117670016268,41.203623245354244],[48.231248082687884,41.20372318338788],[48.23139085106904,41.20368511093422],[48.23163355594126,41.203737458662864],[48.23181915343136,41.2037374588944],[48.23201902859212,41.203761254317115],[48.23214751978007,41.203651798623895],[48.23237594803002,41.203542344321626],[48.232699554442405,41.203399575655006],[48.232956535890175,41.20343764723407],[48.23332297306366,41.203561379113545],[48.23346574094984,41.203670834379366],[48.23375603505068,41.203680351909725],[48.234017776366315,41.203632762893584],[48.234250963522385,41.20358041516041],[48.23438897238901,41.20362324539191],[48.23438421274587,41.20373269977513],[48.23426523946945,41.20386594959665],[48.234008258174256,41.20396588776983],[48.23378458923996,41.20402299497571],[48.23337532055315,41.2042371463542],[48.233113581265094,41.20430377099884],[48.23320875850561,41.20440846708155]]],[[[48.22536092457001,41.20986394150716],[48.22332502244685,41.2108046897031],[48.22268081776893,41.21150908731914],[48.22237896312711,41.211930736633064],[48.22198656399907,41.21225488080549],[48.22110791508902,41.21213834592558],[48.219912760904535,41.21129926686213],[48.219075740977125,41.21094542582231],[48.218269245390715,41.21061614600776],[48.21733666565094,41.21028381166422],[48.21595671218931,41.210083624904584],[48.21557721351406,41.20935955072322],[48.214568382386474,41.208514643173736],[48.21405362547374,41.208083528636124],[48.21304862172587,41.207703412008975],[48.21208859882757,41.20712730814675],[48.211613314628806,41.20613400743833],[48.2115788598544,41.20486543151165],[48.21173670098401,41.20462595027712],[48.21188898707194,41.20487341431801],[48.21191753949069,41.205120877677494],[48.211927057492126,41.20539689515889],[48.21222211142843,41.20556821656818],[48.21235536048103,41.20569194874961],[48.21254571818871,41.20619639414361],[48.21289787741934,41.20632012611218],[48.213126306738,41.20636771612589],[48.21364978786883,41.20614880523871],[48.21397339467596,41.206034590833525],[48.214506394419544,41.20595844771148],[48.21490614343718,41.20602507330759],[48.21572467854666,41.206310607933254],[48.21595310567531,41.206976858254585],[48.21576274898355,41.20764310667239],[48.21610539235471,41.20806189181029],[48.2164289974843,41.208290319820726],[48.21726656887635,41.20846164064978],[48.21795185383822,41.20846164127518],[48.21850388774621,41.20846164130327],[48.218960745395655,41.20853778418752],[48.2197792794812,41.20849971290168],[48.22078817094737,41.208404534413624],[48.22101659879246,41.20840453376362],[48.22093331780129,41.208713863586354],[48.22131403204925,41.208511610114726],[48.221528183280626,41.20858299415341],[48.221540081391254,41.20873765910275],[48.22131403158083,41.208987501684085],[48.22101659842977,41.209130270033015],[48.22086193360391,41.2093087289849],[48.221254544569355,41.20940390809536],[48.22144490256012,41.209522880880215],[48.22154008146821,41.209641853708256],[48.221813719307626,41.20957046963754],[48.22212304850955,41.20936821569472],[48.22239668693971,41.209296832034916],[48.22264653045758,41.20929683172443],[48.22297965488981,41.20916596244204],[48.22311052464581,41.20896370672342],[48.22330088191177,41.20891373884319],[48.22373870334296,41.20903747112008],[48.22378629179488,41.20889470259196],[48.2237482209927,41.2087519353375],[48.223710148993305,41.208580613834414],[48.22352930993433,41.208456882149484],[48.223215221229445,41.208523507030925],[48.22307245416725,41.20846640024559],[48.22263463269826,41.20837122236109],[48.22248234653235,41.20825700815717],[48.22219681206619,41.20816182872914],[48.22207307993684,41.20801906096791],[48.22233006253725,41.207771598165216],[48.22266318557907,41.20761931223223],[48.22289161451473,41.20765738283675],[48.2231485956859,41.207486061777495],[48.223548345437635,41.20742895494906],[48.224024237852625,41.20742895467873],[48.22435736248221,41.207400402344945],[48.224690487443226,41.207324258694804],[48.22485228975339,41.207238598434316],[48.22474759444937,41.207114865812756],[48.2245857904387,41.20694354516435],[48.22465241612808,41.206819813075796],[48.225242522006916,41.20665800985922],[48.225746968251755,41.20645813499372],[48.226003949557295,41.206334403205375],[48.226346591665944,41.20617259987965],[48.22671778829313,41.20601079558581],[48.22737451883075,41.205925135594164],[48.22791703597237,41.205877547039556],[48.22818353633479,41.20569670780389],[48.22810739249097,41.20547779704312],[48.2284690709447,41.20550635076203],[48.2288021954274,41.20569670843456],[48.229087731263945,41.20590610013938],[48.2293351954233,41.20596320660897],[48.229725426555284,41.20594417077368],[48.2300871048478,41.20592513622755],[48.230334568770836,41.205801404247964],[48.23051540810169,41.20578593690915],[48.23090801897053,41.20573239904087],[48.231074581016586,41.205738347886516],[48.231217348663385,41.20584542369474],[48.23143744949567,41.20580378275831],[48.23173488075849,41.205750245162506],[48.23209774946072,41.2057561944553],[48.23252605222094,41.205779989236355],[48.2326569234167,41.20580378306428],[48.232722358067484,41.20569670838061],[48.23264502502987,41.20554204329032],[48.23278184449645,41.20538737817829],[48.23303763657958,41.2053397880007],[48.2332517881326,41.20530409612169],[48.23335291544567,41.20522676400346],[48.23351352763221,41.205095894217294],[48.233816910387574,41.20500071485019],[48.23424521349171,41.204905537051374],[48.23473300159468,41.20483415296947],[48.235220791566704,41.20489363872873],[48.2354206665518,41.204869845035496],[48.235428906309885,41.20487167586939],[48.23538065880142,41.206017119068775],[48.235334640752576,41.2071095708647],[48.235239144710675,41.20717658524085],[48.23506306466057,41.207105201157404],[48.234758494370936,41.20716230808395],[48.23453006558273,41.20716706719393],[48.23435874462369,41.207162307696635],[48.23412555811836,41.20726224505251],[48.233801951249006,41.20741929015262],[48.233682977454976,41.20741928970888],[48.23355924569691,41.20738597675899],[48.23222914788718,41.207308034308745],[48.23096321681328,41.20757184499912],[48.22952662313652,41.207966202733644],[48.22870602017694,41.20856839907079],[48.22639362615119,41.20907745182142],[48.22628258229139,41.20909490209046],[48.22536092457001,41.20986394150716]]]]}]}');

/***/ }),

/***/ "./src/assets/Polygon.json":
/*!*********************************!*\
  !*** ./src/assets/Polygon.json ***!
  \*********************************/
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"type":"GeometryCollection","geometries":[{"type":"Polygon","coordinates":[[[172328.35809999984,4473732.489700001],[172340.47530000005,4473752.0835],[172355.17059999984,4473793.0638999995],[172336.81900000013,4473801.489700001],[172338.24870000035,4473825.3256],[172308.24870000035,4473816.4077],[172286.49870000035,4473806.4233],[172303.06900000013,4473780.3608],[172322.31120000035,4473763.1577],[172311.99870000035,4473751.603],[172274.35809999984,4473753.853],[172256.19400000013,4473752.7631],[172245.36589999963,4473776.3412999995],[172230.53000000026,4473759.7358],[172195.74870000035,4473757.661599999],[172186.49089999963,4473765.946699999],[172188.50650000013,4473799.6263999995],[172165.25650000013,4473787.0053],[172154.68620000035,4473798.829500001],[172139.52219999954,4473812.3763999995],[172150.28000000026,4473814.802200001],[172181.35809999984,4473812.9506],[172193.35809999984,4473813.6655],[172202.35809999984,4473813.1263999995],[172214.35809999984,4473813.853],[172265.03000000026,4473810.829500001],[172284.13150000013,4473819.606899999],[172211.52219999954,4473826.4155],[172219.74870000035,4473842.739700001],[172240.63150000013,4473843.981899999],[172262.35809999984,4473836.1888999995],[172284.95189999975,4473844.286599999],[172313.12370000035,4473842.6108],[172313.89719999954,4473855.571699999],[172289.19400000013,4473861.3256],[172282.60809999984,4473868.696699999],[172237.58469999954,4473866.0131],[172214.19400000013,4473878.728],[172103.68620000035,4473886.0405],[172058.42839999963,4473883.3452],[172013.07689999975,4473893.036599999],[171929.35809999984,4473898.0287999995],[171914.35809999984,4473897.1263999995],[171893.52219999954,4473898.3686],[171882.17839999963,4473873.6537999995],[171875.19400000013,4473879.3256],[171866.92059999984,4473897.3256],[171845.19400000013,4473891.6537999995],[171834.53000000026,4473868.4506],[171787.32689999975,4473865.6381],[171751.11589999963,4473885.3256],[171759.03780000005,4473861.981899999],[171785.19400000013,4473853.9077],[171773.52219999954,4473825.3256],[171749.52219999954,4473794.353],[171755.19400000013,4473789.3256],[171844.46750000026,4473783.3256],[171857.52219999954,4473771.6537999995],[171863.80339999963,4473764.6225000005],[171893.35809999984,4473766.3803],[171911.35809999984,4473765.3138999995],[171920.87370000035,4473765.8763999995],[172013.52219999954,4473759.6537999995],[172052.42839999963,4473751.3452],[172097.35809999984,4473754.0287999995],[172121.35809999984,4473752.599099999],[172155.99870000035,4473754.661599999],[172193.52219999954,4473747.6537999995],[172237.42059999984,4473735.899900001],[172256.35809999984,4473734.774900001],[172274.42839999963,4473735.853],[172328.35809999984,4473732.489700001]],[[171854.35809999984,4473792.489700001],[171845.19400000013,4473795.3256],[171839.52219999954,4473801.6537999995],[171827.61589999963,4473812.3061],[171826.53780000005,4473830.212400001],[171838.60809999984,4473843.712400001],[171845.49870000035,4473843.302200001],[171857.82689999975,4473849.9936],[171917.00650000013,4473846.4662999995],[171917.54559999984,4473855.6537999995],[171899.52219999954,4473863.9155],[171922.60809999984,4473883.204500001],[171957.17839999963,4473872.5287999995],[171938.99089999963,4473846.5013999995],[171947.19400000013,4473837.3256],[171965.19400000013,4473829.0638999995],[171957.50650000013,4473823.989700001],[171926.35809999984,4473825.853],[171896.35809999984,4473824.0600000005],[171859.02219999954,4473826.286599999],[171857.19400000013,4473795.6537999995],[171854.35809999984,4473792.489700001]],[[172136.35809999984,4473762.489700001],[172097.99089999963,4473766.2631],[172080.60030000005,4473764.8686],[172055.47530000005,4473771.7358],[172046.35809999984,4473771.009199999],[172037.35809999984,4473771.7358],[172019.94400000013,4473770.329500001],[172008.48309999984,4473783.6303],[171947.12370000035,4473789.267000001],[171941.59250000026,4473797.1537999995],[171997.13939999975,4473792.7006],[172062.17839999963,4473780.899900001],[172102.11589999963,4473784.1108],[172140.43620000035,4473773.6225000005],[172136.35809999984,4473762.489700001]]]},{"type":"Polygon","coordinates":[[[169148.35809999984,4473504.489700001],[169156.56120000035,4473513.337400001],[169166.35809999984,4473513.724099999],[169236.85809999984,4473510.9350000005],[169253.68620000035,4473519.829500001],[169266.06120000035,4473519.337400001],[169300.13939999975,4473537.3725000005],[169319.47530000005,4473531.606899999],[169342.04559999984,4473519.6655],[169364.07689999975,4473518.786599999],[169413.76439999975,4473542.2358],[169427.24089999963,4473554.728],[169416.67059999984,4473567.3138999995],[169406.35809999984,4473567.724099999],[169382.14719999954,4473566.7631],[169342.67839999963,4473575.024900001],[169313.47530000005,4473567.3725000005],[169277.24089999963,4473561.606899999],[169229.87370000035,4473551.6928],[169228.56120000035,4473584.739700001],[169247.92059999984,4473598.0638999995],[169270.65500000026,4473597.161599999],[169315.79559999984,4473608.9975000005],[169340.35809999984,4473609.9702],[169384.91280000005,4473608.2006],[169393.67839999963,4473626.7513999995],[169422.50650000013,4473633.6186],[169413.88150000013,4473683.2006],[169416.38939999975,4473746.587400001],[169390.77219999954,4473764.224099999],[169343.96750000026,4473774.009199999],[169277.35809999984,4473771.3725000005],[169265.68620000035,4473771.829500001],[169244.12370000035,4473760.427200001],[169212.22530000005,4473759.1733],[169153.88939999975,4473771.3725000005],[169109.21750000026,4473764.704500001],[169085.52219999954,4473742.7436],[169084.04559999984,4473705.5600000005],[169091.40500000026,4473674.6577],[169179.24870000035,4473678.1381],[169265.24089999963,4473668.9858],[169259.47530000005,4473645.3725000005],[169247.24089999963,4473639.606899999],[169237.98309999984,4473629.6108],[169181.35809999984,4473627.3725000005],[169166.52219999954,4473627.9585],[169133.24089999963,4473621.606899999],[169108.65500000026,4473615.161599999],[169097.35809999984,4473615.606899999],[169091.26439999975,4473615.3725000005],[169072.49089999963,4473628.286599999],[169032.48309999984,4473626.704500001],[169052.75650000013,4473656.1303],[168984.50650000013,4473665.036599999],[168899.24089999963,4473657.606899999],[168887.47530000005,4473651.3725000005],[168845.24089999963,4473645.606899999],[168833.03000000026,4473639.149900001],[168779.54559999984,4473641.271],[168779.24089999963,4473633.396],[168790.95969999954,4473611.2475000005],[168797.24089999963,4473591.3725000005],[168803.47530000005,4473579.5835],[168803.05339999963,4473569.0013999995],[168826.09250000026,4473544.134199999],[168873.97530000005,4473542.2358],[168899.24089999963,4473555.606899999],[168929.47530000005,4473561.3725000005],[168968.82689999975,4473569.6108],[169047.53000000026,4473566.4936],[169067.96750000026,4473579.6888999995],[169081.32679999992,4473608.0013999995],[169079.05339999963,4473550.521],[169085.24089999963,4473537.3725000005],[169097.70969999954,4473525.829500001],[169114.77219999954,4473507.419399999],[169148.35809999984,4473504.489700001]]]},{"type":"Polygon","coordinates":[[[162356.35809999984,4473360.489700001],[162360.69400000013,4473328.0756],[162450.62370000035,4473321.5835],[162478.04559999984,4473306.6888999995],[162545.52219999954,4473297.6537999995],[162587.63939999975,4473286.3803],[162669.27219999954,4473320.329500001],[162691.51439999975,4473355.321699999],[162719.10030000005,4473372.864700001],[162742.02219999954,4473383.3763999995],[162760.49089999963,4473431.4702],[162768.08469999954,4473504.267000001],[162766.53780000005,4473530.106899999],[162743.19400000013,4473537.3256],[162734.35809999984,4473540.489700001],[162704.35809999984,4473540.489700001],[162680.35809999984,4473540.489700001],[162680.35809999984,4473546.489700001],[162638.35809999984,4473546.489700001],[162614.35809999984,4473546.489700001],[162614.35809999984,4473552.489700001],[162536.10030000005,4473557.399900001],[162506.35809999984,4473570.489700001],[162479.68620000035,4473573.8178],[162446.35809999984,4473576.489700001],[162433.84250000026,4473566.4702],[162413.19400000013,4473532.474099999],[162401.68620000035,4473489.161599999],[162395.03000000026,4473471.8178],[162389.68620000035,4473447.161599999],[162383.03000000026,4473429.8178],[162377.68620000035,4473393.161599999],[162360.38939999975,4473363.712400001],[162356.35809999984,4473360.489700001]]]},{"type":"Polygon","coordinates":[[[171014.35809999984,4473468.489700001],[171010.11589999963,4473491.728],[170980.20969999954,4473512.9388999995],[170939.12370000035,4473531.267000001],[170901.24870000035,4473560.9388999995],[170822.45189999975,4473567.267000001],[170790.43620000035,4473549.911599999],[170762.10030000005,4473472.7787999995],[170753.59250000026,4473435.267000001],[170745.34250000026,4473405.149900001],[170775.24870000035,4473379.3803],[170789.12370000035,4473363.267000001],[170823.15500000026,4473343.661599999],[170862.03780000005,4473310.1577],[170876.38150000013,4473293.4936],[170891.12370000035,4473285.267000001],[170903.59250000026,4473279.712400001],[170934.22530000005,4473255.712400001],[170945.59250000026,4473261.267000001],[170951.12370000035,4473267.712400001],[170954.35809999984,4473270.489700001],[170956.37370000035,4473286.474099999],[170960.35809999984,4473294.489700001],[170960.35809999984,4473306.489700001],[170966.35809999984,4473306.489700001],[170966.35809999984,4473312.489700001],[170966.35809999984,4473318.489700001],[170972.35809999984,4473318.489700001],[170972.35809999984,4473330.489700001],[170972.35809999984,4473336.489700001],[170978.35809999984,4473336.489700001],[170978.35809999984,4473348.489700001],[170986.37370000035,4473364.474099999],[170990.35809999984,4473366.489700001],[170990.35809999984,4473378.489700001],[170996.35809999984,4473378.489700001],[171002.35809999984,4473402.489700001],[171005.03000000026,4473435.8178],[171014.35809999984,4473468.489700001]]]},{"type":"Polygon","coordinates":[[[166244.35809999984,4473168.489700001],[166260.48309999984,4473191.6577],[166283.12370000035,4473207.712400001],[166319.12370000035,4473230.259199999],[166313.59250000026,4473237.712400001],[166307.12370000035,4473243.267000001],[166299.97530000005,4473259.3335],[166241.12370000035,4473291.267000001],[166234.67839999963,4473298.767000001],[166198.67839999963,4473314.821699999],[166163.59250000026,4473339.712400001],[166151.12370000035,4473345.267000001],[166135.67839999963,4473363.2085],[166100.80339999963,4473387.9350000005],[166073.12370000035,4473405.267000001],[166049.59250000026,4473423.712400001],[166011.45969999954,4473432.3725000005],[166001.12370000035,4473441.267000001],[165994.98309999984,4473455.0600000005],[165983.12370000035,4473465.267000001],[165976.67839999963,4473472.767000001],[165953.12370000035,4473483.267000001],[165900.41280000005,4473512.6811],[165881.35809999984,4473514.2162999995],[165830.56900000013,4473510.1263999995],[165815.59250000026,4473543.712400001],[165809.12370000035,4473555.267000001],[165800.12370000035,4473575.481899999],[165753.88150000013,4473594.9585],[165696.85809999984,4473599.5405],[165683.82689999975,4473576.1733],[165682.86589999963,4473564.489700001],[165684.53000000026,4473543.829500001],[165661.58469999954,4473541.978],[165653.10030000005,4473549.2905],[165653.61589999963,4473555.6537999995],[165647.12370000035,4473567.267000001],[165640.65500000026,4473602.821699999],[165605.78000000026,4473605.6225000005],[165604.35030000005,4473588.0912999995],[165619.91280000005,4473570.044399999],[165629.59250000026,4473561.712400001],[165638.89719999954,4473540.8178],[165649.91280000005,4473528.044399999],[165662.80339999963,4473516.9350000005],[165681.34250000026,4473495.419399999],[165708.92839999963,4473483.114700001],[165747.08469999954,4473438.8412999995],[165781.18620000035,4473426.3138999995],[165791.59250000026,4473435.267000001],[165797.14719999954,4473453.7475000005],[165808.98309999984,4473452.7983],[165844.02219999954,4473480.2436],[165882.62370000035,4473471.478],[165893.12370000035,4473459.267000001],[165899.59250000026,4473453.712400001],[165912.97530000005,4473438.161599999],[165976.88939999975,4473393.6655],[165995.59250000026,4473363.712400001],[166001.12370000035,4473351.267000001],[166019.59250000026,4473339.712400001],[166037.12370000035,4473327.267000001],[166050.92839999963,4473321.114700001],[166061.12370000035,4473309.267000001],[166091.59250000026,4473285.712400001],[166127.12370000035,4473255.267000001],[166145.59250000026,4473243.712400001],[166151.12370000035,4473237.267000001],[166164.03780000005,4473226.1577],[166175.80339999963,4473212.4936],[166211.12370000035,4473183.267000001],[166229.59250000026,4473177.712400001],[166235.12370000035,4473171.267000001],[166244.35809999984,4473168.489700001]]]},{"type":"Polygon","coordinates":[[[166022.35809999984,4472982.489700001],[166057.51439999975,4472978.259199999],[166109.03000000026,4473022.6381],[166139.05339999963,4473064.989700001],[166123.91280000005,4473078.044399999],[166114.91280000005,4473088.4858],[166079.59250000026,4473117.712400001],[166055.12370000035,4473135.267000001],[166049.59250000026,4473141.712400001],[166001.47530000005,4473169.4506],[165953.70969999954,4473228.349099999],[165923.59250000026,4473249.712400001],[165905.73309999984,4473257.6811],[165871.81900000013,4473297.0327],[165847.84250000026,4473304.2631],[165821.12370000035,4473327.267000001],[165815.47530000005,4473333.8412999995],[165773.59250000026,4473369.712400001],[165726.34250000026,4473375.899900001],[165713.12370000035,4473387.267000001],[165703.88939999975,4473408.009199999],[165653.80339999963,4473430.356899999],[165641.12370000035,4473441.267000001],[165623.19400000013,4473466.2631],[165587.59250000026,4473495.712400001],[165562.67839999963,4473506.821699999],[165535.13939999975,4473538.802200001],[165505.63150000013,4473555.267000001],[165485.99089999963,4473542.4233],[165485.12370000035,4473531.489700001],[165486.08469999954,4473519.384199999],[165444.27219999954,4473509.8803],[165441.97530000005,4473481.3100000005],[165454.09250000026,4473454.169399999],[165468.03780000005,4473442.1577],[165479.12370000035,4473429.267000001],[165485.59250000026,4473423.712400001],[165493.91280000005,4473414.044399999],[165506.80339999963,4473402.9350000005],[165515.12370000035,4473393.267000001],[165526.98309999984,4473383.0600000005],[165538.67839999963,4473356.821699999],[165558.03780000005,4473340.1577],[165571.91280000005,4473324.044399999],[165581.59250000026,4473315.712400001],[165587.12370000035,4473309.267000001],[165593.59250000026,4473303.712400001],[165615.69400000013,4473268.4037999995],[165644.59250000026,4473257.7983],[165662.89719999954,4473279.0561],[165685.53780000005,4473280.8725000005],[165701.59250000026,4473273.712400001],[165710.96750000026,4473262.8256],[165737.59250000026,4473243.712400001],[165761.12370000035,4473225.267000001],[165779.59250000026,4473213.712400001],[165796.04559999984,4473187.4155],[165816.85809999984,4473163.2513999995],[165890.21750000026,4473110.599099999],[165909.48309999984,4473088.2162999995],[165941.59250000026,4473069.712400001],[165956.35809999984,4473048.489700001],[165962.35809999984,4473048.489700001],[165962.35809999984,4473042.489700001],[165968.35809999984,4473042.489700001],[165968.35809999984,4473036.489700001],[165974.35809999984,4473036.489700001],[165974.35809999984,4473030.489700001],[165986.35809999984,4473030.489700001],[165986.35809999984,4473012.489700001],[165998.35809999984,4473012.489700001],[165998.35809999984,4473006.489700001],[166004.35809999984,4473006.489700001],[166004.35809999984,4473000.489700001],[166010.35809999984,4473000.489700001],[166010.35809999984,4472994.489700001],[166016.35809999984,4472994.489700001],[166016.35809999984,4472988.489700001],[166022.35809999984,4472988.489700001],[166022.35809999984,4472982.489700001]]]},{"type":"Polygon","coordinates":[[[164720.35809999984,4472952.489700001],[164723.61589999963,4472961.349099999],[164722.86589999963,4472970.489700001],[164723.73309999984,4472981.212400001],[164711.12370000035,4473027.267000001],[164704.88939999975,4473075.021],[164645.42839999963,4473082.802200001],[164621.54559999984,4473099.7475000005],[164605.37370000035,4473098.446699999],[164576.80339999963,4473108.9350000005],[164549.12370000035,4473117.267000001],[164537.59250000026,4473123.712400001],[164513.12370000035,4473129.267000001],[164495.59250000026,4473135.712400001],[164465.12370000035,4473141.267000001],[164446.93620000035,4473154.1811],[164411.80339999963,4473151.356899999],[164375.12370000035,4473165.267000001],[164364.62370000035,4473177.478],[164339.12370000035,4473183.267000001],[164321.59250000026,4473189.712400001],[164297.12370000035,4473195.267000001],[164267.59250000026,4473207.712400001],[164239.74870000035,4473214.0405],[164201.12370000035,4473231.267000001],[164169.01439999975,4473249.1850000005],[164127.41280000005,4473255.524900001],[164104.02219999954,4473268.5912999995],[164078.96750000026,4473266.5756],[164039.28780000005,4473273.771],[164021.59250000026,4473267.267000001],[163991.82689999975,4473258.302200001],[163991.10030000005,4473249.2787999995],[164009.59250000026,4473243.712400001],[164039.73309999984,4473226.896],[164063.59250000026,4473219.712400001],[164082.29559999984,4473212.8452],[164104.02219999954,4473214.5912999995],[164117.12370000035,4473207.267000001],[164135.59250000026,4473201.712400001],[164153.12370000035,4473195.267000001],[164174.28780000005,4473188.9037999995],[164195.12370000035,4473177.267000001],[164216.03000000026,4473167.9388999995],[164237.12370000035,4473149.7631],[164231.59250000026,4473135.267000001],[164213.59250000026,4473109.884199999],[164236.04559999984,4473091.2162999995],[164273.85030000005,4473094.2513999995],[164297.12370000035,4473081.267000001],[164345.59250000026,4473075.712400001],[164387.12370000035,4473063.267000001],[164411.59250000026,4473057.712400001],[164429.21750000026,4473051.231899999],[164445.57689999975,4473052.5561],[164477.12370000035,4473039.267000001],[164515.91280000005,4473030.454500001],[164551.65500000026,4473010.509199999],[164567.35809999984,4473009.2436],[164581.13939999975,4473010.356899999],[164628.13150000013,4472997.5600000005],[164698.32689999975,4472966.2358],[164720.35809999984,4472952.489700001]]]},{"type":"Polygon","coordinates":[[[163352.35809999984,4472898.489700001],[163379.47530000005,4472895.606899999],[163423.30339999963,4472877.606899999],[163420.93620000035,4472916.302200001],[163385.24089999963,4472949.3725000005],[163379.47530000005,4472955.606899999],[163347.34250000026,4472965.7787999995],[163331.24089999963,4472973.3725000005],[163313.47530000005,4472985.606899999],[163301.24089999963,4472991.3725000005],[163295.47530000005,4472997.606899999],[163277.24089999963,4473003.3725000005],[163259.47530000005,4473009.606899999],[163224.45969999954,4473020.6928],[163217.24089999963,4473027.3725000005],[163211.47530000005,4473033.606899999],[163159.77219999954,4473043.474099999],[163151.24089999963,4473051.3725000005],[163145.47530000005,4473057.606899999],[163127.24089999963,4473069.3725000005],[163118.75650000013,4473078.536599999],[163067.47530000005,4473099.606899999],[163049.24089999963,4473105.3725000005],[163025.47530000005,4473123.606899999],[162965.61589999963,4473137.856899999],[162965.24089999963,4473147.489700001],[162965.56900000013,4473156.021],[162946.04559999984,4473166.356899999],[162911.24089999963,4473177.3725000005],[162859.65500000026,4473204.677200001],[162828.99870000035,4473171.606899999],[162803.24089999963,4473177.3725000005],[162794.59250000026,4473186.724099999],[162782.12370000035,4473198.2553],[162772.81900000013,4473208.2983],[162743.03000000026,4473207.114700001],[162726.24870000035,4473225.231899999],[162707.12370000035,4473234.2553],[162679.86589999963,4473248.6928],[162631.84250000026,4473261.267000001],[162618.55339999963,4473261.794399999],[162536.78000000026,4473249.606899999],[162527.24089999963,4473255.3725000005],[162499.63150000013,4473276.5483],[162461.24089999963,4473261.606899999],[162435.74089999963,4473244.052200001],[162414.20189999975,4473267.302200001],[162331.42059999984,4473273.9233],[162284.35809999984,4473272.0600000005],[162191.35809999984,4473275.7513999995],[162166.84250000026,4473267.149900001],[162149.70969999954,4473267.829500001],[162135.69400000013,4473241.356899999],[162144.57689999975,4473222.5600000005],[162200.54559999984,4473211.8725000005],[162246.62370000035,4473180.1733],[162263.24089999963,4473171.3725000005],[162299.47530000005,4473165.606899999],[162350.82689999975,4473147.606899999],[162425.24089999963,4473154.462400001],[162416.94400000013,4473170.4702],[162354.43620000035,4473177.946699999],[162370.58469999954,4473195.3725000005],[162410.21750000026,4473186.1850000005],[162437.31120000035,4473161.071699999],[162444.57689999975,4473092.892000001],[162456.10809999984,4473080.446699999],[162498.83469999954,4473082.146],[162587.47530000005,4473075.606899999],[162617.56900000013,4473067.7202],[162674.52219999954,4473069.9702],[162767.47530000005,4473063.606899999],[162813.27219999954,4473051.606899999],[162857.47530000005,4473063.3725000005],[162875.35809999984,4473072.8412999995],[162899.12370000035,4473060.2553],[162917.47530000005,4473051.606899999],[162953.26439999975,4473021.3725000005],[162972.83469999954,4473022.146],[163026.03780000005,4473009.4662999995],[163039.28000000026,4472995.1811],[163100.82689999975,4472973.606899999],[163120.46750000026,4472989.392000001],[163127.47530000005,4473009.396],[163126.77219999954,4473027.3725000005],[163137.83469999954,4473017.856899999],[163154.96750000026,4472999.3412999995],[163192.49089999963,4472990.411599999],[163217.24089999963,4472973.3725000005],[163241.54559999984,4472965.6850000005],[163271.17059999984,4472945.294399999],[163295.47530000005,4472937.606899999],[163298.35809999984,4472928.489700001],[163311.64719999954,4472925.8061],[163316.35809999984,4472916.489700001],[163322.35809999984,4472916.489700001],[163322.35809999984,4472910.489700001],[163328.35809999984,4472910.489700001],[163340.35809999984,4472910.489700001],[163340.35809999984,4472904.489700001],[163352.35809999984,4472904.489700001],[163352.35809999984,4472898.489700001]]]},{"type":"Polygon","coordinates":[[[163202.35809999984,4472910.489700001],[163193.19400000013,4472907.6537999995],[163181.52219999954,4472897.9155],[163201.81900000013,4472888.6108],[163211.19400000013,4472860.978],[163165.70189999975,4472847.6537999995],[163109.52219999954,4472859.6537999995],[163020.50650000013,4472866.099099999],[162967.98309999984,4472862.9702],[162935.52219999954,4472871.6537999995],[162840.06120000035,4472878.0638999995],[162793.70189999975,4472875.3100000005],[162785.52219999954,4472863.427200001],[162831.99870000035,4472852.6225000005],[162842.70969999954,4472817.9350000005],[162929.52219999954,4472811.6537999995],[162965.19400000013,4472805.3256],[163058.80339999963,4472795.5638999995],[163087.42059999984,4472827.5912999995],[163154.31120000035,4472815.696699999],[163193.35809999984,4472818.0287999995],[163223.80339999963,4472816.212400001],[163241.80339999963,4472836.356899999],[163268.21750000026,4472834.786599999],[163289.19400000013,4472811.3256],[163313.99089999963,4472789.1537999995],[163313.17059999984,4472775.337400001],[163344.20189999975,4472747.6108],[163361.52219999954,4472739.6537999995],[163415.19400000013,4472691.3256],[163433.52219999954,4472679.6537999995],[163465.91280000005,4472653.087400001],[163509.36589999963,4472633.142000001],[163559.00650000013,4472621.599099999],[163546.16280000005,4472645.2006],[163530.83469999954,4472694.829500001],[163480.98309999984,4472766.2085],[163481.59250000026,4472776.2513999995],[163469.19400000013,4472787.3256],[163463.52219999954,4472793.6537999995],[163457.19400000013,4472799.3256],[163454.35809999984,4472802.489700001],[163430.35809999984,4472802.489700001],[163424.35809999984,4472802.489700001],[163424.35809999984,4472808.489700001],[163418.35809999984,4472808.489700001],[163406.35809999984,4472808.489700001],[163406.35809999984,4472814.489700001],[163379.19400000013,4472821.462400001],[163376.35809999984,4472832.489700001],[163345.58469999954,4472835.231899999],[163325.89719999954,4472848.0405],[163299.71750000026,4472857.837400001],[163292.35809999984,4472868.489700001],[163288.74870000035,4472873.7162999995],[163262.35809999984,4472880.489700001],[163256.35809999984,4472880.489700001],[163256.35809999984,4472886.489700001],[163237.25650000013,4472891.3881],[163206.67059999984,4472904.231899999],[163202.35809999984,4472910.489700001]]]},{"type":"Polygon","coordinates":[[[166616.35809999984,4472532.489700001],[166643.96750000026,4472576.446699999],[166682.94400000013,4472585.5053],[166745.19400000013,4472656.603],[166698.34250000026,4472698.462400001],[166660.77219999954,4472740.4975000005],[166580.92059999984,4472777.142000001],[166566.85809999984,4472792.8803],[166535.19400000013,4472811.3256],[166491.36589999963,4472838.4077],[166435.84250000026,4472835.103],[166426.32689999975,4472794.1928],[166397.19400000013,4472775.6537999995],[166369.32689999975,4472756.2006],[166342.86589999963,4472726.587400001],[166343.68620000035,4472712.9585],[166397.42839999963,4472664.9350000005],[166469.52219999954,4472619.6537999995],[166512.38939999975,4472582.2827],[166535.52219999954,4472571.6537999995],[166585.74870000035,4472536.579500001],[166616.35809999984,4472532.489700001]]]},{"type":"Polygon","coordinates":[[[172208.35809999984,4472304.489700001],[172208.35809999984,4472310.489700001],[172208.35809999984,4472316.489700001],[172214.35809999984,4472316.489700001],[172220.35809999984,4472340.489700001],[172227.78780000005,4472365.1928],[172239.64719999954,4472378.9506],[172274.35809999984,4472382.489700001],[172288.81900000013,4472378.9388999995],[172304.35809999984,4472376.489700001],[172322.35809999984,4472376.489700001],[172330.35030000005,4472381.0483],[172304.35809999984,4472394.489700001],[172301.19400000013,4472397.3256],[172223.70969999954,4472421.1381],[172188.78780000005,4472433.6655],[172145.52219999954,4472451.6537999995],[172118.03000000026,4472460.149900001],[172091.52219999954,4472469.6537999995],[172057.06900000013,4472480.294399999],[172040.59250000026,4472489.259199999],[171965.66280000005,4472518.052200001],[171920.03000000026,4472532.149900001],[171883.11589999963,4472545.392000001],[171834.22530000005,4472532.2905],[171827.52219999954,4472437.099099999],[171853.23309999984,4472414.142000001],[171941.52219999954,4472397.6537999995],[171959.19400000013,4472391.3256],[172023.15500000026,4472373.7006],[172073.82689999975,4472364.2436],[172133.19400000013,4472337.3256],[172166.80339999963,4472324.399900001],[172196.96750000026,4472308.0053],[172208.35809999984,4472304.489700001]]]},{"type":"Polygon","coordinates":[[[164258.35809999984,4471818.489700001],[164271.53000000026,4471850.329500001],[164279.59250000026,4471857.267000001],[164287.56120000035,4471875.1381],[164284.86589999963,4471908.489700001],[164286.24870000035,4471925.4936],[164297.59250000026,4471935.267000001],[164303.12370000035,4471955.7631],[164272.65500000026,4471982.024900001],[164219.45189999975,4471990.134199999],[164169.15500000026,4472008.603],[164159.59250000026,4472019.712400001],[164146.67839999963,4472030.821699999],[164132.80339999963,4472046.9350000005],[164115.27219999954,4472062.0405],[164105.17059999984,4472061.231899999],[164094.03780000005,4472074.1577],[164062.91280000005,4472088.044399999],[164045.59250000026,4472097.712400001],[164027.12370000035,4472103.267000001],[164009.59250000026,4472115.712400001],[163967.12370000035,4472121.267000001],[163961.59250000026,4472127.712400001],[163946.61589999963,4472133.267000001],[163937.33469999954,4472102.4585],[163912.02219999954,4472116.5912999995],[163894.65500000026,4472115.196699999],[163895.73309999984,4472101.9311],[163945.37370000035,4472059.1577],[163959.83469999954,4472026.7085],[164006.52219999954,4471974.419399999],[164041.39719999954,4471952.587400001],[164052.53000000026,4471939.649900001],[164119.72530000005,4471911.864700001],[164137.39719999954,4471883.6577],[164156.80339999963,4471866.9350000005],[164165.12370000035,4471857.267000001],[164209.44400000013,4471850.517000001],[164233.06900000013,4471823.106899999],[164258.35809999984,4471818.489700001]]]},{"type":"Polygon","coordinates":[[[163376.35809999984,4471368.489700001],[163379.19400000013,4471371.6537999995],[163439.52219999954,4471377.3256],[163493.19400000013,4471383.6537999995],[163589.52219999954,4471389.3256],[163673.19400000013,4471395.6537999995],[163736.35809999984,4471398.489700001],[163754.35809999984,4471398.489700001],[163805.52219999954,4471401.3256],[163813.58469999954,4471410.337400001],[163793.19400000013,4471443.3256],[163775.52219999954,4471473.6537999995],[163763.35809999984,4471484.5287999995],[163634.35809999984,4471476.489700001],[163610.35809999984,4471476.489700001],[163602.34250000026,4471472.5053],[163538.35809999984,4471470.489700001],[163496.35809999984,4471470.489700001],[163496.35809999984,4471464.489700001],[163472.35809999984,4471464.489700001],[163472.35809999984,4471458.489700001],[163454.35809999984,4471458.489700001],[163436.35809999984,4471458.489700001],[163352.80339999963,4471450.579500001],[163328.96750000026,4471476.302200001],[163203.48309999984,4471466.259199999],[163067.35809999984,4471471.649900001],[162938.35809999984,4471466.5405],[162836.92059999984,4471470.5600000005],[162824.38150000013,4471458.946699999],[162868.77219999954,4471411.0287999995],[162893.42839999963,4471419.6655],[163076.35809999984,4471426.919399999],[163125.20189999975,4471424.9858],[163173.29559999984,4471433.353],[163229.35809999984,4471431.1381],[163346.89719999954,4471435.7905],[163355.68620000035,4471380.642000001],[163376.35809999984,4471368.489700001]]]},{"type":"Polygon","coordinates":[[[164084.35809999984,4471710.489700001],[164080.74870000035,4471728.9585],[164063.28780000005,4471737.4311],[164050.02219999954,4471744.274900001],[164033.42839999963,4471761.5483],[164015.28780000005,4471773.4311],[163989.67059999984,4471792.8725000005],[163979.42839999963,4471803.5483],[163964.12370000035,4471818.2553],[163946.47530000005,4471836.606899999],[163864.72530000005,4471915.146],[163833.53000000026,4471930.286599999],[163805.42839999963,4471959.5483],[163786.65500000026,4471971.8412999995],[163772.47530000005,4471986.606899999],[163762.56120000035,4471996.146],[163710.85809999984,4471995.0912999995],[163691.42839999963,4471965.4311],[163684.81900000013,4471959.0912999995],[163685.96750000026,4471902.489700001],[163685.28780000005,4471869.489700001],[163686.22530000005,4471824.489700001],[163685.19400000013,4471773.981899999],[163692.20189999975,4471739.728],[163691.28780000005,4471695.489700001],[163691.85030000005,4471668.2202],[163727.66280000005,4471659.489700001],[163726.86589999963,4471620.489700001],[163727.42839999963,4471592.587400001],[163751.75650000013,4471569.231899999],[163763.28780000005,4471545.4311],[163772.47530000005,4471527.606899999],[163781.80339999963,4471508.3881],[163808.17059999984,4471469.5053],[163841.42839999963,4471437.5483],[163853.28780000005,4471419.4311],[163871.42839999963,4471407.5483],[163895.28780000005,4471389.4311],[163922.47530000005,4471380.606899999],[163931.31120000035,4471371.4311],[163937.66280000005,4471371.5600000005],[163949.94400000013,4471396.8725000005],[163962.03780000005,4471407.4311],[163960.98309999984,4471356.489700001],[163961.59250000026,4471327.1108],[164012.89719999954,4471284.677200001],[164064.69400000013,4471250.7162999995],[164081.28780000005,4471233.4311],[164103.62370000035,4471227.5483],[164123.28780000005,4471257.5483],[164145.88150000013,4471290.8763999995],[164135.28780000005,4471311.4311],[164127.95189999975,4471326.5835],[164105.28780000005,4471341.4311],[164094.22530000005,4471352.9388999995],[164067.90500000026,4471372.462400001],[164034.22530000005,4471388.7983],[164015.42839999963,4471401.5483],[163979.80339999963,4471424.892000001],[163968.78780000005,4471436.364700001],[163980.85809999984,4471471.6381],[164003.45189999975,4471515.478],[164000.35809999984,4471524.489700001],[163976.35809999984,4471542.489700001],[163970.35809999984,4471542.489700001],[163970.35809999984,4471548.489700001],[163970.35809999984,4471554.489700001],[163964.35809999984,4471554.489700001],[163958.35809999984,4471554.489700001],[163958.35809999984,4471560.489700001],[163946.35809999984,4471560.489700001],[163946.35809999984,4471566.489700001],[163934.35809999984,4471566.489700001],[163934.35809999984,4471578.489700001],[163922.35809999984,4471584.489700001],[163916.35809999984,4471584.489700001],[163916.35809999984,4471590.489700001],[163894.81900000013,4471604.9388999995],[163892.35809999984,4471608.489700001],[163886.35809999984,4471608.489700001],[163886.35809999984,4471614.489700001],[163876.81900000013,4471616.9388999995],[163847.63939999975,4471636.228],[163837.28000000026,4471633.9077],[163808.45189999975,4471646.0131],[163790.35809999984,4471680.489700001],[163772.70969999954,4471685.024900001],[163778.35809999984,4471698.489700001],[163772.35809999984,4471698.489700001],[163772.35809999984,4471704.489700001],[163772.35809999984,4471710.489700001],[163758.24870000035,4471722.642000001],[163749.69400000013,4471761.853],[163753.04559999984,4471803.489700001],[163749.41280000005,4471848.7475000005],[163761.92839999963,4471863.267000001],[163791.62370000035,4471842.946699999],[163812.17839999963,4471819.0756],[163847.12370000035,4471797.267000001],[163859.59250000026,4471791.712400001],[163874.49870000035,4471774.3803],[163932.10809999984,4471733.024900001],[163949.12370000035,4471713.267000001],[163973.59250000026,4471695.712400001],[163979.21750000026,4471676.974099999],[164015.12370000035,4471647.267000001],[164027.59250000026,4471641.712400001],[164036.26439999975,4471631.646],[164051.59250000026,4471653.267000001],[164058.15500000026,4471675.0756],[164078.35809999984,4471692.489700001],[164078.35809999984,4471704.489700001],[164084.35809999984,4471704.489700001],[164084.35809999984,4471710.489700001]]]},{"type":"Polygon","coordinates":[[[163376.35809999984,4471368.489700001],[163373.52219999954,4471365.3256],[163355.19400000013,4471353.6537999995],[163347.34250000026,4471344.8881],[163355.78000000026,4471273.5327],[163354.46750000026,4471251.489700001],[163356.13150000013,4471223.399900001],[163370.92059999984,4471182.196699999],[163431.01429999992,4471173.6537999995],[163494.03780000005,4471187.1186],[163613.52219999954,4471197.3256],[163636.28000000026,4471213.2162999995],[163649.19400000013,4471227.6537999995],[163666.39719999954,4471243.0287999995],[163697.52219999954,4471257.3256],[163761.45969999954,4471314.114700001],[163781.52219999954,4471323.3256],[163825.46750000026,4471350.489700001],[163835.19400000013,4471371.6537999995],[163841.89719999954,4471377.642000001],[163841.05339999963,4471391.7983],[163796.35809999984,4471389.1263999995],[163760.82689999975,4471391.2475000005],[163754.35809999984,4471398.489700001],[163736.35809999984,4471398.489700001],[163729.65500000026,4471390.696699999],[163661.12370000035,4471383.712400001],[163638.10809999984,4471375.2631],[163595.35809999984,4471378.696699999],[163577.35809999984,4471377.2436],[163529.49870000035,4471381.099099999],[163492.11589999963,4471370.8686],[163481.28780000005,4471371.7358],[163437.38939999975,4471364.927200001],[163427.35809999984,4471365.7358],[163405.46750000026,4471363.978],[163376.35809999984,4471368.489700001]]]},{"type":"Polygon","coordinates":[[[162422.35809999984,4471488.489700001],[162410.26439999975,4471484.0483],[162386.89719999954,4471485.9233],[162371.59250000026,4471503.712400001],[162359.12370000035,4471509.267000001],[162344.38150000013,4471517.4936],[162335.59250000026,4471527.712400001],[162309.03780000005,4471533.7475000005],[162278.00650000013,4471551.0561],[162233.12370000035,4471563.267000001],[162215.59250000026,4471569.712400001],[162196.02219999954,4471575.606899999],[162185.59250000026,4471587.712400001],[162164.47530000005,4471600.9311],[162139.58469999954,4471591.802200001],[162119.59250000026,4471558.4506],[162143.99089999963,4471500.4662999995],[162155.59250000026,4471479.712400001],[162161.12370000035,4471467.267000001],[162191.94400000013,4471423.8138999995],[162189.62370000035,4471394.8100000005],[162197.59250000026,4471365.712400001],[162203.78000000026,4471331.728],[162203.10030000005,4471323.3256],[162211.56120000035,4471308.149900001],[162239.59250000026,4471299.712400001],[162249.03780000005,4471288.7436],[162287.59250000026,4471281.712400001],[162316.02219999954,4471273.9311],[162340.91280000005,4471260.044399999],[162359.59250000026,4471251.712400001],[162365.12370000035,4471245.267000001],[162383.59250000026,4471239.712400001],[162412.35030000005,4471229.1537999995],[162419.12370000035,4471221.267000001],[162431.59250000026,4471215.712400001],[162449.12370000035,4471203.267000001],[162481.44400000013,4471197.3725000005],[162503.12370000035,4471185.267000001],[162527.59250000026,4471179.712400001],[162539.12370000035,4471173.267000001],[162559.58469999954,4471164.1381],[162587.59250000026,4471155.712400001],[162620.28780000005,4471143.7006],[162667.44400000013,4471136.517000001],[162677.12370000035,4471125.267000001],[162704.70969999954,4471107.9936],[162728.28780000005,4471100.9037999995],[162749.94400000013,4471088.8100000005],[162768.22530000005,4471090.286599999],[162764.35809999984,4471122.489700001],[162764.35809999984,4471128.489700001],[162747.27219999954,4471132.8725000005],[162736.81900000013,4471148.9388999995],[162731.33469999954,4471183.7202],[162715.63150000013,4471207.837400001],[162722.35809999984,4471212.489700001],[162722.35809999984,4471230.489700001],[162716.35809999984,4471230.489700001],[162716.35809999984,4471236.489700001],[162711.45969999954,4471255.5912999995],[162704.35809999984,4471260.489700001],[162696.36589999963,4471264.5327],[162682.39719999954,4471292.364700001],[162680.35809999984,4471314.489700001],[162674.35809999984,4471314.489700001],[162674.35809999984,4471326.489700001],[162668.35809999984,4471326.489700001],[162668.35809999984,4471332.489700001],[162668.35809999984,4471338.489700001],[162664.81900000013,4471340.9388999995],[162659.89719999954,4471354.0405],[162644.03000000026,4471378.4388999995],[162628.81900000013,4471388.9388999995],[162623.89719999954,4471396.0405],[162593.82689999975,4471403.7631],[162552.50650000013,4471422.489700001],[162545.89719999954,4471432.0405],[162526.25650000013,4471439.3881],[162509.89719999954,4471450.0405],[162481.25650000013,4471457.3881],[162455.89719999954,4471468.0405],[162432.29559999984,4471474.099099999],[162422.35809999984,4471488.489700001]]]},{"type":"Polygon","coordinates":[[[163688.35809999984,4470738.489700001],[163684.81900000013,4470764.411599999],[163658.59250000026,4470792.724099999],[163643.61589999963,4470806.587400001],[163624.81900000013,4470846.4311],[163607.47530000005,4470855.606899999],[163589.24089999963,4470861.3725000005],[163583.47530000005,4470867.606899999],[163559.24089999963,4470873.3725000005],[163537.06900000013,4470888.6303],[163511.47530000005,4470897.606899999],[163481.24089999963,4470903.3725000005],[163457.45189999975,4470909.606899999],[163440.08469999954,4470908.927200001],[163417.09250000026,4470921.103],[163373.47530000005,4470927.606899999],[163235.24089999963,4470933.3725000005],[163187.85030000005,4470940.4388999995],[163177.63150000013,4470911.329500001],[163206.71750000026,4470869.0600000005],[163204.30339999963,4470807.911599999],[163234.79559999984,4470799.919399999],[163278.92839999963,4470801.6655],[163376.03000000026,4470795.021],[163409.24089999963,4470783.3725000005],[163538.85030000005,4470777.149900001],[163549.58469999954,4470754.4155],[163598.99089999963,4470744.079500001],[163667.24089999963,4470741.3725000005],[163688.35809999984,4470738.489700001]]]},{"type":"Polygon","coordinates":[[[162944.35809999984,4471044.489700001],[162940.81900000013,4470996.6303],[162925.95969999954,4470987.606899999],[162911.49870000035,4471018.286599999],[162905.47530000005,4471001.4233],[162923.47530000005,4470957.606899999],[162929.24089999963,4470933.3725000005],[162948.41280000005,4470870.478],[162965.56900000013,4470838.099099999],[163001.70969999954,4470795.3256],[163000.79559999984,4470772.0405],[163013.47530000005,4470753.606899999],[163020.67059999984,4470700.9662999995],[163061.24089999963,4470711.606899999],[163108.25650000013,4470722.7983],[163133.24089999963,4470745.5561],[163115.24089999963,4470789.3725000005],[163103.47530000005,4470819.606899999],[163091.24089999963,4470849.3725000005],[163079.47530000005,4470879.606899999],[163067.63939999975,4470901.978],[163055.07689999975,4470947.0013999995],[163037.75650000013,4470979.731899999],[163026.78780000005,4471014.4077],[163013.24089999963,4471047.3725000005],[162993.22530000005,4471098.7827],[162996.57689999975,4471113.3725000005],[163016.12370000035,4471092.2553],[163031.70969999954,4471077.829500001],[163051.88939999975,4471056.0327],[163084.25650000013,4471026.0561],[163109.24089999963,4471020.899900001],[163084.09250000026,4471092.642000001],[163051.13939999975,4471123.1811],[162985.51439999975,4471171.321699999],[162957.06120000035,4471219.7202],[162947.03000000026,4471208.892000001],[162948.50650000013,4471171.7787999995],[162968.03000000026,4471153.6850000005],[162964.72530000005,4471070.2358],[162956.35809999984,4471062.489700001],[162950.35809999984,4471050.489700001],[162950.35809999984,4471044.489700001],[162944.35809999984,4471044.489700001]]]},{"type":"Polygon","coordinates":[[[162764.35809999984,4471122.489700001],[162767.52219999954,4471119.6537999995],[162780.45969999954,4471086.044399999],[162791.52219999954,4471065.6537999995],[162800.03000000026,4471047.149900001],[162815.05339999963,4471019.4702],[162815.85030000005,4471006.052200001],[162799.91280000005,4471005.103],[162773.19400000013,4471011.3256],[162743.52219999954,4471023.6537999995],[162706.63150000013,4471037.8452],[162654.20189999975,4471066.3335],[162594.60030000005,4471084.731899999],[162556.30339999963,4471108.4155],[162491.52219999954,4471131.6537999995],[162473.19400000013,4471137.3256],[162377.75650000013,4471179.3256],[162345.55339999963,4471171.896],[162350.35809999984,4471158.489700001],[162356.35809999984,4471158.489700001],[162356.35809999984,4471152.489700001],[162423.71750000026,4471091.9506],[162485.12370000035,4471080.231899999],[162485.73309999984,4471065.021],[162394.51439999975,4470982.696699999],[162365.47530000005,4470940.4975000005],[162373.51439999975,4470888.829500001],[162425.26439999975,4470846.712400001],[162479.47530000005,4470825.606899999],[162482.35809999984,4470822.489700001],[162519.60030000005,4470818.6928],[162557.12370000035,4470795.267000001],[162566.35809999984,4470792.489700001],[162574.37370000035,4470788.5053],[162584.35809999984,4470786.489700001],[162596.35809999984,4470786.489700001],[162596.35809999984,4470780.489700001],[162608.35809999984,4470780.489700001],[162641.89719999954,4470772.0405],[162644.35809999984,4470768.489700001],[162650.35809999984,4470768.489700001],[162650.35809999984,4470762.489700001],[162656.35809999984,4470762.489700001],[162656.35809999984,4470756.489700001],[162668.35809999984,4470756.489700001],[162668.35809999984,4470750.489700001],[162695.99089999963,4470747.9702],[162741.85809999984,4470738.7827],[162746.35809999984,4470732.489700001],[162754.32689999975,4470728.4585],[162758.35809999984,4470720.489700001],[162770.35809999984,4470720.489700001],[162770.35809999984,4470714.489700001],[162791.89719999954,4470712.0405],[162830.35809999984,4470702.489700001],[162840.90500000026,4470699.7827],[162861.45969999954,4470685.5912999995],[162866.35809999984,4470678.489700001],[162872.35809999984,4470678.489700001],[162884.35809999984,4470678.489700001],[162884.35809999984,4470672.489700001],[162917.42839999963,4470675.4311],[162927.81120000035,4470686.2358],[162936.01439999975,4470693.4311],[162953.28780000005,4470675.4311],[162969.85809999984,4470663.5483],[162977.28780000005,4470691.521],[162912.74089999963,4470845.5756],[162881.28780000005,4470897.4311],[162875.42839999963,4470927.5483],[162868.79559999984,4470953.3763999995],[162833.28780000005,4471035.4311],[162821.19400000013,4471078.3335],[162808.86589999963,4471102.2631],[162797.42839999963,4471137.5483],[162760.39719999954,4471209.396],[162730.25650000013,4471280.399900001],[162713.28780000005,4471305.4311],[162706.70189999975,4471319.0013999995],[162695.42839999963,4471365.7827],[162719.42839999963,4471377.4311],[162726.01439999975,4471384.2983],[162745.74870000035,4471424.962400001],[162773.42839999963,4471461.4311],[162779.28780000005,4471478.8686],[162727.81900000013,4471537.3803],[162707.42839999963,4471585.3686],[162800.82689999975,4471596.7827],[162960.34250000026,4471586.599099999],[162977.28780000005,4471597.052200001],[162909.67059999984,4471606.4975000005],[162857.33469999954,4471605.4311],[162752.40500000026,4471613.0835],[162638.35809999984,4471610.7513999995],[162572.89719999954,4471612.087400001],[162533.49870000035,4471625.5756],[162491.42839999963,4471659.5483],[162478.46750000026,4471665.4311],[162405.60030000005,4471640.481899999],[162346.93620000035,4471641.677200001],[162317.47530000005,4471686.606899999],[162299.28780000005,4471713.4311],[162275.42839999963,4471755.5483],[162245.40500000026,4471807.649900001],[162216.76439999975,4471845.396],[162209.26439999975,4471876.169399999],[162185.17059999984,4471899.3138999995],[162171.60030000005,4471913.4585],[162118.93620000035,4471984.4858],[162098.31120000035,4472004.302200001],[162028.25650000013,4472044.017000001],[161995.88939999975,4472043.3608],[162005.42839999963,4471959.5483],[162013.09250000026,4471857.642000001],[162030.03780000005,4471832.6225000005],[162046.67839999963,4471798.356899999],[162059.42839999963,4471779.5483],[162065.28780000005,4471767.4311],[162113.45189999975,4471678.392000001],[162174.78780000005,4471605.337400001],[162191.35809999984,4471605.677200001],[162207.97530000005,4471605.337400001],[162260.24089999963,4471573.649900001],[162297.10809999984,4471555.7553],[162353.42839999963,4471533.5483],[162396.10809999984,4471515.079500001],[162410.24089999963,4471500.3725000005],[162419.42839999963,4471491.5483],[162422.35809999984,4471488.489700001],[162490.16280000005,4471477.0405],[162537.90500000026,4471450.0405],[162572.35809999984,4471422.5013999995],[162637.70189999975,4471403.8100000005],[162650.38150000013,4471393.6733],[162664.44400000013,4471369.7202],[162668.35809999984,4471338.489700001],[162668.35809999984,4471332.489700001],[162674.35809999984,4471332.489700001],[162674.35809999984,4471326.489700001],[162680.35809999984,4471326.489700001],[162680.35809999984,4471314.489700001],[162691.46750000026,4471305.5952],[162704.35809999984,4471260.489700001],[162711.45969999954,4471255.5912999995],[162716.35809999984,4471236.489700001],[162722.35809999984,4471236.489700001],[162722.35809999984,4471230.489700001],[162722.35809999984,4471212.489700001],[162728.38150000013,4471207.6733],[162754.35030000005,4471163.4702],[162764.35809999984,4471128.489700001],[162764.35809999984,4471122.489700001]]]},{"type":"Polygon","coordinates":[[[162122.35809999984,4470450.489700001],[162125.24089999963,4470441.3725000005],[162131.47530000005,4470435.606899999],[162137.24089999963,4470429.3725000005],[162143.47530000005,4470423.606899999],[162149.24089999963,4470417.3725000005],[162161.47530000005,4470411.606899999],[162190.09250000026,4470396.454500001],[162197.24089999963,4470411.606899999],[162210.41280000005,4470417.3725000005],[162209.24089999963,4470387.384199999],[162222.27219999954,4470368.4585],[162254.35809999984,4470369.724099999],[162270.17839999963,4470369.103],[162269.00650000013,4470339.712400001],[162281.99089999963,4470320.8335],[162317.47530000005,4470309.606899999],[162333.67059999984,4470292.1108],[162359.70969999954,4470279.829500001],[162371.24089999963,4470267.3725000005],[162377.85030000005,4470261.606899999],[162389.24089999963,4470297.606899999],[162395.47530000005,4470315.3725000005],[162401.24089999963,4470339.606899999],[162407.70969999954,4470345.5952],[162407.05339999963,4470362.1186],[162361.13929999992,4470391.7787999995],[162323.03000000026,4470423.981899999],[162323.47530000005,4470435.5952],[162293.24089999963,4470459.3725000005],[162281.70969999954,4470471.829500001],[162235.46750000026,4470514.6733],[162227.47530000005,4470531.606899999],[162209.24089999963,4470543.3725000005],[162173.47530000005,4470573.606899999],[162160.46750000026,4470579.7475000005],[162146.59250000026,4470594.724099999],[162132.24870000035,4470608.0013999995],[162111.92839999963,4470635.704500001],[162072.83469999954,4470663.3725000005],[162047.59250000026,4470624.2553],[162029.24089999963,4470615.606899999],[162018.45969999954,4470603.9585],[162011.47530000005,4470567.3725000005],[161998.98309999984,4470555.8061],[161999.47530000005,4470543.489700001],[161999.12370000035,4470534.489700001],[161999.49870000035,4470524.9155],[162023.47530000005,4470513.606899999],[162037.93620000035,4470497.9858],[162095.47530000005,4470465.606899999],[162113.24089999963,4470453.3725000005],[162122.35809999984,4470450.489700001],[162122.35809999984,4470468.489700001],[162140.35809999984,4470468.489700001],[162140.35809999984,4470450.489700001],[162122.35809999984,4470450.489700001]]]},{"type":"Polygon","coordinates":[[[163370.35809999984,4470354.489700001],[163313.28780000005,4470351.5483],[163299.99870000035,4470331.2513999995],[163307.42839999963,4470309.5483],[163325.28780000005,4470243.4311],[163338.27219999954,4470224.271],[163671.43620000035,4470201.5483],[163768.84250000026,4470195.5483],[163775.28780000005,4470261.5483],[163781.52219999954,4470291.981899999],[163780.30339999963,4470352.5561],[163643.92059999984,4470369.2202],[163625.42839999963,4470375.5483],[163566.57689999975,4470381.946699999],[163527.97530000005,4470381.149900001],[163499.42839999963,4470351.4311],[163484.35809999984,4470348.489700001],[163472.35809999984,4470348.489700001],[163466.52219999954,4470340.0405],[163414.81900000013,4470344.9388999995],[163400.35809999984,4470348.489700001],[163384.81900000013,4470350.9388999995],[163370.35809999984,4470354.489700001]]]},{"type":"Polygon","coordinates":[[[163250.35809999984,4470036.489700001],[163257.03780000005,4470043.9662999995],[163326.90500000026,4470081.9350000005],[163340.89719999954,4470081.103],[163331.17059999984,4470117.384199999],[163332.15500000026,4470133.6850000005],[163313.52219999954,4470165.6537999995],[163289.63939999975,4470199.849099999],[163282.93620000035,4470221.599099999],[163253.52219999954,4470285.6537999995],[163246.81900000013,4470291.642000001],[163248.15500000026,4470313.6850000005],[163229.52219999954,4470345.6537999995],[163205.85030000005,4470376.204500001],[163205.17059999984,4470387.489700001],[163205.75650000013,4470397.0756],[163169.66280000005,4470463.509199999],[163169.00650000013,4470474.489700001],[163169.80339999963,4470487.978],[163153.93620000035,4470522.536599999],[163129.37370000035,4470554.2475000005],[163119.45969999954,4470586.321699999],[163097.19400000013,4470627.3256],[163091.52219999954,4470639.6537999995],[163084.84250000026,4470651.946699999],[163085.80339999963,4470667.978],[163076.05339999963,4470689.212400001],[163061.52219999954,4470681.3256],[163043.19400000013,4470675.6537999995],[163025.52219999954,4470669.3256],[162981.83469999954,4470661.169399999],[162964.13939999975,4470645.349099999],[162994.16280000005,4470590.0952],[163009.46750000026,4470540.478],[163019.19400000013,4470519.3256],[163031.19400000013,4470497.2358],[163017.01439999975,4470502.0638999995],[162988.42059999984,4470541.4388999995],[162965.52219999954,4470549.6537999995],[162935.40500000026,4470558.9585],[162917.19400000013,4470567.3256],[162911.52219999954,4470573.6537999995],[162879.74089999963,4470579.5952],[162847.74870000035,4470596.974099999],[162818.03000000026,4470606.149900001],[162791.52219999954,4470615.6537999995],[162749.19400000013,4470627.3256],[162737.52219999954,4470633.6537999995],[162719.19400000013,4470639.3256],[162671.52219999954,4470657.6537999995],[162637.04559999984,4470668.3061],[162626.03000000026,4470678.149900001],[162617.52219999954,4470687.6537999995],[162587.19400000013,4470693.3256],[162545.52219999954,4470705.6537999995],[162521.19400000013,4470711.3256],[162510.45969999954,4470723.3256],[162501.76439999975,4470716.552200001],[162510.01439999975,4470637.3100000005],[162551.52219999954,4470627.6537999995],[162563.19400000013,4470621.3256],[162593.52219999954,4470615.6537999995],[162623.19400000013,4470603.3256],[162642.41280000005,4470597.384199999],[162653.19400000013,4470585.3256],[162677.52219999954,4470579.6537999995],[162707.19400000013,4470567.3256],[162749.52219999954,4470555.6537999995],[162767.19400000013,4470549.3256],[162804.88150000013,4470543.454500001],[162827.19400000013,4470531.3256],[162863.68620000035,4470522.829500001],[162906.03780000005,4470490.0053],[162958.95969999954,4470482.927200001],[162994.77219999954,4470466.4975000005],[163005.92839999963,4470454.017000001],[163036.63150000013,4470475.462400001],[163072.16280000005,4470410.0952],[163084.18620000035,4470371.1655],[163094.03000000026,4470360.149900001],[163108.35030000005,4470347.353],[163121.85030000005,4470314.8686],[163120.79559999984,4470297.079500001],[163155.97530000005,4470232.3686],[163164.60030000005,4470195.231899999],[163198.98309999984,4470150.8881],[163199.89719999954,4470135.489700001],[163198.77219999954,4470116.4936],[163236.62370000035,4470048.771],[163250.35809999984,4470036.489700001]]]},{"type":"Polygon","coordinates":[[[162566.35809999984,4469802.489700001],[162599.17059999984,4469807.071699999],[162563.42839999963,4469876.4936],[162569.28780000005,4469889.5483],[162593.42839999963,4469919.4311],[162599.28780000005,4469973.5483],[162611.28780000005,4469985.079500001],[162605.42839999963,4470021.5483],[162599.19400000013,4470058.087400001],[162599.42839999963,4470069.489700001],[162597.74089999963,4470152.0483],[162606.27219999954,4470160.239700001],[162604.81900000013,4470230.634199999],[162617.28780000005,4470254.8452],[162606.95189999975,4470266.634199999],[162575.28780000005,4470285.4311],[162545.42839999963,4470303.5483],[162523.51439999975,4470314.177200001],[162497.26439999975,4470331.392000001],[162497.49870000035,4470343.3100000005],[162455.10030000005,4470357.8178],[162437.42839999963,4470339.4311],[162419.47530000005,4470330.724099999],[162417.17839999963,4470217.544399999],[162431.28780000005,4470190.134199999],[162425.31120000035,4470171.0912999995],[162407.42839999963,4470153.899900001],[162431.33469999954,4470141.4077],[162467.24089999963,4470150.606899999],[162467.85030000005,4470120.7475000005],[162460.67839999963,4470064.7787999995],[162479.28780000005,4470033.4311],[162485.42839999963,4470027.5483],[162494.35809999984,4470000.0327],[162509.42839999963,4469985.5483],[162515.28780000005,4469955.4311],[162539.28780000005,4469923.802200001],[162533.42839999963,4469895.4311],[162521.42839999963,4469872.134199999],[162544.86589999963,4469823.3725000005],[162563.42839999963,4469805.5483],[162566.35809999984,4469802.489700001]],[[162476.35809999984,4470162.489700001],[162468.55339999963,4470165.829500001],[162473.94400000013,4470176.1303],[162476.35809999984,4470162.489700001]]]},{"type":"Polygon","coordinates":[[[165902.35809999984,4469646.489700001],[165905.28780000005,4469649.5483],[165923.42839999963,4469661.4311],[165968.24089999963,4469697.606899999],[166002.67059999984,4469720.177200001],[166028.21750000026,4469759.142000001],[166072.49089999963,4469780.6225000005],[166163.28780000005,4469859.5483],[166265.24089999963,4469947.6381],[166295.42839999963,4469967.4311],[166307.03000000026,4469979.5131],[166285.98309999984,4470015.4311],[166229.10030000005,4469976.8881],[166167.71750000026,4469964.899900001],[166139.42839999963,4469943.4311],[166112.00650000013,4469923.1108],[166055.42839999963,4469877.4311],[166036.65500000026,4469865.1381],[166020.06120000035,4469847.8412999995],[166001.28780000005,4469835.5483],[165953.96750000026,4469797.3452],[165905.28780000005,4469781.5483],[165872.10030000005,4469770.1811],[165827.28780000005,4469757.5483],[165785.14719999954,4469731.989700001],[165751.30339999963,4469706.3138999995],[165789.22530000005,4469669.892000001],[165833.42839999963,4469655.5483],[165851.28780000005,4469649.4311],[165902.35809999984,4469646.489700001]]]},{"type":"Polygon","coordinates":[[[168392.35809999984,4469478.489700001],[168408.57689999975,4469481.4428],[168406.51439999975,4469507.0835],[168414.20189999975,4469563.896],[168412.25650000013,4469588.071699999],[168383.12370000035,4469625.267000001],[168377.59250000026,4469649.712400001],[168365.12370000035,4469655.267000001],[168358.67839999963,4469662.767000001],[168333.78780000005,4469673.864700001],[168323.59250000026,4469685.712400001],[168284.38150000013,4469717.5053],[168275.59250000026,4469727.712400001],[168257.12370000035,4469739.267000001],[168247.95969999954,4469749.919399999],[168230.26439999975,4469763.267000001],[168195.81120000035,4469750.6108],[168158.38150000013,4469771.4936],[168149.59250000026,4469781.712400001],[168131.12370000035,4469793.267000001],[168109.30339999963,4469808.7358],[168101.59250000026,4469817.712400001],[168083.12370000035,4469829.267000001],[168051.74089999963,4469853.864700001],[167994.27219999954,4469886.9936],[167981.59250000026,4469901.712400001],[167957.12370000035,4469919.267000001],[167951.59250000026,4469925.712400001],[167941.91280000005,4469934.044399999],[167933.59250000026,4469943.712400001],[167918.31120000035,4469956.8725000005],[167867.12370000035,4469985.267000001],[167861.59250000026,4469991.712400001],[167840.45189999975,4470004.9428],[167816.35809999984,4470003.009199999],[167807.14719999954,4470003.7475000005],[167798.31120000035,4469983.919399999],[167839.74870000035,4469954.1537999995],[167849.12370000035,4469943.267000001],[167867.59250000026,4469937.712400001],[167873.12370000035,4469931.267000001],[167884.23309999984,4469921.6928],[167923.88939999975,4469904.009199999],[167933.12370000035,4469883.267000001],[167945.59250000026,4469877.712400001],[167963.12370000035,4469865.267000001],[167975.59250000026,4469859.712400001],[167982.48309999984,4469851.6850000005],[168017.59250000026,4469829.712400001],[168023.12370000035,4469823.267000001],[168044.28780000005,4469816.9037999995],[168068.61589999963,4469803.3335],[168077.12370000035,4469775.759199999],[168056.56900000013,4469751.712400001],[168003.55339999963,4469782.9077],[167978.35809999984,4469790.489700001],[167978.35809999984,4469784.489700001],[168022.98309999984,4469751.103],[168044.35809999984,4469736.489700001],[168050.35809999984,4469736.489700001],[168050.35809999984,4469730.489700001],[168062.35809999984,4469724.489700001],[168068.35809999984,4469724.489700001],[168068.35809999984,4469718.489700001],[168074.35809999984,4469718.489700001],[168074.35809999984,4469712.489700001],[168080.35809999984,4469712.489700001],[168080.35809999984,4469706.489700001],[168092.35809999984,4469700.489700001],[168098.35809999984,4469700.489700001],[168098.35809999984,4469694.489700001],[168135.64719999954,4469668.3686],[168219.97530000005,4469603.0131],[168248.35809999984,4469586.489700001],[168269.10030000005,4469581.169399999],[168272.35809999984,4469568.489700001],[168278.35809999984,4469568.489700001],[168278.35809999984,4469562.489700001],[168284.35809999984,4469562.489700001],[168290.35809999984,4469562.489700001],[168290.35809999984,4469556.489700001],[168296.03000000026,4469549.142000001],[168370.98309999984,4469493.103],[168392.35809999984,4469478.489700001]]]},{"type":"Polygon","coordinates":[[[166766.35809999984,4469496.489700001],[166791.64719999954,4469491.8725000005],[166813.30339999963,4469466.7475000005],[166810.72530000005,4469434.7436],[166852.16280000005,4469386.3686],[166894.32689999975,4469379.712400001],[166901.82689999975,4469412.7358],[166900.63150000013,4469427.489700001],[166901.61589999963,4469439.5952],[166894.23309999984,4469473.356899999],[166882.67839999963,4469494.0756],[166883.59250000026,4469505.489700001],[166882.63150000013,4469517.642000001],[166858.60809999984,4469583.0561],[166859.59250000026,4469595.489700001],[166855.84250000026,4469642.142000001],[166835.10030000005,4469679.3256],[166836.24870000035,4469693.481899999],[166817.12370000035,4469757.267000001],[166810.53780000005,4469786.294399999],[166811.85030000005,4469802.489700001],[166810.20969999954,4469822.646],[166792.67839999963,4469854.0756],[166793.61589999963,4469865.6888999995],[166787.12370000035,4469871.267000001],[166775.54559999984,4469884.7085],[166730.00650000013,4469881.052200001],[166716.62370000035,4469865.5013999995],[166690.37370000035,4469859.536599999],[166694.35809999984,4469826.489700001],[166694.35809999984,4469820.489700001],[166700.35809999984,4469820.489700001],[166700.35809999984,4469796.489700001],[166700.35809999984,4469790.489700001],[166708.72530000005,4469784.489700001],[166700.35809999984,4469778.489700001],[166704.41280000005,4469768.8335],[166715.89719999954,4469722.0405],[166718.35809999984,4469700.489700001],[166724.35809999984,4469700.489700001],[166724.35809999984,4469694.489700001],[166726.37370000035,4469672.5053],[166730.35809999984,4469664.489700001],[166736.35809999984,4469664.489700001],[166736.35809999984,4469640.489700001],[166736.35809999984,4469634.489700001],[166744.72530000005,4469628.489700001],[166736.35809999984,4469622.489700001],[166763.59250000026,4469499.712400001],[166766.35809999984,4469496.489700001]]]},{"type":"Polygon","coordinates":[[[166430.35809999984,4469598.489700001],[166418.35809999984,4469602.286599999],[166325.47530000005,4469685.606899999],[166301.24089999963,4469703.3725000005],[166255.70189999975,4469740.4506],[166247.47530000005,4469777.142000001],[166288.37370000035,4469815.0287999995],[166296.69400000013,4469832.6655],[166319.47530000005,4469847.3725000005],[166343.33469999954,4469863.7905],[166367.92059999984,4469890.3335],[166367.21750000026,4469908.0756],[166340.96750000026,4469907.0327],[166308.43620000035,4469871.946699999],[166277.24089999963,4469853.606899999],[166253.47530000005,4469835.3725000005],[166209.97530000005,4469804.704500001],[166176.34250000026,4469768.4233],[166145.24089999963,4469745.606899999],[166089.99870000035,4469697.7006],[166067.47530000005,4469673.3725000005],[166021.02219999954,4469646.0678],[166007.47530000005,4469620.884199999],[166064.33469999954,4469613.606899999],[166108.60809999984,4469661.396],[166126.88939999975,4469667.3725000005],[166193.24089999963,4469613.3725000005],[166223.47530000005,4469589.606899999],[166301.24089999963,4469523.3725000005],[166325.47530000005,4469505.606899999],[166375.09250000026,4469465.224099999],[166447.88939999975,4469413.9077],[166541.24089999963,4469331.3725000005],[166579.88929999992,4469306.411599999],[166601.24089999963,4469283.3608],[166608.15500000026,4469283.642000001],[166621.02219999954,4469297.5287999995],[166637.24089999963,4469368.696699999],[166625.14719999954,4469391.5483],[166644.17839999963,4469403.829500001],[166615.88939999975,4469430.0327],[166596.57689999975,4469450.892000001],[166577.24089999963,4469463.3725000005],[166511.47530000005,4469523.606899999],[166464.15500000026,4469562.478],[166436.35809999984,4469592.489700001],[166430.35809999984,4469592.489700001],[166430.35809999984,4469598.489700001]]]},{"type":"Polygon","coordinates":[[[167276.35809999984,4469022.489700001],[167289.97530000005,4469036.669399999],[167345.35809999984,4469037.794399999],[167369.35809999984,4469037.302200001],[167396.35809999984,4469037.853],[167420.35809999984,4469037.3725000005],[167438.35809999984,4469037.7358],[167459.07689999975,4469037.3138999995],[167492.89719999954,4469048.892000001],[167531.35809999984,4469049.677200001],[167555.35809999984,4469049.1850000005],[167582.35809999984,4469049.7358],[167606.35809999984,4469049.2436],[167621.35809999984,4469049.5483],[167644.79559999984,4469049.0678],[167657.28780000005,4469061.079500001],[167651.42839999963,4469085.5483],[167645.17059999984,4469103.771],[167645.73309999984,4469131.052200001],[167639.07689999975,4469183.0952],[167639.87370000035,4469221.3686],[167633.28780000005,4469253.4311],[167627.38150000013,4469283.794399999],[167603.35809999984,4469283.302200001],[167579.35809999984,4469283.794399999],[167555.35809999984,4469283.302200001],[167523.22530000005,4469283.9585],[167477.28780000005,4469277.5483],[167465.40500000026,4469271.4311],[167420.35809999984,4469272.3452],[167375.35809999984,4469271.4311],[167337.71750000026,4469272.1928],[167286.24870000035,4469264.6811],[167228.47530000005,4469265.853],[167183.28780000005,4469259.5483],[167177.42839999963,4469253.4311],[167147.63939999975,4469233.896],[167147.24089999963,4469214.489700001],[167147.59250000026,4469196.489700001],[167146.98309999984,4469166.489700001],[167147.47530000005,4469142.489700001],[167147.17059999984,4469127.6303],[167167.32689999975,4469120.739700001],[167225.17059999984,4469121.911599999],[167237.12370000035,4469075.2827],[167213.28780000005,4469067.5483],[167195.07689999975,4469061.3138999995],[167177.66280000005,4469061.6655],[167165.42839999963,4469049.899900001],[167183.92059999984,4469029.544399999],[167218.18620000035,4469041.274900001],[167247.95189999975,4469025.946699999],[167273.28780000005,4469025.4311],[167276.35809999984,4469022.489700001]]]},{"type":"Polygon","coordinates":[[[166298.35809999984,4469118.489700001],[166289.28780000005,4469121.4311],[166260.78780000005,4469136.114700001],[166218.78780000005,4469121.7358],[166187.42839999963,4469145.5483],[166169.28780000005,4469157.4311],[166103.42839999963,4469211.5483],[166004.59250000026,4469283.114700001],[165989.42839999963,4469285.177200001],[166040.05339999963,4469218.4388999995],[166049.40500000026,4469132.3763999995],[166086.97530000005,4469096.294399999],[166169.42839999963,4469049.5483],[166200.43620000035,4469030.7513999995],[166216.74870000035,4469013.759199999],[166249.60809999984,4468994.2475000005],[166299.10809999984,4468942.731899999],[166347.01439999975,4468914.2787999995],[166382.03000000026,4468877.856899999],[166409.42839999963,4468857.5600000005],[166446.15500000026,4468829.669399999],[166464.76439999975,4468821.5600000005],[166475.52219999954,4468876.6850000005],[166499.66280000005,4468923.5600000005],[166499.26439999975,4468943.599099999],[166442.24089999963,4468998.3725000005],[166433.42839999963,4469007.5483],[166402.20969999954,4469026.0756],[166388.35809999984,4469040.489700001],[166382.35809999984,4469040.489700001],[166382.35809999984,4469046.489700001],[166376.35809999984,4469046.489700001],[166376.35809999984,4469052.489700001],[166370.35809999984,4469052.489700001],[166364.35809999984,4469052.489700001],[166364.35809999984,4469058.489700001],[166348.98309999984,4469067.103],[166325.17059999984,4469084.7513999995],[166316.35809999984,4469100.489700001],[166308.38939999975,4469104.521],[166304.35809999984,4469112.489700001],[166298.35809999984,4469112.489700001],[166298.35809999984,4469118.489700001]]]},{"type":"Polygon","coordinates":[[[170072.35809999984,4468740.489700001],[170097.60030000005,4468782.114700001],[170106.08469999954,4468825.5912999995],[170098.56120000035,4468847.5756],[170039.28780000005,4468893.419399999],[170009.42839999963,4468917.5600000005],[169967.28780000005,4468941.419399999],[169907.42839999963,4468983.5600000005],[169847.28780000005,4469025.4311],[169817.42839999963,4469049.5483],[169787.28780000005,4469067.4311],[169757.12370000035,4469087.8803],[169715.42839999963,4469121.5483],[169685.28780000005,4469139.4311],[169661.42839999963,4469157.5483],[169649.28780000005,4469163.4311],[169635.24870000035,4469170.6733],[169601.42839999963,4469198.224099999],[169633.25650000013,4469205.4311],[169685.28780000005,4469163.4311],[169808.38150000013,4469069.0835],[169853.42839999963,4469043.5483],[169871.28780000005,4469031.4311],[169901.42839999963,4469013.5483],[169925.28780000005,4468995.419399999],[169943.42839999963,4468983.5600000005],[170024.17059999984,4468924.5678],[170057.28780000005,4468899.419399999],[170100.08469999954,4468869.0678],[170123.78000000026,4468869.5600000005],[170123.28780000005,4468893.864700001],[170075.28780000005,4468929.419399999],[170051.42839999963,4468947.5600000005],[169999.91280000005,4468981.3100000005],[169967.42839999963,4469007.5483],[169937.28780000005,4469025.4311],[169904.75650000013,4469047.4858],[169859.42839999963,4469085.5483],[169769.24089999963,4469148.3725000005],[169678.60809999984,4469212.1225000005],[169641.97530000005,4469229.8881],[169604.35809999984,4469229.1263999995],[169582.67839999963,4469229.5600000005],[169541.59250000026,4469250.724099999],[169499.17059999984,4469271.3138999995],[169469.47530000005,4469286.606899999],[169451.28780000005,4469295.4311],[169403.96750000026,4469319.8061],[169381.18620000035,4469319.349099999],[169373.42839999963,4469270.8452],[169386.34250000026,4469245.7553],[169427.42839999963,4469229.5483],[169469.28780000005,4469211.4311],[169535.42839999963,4469187.5483],[169589.28780000005,4469163.4311],[169619.42839999963,4469151.5483],[169643.17059999984,4469139.3138999995],[169683.50650000013,4469119.7436],[169691.28780000005,4469102.6108],[169674.15500000026,4469052.489700001],[169686.92839999963,4469015.106899999],[169723.51439999975,4468988.0131],[169757.42839999963,4468971.5600000005],[169769.89719999954,4468965.114700001],[169794.97530000005,4468926.8881],[169826.03000000026,4468897.052200001],[169895.42839999963,4468851.5600000005],[169915.32689999975,4468838.0600000005],[169935.01439999975,4468817.552200001],[170040.71750000026,4468743.9350000005],[170072.35809999984,4468740.489700001]]]},{"type":"Polygon","coordinates":[[[166778.35809999984,4468716.489700001],[166782.10809999984,4468742.2006],[166772.24089999963,4468761.3725000005],[166763.42839999963,4468779.5600000005],[166754.05339999963,4468788.536599999],[166769.42839999963,4468833.419399999],[166775.28780000005,4468857.5600000005],[166793.10030000005,4468901.411599999],[166793.63939999975,4468928.8335],[166775.42839999963,4468959.5600000005],[166763.28780000005,4468971.2085],[166763.42839999963,4468977.771],[166736.05339999963,4469004.0678],[166703.47530000005,4469047.017000001],[166703.24089999963,4469058.489700001],[166703.54559999984,4469073.267000001],[166685.42839999963,4469085.5483],[166643.42839999963,4469093.7513999995],[166649.31120000035,4469115.606899999],[166695.69400000013,4469091.712400001],[166721.12370000035,4469091.1850000005],[166733.26439999975,4469114.7631],[166739.28780000005,4469139.5483],[166757.42839999963,4469163.4311],[166769.28780000005,4469181.5483],[166817.42839999963,4469187.4311],[166834.86589999963,4469223.384199999],[166858.81900000013,4469200.356899999],[166870.18620000035,4469178.3138999995],[166849.39719999954,4469137.978],[166873.16280000005,4469113.239700001],[166900.70189999975,4469127.4311],[166913.31120000035,4469116.392000001],[166919.28780000005,4469073.4311],[166937.42839999963,4469061.5483],[166937.07689999975,4469044.321699999],[166946.07689999975,4469009.1888999995],[166931.05339999963,4468965.302200001],[166931.61589999963,4468937.4585],[166919.78000000026,4468821.536599999],[166942.70189999975,4468774.3100000005],[166995.57689999975,4468734.1850000005],[167004.81120000035,4468752.114700001],[166990.28000000026,4468787.927200001],[166997.28780000005,4468809.5600000005],[167003.42839999963,4468827.419399999],[167009.28780000005,4468869.5600000005],[167016.17839999963,4468909.919399999],[167015.19400000013,4468958.8100000005],[167021.42839999963,4469001.419399999],[167027.28780000005,4469049.5483],[167038.30339999963,4469103.3256],[167004.22530000005,4469104.0287999995],[166980.01439999975,4469091.5483],[166973.19400000013,4469134.1225000005],[166973.42839999963,4469145.5483],[166955.42839999963,4469189.927200001],[166961.28780000005,4469229.5483],[166979.14719999954,4469246.704500001],[166979.63939999975,4469270.8335],[166961.42839999963,4469301.5483],[166937.28780000005,4469319.4311],[166915.51439999975,4469342.106899999],[166881.90500000026,4469359.4155],[166865.42839999963,4469325.4311],[166859.28780000005,4469319.5483],[166851.50650000013,4469295.5483],[166796.14719999954,4469320.8725000005],[166775.42839999963,4469331.5483],[166757.28780000005,4469337.4311],[166739.42839999963,4469349.5483],[166721.28780000005,4469361.4311],[166710.57689999975,4469372.587400001],[166677.31900000013,4469389.731899999],[166667.42839999963,4469379.4311],[166656.06120000035,4469368.509199999],[166655.24089999963,4469328.489700001],[166655.99089999963,4469291.1303],[166649.28780000005,4469271.5483],[166643.42839999963,4469253.4311],[166634.24089999963,4469244.606899999],[166625.42839999963,4469217.4311],[166619.28780000005,4469199.5483],[166613.42839999963,4469169.4311],[166607.05339999963,4469157.0912999995],[166607.54559999984,4469133.489700001],[166607.24089999963,4469118.489700001],[166607.63939999975,4469098.9311],[166601.42839999963,4469073.4311],[166592.24089999963,4469064.606899999],[166583.42839999963,4469037.4311],[166575.64719999954,4469014.7436],[166564.46750000026,4468934.5756],[166541.42839999963,4468899.419399999],[166529.54559999984,4468888.0287999995],[166528.23309999984,4468822.802200001],[166540.81900000013,4468809.677200001],[166559.35809999984,4468809.302200001],[166632.15500000026,4468810.802200001],[166691.42839999963,4468803.5600000005],[166700.24089999963,4468794.3725000005],[166710.48309999984,4468784.5287999995],[166748.00650000013,4468727.3178],[166763.28780000005,4468719.419399999],[166778.35809999984,4468716.489700001]],[[166658.35809999984,4468908.489700001],[166631.56900000013,4468916.974099999],[166622.70969999954,4468976.411599999],[166642.95969999954,4468985.974099999],[166601.47530000005,4468999.099099999],[166609.09250000026,4469026.169399999],[166631.56900000013,4469050.4388999995],[166659.99870000035,4469019.771],[166697.24089999963,4469007.981899999],[166682.94400000013,4468991.6225000005],[166657.74870000035,4468975.356899999],[166675.46750000026,4468924.7787999995],[166661.24089999963,4468911.606899999],[166658.35809999984,4468908.489700001]]]},{"type":"Polygon","coordinates":[[[163538.35809999984,4468584.489700001],[163546.30339999963,4468593.396],[163568.82689999975,4468600.3335],[163595.52219999954,4468617.3256],[163613.19400000013,4468629.6537999995],[163637.63939999975,4468637.2006],[163661.19400000013,4468653.6537999995],[163681.16280000005,4468662.8178],[163670.28780000005,4468709.6225000005],[163618.88939999975,4468768.544399999],[163619.54559999984,4468779.6303],[163604.35809999984,4468793.224099999],[163566.13150000013,4468853.271],[163556.87370000035,4468893.0912999995],[163535.54559999984,4468894.3803],[163509.64719999954,4468880.294399999],[163475.19400000013,4468869.6537999995],[163452.36589999963,4468857.2553],[163442.80339999963,4468857.8178],[163381.60809999984,4468814.9506],[163397.54559999984,4468785.6303],[163396.98309999984,4468776.2085],[163436.14719999954,4468728.4662999995],[163451.96750000026,4468687.286599999],[163537.67839999963,4468726.3100000005],[163557.03780000005,4468747.9662999995],[163577.19400000013,4468758.911599999],[163570.84250000026,4468741.427200001],[163550.03000000026,4468722.8178],[163541.21750000026,4468712.9506],[163529.21750000026,4468713.677200001],[163505.52219999954,4468695.3256],[163480.20969999954,4468687.4975000005],[163463.52219999954,4468672.5912999995],[163474.70189999975,4468646.3881],[163510.79559999984,4468589.6225000005],[163538.35809999984,4468584.489700001]],[[163592.35809999984,4468758.489700001],[163584.55339999963,4468761.8178],[163589.94400000013,4468772.1303],[163592.35809999984,4468758.489700001]]]},{"type":"Polygon","coordinates":[[[163352.35809999984,4468344.489700001],[163355.24089999963,4468347.606899999],[163377.15500000026,4468357.9428],[163388.75650000013,4468454.8803],[163408.79559999984,4468497.349099999],[163421.35809999984,4468497.8412999995],[163433.35809999984,4468497.3725000005],[163448.19400000013,4468497.9585],[163481.47530000005,4468491.606899999],[163515.48309999984,4468473.606899999],[163555.39719999954,4468488.302200001],[163543.37370000035,4468538.8100000005],[163514.35809999984,4468539.9585],[163494.95189999975,4468539.1850000005],[163420.42059999984,4468546.9662999995],[163385.92059999984,4468537.919399999],[163334.35809999984,4468539.9585],[163314.95189999975,4468539.1850000005],[163198.13939999975,4468551.3725000005],[163173.92839999963,4468538.552200001],[163104.76439999975,4468550.599099999],[163028.92059999984,4468553.599099999],[162992.40500000026,4468530.021],[163014.92839999963,4468509.1381],[163049.24089999963,4468467.3725000005],[163055.47530000005,4468461.606899999],[163079.24089999963,4468419.3725000005],[163098.34250000026,4468394.4585],[163117.35030000005,4468354.2162999995],[163165.42059999984,4468347.044399999],[163247.31120000035,4468353.606899999],[163259.35809999984,4468353.1381],[163295.99089999963,4468354.5912999995],[163352.35809999984,4468344.489700001]]]},{"type":"Polygon","coordinates":[[[167216.35809999984,4468344.489700001],[167224.95969999954,4468353.4428],[167243.42839999963,4468359.419399999],[167261.28780000005,4468365.5600000005],[167305.86589999963,4468374.2553],[167333.28780000005,4468400.599099999],[167327.42839999963,4468407.5600000005],[167321.28780000005,4468413.4428],[167321.47530000005,4468422.606899999],[167261.75650000013,4468466.8803],[167244.99870000035,4468499.411599999],[167222.35809999984,4468552.7787999995],[167207.42839999963,4468575.5600000005],[167189.28780000005,4468599.4428],[167189.42839999963,4468605.536599999],[167171.24089999963,4468632.3725000005],[167151.13150000013,4468663.0287999995],[167099.42839999963,4468725.5600000005],[167087.52219999954,4468736.9975000005],[167075.66280000005,4468761.419399999],[167015.80339999963,4468738.0053],[167003.28780000005,4468719.5600000005],[166991.42839999963,4468701.419399999],[166985.28780000005,4468695.5600000005],[166979.42839999963,4468665.419399999],[166928.45189999975,4468602.302200001],[166918.04559999984,4468571.8803],[166925.42839999963,4468557.5600000005],[166931.73309999984,4468544.552200001],[166951.35030000005,4468525.7085],[167027.42839999963,4468443.5600000005],[167039.70969999954,4468424.786599999],[167057.54559999984,4468407.677200001],[167080.02219999954,4468384.2631],[167104.35030000005,4468371.724099999],[167145.85809999984,4468405.239700001],[167171.42839999963,4468371.5600000005],[167182.81900000013,4468348.052200001],[167213.28780000005,4468347.419399999],[167216.35809999984,4468344.489700001]]]},{"type":"Polygon","coordinates":[[[162296.35809999984,4468638.489700001],[162293.10030000005,4468659.419399999],[162294.06120000035,4468671.1850000005],[162272.45189999975,4468672.919399999],[162251.59250000026,4468665.2553],[162226.98309999984,4468657.8725000005],[162203.54559999984,4468641.231899999],[162193.23309999984,4468642.052200001],[162161.59250000026,4468617.2553],[162142.67839999963,4468608.8412999995],[162125.12370000035,4468593.724099999],[162119.59250000026,4468587.2553],[162089.52219999954,4468578.2085],[162083.47530000005,4468538.5756],[162059.12370000035,4468527.724099999],[162022.18620000035,4468504.661599999],[161995.09250000026,4468496.5053],[161943.06120000035,4468460.271],[161928.92839999963,4468443.864700001],[161915.12370000035,4468437.724099999],[161896.39719999954,4468427.2475000005],[161837.59250000026,4468402.9428],[161843.12370000035,4468383.2553],[161873.59250000026,4468335.724099999],[161880.81120000035,4468311.724099999],[161897.59250000026,4468317.2553],[161909.12370000035,4468323.724099999],[161927.59250000026,4468329.2553],[161935.81900000013,4468338.8412999995],[162005.19400000013,4468383.7475000005],[162011.52219999954,4468383.231899999],[162039.34250000026,4468398.7475000005],[162077.59250000026,4468413.2553],[162089.12370000035,4468419.724099999],[162101.59250000026,4468425.2553],[162150.62370000035,4468467.2553],[162163.04559999984,4468460.974099999],[162175.30339999963,4468446.7475000005],[162199.06900000013,4468429.896],[162215.59250000026,4468437.2553],[162222.03780000005,4468444.7553],[162268.28000000026,4468465.4037999995],[162278.28780000005,4468492.614700001],[162246.74089999963,4468532.8803],[162221.59250000026,4468577.974099999],[162228.08469999954,4468603.474099999],[162275.12370000035,4468629.724099999],[162290.35809999984,4468632.489700001],[162290.35809999984,4468638.489700001],[162296.35809999984,4468638.489700001]]]},{"type":"Polygon","coordinates":[[[171986.35809999984,4468206.489700001],[171989.28780000005,4468209.5600000005],[172047.06120000035,4468220.8335],[172085.24089999963,4468230.606899999],[172154.19400000013,4468241.8335],[172173.41280000005,4468261.849099999],[172181.28780000005,4468291.7787999995],[172133.28780000005,4468347.419399999],[172121.00650000013,4468366.1928],[172090.30339999963,4468395.677200001],[172042.16280000005,4468450.989700001],[172020.55339999963,4468471.7553],[172013.42839999963,4468447.9662999995],[172158.55339999963,4468282.9662999995],[172153.04559999984,4468275.5600000005],[172119.67059999984,4468300.8725000005],[172103.70969999954,4468317.489700001],[171985.79559999984,4468450.7787999995],[171921.92839999963,4468524.161599999],[171884.17059999984,4468560.419399999],[171717.27219999954,4468557.021],[171679.88939999975,4468544.224099999],[171671.42839999963,4468528.9428],[171725.42839999963,4468467.5600000005],[171774.78780000005,4468410.8178],[171827.78000000026,4468359.911599999],[171859.91280000005,4468326.4428],[171893.28780000005,4468281.419399999],[171958.09250000026,4468210.427200001],[171986.35809999984,4468206.489700001]]]},{"type":"Polygon","coordinates":[[[166556.35809999984,4468296.489700001],[166526.82689999975,4468260.911599999],[166535.12370000035,4468251.2553],[166557.57689999975,4468241.2475000005],[166579.37370000035,4468213.427200001],[166576.02219999954,4468171.731899999],[166601.59250000026,4468155.724099999],[166639.51439999975,4468128.8178],[166667.59250000026,4468137.2553],[166685.12370000035,4468149.724099999],[166705.88939999975,4468158.9585],[166715.12370000035,4468179.724099999],[166737.13150000013,4468189.521],[166757.12370000035,4468203.724099999],[166766.35809999984,4468206.489700001],[166784.00650000013,4468229.3412999995],[166796.35809999984,4468224.489700001],[166796.35809999984,4468230.489700001],[166802.35809999984,4468230.489700001],[166802.35809999984,4468236.489700001],[166808.35809999984,4468236.489700001],[166808.35809999984,4468242.489700001],[166820.35809999984,4468242.489700001],[166823.47530000005,4468260.911599999],[166856.35809999984,4468266.489700001],[166856.35809999984,4468272.489700001],[166862.35809999984,4468272.489700001],[166862.35809999984,4468278.489700001],[166868.35809999984,4468278.489700001],[166873.06900000013,4468287.8178],[166886.35809999984,4468290.489700001],[166886.35809999984,4468296.489700001],[166892.35809999984,4468296.489700001],[166902.36589999963,4468316.4585],[166926.34250000026,4468328.5053],[166942.37370000035,4468342.474099999],[166952.35809999984,4468344.489700001],[166973.59250000026,4468371.2553],[166979.12370000035,4468380.724099999],[166911.92839999963,4468389.2553],[166895.94400000013,4468370.7162999995],[166882.09250000026,4468371.8412999995],[166846.74870000035,4468352.106899999],[166817.59250000026,4468329.2553],[166789.91280000005,4468311.9350000005],[166757.17059999984,4468288.731899999],[166741.39719999954,4468270.4037999995],[166721.12370000035,4468257.724099999],[166714.37370000035,4468242.5600000005],[166691.85030000005,4468223.1537999995],[166667.12370000035,4468215.724099999],[166638.97530000005,4468205.364700001],[166631.59250000026,4468221.114700001],[166673.59250000026,4468251.2553],[166689.99870000035,4468270.3335],[166703.35809999984,4468269.2553],[166711.81900000013,4468269.9350000005],[166736.17059999984,4468298.224099999],[166787.59250000026,4468341.2553],[166793.12370000035,4468347.724099999],[166818.03780000005,4468358.8100000005],[166867.30339999963,4468386.302200001],[166864.88939999975,4468416.302200001],[166835.12370000035,4468425.2553],[166813.93620000035,4468433.0600000005],[166799.59250000026,4468449.724099999],[166770.71750000026,4468455.2553],[166742.35809999984,4468434.489700001],[166742.35809999984,4468422.489700001],[166730.35809999984,4468422.489700001],[166724.35809999984,4468422.489700001],[166720.35030000005,4468408.474099999],[166709.63929999992,4468395.0912999995],[166703.12370000035,4468395.8881],[166683.13150000013,4468381.286599999],[166655.68620000035,4468365.161599999],[166646.35809999984,4468362.489700001],[166646.35809999984,4468356.489700001],[166640.35809999984,4468356.489700001],[166628.35809999984,4468350.489700001],[166628.35809999984,4468344.489700001],[166622.35809999984,4468344.489700001],[166622.35809999984,4468338.489700001],[166610.35809999984,4468338.489700001],[166610.35809999984,4468332.489700001],[166604.35809999984,4468332.489700001],[166599.64719999954,4468323.161599999],[166586.35809999984,4468320.489700001],[166586.35809999984,4468314.489700001],[166580.35809999984,4468314.489700001],[166568.35809999984,4468308.489700001],[166568.35809999984,4468302.489700001],[166562.35809999984,4468302.489700001],[166562.35809999984,4468296.489700001],[166556.35809999984,4468296.489700001]]]},{"type":"Polygon","coordinates":[[[164120.35809999984,4468224.489700001],[164134.42059999984,4468210.9662999995],[164191.72530000005,4468128.724099999],[164218.42059999984,4468119.5600000005],[164288.78000000026,4468178.6225000005],[164307.24870000035,4468185.419399999],[164358.06120000035,4468148.8803],[164381.28780000005,4468113.419399999],[164403.17839999963,4468084.5912999995],[164429.28780000005,4468080.864700001],[164411.28780000005,4468107.419399999],[164391.76439999975,4468137.231899999],[164337.17839999963,4468202.2475000005],[164225.28780000005,4468329.419399999],[164139.03780000005,4468428.536599999],[164112.90500000026,4468453.661599999],[164073.31900000013,4468433.2475000005],[164060.47530000005,4468446.606899999],[164050.56120000035,4468456.146],[164003.05339999963,4468455.1850000005],[164003.66280000005,4468425.6537999995],[163997.26439999975,4468419.5131],[164009.78000000026,4468395.2085],[164009.17059999984,4468365.5835],[164036.35809999984,4468332.489700001],[164042.35809999984,4468332.489700001],[164042.35809999984,4468326.489700001],[164048.35809999984,4468326.489700001],[164048.35809999984,4468314.489700001],[164051.89719999954,4468312.0287999995],[164068.81900000013,4468286.9506],[164093.89719999954,4468258.0287999995],[164096.35809999984,4468248.489700001],[164102.35809999984,4468248.489700001],[164102.35809999984,4468242.489700001],[164108.35809999984,4468242.489700001],[164108.35809999984,4468236.489700001],[164114.35809999984,4468236.489700001],[164114.35809999984,4468230.489700001],[164120.35809999984,4468230.489700001],[164120.35809999984,4468224.489700001]]]},{"type":"Polygon","coordinates":[[[165890.35809999984,4468272.489700001],[165885.64719999954,4468259.364700001],[165959.52219999954,4468251.6537999995],[165984.85809999984,4468244.8803],[166002.13150000013,4468225.544399999],[165999.92839999963,4468188.489700001],[166002.45969999954,4468146.1381],[165997.67839999963,4468131.6537999995],[165906.60030000005,4468171.7553],[165899.52219999954,4468179.6537999995],[165869.19400000013,4468185.3256],[165837.64719999954,4468196.646],[165822.17839999963,4468179.3256],[165887.52219999954,4468143.6537999995],[165917.19400000013,4468125.3256],[165941.52219999954,4468119.6537999995],[165953.19400000013,4468113.3256],[165971.68620000035,4468104.8178],[165989.19400000013,4468095.3256],[166048.63150000013,4468077.6537999995],[166088.94400000013,4468110.7475000005],[166125.90500000026,4468097.481899999],[166133.19400000013,4468089.3256],[166157.52219999954,4468083.6537999995],[166169.19400000013,4468077.3256],[166197.13150000013,4468070.8100000005],[166213.35030000005,4468071.794399999],[166244.49870000035,4468088.7162999995],[166258.67839999963,4468119.606899999],[166246.32689999975,4468177.3100000005],[166247.63939999975,4468199.224099999],[166277.19400000013,4468191.3256],[166316.14719999954,4468184.036599999],[166343.35809999984,4468185.677200001],[166349.49870000035,4468185.302200001],[166373.19400000013,4468203.6537999995],[166394.92059999984,4468209.3256],[166406.19400000013,4468184.7631],[166429.56120000035,4468186.146],[166455.71750000026,4468215.419399999],[166468.23309999984,4468255.989700001],[166437.15500000026,4468270.2631],[166412.35809999984,4468268.7631],[166382.35809999984,4468270.5678],[166355.03000000026,4468268.927200001],[166222.11589999963,4468277.739700001],[166178.35809999984,4468275.1381],[166166.35809999984,4468275.8412999995],[166121.35809999984,4468273.169399999],[166052.35809999984,4468277.271],[166018.18620000035,4468275.231899999],[166005.83469999954,4468261.427200001],[165956.42839999963,4468270.2162999995],[165907.02219999954,4468267.2631],[165902.35809999984,4468272.489700001],[165890.35809999984,4468272.489700001]]]},{"type":"Polygon","coordinates":[[[171416.35809999984,4468326.489700001],[171386.17059999984,4468349.739700001],[171364.23309999984,4468373.411599999],[171323.24089999963,4468389.3725000005],[171293.47530000005,4468413.606899999],[171244.02219999954,4468448.4585],[171190.46750000026,4468473.7475000005],[171171.78780000005,4468493.8803],[171133.06900000013,4468515.3725000005],[171125.47530000005,4468491.3725000005],[171118.11589999963,4468485.606899999],[171091.23309999984,4468542.5835],[171051.24870000035,4468551.3725000005],[171017.47530000005,4468491.3725000005],[170999.24089999963,4468467.606899999],[170982.17839999963,4468441.1928],[171008.59250000026,4468416.724099999],[171023.03000000026,4468401.114700001],[171057.01439999975,4468402.474099999],[171083.85030000005,4468393.052200001],[171131.52219999954,4468354.2631],[171198.43620000035,4468314.911599999],[171254.78000000026,4468267.3100000005],[171347.47530000005,4468203.606899999],[171385.13939999975,4468171.7787999995],[171437.70969999954,4468137.8412999995],[171473.24089999963,4468113.3725000005],[171503.47530000005,4468095.606899999],[171527.33469999954,4468077.302200001],[171562.65500000026,4468065.606899999],[171639.38939999975,4468100.177200001],[171677.61589999963,4468152.2787999995],[171677.17059999984,4468163.4350000005],[171647.24089999963,4468185.3725000005],[171601.72530000005,4468220.271],[171569.24089999963,4468239.3725000005],[171539.47530000005,4468257.606899999],[171509.24089999963,4468275.3725000005],[171506.35809999984,4468278.489700001],[171500.35809999984,4468278.489700001],[171500.35809999984,4468284.489700001],[171494.35809999984,4468284.489700001],[171488.35809999984,4468284.489700001],[171488.35809999984,4468290.489700001],[171482.35809999984,4468290.489700001],[171482.35809999984,4468296.489700001],[171466.37370000035,4468304.5053],[171464.35809999984,4468308.489700001],[171458.35809999984,4468308.489700001],[171458.35809999984,4468314.489700001],[171446.35809999984,4468314.489700001],[171434.35809999984,4468314.489700001],[171434.35809999984,4468320.489700001],[171422.35809999984,4468320.489700001],[171422.35809999984,4468326.489700001],[171416.35809999984,4468326.489700001]]]},{"type":"Polygon","coordinates":[[[166832.35809999984,4468134.489700001],[166792.67839999963,4468088.974099999],[166829.47530000005,4468071.606899999],[166847.12370000035,4468062.2553],[166865.47530000005,4468053.606899999],[166877.68620000035,4468047.1381],[166921.79559999984,4468048.896],[166953.43620000035,4468037.8100000005],[166964.75650000013,4468025.5756],[166995.41280000005,4468017.606899999],[167039.80339999963,4468035.8178],[167063.03000000026,4468034.9037999995],[167069.24089999963,4468041.606899999],[167101.28000000026,4468056.724099999],[167170.53780000005,4468100.552200001],[167219.24089999963,4468143.606899999],[167243.70969999954,4468155.1381],[167272.37370000035,4468186.0756],[167279.24089999963,4468218.9585],[167241.85809999984,4468246.3803],[167222.82689999975,4468266.9585],[167207.24089999963,4468281.3725000005],[167201.47530000005,4468287.606899999],[167185.37370000035,4468295.2006],[167153.24089999963,4468305.3725000005],[167111.47530000005,4468323.606899999],[167091.71750000026,4468329.3725000005],[167066.59250000026,4468302.2553],[167049.53000000026,4468286.4585],[167024.35809999984,4468278.489700001],[167018.35809999984,4468278.489700001],[167018.35809999984,4468272.489700001],[167012.35809999984,4468272.489700001],[167012.35809999984,4468266.489700001],[167006.35809999984,4468266.489700001],[167001.64719999954,4468257.161599999],[166988.35809999984,4468254.489700001],[166976.14719999954,4468232.036599999],[166949.89719999954,4468214.9506],[166940.35809999984,4468212.489700001],[166940.35809999984,4468206.489700001],[166934.35809999984,4468206.489700001],[166934.35809999984,4468200.489700001],[166922.35809999984,4468200.489700001],[166910.35809999984,4468194.489700001],[166910.35809999984,4468188.489700001],[166904.35809999984,4468188.489700001],[166901.17059999984,4468176.0912999995],[166877.89719999954,4468160.9506],[166868.35809999984,4468158.489700001],[166865.82689999975,4468148.599099999],[166847.89719999954,4468136.9506],[166838.35809999984,4468134.489700001],[166832.35809999984,4468134.489700001]]]},{"type":"Polygon","coordinates":[[[162698.35809999984,4467858.489700001],[162710.21750000026,4467871.7787999995],[162731.52219999954,4467885.3256],[162737.19400000013,4467891.6537999995],[162755.52219999954,4467897.3256],[162768.41280000005,4467904.3100000005],[162786.10809999984,4467903.2553],[162800.03000000026,4467918.8178],[162827.52219999954,4467927.3256],[162839.19400000013,4467933.6537999995],[162851.52219999954,4467939.3256],[162881.12370000035,4467959.9975000005],[162919.44400000013,4467970.2631],[162940.88939999975,4467968.974099999],[162953.19400000013,4467975.6537999995],[162976.11589999963,4467982.731899999],[162983.19400000013,4468005.6537999995],[162995.19400000013,4468016.3881],[162989.35809999984,4468042.4506],[162975.20189999975,4468055.106899999],[162938.89719999954,4468117.2631],[162929.52219999954,4468137.6537999995],[162914.31120000035,4468159.427200001],[162890.21750000026,4468211.927200001],[162872.49870000035,4468231.7787999995],[162848.56900000013,4468246.989700001],[162821.52219999954,4468281.6537999995],[162800.73309999984,4468300.239700001],[162764.47530000005,4468365.114700001],[162750.31900000013,4468365.9585],[162708.45969999954,4468331.8100000005],[162695.52219999954,4468317.3256],[162642.27219999954,4468272.4662999995],[162627.13150000013,4468233.0912999995],[162615.99870000035,4468233.7475000005],[162588.10809999984,4468202.552200001],[162551.56900000013,4468204.731899999],[162519.88150000013,4468197.349099999],[162452.26429999992,4468154.3412999995],[162437.52219999954,4468127.2475000005],[162443.59250000026,4468112.3178],[162465.03780000005,4468093.169399999],[162482.12370000035,4468074.044399999],[162519.74089999963,4468047.771],[162537.15500000026,4468046.7162999995],[162551.52219999954,4468053.3256],[162605.63939999975,4468096.0053],[162617.49870000035,4468095.302200001],[162639.60030000005,4468107.3256],[162665.19400000013,4468100.0600000005],[162658.79559999984,4468081.1928],[162614.45189999975,4468044.794399999],[162569.96750000026,4468034.4350000005],[162545.52219999954,4468012.5912999995],[162551.19400000013,4467993.3256],[162580.56120000035,4467957.5131],[162613.67839999963,4467911.8803],[162677.56900000013,4467862.3803],[162695.19400000013,4467861.3256],[162698.35809999984,4467858.489700001]],[[162776.35809999984,4468182.489700001],[162782.35809999984,4468182.489700001],[162782.35809999984,4468176.489700001],[162791.59250000026,4468173.724099999],[162799.91280000005,4468164.044399999],[162832.77219999954,4468135.731899999],[162834.97530000005,4468108.4506],[162817.46750000026,4468093.3803],[162798.92839999963,4468071.864700001],[162787.28000000026,4468070.927200001],[162743.17059999984,4468122.114700001],[162701.66280000005,4468118.786599999],[162699.74089999963,4468142.5287999995],[162713.12370000035,4468154.0600000005],[162707.59250000026,4468167.724099999],[162686.85030000005,4468194.1850000005],[162700.39719999954,4468239.161599999],[162746.56900000013,4468242.8881],[162761.59250000026,4468221.724099999],[162767.12370000035,4468209.2553],[162779.82689999975,4468198.3335],[162776.35809999984,4468182.489700001]]]},{"type":"Polygon","coordinates":[[[166898.35809999984,4467936.489700001],[166866.99870000035,4467933.161599999],[166859.47530000005,4467909.3725000005],[166853.24089999963,4467897.606899999],[166847.47530000005,4467885.3725000005],[166840.58469999954,4467879.606899999],[166828.79559999984,4467892.3335],[166830.31900000013,4467930.489700001],[166829.21750000026,4467958.2631],[166804.79559999984,4467969.3725000005],[166789.63150000013,4467937.2162999995],[166769.24089999963,4467927.606899999],[166750.91280000005,4467917.9037999995],[166713.20189999975,4467940.989700001],[166691.45189999975,4467933.3725000005],[166685.24089999963,4467933.606899999],[166679.03000000026,4467926.9037999995],[166679.47530000005,4467915.489700001],[166679.24089999963,4467909.489700001],[166679.68620000035,4467898.146],[166753.51439999975,4467888.044399999],[166793.47530000005,4467866.9037999995],[166823.56900000013,4467868.099099999],[166835.24089999963,4467843.3725000005],[166847.47530000005,4467837.606899999],[166875.34250000026,4467818.4350000005],[166864.23309999984,4467786.724099999],[166851.27219999954,4467777.606899999],[166805.47530000005,4467789.606899999],[166769.24089999963,4467795.3725000005],[166746.67059999984,4467807.3256],[166721.24089999963,4467813.3725000005],[166703.45189999975,4467819.606899999],[166685.68620000035,4467818.9037999995],[166679.47530000005,4467825.606899999],[166661.24089999963,4467831.3725000005],[166643.59250000026,4467840.724099999],[166625.24089999963,4467849.3725000005],[166613.47530000005,4467855.606899999],[166595.24089999963,4467861.3725000005],[166583.47530000005,4467867.606899999],[166508.70969999954,4467877.8256],[166493.47530000005,4467861.3725000005],[166487.24089999963,4467855.606899999],[166474.81900000013,4467836.3412999995],[166475.56900000013,4467817.0287999995],[166507.28000000026,4467796.5678],[166565.47530000005,4467789.606899999],[166607.24089999963,4467771.3725000005],[166627.11589999963,4467765.0912999995],[166649.24089999963,4467753.3725000005],[166673.47530000005,4467747.606899999],[166685.03000000026,4467735.114700001],[166706.35809999984,4467735.9585],[166736.35809999984,4467734.786599999],[166769.24089999963,4467717.3725000005],[166781.47530000005,4467711.606899999],[166787.24089999963,4467701.9506],[166768.58469999954,4467693.606899999],[166757.47530000005,4467705.606899999],[166733.24089999963,4467711.3725000005],[166715.47530000005,4467717.606899999],[166679.24089999963,4467723.3725000005],[166667.47530000005,4467729.606899999],[166649.24089999963,4467735.3725000005],[166643.47530000005,4467741.606899999],[166622.70969999954,4467751.4037999995],[166589.24089999963,4467759.3725000005],[166566.50650000013,4467771.396],[166515.43620000035,4467781.146],[166499.47530000005,4467789.606899999],[166481.24089999963,4467795.3725000005],[166463.47530000005,4467807.606899999],[166433.24089999963,4467813.3725000005],[166402.49089999963,4467821.4350000005],[166358.21750000026,4467836.9506],[166316.19400000013,4467846.9585],[166262.00650000013,4467884.2475000005],[166234.44400000013,4467869.646],[166242.45969999954,4467846.794399999],[166271.47530000005,4467837.606899999],[166301.24089999963,4467825.3725000005],[166319.47530000005,4467819.606899999],[166332.03780000005,4467812.9506],[166392.50650000013,4467801.396],[166415.24089999963,4467789.3725000005],[166491.78780000005,4467772.7553],[166511.59250000026,4467759.1381],[166534.23309999984,4467760.0287999995],[166553.24089999963,4467753.3725000005],[166577.47530000005,4467747.606899999],[166609.95969999954,4467730.427200001],[166640.59250000026,4467720.724099999],[166649.24089999963,4467711.3725000005],[166667.47530000005,4467705.606899999],[166680.08469999954,4467698.927200001],[166713.62370000035,4467700.2631],[166733.24089999963,4467693.3725000005],[166751.47530000005,4467687.606899999],[166772.10030000005,4467673.4037999995],[166823.47530000005,4467663.606899999],[166841.68620000035,4467651.0678],[166841.24089999963,4467639.396],[166855.67839999963,4467612.114700001],[166901.47530000005,4467597.606899999],[166940.73309999984,4467583.849099999],[166992.38939999975,4467585.8881],[167008.28000000026,4467603.044399999],[167039.47530000005,4467621.3725000005],[167069.24089999963,4467657.606899999],[167109.24870000035,4467694.6850000005],[167117.24089999963,4467711.606899999],[167153.12370000035,4467755.6928],[167123.24089999963,4467783.3725000005],[167117.47530000005,4467789.606899999],[167103.95189999975,4467802.146],[167132.35809999984,4467801.021],[167151.69400000013,4467801.771],[167162.35809999984,4467835.4037999995],[167156.35809999984,4467852.489700001],[167138.35809999984,4467852.489700001],[167138.35809999984,4467858.489700001],[167132.35809999984,4467858.489700001],[167126.35809999984,4467858.489700001],[167126.35809999984,4467864.489700001],[167120.35809999984,4467864.489700001],[167108.35809999984,4467864.489700001],[167108.35809999984,4467870.489700001],[167102.35809999984,4467870.489700001],[167096.35809999984,4467870.489700001],[167096.35809999984,4467876.489700001],[167084.35809999984,4467876.489700001],[167056.81900000013,4467878.9506],[167017.95969999954,4467890.974099999],[166991.14719999954,4467908.4350000005],[166988.35809999984,4467912.489700001],[166982.35809999984,4467912.489700001],[166957.25650000013,4467914.786599999],[166952.35809999984,4467924.489700001],[166946.35809999984,4467924.489700001],[166946.35809999984,4467930.489700001],[166922.35809999984,4467930.489700001],[166898.35809999984,4467930.489700001],[166898.35809999984,4467936.489700001]]]},{"type":"Polygon","coordinates":[[[167876.35809999984,4467450.489700001],[167888.87370000035,4467459.1381],[167894.35809999984,4467480.489700001],[167894.35809999984,4467486.489700001],[167900.35809999984,4467486.489700001],[167900.35809999984,4467492.489700001],[167906.35809999984,4467492.489700001],[167906.35809999984,4467498.489700001],[167912.35809999984,4467498.489700001],[167936.35809999984,4467498.489700001],[167951.03000000026,4467502.2631],[167968.81900000013,4467514.3803],[167960.35809999984,4467534.489700001],[167930.35809999984,4467534.489700001],[167924.82689999975,4467527.5756],[167879.68620000035,4467537.8178],[167824.88939999975,4467543.161599999],[167735.68620000035,4467554.3178],[167732.35809999984,4467558.489700001],[167708.35809999984,4467558.489700001],[167702.35809999984,4467558.489700001],[167702.35809999984,4467564.489700001],[167684.35809999984,4467564.489700001],[167640.15500000026,4467569.106899999],[167639.17059999984,4467585.6537999995],[167662.46750000026,4467596.3412999995],[167675.87370000035,4467620.974099999],[167691.76439999975,4467655.5912999995],[167710.91280000005,4467683.036599999],[167713.28000000026,4467722.5756],[167693.52219999954,4467729.6537999995],[167663.19400000013,4467735.3256],[167641.88939999975,4467750.2085],[167611.20969999954,4467761.2006],[167573.82679999992,4467758.974099999],[167561.52219999954,4467765.6537999995],[167537.94400000013,4467776.481899999],[167526.45969999954,4467789.3256],[167494.13939999975,4467779.8335],[167483.19400000013,4467759.6537999995],[167477.52219999954,4467747.3256],[167470.35030000005,4467740.9037999995],[167454.36589999963,4467706.0756],[167447.19400000013,4467699.6537999995],[167441.52219999954,4467675.3256],[167417.47530000005,4467640.896],[167408.19400000013,4467601.0287999995],[167399.52219999954,4467591.3256],[167378.00650000013,4467572.106899999],[167363.52219999954,4467549.3256],[167342.78000000026,4467522.5600000005],[167352.62370000035,4467490.661599999],[167384.35809999984,4467488.7631],[167437.35030000005,4467491.927200001],[167525.52219999954,4467483.6537999995],[167559.17839999963,4467476.4585],[167619.10809999984,4467480.044399999],[167699.52219999954,4467471.6537999995],[167733.17839999963,4467464.4585],[167810.47530000005,4467469.0756],[167824.16280000005,4467453.771],[167876.35809999984,4467450.489700001]]]},{"type":"Polygon","coordinates":[[[163262.35809999984,4467576.489700001],[163270.84250000026,4467586.0053],[163325.19400000013,4467620.552200001],[163313.52219999954,4467627.6537999995],[163289.96750000026,4467634.9428],[163235.03000000026,4467660.161599999],[163208.96750000026,4467674.3178],[163142.00650000013,4467692.2475000005],[163085.52219999954,4467657.3256],[163024.84250000026,4467622.0053],[162984.92839999963,4467594.114700001],[162904.09250000026,4467547.052200001],[162859.20969999954,4467510.419399999],[162918.22530000005,4467472.8256],[162975.36589999963,4467441.794399999],[163014.97530000005,4467439.427200001],[163049.19400000013,4467453.6537999995],[163120.28000000026,4467479.6225000005],[163157.52219999954,4467501.3256],[163199.92059999984,4467534.1850000005],[163220.35809999984,4467540.489700001],[163220.35809999984,4467546.489700001],[163226.35809999984,4467546.489700001],[163226.35809999984,4467552.489700001],[163232.35809999984,4467552.489700001],[163246.04559999984,4467572.294399999],[163262.35809999984,4467576.489700001]]]},{"type":"Polygon","coordinates":[[[164822.35809999984,4467384.489700001],[164825.24089999963,4467387.606899999],[164835.57689999975,4467397.169399999],[164860.77219999954,4467433.802200001],[164871.24870000035,4467473.786599999],[164819.24089999963,4467507.3725000005],[164781.50650000013,4467536.3178],[164753.47530000005,4467555.606899999],[164711.24089999963,4467579.3725000005],[164681.47530000005,4467603.606899999],[164651.24089999963,4467621.3725000005],[164627.47530000005,4467639.606899999],[164569.37370000035,4467645.794399999],[164543.47530000005,4467663.606899999],[164520.38939999975,4467674.5053],[164495.47530000005,4467693.606899999],[164471.24089999963,4467711.3725000005],[164439.95189999975,4467735.3725000005],[164385.03780000005,4467726.2553],[164363.47530000005,4467706.2631],[164380.79559999984,4467685.614700001],[164431.32689999975,4467644.0835],[164495.89719999954,4467574.4037999995],[164543.24089999963,4467565.356899999],[164537.47530000005,4467525.3725000005],[164521.95969999954,4467518.0600000005],[164554.95969999954,4467476.0835],[164620.35030000005,4467441.489700001],[164663.47530000005,4467435.606899999],[164673.03780000005,4467425.271],[164701.63150000013,4467405.606899999],[164705.52219999954,4467411.4428],[164696.10030000005,4467447.3725000005],[164779.42059999984,4467434.364700001],[164801.47530000005,4467405.606899999],[164813.24089999963,4467387.3725000005],[164822.35809999984,4467384.489700001]]]},{"type":"Polygon","coordinates":[[[165602.35809999984,4467534.489700001],[165576.53000000026,4467530.9506],[165569.47530000005,4467501.3725000005],[165562.23309999984,4467473.786599999],[165525.71750000026,4467465.606899999],[165481.02219999954,4467481.2631],[165413.24089999963,4467489.3725000005],[165373.86589999963,4467497.6225000005],[165323.47530000005,4467519.606899999],[165277.51439999975,4467530.552200001],[165236.42839999963,4467499.052200001],[165217.72530000005,4467478.849099999],[165209.47530000005,4467454.7553],[165279.20189999975,4467390.161599999],[165303.95189999975,4467381.606899999],[165335.24089999963,4467405.606899999],[165357.34250000026,4467419.8803],[165382.95969999954,4467431.974099999],[165631.84250000026,4467421.1928],[165695.35809999984,4467435.6303],[165727.18620000035,4467428.974099999],[165827.92059999984,4467432.9585],[165890.33469999954,4467446.0131],[165961.77219999954,4467453.6303],[165977.24089999963,4467462.794399999],[165941.24089999963,4467471.3725000005],[165895.32689999975,4467483.396],[165839.24089999963,4467489.3725000005],[165797.47530000005,4467495.606899999],[165752.94400000013,4467501.7006],[165707.47530000005,4467513.606899999],[165659.24089999963,4467519.3725000005],[165622.42059999984,4467525.794399999],[165614.35809999984,4467534.489700001],[165602.35809999984,4467534.489700001]]]},{"type":"Polygon","coordinates":[[[168872.35809999984,4467366.489700001],[168875.24089999963,4467369.606899999],[168927.43620000035,4467377.927200001],[168971.19400000013,4467398.5756],[168972.69400000013,4467436.3803],[168898.30339999963,4467433.427200001],[168727.30339999963,4467442.544399999],[168511.95969999954,4467457.3100000005],[168499.81900000013,4467468.5600000005],[168560.47530000005,4467486.302200001],[168698.05339999963,4467476.7631],[168734.49870000035,4467478.2162999995],[168851.47530000005,4467471.606899999],[168951.62370000035,4467465.0912999995],[168973.93620000035,4467472.146],[168978.15500000026,4467578.3412999995],[168922.46750000026,4467586.6381],[168741.01439999975,4467597.7475000005],[168710.35809999984,4467596.5287999995],[168665.35809999984,4467598.3335],[168617.59250000026,4467596.4350000005],[168530.78000000026,4467609.3725000005],[168407.24089999963,4467603.606899999],[168389.47530000005,4467573.3725000005],[168368.05339999963,4467542.224099999],[168353.47530000005,4467514.7085],[168371.40500000026,4467485.271],[168431.07689999975,4467475.7553],[168431.70969999954,4467459.4662999995],[168390.43620000035,4467443.3881],[168418.11589999963,4467400.544399999],[168451.35030000005,4467377.669399999],[168509.35809999984,4467375.3725000005],[168554.35809999984,4467377.1537999995],[168605.35809999984,4467375.1381],[168655.58469999954,4467377.1303],[168767.24089999963,4467369.3725000005],[168872.35809999984,4467366.489700001]]]},{"type":"Polygon","coordinates":[[[171722.35809999984,4467246.489700001],[171725.24089999963,4467249.606899999],[171743.47530000005,4467255.3725000005],[171782.10030000005,4467271.239700001],[171810.67059999984,4467286.356899999],[171854.59250000026,4467300.2553],[171897.31900000013,4467315.231899999],[172042.56120000035,4467374.9037999995],[172134.31900000013,4467407.8335],[172158.15500000026,4467424.239700001],[172156.51439999975,4467465.5600000005],[172115.24089999963,4467555.3725000005],[172109.47530000005,4467573.606899999],[172099.13939999975,4467603.0912999995],[172081.63150000013,4467645.3725000005],[172038.50650000013,4467615.7006],[172010.12370000035,4467606.724099999],[171950.35809999984,4467585.771],[171897.29559999984,4467578.5287999995],[171840.13150000013,4467534.677200001],[171797.42839999963,4467543.606899999],[171759.81120000035,4467542.1303],[171671.47530000005,4467495.3725000005],[171623.63939999975,4467480.231899999],[171587.47530000005,4467465.3725000005],[171558.15500000026,4467456.0912999995],[171551.47530000005,4467437.8335],[171599.59250000026,4467378.724099999],[171617.24089999963,4467351.3725000005],[171659.47530000005,4467297.606899999],[171671.24089999963,4467279.3725000005],[171685.93620000035,4467258.021],[171722.35809999984,4467246.489700001]]]},{"type":"Polygon","coordinates":[[[167876.35809999984,4467450.489700001],[167873.63939999975,4467447.2085],[167850.01439999975,4467432.6303],[167843.07689999975,4467369.771],[167840.35809999984,4467318.489700001],[167840.35809999984,4467312.489700001],[167847.57689999975,4467306.044399999],[167860.58469999954,4467250.169399999],[167875.77219999954,4467241.919399999],[167960.52219999954,4467223.731899999],[167979.03780000005,4467203.0131],[168022.18620000035,4467179.552200001],[168131.52219999954,4467171.6537999995],[168134.35809999984,4467168.489700001],[168158.35809999984,4467168.489700001],[168209.31120000035,4467177.5600000005],[168494.49870000035,4467168.161599999],[168503.28780000005,4467178.0287999995],[168478.93620000035,4467213.9585],[168441.41280000005,4467232.169399999],[168406.20969999954,4467268.802200001],[168375.06120000035,4467364.802200001],[168341.28780000005,4467423.419399999],[168324.67059999984,4467457.7085],[168310.81900000013,4467478.146],[168270.76439999975,4467504.396],[168215.28780000005,4467513.419399999],[168206.35809999984,4467522.724099999],[168221.78000000026,4467537.5600000005],[168192.48309999984,4467551.7631],[168185.42839999963,4467573.5600000005],[168183.15500000026,4467579.419399999],[168167.00650000013,4467554.786599999],[168149.17059999984,4467537.677200001],[168137.42839999963,4467525.419399999],[168122.12370000035,4467510.724099999],[168101.31120000035,4467489.0678],[168070.81900000013,4467489.677200001],[168045.62370000035,4467515.9037999995],[168035.42839999963,4467538.3803],[168059.75650000013,4467561.7475000005],[168071.28780000005,4467585.5600000005],[168085.51439999975,4467613.169399999],[168120.92839999963,4467621.794399999],[168057.85809999984,4467676.6850000005],[168040.67839999963,4467694.544399999],[168005.82689999975,4467782.9506],[167984.54559999984,4467814.3335],[167932.63150000013,4467852.8178],[167858.14719999954,4467870.981899999],[167809.25650000013,4467913.1225000005],[167768.68620000035,4467902.739700001],[167753.42839999963,4467879.419399999],[167735.24089999963,4467852.606899999],[167713.77219999954,4467819.864700001],[167679.99870000035,4467813.5600000005],[167610.29559999984,4467827.8335],[167590.49089999963,4467838.0287999995],[167582.35809999984,4467846.489700001],[167549.19400000013,4467843.6537999995],[167543.52219999954,4467820.6381],[167625.71750000026,4467795.2553],[167683.63150000013,4467781.7787999995],[167733.08469999954,4467761.2006],[167773.63150000013,4467751.7787999995],[167834.42839999963,4467726.489700001],[167906.70969999954,4467710.974099999],[167939.19400000013,4467699.3256],[167957.52219999954,4467693.6537999995],[167987.68620000035,4467682.8256],[168040.30339999963,4467668.3412999995],[168047.19400000013,4467642.114700001],[167991.36589999963,4467657.0678],[167966.75650000013,4467629.5053],[167927.52219999954,4467623.8803],[167945.14719999954,4467672.9585],[167898.24870000035,4467683.856899999],[167843.80339999963,4467680.6225000005],[167832.48309999984,4467693.302200001],[167816.47530000005,4467699.3256],[167789.54559999984,4467653.0600000005],[167771.52219999954,4467647.8803],[167783.52219999954,4467681.3256],[167789.19400000013,4467709.7787999995],[167766.50650000013,4467717.3256],[167724.69400000013,4467684.911599999],[167714.68620000035,4467663.161599999],[167705.19400000013,4467645.6537999995],[167679.34250000026,4467578.4350000005],[167684.35809999984,4467564.489700001],[167702.35809999984,4467564.489700001],[167708.35809999984,4467564.489700001],[167708.35809999984,4467558.489700001],[167732.35809999984,4467558.489700001],[167884.42059999984,4467551.5287999995],[167927.07689999975,4467538.0287999995],[167930.35809999984,4467534.489700001],[167960.35809999984,4467534.489700001],[168005.03000000026,4467521.7162999995],[167996.75650000013,4467489.8178],[167939.03000000026,4467495.161599999],[167936.35809999984,4467498.489700001],[167912.35809999984,4467498.489700001],[167912.35809999984,4467492.489700001],[167906.35809999984,4467492.489700001],[167900.35809999984,4467492.489700001],[167900.35809999984,4467486.489700001],[167900.35809999984,4467480.489700001],[167894.35809999984,4467480.489700001],[167888.87370000035,4467459.1381],[167876.35809999984,4467450.489700001]]]},{"type":"Polygon","coordinates":[[[166490.35809999984,4467156.489700001],[166486.13939999975,4467170.481899999],[166469.59250000026,4467189.724099999],[166451.12370000035,4467195.2553],[166409.59250000026,4467213.724099999],[166391.12370000035,4467219.2553],[166377.17839999963,4467235.474099999],[166331.59250000026,4467255.724099999],[166308.92839999963,4467262.521],[166293.48309999984,4467303.2553],[166274.80339999963,4467324.9350000005],[166265.12370000035,4467333.2553],[166259.59250000026,4467339.724099999],[166225.65500000026,4467349.919399999],[166217.12370000035,4467357.2553],[166207.56120000035,4467368.364700001],[166183.67839999963,4467377.1537999995],[166137.15500000026,4467387.724099999],[166107.31900000013,4467406.4037999995],[166097.59250000026,4467417.724099999],[166079.12370000035,4467423.2553],[166034.45189999975,4467443.106899999],[166001.59250000026,4467429.2553],[165971.12370000035,4467417.724099999],[165959.59250000026,4467411.2553],[165947.12370000035,4467405.724099999],[165939.22530000005,4467396.536599999],[165881.59250000026,4467401.1537999995],[165887.12370000035,4467387.2553],[165899.59250000026,4467381.724099999],[165911.12370000035,4467375.2553],[165923.59250000026,4467369.724099999],[165929.12370000035,4467363.2553],[165947.59250000026,4467357.724099999],[165956.38150000013,4467347.5053],[165971.12370000035,4467339.2553],[165996.67059999984,4467331.5678],[166031.59250000026,4467309.724099999],[166037.21750000026,4467303.1850000005],[166095.06120000035,4467267.0678],[166120.39719999954,4467269.106899999],[166144.30339999963,4467241.356899999],[166181.12370000035,4467231.2553],[166205.59250000026,4467225.724099999],[166227.41280000005,4467213.536599999],[166294.16280000005,4467203.364700001],[166305.78780000005,4467189.864700001],[166313.35809999984,4467189.2553],[166338.27219999954,4467191.2475000005],[166379.59250000026,4467183.724099999],[166389.03780000005,4467172.7553],[166427.59250000026,4467165.724099999],[166452.60030000005,4467158.856899999],[166467.38939999975,4467160.052200001],[166490.35809999984,4467156.489700001]]]},{"type":"Polygon","coordinates":[[[167252.35809999984,4467774.489700001],[167255.12370000035,4467759.2553],[167264.10030000005,4467726.536599999],[167247.97530000005,4467697.614700001],[167267.66280000005,4467649.9662999995],[167285.35809999984,4467634.7553],[167292.15500000026,4467604.7553],[167326.88939999975,4467594.302200001],[167328.55339999963,4467573.724099999],[167293.88939999975,4467588.0678],[167281.74870000035,4467602.177200001],[167249.26439999975,4467615.8412999995],[167243.59250000026,4467609.2553],[167225.12370000035,4467603.724099999],[167219.59250000026,4467591.2553],[167197.25650000013,4467562.7553],[167187.69400000013,4467530.9975000005],[167177.59250000026,4467519.2553],[167170.09250000026,4467512.8100000005],[167154.62370000035,4467478.169399999],[167147.12370000035,4467471.724099999],[167135.59250000026,4467453.2553],[167129.12370000035,4467447.724099999],[167114.61589999963,4467409.474099999],[167099.12370000035,4467381.724099999],[167086.98309999984,4467337.0287999995],[167069.59250000026,4467309.2553],[167063.12370000035,4467303.724099999],[167057.59250000026,4467285.2553],[167028.74089999963,4467233.552200001],[167027.00650000013,4467212.2475000005],[167060.26429999992,4467214.919399999],[167093.59250000026,4467195.724099999],[167099.94400000013,4467188.3412999995],[167138.61589999963,4467191.4350000005],[167147.59250000026,4467183.724099999],[167153.17059999984,4467177.231899999],[167175.24870000035,4467179.0131],[167190.69400000013,4467170.3881],[167241.60030000005,4467174.489700001],[167327.59250000026,4467165.724099999],[167366.96750000026,4467158.5756],[167411.35809999984,4467162.1381],[167459.35809999984,4467158.294399999],[167498.54559999984,4467161.4350000005],[167543.82689999975,4467144.8178],[167572.98309999984,4467169.919399999],[167584.18620000035,4467195.021],[167621.35809999984,4467201.7475000005],[167660.96750000026,4467194.5756],[167690.45189999975,4467196.9428],[167711.59250000026,4467183.724099999],[167714.35809999984,4467180.489700001],[167738.35809999984,4467180.489700001],[167741.12370000035,4467183.724099999],[167798.89719999954,4467190.3335],[167807.12370000035,4467223.8256],[167761.42059999984,4467231.2553],[167717.47530000005,4467219.231899999],[167708.35809999984,4467219.981899999],[167696.03000000026,4467218.974099999],[167614.84250000026,4467226.9662999995],[167582.26439999975,4467238.919399999],[167548.79559999984,4467236.2475000005],[167507.59250000026,4467243.724099999],[167447.49870000035,4467249.8412999995],[167408.38150000013,4467235.474099999],[167380.77219999954,4467203.411599999],[167333.59250000026,4467213.724099999],[167253.74089999963,4467221.036599999],[167202.17839999963,4467216.911599999],[167151.60030000005,4467226.0756],[167132.10030000005,4467224.5053],[167148.67059999984,4467263.8803],[167164.44400000013,4467277.4506],[167177.12370000035,4467297.724099999],[167186.80339999963,4467306.044399999],[167195.12370000035,4467315.724099999],[167198.35809999984,4467318.489700001],[167203.02219999954,4467354.1850000005],[167213.59250000026,4467363.2553],[167240.42839999963,4467423.4428],[167261.59250000026,4467453.2553],[167273.12370000035,4467471.724099999],[167282.80339999963,4467480.044399999],[167292.92839999963,4467491.786599999],[167303.12370000035,4467525.724099999],[167309.59250000026,4467531.2553],[167328.08469999954,4467563.364700001],[167354.12370000035,4467585.794399999],[167363.92059999984,4467618.302200001],[167356.95969999954,4467689.0835],[167345.12370000035,4467699.2553],[167331.45969999954,4467744.724099999],[167333.99089999963,4467776.4585],[167359.51439999975,4467812.4350000005],[167369.12370000035,4467801.2553],[167376.57689999975,4467794.856899999],[167388.92839999963,4467795.864700001],[167408.28780000005,4467818.3412999995],[167399.12370000035,4467843.2553],[167390.92059999984,4467870.5835],[167405.59250000026,4467891.2553],[167411.99089999963,4467954.114700001],[167435.96750000026,4467974.7631],[167430.97530000005,4467987.2553],[167405.59250000026,4467969.2553],[167393.12370000035,4467963.724099999],[167369.59250000026,4467945.2553],[167347.04559999984,4467931.146],[167320.35030000005,4467883.052200001],[167322.97530000005,4467850.4975000005],[167308.63150000013,4467824.8335],[167294.82689999975,4467825.9350000005],[167273.59250000026,4467801.2553],[167264.35809999984,4467798.489700001],[167264.35809999984,4467786.489700001],[167258.35809999984,4467786.489700001],[167258.35809999984,4467774.489700001],[167252.35809999984,4467774.489700001]]]},{"type":"Polygon","coordinates":[[[172172.35809999984,4466952.489700001],[172205.28780000005,4467003.5600000005],[172269.10809999984,4467077.5287999995],[172289.28780000005,4467111.5600000005],[172313.42839999963,4467141.419399999],[172346.73309999984,4467186.3725000005],[172373.42839999963,4467219.419399999],[172391.28780000005,4467243.5600000005],[172415.42839999963,4467273.419399999],[172421.40500000026,4467291.8881],[172439.00650000013,4467308.786599999],[172451.28780000005,4467327.5600000005],[172475.42839999963,4467357.419399999],[172518.85809999984,4467416.0131],[172511.92059999984,4467423.419399999],[172457.42839999963,4467402.2787999995],[172475.42839999963,4467393.5600000005],[172481.28780000005,4467379.1225000005],[172429.42059999984,4467362.294399999],[172415.42839999963,4467333.419399999],[172408.70189999975,4467321.5600000005],[172362.53000000026,4467345.349099999],[172330.35030000005,4467351.419399999],[172244.99089999963,4467326.739700001],[172211.42839999963,4467309.419399999],[172193.78000000026,4467300.864700001],[172151.33469999954,4467309.5600000005],[172133.42839999963,4467303.419399999],[172109.28780000005,4467297.5600000005],[172079.42839999963,4467285.419399999],[172037.28780000005,4467273.5600000005],[172017.57679999992,4467260.177200001],[171960.78780000005,4467232.6381],[171917.17059999984,4467225.536599999],[171917.61589999963,4467204.2553],[171884.66280000005,4467188.271],[171842.66280000005,4467144.5600000005],[171877.20969999954,4467103.427200001],[171942.90500000026,4467062.6225000005],[172016.47530000005,4467033.606899999],[172084.88939999975,4466994.2085],[172172.35809999984,4466952.489700001]]]},{"type":"Polygon","coordinates":[[[170942.35809999984,4466676.489700001],[170945.12370000035,4466679.724099999],[170967.24870000035,4466689.5912999995],[170983.44400000013,4466718.5835],[170970.03780000005,4466734.169399999],[170957.12370000035,4466745.2553],[170930.99089999963,4466792.364700001],[170885.59250000026,4466817.724099999],[170861.59250000026,4466828.411599999],[170867.12370000035,4466835.724099999],[170874.17839999963,4466841.771],[170831.59250000026,4466859.724099999],[170792.66280000005,4466865.6537999995],[170770.56120000035,4466900.9037999995],[170722.44400000013,4466935.0287999995],[170687.59250000026,4466949.724099999],[170657.12370000035,4466961.2553],[170633.59250000026,4466979.724099999],[170611.04559999984,4466989.7553],[170581.74870000035,4467012.724099999],[170549.12370000035,4467027.2553],[170501.82679999992,4467060.8178],[170465.33469999954,4467074.224099999],[170443.39719999954,4467055.3100000005],[170425.13939999975,4467026.177200001],[170399.80339999963,4467012.044399999],[170363.59250000026,4466995.8725000005],[170371.39719999954,4466980.9428],[170397.88150000013,4466969.106899999],[170439.50650000013,4466934.7006],[170489.35809999984,4466938.6850000005],[170507.35809999984,4466937.2553],[170530.39719999954,4466939.106899999],[170542.67839999963,4466924.8100000005],[170556.62370000035,4466912.8100000005],[170571.69400000013,4466879.0600000005],[170592.22530000005,4466864.5053],[170633.12370000035,4466847.2553],[170680.74870000035,4466840.0131],[170681.59250000026,4466829.489700001],[170679.83469999954,4466807.4585],[170705.59250000026,4466799.724099999],[170717.12370000035,4466793.2553],[170735.59250000026,4466787.724099999],[170781.53000000026,4466770.849099999],[170801.35809999984,4466769.2553],[170820.55339999963,4466770.7787999995],[170849.59250000026,4466733.724099999],[170867.12370000035,4466709.2553],[170885.59250000026,4466697.724099999],[170903.12370000035,4466685.2553],[170942.35809999984,4466676.489700001]]]},{"type":"Polygon","coordinates":[[[163172.35809999984,4466652.489700001],[163178.03000000026,4466658.8178],[163201.04559999984,4466679.396],[163225.25650000013,4466732.1303],[163253.19400000013,4466751.6537999995],[163267.35030000005,4466758.146],[163289.19400000013,4466789.4350000005],[163263.38939999975,4466812.0756],[163125.10809999984,4466820.302200001],[163092.17839999963,4466802.419399999],[163049.61589999963,4466820.114700001],[163031.19400000013,4466811.6537999995],[163020.53000000026,4466799.7475000005],[162994.32689999975,4466798.177200001],[162955.04559999984,4466810.3178],[162943.49089999963,4466820.6303],[162980.52219999954,4466830.544399999],[163015.51429999992,4466828.4585],[163043.52219999954,4466841.3256],[163055.19400000013,4466847.6537999995],[163075.44400000013,4466856.9585],[163106.70969999954,4466884.8725000005],[163128.60030000005,4466919.3256],[163140.24870000035,4466913.2787999995],[163137.90500000026,4466874.2085],[163151.19400000013,4466853.3256],[163169.52219999954,4466847.6537999995],[163210.04559999984,4466833.1225000005],[163271.21750000026,4466822.2475000005],[163283.19400000013,4466835.6537999995],[163295.47530000005,4466846.6225000005],[163301.19400000013,4466913.6537999995],[163343.19400000013,4466944.146],[163337.52219999954,4466973.6537999995],[163331.19400000013,4466979.3256],[163309.74870000035,4467003.3256],[163290.64719999954,4466995.896],[163269.53000000026,4466949.911599999],[163225.77219999954,4466947.3100000005],[163215.67059999984,4466984.9506],[163241.19400000013,4467007.731899999],[163232.19400000013,4467029.8335],[163211.52219999954,4467059.4350000005],[163221.69400000013,4467099.3256],[163248.83469999954,4467091.5678],[163260.41280000005,4467048.3256],[163258.46750000026,4467015.6537999995],[163283.52219999954,4467021.3256],[163305.01439999975,4467029.036599999],[163326.41280000005,4467017.3881],[163377.71750000026,4467014.3412999995],[163391.87370000035,4467026.974099999],[163417.88939999975,4467056.106899999],[163460.24089999963,4467004.239700001],[163469.52219999954,4467021.3256],[163475.19400000013,4467039.6537999995],[163484.68620000035,4467066.161599999],[163493.19400000013,4467093.6537999995],[163502.68620000035,4467102.161599999],[163526.96750000026,4467129.3256],[163543.28000000026,4467118.544399999],[163555.84250000026,4467095.3881],[163541.99089999963,4467083.0131],[163540.11589999963,4467051.6537999995],[163560.83469999954,4467060.396],[163577.52219999954,4467075.3256],[163588.37370000035,4467087.4662999995],[163614.34250000026,4467093.5131],[163625.21750000026,4467105.677200001],[163634.63939999975,4467105.114700001],[163661.19400000013,4467123.6537999995],[163682.92059999984,4467137.481899999],[163692.17839999963,4467154.544399999],[163691.17059999984,4467171.489700001],[163691.70969999954,4467180.2787999995],[163641.85809999984,4467211.989700001],[163625.52219999954,4467237.6537999995],[163613.19400000013,4467255.3256],[163604.89719999954,4467282.161599999],[163565.52219999954,4467315.6537999995],[163512.15500000026,4467359.224099999],[163510.46750000026,4467387.3256],[163539.31900000013,4467378.7475000005],[163547.52219999954,4467363.6537999995],[163557.50650000013,4467341.927200001],[163571.28780000005,4467326.5053],[163631.52219999954,4467273.6537999995],[163639.51439999975,4467247.7553],[163664.78000000026,4467236.177200001],[163690.25650000013,4467207.6537999995],[163691.56900000013,4467213.5131],[163677.97530000005,4467259.427200001],[163687.13939999975,4467276.2787999995],[163670.61589999963,4467302.2475000005],[163643.94400000013,4467314.481899999],[163637.52219999954,4467321.6537999995],[163613.19400000013,4467339.3256],[163607.52219999954,4467345.6537999995],[163601.17059999984,4467351.349099999],[163601.54559999984,4467357.489700001],[163599.88150000013,4467385.4037999995],[163643.19400000013,4467435.6537999995],[163667.52219999954,4467451.1225000005],[163698.24870000035,4467507.677200001],[163697.17059999984,4467525.489700001],[163697.87370000035,4467536.9506],[163679.68620000035,4467546.8178],[163660.11589999963,4467555.8178],[163644.53000000026,4467573.231899999],[163615.58469999954,4467574.9662999995],[163581.97530000005,4467556.6850000005],[163550.89719999954,4467547.099099999],[163500.43620000035,4467515.0131],[163493.19400000013,4467501.6537999995],[163487.52219999954,4467477.3256],[163460.49870000035,4467444.3725000005],[163487.19400000013,4467395.2475000005],[163468.09250000026,4467399.5600000005],[163421.52219999954,4467435.6537999995],[163397.17059999984,4467453.3256],[163397.59250000026,4467460.239700001],[163385.19400000013,4467471.3256],[163378.77219999954,4467478.4975000005],[163355.19400000013,4467489.3256],[163332.88150000013,4467501.4428],[163295.19400000013,4467507.3256],[163285.56120000035,4467518.106899999],[163259.21750000026,4467519.677200001],[163224.97530000005,4467495.771],[163214.35809999984,4467495.1381],[163205.21750000026,4467495.677200001],[163163.52219999954,4467471.3256],[163139.19400000013,4467465.6537999995],[163112.19400000013,4467444.724099999],[163064.94400000013,4467433.731899999],[163034.03000000026,4467393.8178],[163025.47530000005,4467357.0912999995],[162976.16280000005,4467399.021],[162962.35809999984,4467399.8412999995],[162944.35809999984,4467398.7631],[162923.82689999975,4467400.0053],[162911.52219999954,4467393.3256],[162895.93620000035,4467386.177200001],[162853.72530000005,4467338.927200001],[162815.52219999954,4467309.3256],[162782.14719999954,4467301.544399999],[162755.52219999954,4467258.489700001],[162764.89719999954,4467233.364700001],[162779.59250000026,4467220.239700001],[162778.86589999963,4467208.169399999],[162815.03000000026,4467180.161599999],[162833.52219999954,4467171.6537999995],[162839.19400000013,4467159.3256],[162871.63150000013,4467134.0131],[162881.19400000013,4467123.3256],[162909.15500000026,4467103.0287999995],[162923.19400000013,4467087.3256],[162941.52219999954,4467075.6537999995],[162965.19400000013,4467057.3256],[162994.39719999954,4467036.114700001],[163006.84250000026,4467008.974099999],[163043.19400000013,4466976.5131],[163034.03000000026,4466961.6537999995],[163009.11589999963,4466971.169399999],[162991.56120000035,4466990.8335],[162971.49870000035,4466992.0287999995],[162965.52219999954,4466985.3256],[162941.19400000013,4466979.6537999995],[162918.36589999963,4466967.2553],[162906.53000000026,4466967.9585],[162887.19400000013,4466955.6537999995],[162881.52219999954,4466949.3256],[162862.51439999975,4466932.3335],[162824.92059999984,4466873.224099999],[162767.52219999954,4466841.1381],[162778.32689999975,4466818.5912999995],[162807.67059999984,4466795.8335],[162857.19400000013,4466786.599099999],[162851.52219999954,4466781.3256],[162827.52219999954,4466766.0678],[162833.19400000013,4466763.3256],[162851.52219999954,4466757.6537999995],[162881.19400000013,4466745.3256],[162899.52219999954,4466739.6537999995],[162910.18620000035,4466727.7475000005],[162920.35809999984,4466727.1381],[162953.42839999963,4466729.106899999],[162986.68620000035,4466718.8178],[162995.19400000013,4466709.3256],[163049.52219999954,4466703.6537999995],[163055.19400000013,4466697.3256],[163097.52219999954,4466673.6537999995],[163113.15500000026,4466656.146],[163142.35809999984,4466654.411599999],[163163.47530000005,4466655.677200001],[163172.35809999984,4466652.489700001]],[[163484.35809999984,4467270.489700001],[163455.88150000013,4467273.794399999],[163416.31900000013,4467272.224099999],[163409.47530000005,4467279.606899999],[163397.24089999963,4467285.3725000005],[163375.70189999975,4467318.7475000005],[163350.83469999954,4467327.3725000005],[163328.10030000005,4467292.169399999],[163306.13939999975,4467285.606899999],[163284.31900000013,4467309.1850000005],[163308.57689999975,4467363.3725000005],[163331.24089999963,4467351.3725000005],[163349.47530000005,4467345.606899999],[163374.60030000005,4467336.794399999],[163396.88939999975,4467348.606899999],[163403.24089999963,4467315.3725000005],[163414.37370000035,4467291.606899999],[163454.80339999963,4467324.489700001],[163463.24089999963,4467315.3725000005],[163475.47530000005,4467309.606899999],[163481.24089999963,4467303.3725000005],[163492.30339999963,4467293.1303],[163484.35809999984,4467270.489700001]]]},{"type":"Polygon","coordinates":[[[167636.35809999984,4466580.489700001],[167639.24089999963,4466583.606899999],[167761.49089999963,4466589.771],[167777.24089999963,4466627.0131],[167708.03000000026,4466653.9662999995],[167657.78000000026,4466663.552200001],[167606.75650000013,4466690.552200001],[167585.24089999963,4466697.3725000005],[167533.63150000013,4466715.4662999995],[167489.47530000005,4466733.606899999],[167453.24089999963,4466739.3725000005],[167419.53780000005,4466757.2085],[167387.24089999963,4466763.3725000005],[167363.47530000005,4466781.606899999],[167312.07689999975,4466797.8725000005],[167274.90500000026,4466817.536599999],[167223.36589999963,4466829.8178],[167165.47530000005,4466853.606899999],[167117.24089999963,4466871.3725000005],[167075.47530000005,4466889.606899999],[167057.24089999963,4466895.3725000005],[167043.69400000013,4466902.544399999],[167046.99870000035,4466913.3725000005],[167081.24089999963,4466901.3725000005],[167109.20189999975,4466895.606899999],[167123.24089999963,4466905.4037999995],[167039.24089999963,4466937.3725000005],[166997.47530000005,4466955.606899999],[166961.00650000013,4466967.1381],[166901.82689999975,4466987.8803],[166883.47530000005,4466997.606899999],[166865.42839999963,4467006.114700001],[166807.46750000026,4467024.4662999995],[166793.47530000005,4467009.3725000005],[166770.62370000035,4467003.606899999],[166761.20189999975,4467043.146],[166700.96750000026,4467066.606899999],[166664.12370000035,4467078.2553],[166596.97530000005,4467101.8100000005],[166589.47530000005,4467092.271],[166619.19400000013,4467064.731899999],[166625.24089999963,4467039.3725000005],[166645.09250000026,4466993.9037999995],[166674.45969999954,4466966.6928],[166724.26439999975,4466950.919399999],[166758.38939999975,4466936.9037999995],[166794.36589999963,4466887.8256],[166857.34250000026,4466858.106899999],[166920.20189999975,4466843.1537999995],[166981.74870000035,4466816.271],[167015.47530000005,4466805.606899999],[167063.47530000005,4466784.6537999995],[167117.47530000005,4466769.606899999],[167147.24089999963,4466757.3725000005],[167165.47530000005,4466751.606899999],[167219.24089999963,4466727.3725000005],[167311.60809999984,4466692.239700001],[167358.36589999963,4466677.427200001],[167448.57689999975,4466636.7631],[167504.82679999992,4466623.3803],[167555.24089999963,4466601.3725000005],[167585.47530000005,4466589.606899999],[167597.24089999963,4466583.3725000005],[167636.35809999984,4466580.489700001]]]},{"type":"Polygon","coordinates":[[[165446.35809999984,4466772.489700001],[165443.52219999954,4466769.3256],[165425.19400000013,4466757.6537999995],[165407.52219999954,4466745.3256],[165393.85809999984,4466739.044399999],[165383.35809999984,4466739.677200001],[165367.25650000013,4466738.7162999995],[165327.06120000035,4466724.2787999995],[165299.49870000035,4466709.302200001],[165289.20969999954,4466709.911599999],[165299.82689999975,4466660.271],[165298.91280000005,4466645.1537999995],[165329.52219999954,4466577.6537999995],[165335.19400000013,4466553.3256],[165345.29559999984,4466544.2787999995],[165395.28780000005,4466554.9662999995],[165421.25650000013,4466573.0835],[165449.40500000026,4466586.021],[165479.52219999954,4466595.3256],[165527.19400000013,4466613.6537999995],[165563.92059999984,4466624.9975000005],[165563.17059999984,4466637.489700001],[165564.22530000005,4466654.9975000005],[165547.35030000005,4466702.036599999],[165537.15500000026,4466711.1537999995],[165541.74870000035,4466721.3256],[165573.99870000035,4466685.231899999],[165582.53000000026,4466685.7475000005],[165597.71750000026,4466702.7162999995],[165628.63150000013,4466722.3803],[165667.11589999963,4466733.3256],[165689.82689999975,4466720.974099999],[165717.17839999963,4466722.614700001],[165749.19400000013,4466763.6537999995],[165779.52219999954,4466799.3256],[165791.19400000013,4466821.544399999],[165771.76439999975,4466849.364700001],[165733.70189999975,4466865.3256],[165665.70969999954,4466840.927200001],[165653.21750000026,4466841.677200001],[165641.52219999954,4466835.3256],[165623.19400000013,4466829.6537999995],[165611.52219999954,4466823.3256],[165599.19400000013,4466817.6537999995],[165585.71750000026,4466810.3412999995],[165563.35809999984,4466811.677200001],[165550.79559999984,4466810.927200001],[165485.52219999954,4466781.3256],[165464.35809999984,4466778.489700001],[165456.34250000026,4466774.5053],[165446.35809999984,4466772.489700001]],[[165530.35809999984,4466754.489700001],[165515.73309999984,4466765.7631],[165526.93620000035,4466774.5756],[165530.35809999984,4466754.489700001]]]},{"type":"Polygon","coordinates":[[[162308.35809999984,4466472.489700001],[162317.42839999963,4466487.419399999],[162323.28780000005,4466499.5600000005],[162341.42839999963,4466523.419399999],[162360.31900000013,4466548.9428],[162376.67839999963,4466582.6225000005],[162389.42839999963,4466601.419399999],[162401.99089999963,4466620.5912999995],[162413.28780000005,4466668.146],[162393.74089999963,4466686.919399999],[162290.24089999963,4466748.3725000005],[162245.42839999963,4466775.5600000005],[162197.28780000005,4466804.106899999],[162159.15500000026,4466813.411599999],[162149.05339999963,4466823.911599999],[162149.47530000005,4466844.2553],[162165.67059999984,4466853.419399999],[162197.28780000005,4466829.419399999],[162255.15500000026,4466795.0835],[162277.13939999975,4466780.177200001],[162322.49089999963,4466758.169399999],[162349.65500000026,4466739.771],[162377.28780000005,4466737.239700001],[162356.61589999963,4466808.724099999],[162319.67839999963,4466844.2085],[162286.02219999954,4466866.2631],[162268.32689999975,4466884.6850000005],[162251.19400000013,4466919.981899999],[162235.74870000035,4466934.8412999995],[162198.78780000005,4466896.356899999],[162171.17839999963,4466915.0600000005],[162083.28780000005,4466955.419399999],[162059.54559999984,4466967.677200001],[162025.72530000005,4466984.0835],[161988.83469999954,4466965.052200001],[161969.63939999975,4466925.489700001],[161949.38939999975,4466918.927200001],[161912.19400000013,4466899.7787999995],[161903.42839999963,4466868.8412999995],[161957.42839999963,4466847.5600000005],[162033.15500000026,4466812.919399999],[162065.28780000005,4466793.419399999],[162100.28000000026,4466776.4506],[162119.28780000005,4466749.0756],[162088.79559999984,4466708.9037999995],[162074.47530000005,4466679.3725000005],[162041.10030000005,4466635.3803],[162041.42839999963,4466618.8335],[162064.37370000035,4466596.802200001],[162167.42839999963,4466541.5600000005],[162221.28780000005,4466511.419399999],[162245.54559999984,4466499.677200001],[162292.16280000005,4466475.6537999995],[162308.35809999984,4466472.489700001]]]},{"type":"Polygon","coordinates":[[[171962.35809999984,4466418.489700001],[172022.49870000035,4466504.739700001],[172031.24089999963,4466524.2631],[171999.38939999975,4466553.771],[171959.24089999963,4466577.3725000005],[171935.47530000005,4466595.606899999],[171897.53000000026,4466617.896],[171835.98309999984,4466660.271],[171797.47530000005,4466691.606899999],[171779.24089999963,4466703.3725000005],[171755.47530000005,4466721.606899999],[171725.24089999963,4466739.3725000005],[171696.99870000035,4466758.802200001],[171677.47530000005,4466745.3725000005],[171655.95969999954,4466731.474099999],[171620.75650000013,4466693.5053],[171599.24089999963,4466679.606899999],[171593.47530000005,4466671.919399999],[171649.93620000035,4466627.5053],[171686.35809999984,4466603.9975000005],[171725.12370000035,4466574.2553],[171798.57689999975,4466520.396],[171866.14719999954,4466476.7553],[171899.24089999963,4466451.3725000005],[171939.88150000013,4466421.5600000005],[171962.35809999984,4466418.489700001]]]},{"type":"Polygon","coordinates":[[[163772.35809999984,4466298.489700001],[163775.24089999963,4466301.606899999],[163791.55339999963,4466316.7006],[163757.47530000005,4466348.271],[163763.24089999963,4466367.606899999],[163780.74870000035,4466417.5756],[163748.33469999954,4466439.8881],[163623.74089999963,4466497.169399999],[163579.88939999975,4466507.599099999],[163502.82679999992,4466541.231899999],[163476.43620000035,4466542.286599999],[163463.00650000013,4466529.8412999995],[163449.69400000013,4466487.771],[163433.54559999984,4466487.1381],[163401.99870000035,4466511.3256],[163356.57689999975,4466535.3725000005],[163331.47530000005,4466504.5053],[163341.22530000005,4466465.4350000005],[163373.24089999963,4466439.3725000005],[163414.84250000026,4466408.856899999],[163439.70969999954,4466385.8412999995],[163454.80339999963,4466369.5287999995],[163491.64719999954,4466409.302200001],[163516.49089999963,4466410.286599999],[163536.81120000035,4466396.294399999],[163577.82689999975,4466376.9585],[163616.73309999984,4466356.356899999],[163654.46750000026,4466341.661599999],[163695.85809999984,4466319.771],[163739.47530000005,4466307.606899999],[163751.24089999963,4466301.3725000005],[163772.35809999984,4466298.489700001]]]},{"type":"Polygon","coordinates":[[[162518.35809999984,4465992.489700001],[162550.04559999984,4465996.3100000005],[162608.47530000005,4465973.646],[162619.13939999975,4465986.021],[162605.12370000035,4466019.2553],[162597.74089999963,4466043.864700001],[162580.67839999963,4466067.911599999],[162581.61589999963,4466079.677200001],[162569.12370000035,4466097.2553],[162557.59250000026,4466115.724099999],[162551.12370000035,4466121.2553],[162545.59250000026,4466127.724099999],[162539.12370000035,4466133.2553],[162526.32689999975,4466153.7162999995],[162528.01439999975,4466174.739700001],[162501.45969999954,4466232.9350000005],[162504.01439999975,4466264.552200001],[162493.81900000013,4466292.302200001],[162443.12370000035,4466313.2553],[162425.59250000026,4466325.724099999],[162400.98309999984,4466341.1225000005],[162365.12370000035,4466349.2553],[162359.59250000026,4466355.724099999],[162353.12370000035,4466361.2553],[162347.59250000026,4466367.724099999],[162335.12370000035,4466373.2553],[162329.59250000026,4466379.724099999],[162294.38939999975,4466401.7553],[162270.06120000035,4466388.1850000005],[162262.49089999963,4466413.3803],[162209.96750000026,4466446.2631],[162191.73309999984,4466444.786599999],[162162.48309999984,4466467.7085],[162151.88939999975,4466480.0131],[162101.12370000035,4466499.2553],[162083.59250000026,4466511.724099999],[162064.91280000005,4466520.044399999],[162037.67839999963,4466535.231899999],[162004.98309999984,4466542.661599999],[161979.34250000026,4466540.599099999],[161969.59250000026,4466529.2553],[161960.10030000005,4466521.099099999],[161925.78780000005,4466523.864700001],[161910.92839999963,4466541.114700001],[161897.12370000035,4466547.2553],[161867.59250000026,4466565.724099999],[161843.12370000035,4466571.2553],[161819.59250000026,4466589.724099999],[161807.12370000035,4466595.2553],[161801.59250000026,4466601.724099999],[161735.12370000035,4466637.2553],[161711.59250000026,4466655.724099999],[161679.08469999954,4466667.2553],[161657.59250000026,4466655.2553],[161645.12370000035,4466649.724099999],[161639.59250000026,4466643.2553],[161627.12370000035,4466637.724099999],[161615.59250000026,4466622.396],[161627.59250000026,4466589.724099999],[161630.35809999984,4466580.489700001],[161642.35809999984,4466580.489700001],[161642.35809999984,4466574.489700001],[161654.35809999984,4466574.489700001],[161654.35809999984,4466568.489700001],[161666.35809999984,4466562.489700001],[161682.48309999984,4466560.4506],[161734.30339999963,4466534.481899999],[161738.35809999984,4466526.489700001],[161744.35809999984,4466526.489700001],[161744.35809999984,4466520.489700001],[161756.35809999984,4466520.489700001],[161756.35809999984,4466514.489700001],[161768.35809999984,4466514.489700001],[161768.35809999984,4466508.489700001],[161796.53000000026,4466505.794399999],[161819.73309999984,4466487.864700001],[161822.35809999984,4466478.489700001],[161840.35809999984,4466478.489700001],[161840.35809999984,4466472.489700001],[161861.59250000026,4466469.724099999],[161894.26439999975,4466457.724099999],[161915.59250000026,4466469.2553],[161936.26439999975,4466493.2553],[161969.94400000013,4466467.8725000005],[161967.92839999963,4466442.606899999],[161999.49870000035,4466405.9506],[162023.12370000035,4466397.2553],[162058.84250000026,4466390.7631],[162093.13150000013,4466375.4585],[162127.11589999963,4466351.3412999995],[162152.35809999984,4466342.0835],[162173.21750000026,4466349.7475000005],[162184.51439999975,4466348.8335],[162197.59250000026,4466367.2553],[162210.97530000005,4466397.2553],[162256.30339999963,4466386.1225000005],[162216.01439999975,4466378.786599999],[162198.13150000013,4466346.7475000005],[162220.91280000005,4466334.044399999],[162239.59250000026,4466325.724099999],[162242.35809999984,4466322.489700001],[162260.35809999984,4466322.489700001],[162260.35809999984,4466316.489700001],[162264.38939999975,4466308.521],[162272.35809999984,4466304.489700001],[162284.35809999984,4466304.489700001],[162284.35809999984,4466298.489700001],[162290.35809999984,4466298.489700001],[162290.35809999984,4466292.489700001],[162302.35809999984,4466292.489700001],[162302.35809999984,4466286.489700001],[162328.28000000026,4466283.3256],[162344.35809999984,4466262.489700001],[162346.37370000035,4466258.5053],[162386.35809999984,4466238.489700001],[162392.35809999984,4466238.489700001],[162392.35809999984,4466232.489700001],[162398.35809999984,4466232.489700001],[162398.35809999984,4466226.489700001],[162404.35809999984,4466226.489700001],[162416.35809999984,4466226.489700001],[162416.35809999984,4466220.489700001],[162434.35809999984,4466220.489700001],[162434.35809999984,4466208.489700001],[162446.35809999984,4466202.489700001],[162452.35809999984,4466202.489700001],[162452.35809999984,4466196.489700001],[162472.63150000013,4466179.0287999995],[162437.12370000035,4466133.724099999],[162431.05339999963,4466120.0835],[162401.59250000026,4466109.2553],[162360.34250000026,4466101.7553],[162356.35809999984,4466088.489700001],[162384.15500000026,4466086.0287999995],[162382.63150000013,4466079.231899999],[162389.89719999954,4466068.0287999995],[162399.97530000005,4466041.099099999],[162427.28000000026,4466023.3335],[162460.81900000013,4466012.9506],[162493.98309999984,4466007.7006],[162500.35809999984,4465998.489700001],[162512.35809999984,4465998.489700001],[162512.35809999984,4465992.489700001],[162518.35809999984,4465992.489700001]]]},{"type":"Polygon","coordinates":[[[165236.35809999984,4465950.489700001],[165241.56120000035,4465956.5131],[165275.12370000035,4465965.724099999],[165299.59250000026,4465971.2553],[165329.12370000035,4465983.724099999],[165384.43620000035,4465998.771],[165417.17839999963,4466019.2787999995],[165395.59250000026,4466057.974099999],[165403.56120000035,4466071.9662999995],[165446.87370000035,4466079.864700001],[165505.46750000026,4466101.3803],[165551.59250000026,4466115.2553],[165569.12370000035,4466121.724099999],[165617.12370000035,4466136.161599999],[165599.49870000035,4466169.0678],[165586.74870000035,4466176.169399999],[165527.80339999963,4466160.044399999],[165491.12370000035,4466151.724099999],[165468.03780000005,4466138.8100000005],[165396.27219999954,4466122.521],[165389.12370000035,4466109.724099999],[165381.20189999975,4466091.9350000005],[165342.17839999963,4466084.8100000005],[165263.59250000026,4466061.2553],[165224.28780000005,4466055.2787999995],[165176.45189999975,4466037.724099999],[165167.12370000035,4466043.2553],[165147.69400000013,4466065.8256],[165125.12370000035,4466085.2553],[165102.01439999975,4466125.3803],[165053.24089999963,4466138.739700001],[164938.60809999984,4466125.5912999995],[164926.25650000013,4466114.9506],[164974.70189999975,4466052.3256],[165008.80339999963,4466022.9350000005],[165045.08469999954,4465980.8412999995],[165077.24089999963,4465969.0287999995],[165125.12370000035,4465977.724099999],[165173.59250000026,4465983.2553],[165198.97530000005,4466001.2553],[165203.59250000026,4465995.724099999],[165211.23309999984,4465953.771],[165236.35809999984,4465950.489700001]]]},{"type":"Polygon","coordinates":[[[163724.35809999984,4465950.489700001],[163738.42059999984,4465946.036599999],[163781.24089999963,4465923.3725000005],[163800.78780000005,4465917.1850000005],[163812.62370000035,4465917.6537999995],[163830.10809999984,4465936.521],[163874.35809999984,4465934.786599999],[163901.35809999984,4465935.8412999995],[163931.35809999984,4465934.646],[163955.35809999984,4465935.606899999],[164101.02219999954,4465928.7162999995],[164137.06900000013,4465930.146],[164161.28000000026,4465956.2553],[164159.03000000026,4466012.786599999],[164176.91280000005,4466081.0131],[164159.24089999963,4466097.3725000005],[164156.35809999984,4466100.489700001],[164096.35809999984,4466100.489700001],[163998.78780000005,4466103.7006],[163955.87370000035,4466102.8335],[163952.35809999984,4466106.489700001],[163934.35809999984,4466106.489700001],[163881.38939999975,4466097.606899999],[163865.49870000035,4466077.0287999995],[163862.35809999984,4466058.489700001],[163853.33469999954,4466022.7006],[163844.35809999984,4466016.489700001],[163841.00650000013,4466003.4350000005],[163825.79559999984,4466000.0131],[163787.00650000013,4466009.974099999],[163778.35809999984,4466022.489700001],[163768.37370000035,4466024.5053],[163752.34250000026,4466032.474099999],[163742.35809999984,4466034.489700001],[163688.85030000005,4466041.802200001],[163630.25650000013,4466067.3725000005],[163609.53780000005,4466043.489700001],[163590.90500000026,4465995.677200001],[163583.35809999984,4465995.3725000005],[163571.03000000026,4465995.864700001],[163559.47530000005,4465971.3725000005],[163549.60809999984,4465952.739700001],[163598.47530000005,4465954.6850000005],[163623.76439999975,4465942.7553],[163634.59250000026,4465932.724099999],[163643.24089999963,4465923.3725000005],[163646.35809999984,4465920.489700001],[163646.35809999984,4465926.489700001],[163646.35809999984,4465932.489700001],[163652.35809999984,4465932.489700001],[163652.35809999984,4465950.489700001],[163658.35809999984,4465950.489700001],[163664.10030000005,4465971.114700001],[163707.67059999984,4465964.3412999995],[163718.35809999984,4465950.489700001],[163724.35809999984,4465950.489700001]]]},{"type":"Polygon","coordinates":[[[172232.35809999984,4465878.489700001],[172235.19400000013,4465893.6537999995],[172265.19400000013,4465932.3725000005],[172228.53780000005,4465964.106899999],[172169.52219999954,4466001.6537999995],[172134.27219999954,4466022.1850000005],[172090.44400000013,4466052.794399999],[172045.06900000013,4466079.2085],[172013.52219999954,4466103.6537999995],[171983.19400000013,4466121.3256],[171959.52219999954,4466139.6537999995],[171929.19400000013,4466157.3256],[171911.52219999954,4466169.6537999995],[171881.19400000013,4466187.3256],[171857.52219999954,4466205.6537999995],[171807.38939999975,4466234.856899999],[171737.19400000013,4466283.3256],[171690.85809999984,4466319.231899999],[171658.25650000013,4466321.1537999995],[171623.52219999954,4466276.3412999995],[171637.88939999975,4466263.5912999995],[171668.42839999963,4466249.5756],[171701.19400000013,4466229.3256],[171731.52219999954,4466211.6537999995],[171755.19400000013,4466193.3256],[171785.52219999954,4466175.6537999995],[171792.74089999963,4466129.364700001],[171815.19400000013,4466121.3256],[171842.68620000035,4466112.8178],[171857.49870000035,4466096.2475000005],[171886.81900000013,4466098.0053],[171893.52219999954,4466085.6537999995],[171899.19400000013,4466061.3256],[171930.85809999984,4466042.8803],[171941.94400000013,4466030.481899999],[171965.52219999954,4466019.6537999995],[171977.19400000013,4466013.3256],[171996.41280000005,4466007.396],[172007.19400000013,4465995.3256],[172039.42059999984,4465980.536599999],[172065.29559999984,4465962.4428],[172097.52219999954,4465947.6537999995],[172121.19400000013,4465929.3256],[172153.56120000035,4465908.7475000005],[172186.39719999954,4465883.271],[172232.35809999984,4465878.489700001]]]},{"type":"Polygon","coordinates":[[[167924.35809999984,4466106.489700001],[167930.14719999954,4466075.411599999],[167979.53000000026,4466063.927200001],[167993.19400000013,4466048.3178],[167986.58469999954,4465937.3881],[167975.19400000013,4465905.6537999995],[167966.89719999954,4465843.6381],[167970.83469999954,4465815.6537999995],[168010.65500000026,4465843.474099999],[168017.19400000013,4465947.6537999995],[168023.52219999954,4465989.3256],[168030.57689999975,4466042.0131],[168081.27219999954,4466049.911599999],[168092.35809999984,4466076.489700001],[168092.35809999984,4466094.489700001],[168094.37370000035,4466110.474099999],[168102.34250000026,4466126.5053],[168106.37370000035,4466158.474099999],[168110.35809999984,4466160.489700001],[168113.07689999975,4466199.771],[168129.06120000035,4466242.3100000005],[168139.32689999975,4466333.7631],[168149.63939999975,4466361.2085],[168158.85030000005,4466402.8100000005],[168167.07689999975,4466421.771],[168170.35809999984,4466424.489700001],[168173.54559999984,4466475.489700001],[168173.12370000035,4466482.3803],[168154.35030000005,4466481.2553],[168131.52219999954,4466493.6537999995],[168107.19400000013,4466499.3256],[168053.28780000005,4466515.286599999],[168014.35809999984,4466520.489700001],[168012.06120000035,4466486.786599999],[167998.65500000026,4466446.1928],[167994.06120000035,4466420.786599999],[167990.35809999984,4466418.489700001],[167987.89719999954,4466384.9506],[167984.35809999984,4466370.489700001],[167981.68620000035,4466343.161599999],[167969.92059999984,4466301.911599999],[167962.51439999975,4466251.0053],[167954.35809999984,4466244.489700001],[167954.35809999984,4466226.489700001],[167954.35809999984,4466214.489700001],[167948.35809999984,4466214.489700001],[167948.35809999984,4466196.489700001],[167948.35809999984,4466172.489700001],[167942.35809999984,4466172.489700001],[167942.35809999984,4466166.489700001],[167940.01439999975,4466144.271],[167928.06120000035,4466108.786599999],[167924.35809999984,4466106.489700001]]]},{"type":"Polygon","coordinates":[[[171182.35809999984,4466220.489700001],[171201.99870000035,4466224.239700001],[171160.37370000035,4466273.5053],[171143.24089999963,4466289.3725000005],[171128.82689999975,4466304.9585],[171103.25650000013,4466328.6303],[171083.47530000005,4466355.606899999],[171039.17839999963,4466386.8256],[170993.47530000005,4466439.606899999],[170981.00650000013,4466451.1381],[170963.70969999954,4466469.8412999995],[170921.28780000005,4466509.1225000005],[170890.42059999984,4466551.239700001],[170843.75650000013,4466594.4585],[170869.58469999954,4466628.1381],[170833.63150000013,4466686.8725000005],[170813.94400000013,4466676.4428],[170743.60809999984,4466707.146],[170717.47530000005,4466751.606899999],[170693.24089999963,4466757.3725000005],[170671.98309999984,4466768.6225000005],[170639.24089999963,4466781.3725000005],[170615.47530000005,4466799.606899999],[170583.95189999975,4466811.8881],[170512.81900000013,4466860.8256],[170452.20969999954,4466886.3256],[170407.28000000026,4466913.8412999995],[170381.47530000005,4466931.606899999],[170358.08469999954,4466946.7006],[170320.35030000005,4466955.3725000005],[170285.47530000005,4466931.3725000005],[170255.00650000013,4466913.4662999995],[170294.31120000035,4466898.161599999],[170342.12370000035,4466865.2553],[170369.47530000005,4466847.606899999],[170388.81120000035,4466834.294399999],[170411.47530000005,4466823.606899999],[170440.88939999975,4466808.021],[170490.67059999984,4466784.536599999],[170525.24089999963,4466763.3725000005],[170556.43620000035,4466745.044399999],[170568.15500000026,4466732.411599999],[170567.17059999984,4466707.7787999995],[170530.84250000026,4466674.1225000005],[170483.52219999954,4466639.411599999],[170437.16280000005,4466631.606899999],[170372.33469999954,4466686.3803],[170333.24089999963,4466709.3725000005],[170317.39719999954,4466726.4585],[170285.24089999963,4466745.3725000005],[170261.47530000005,4466763.606899999],[170210.00650000013,4466795.364700001],[170189.47530000005,4466782.2162999995],[170228.68620000035,4466735.786599999],[170237.24089999963,4466710.5912999995],[170210.12370000035,4466648.4585],[170249.47530000005,4466619.606899999],[170273.24089999963,4466601.3725000005],[170303.47530000005,4466583.606899999],[170336.75650000013,4466556.536599999],[170345.24089999963,4466528.7162999995],[170323.65500000026,4466508.7006],[170353.32689999975,4466481.2085],[170393.47530000005,4466457.606899999],[170405.00650000013,4466445.1381],[170425.67839999963,4466426.0131],[170482.42059999984,4466408.036599999],[170541.78780000005,4466376.606899999],[170572.79559999984,4466410.052200001],[170592.69400000013,4466428.4975000005],[170623.53780000005,4466427.2787999995],[170615.24089999963,4466403.606899999],[170608.93620000035,4466357.411599999],[170610.13150000013,4466349.606899999],[170621.24089999963,4466361.606899999],[170641.44400000013,4466367.3725000005],[170680.79559999984,4466324.927200001],[170718.15500000026,4466290.286599999],[170758.56120000035,4466246.6928],[170799.92839999963,4466208.3725000005],[170825.24089999963,4466163.3725000005],[170843.47530000005,4466133.606899999],[170876.89719999954,4466074.239700001],[170891.24089999963,4466037.3725000005],[170898.31900000013,4466023.989700001],[170940.43620000035,4466025.6537999995],[170975.24089999963,4466049.606899999],[171027.85809999984,4466083.5678],[171035.24089999963,4466065.4037999995],[170992.51439999975,4466025.8178],[170993.52219999954,4466000.271],[171083.52219999954,4465930.9428],[171113.47530000005,4465911.606899999],[171170.14719999954,4465862.4350000005],[171209.47530000005,4465833.606899999],[171233.24089999963,4465815.3725000005],[171257.47530000005,4465797.606899999],[171305.17059999984,4465758.794399999],[171342.27219999954,4465774.0287999995],[171365.89719999954,4465810.6381],[171365.03000000026,4465832.8100000005],[171323.24089999963,4465857.3725000005],[171299.47530000005,4465875.606899999],[171264.34250000026,4465892.177200001],[171242.75650000013,4465915.474099999],[171217.95969999954,4465931.5053],[171163.16280000005,4465990.6381],[171137.24089999963,4466007.3725000005],[171099.57679999992,4466039.2006],[171053.07689999975,4466069.2475000005],[171054.06120000035,4466094.2553],[171077.47530000005,4466109.3725000005],[171113.24089999963,4466139.606899999],[171132.08469999954,4466145.5835],[171146.45189999975,4466161.0756],[171140.35809999984,4466178.489700001],[171134.35809999984,4466178.489700001],[171134.35809999984,4466184.489700001],[171111.13150000013,4466191.474099999],[171085.46750000026,4466213.599099999],[171054.92839999963,4466249.0600000005],[171013.02219999954,4466285.1537999995],[170976.92839999963,4466327.0600000005],[170935.02219999954,4466363.1537999995],[170898.92839999963,4466405.0600000005],[170863.46750000026,4466435.599099999],[170832.92839999963,4466471.0600000005],[170801.59250000026,4466498.0600000005],[170765.59250000026,4466544.021],[170783.94400000013,4466560.4506],[170813.59250000026,4466553.724099999],[170843.12370000035,4466529.2553],[170861.59250000026,4466523.724099999],[170894.89719999954,4466470.521],[170940.69400000013,4466463.536599999],[170983.63150000013,4466412.2787999995],[170994.62370000035,4466402.8100000005],[171007.91280000005,4466373.044399999],[171035.59250000026,4466355.724099999],[171041.12370000035,4466349.2553],[171064.98309999984,4466334.3256],[171088.67839999963,4466306.8100000005],[171104.80339999963,4466292.9350000005],[171110.35809999984,4466286.489700001],[171120.34250000026,4466284.474099999],[171128.35809999984,4466280.489700001],[171151.84250000026,4466262.349099999],[171176.35809999984,4466226.489700001],[171182.35809999984,4466226.489700001],[171182.35809999984,4466220.489700001]]]},{"type":"Polygon","coordinates":[[[166004.35809999984,4465926.489700001],[165992.33469999954,4465860.5835],[165952.93620000035,4465851.724099999],[165883.74870000035,4465877.106899999],[165839.59250000026,4465911.724099999],[165817.84250000026,4465923.2553],[165775.67839999963,4465899.7475000005],[165747.03780000005,4465893.231899999],[165725.59250000026,4465881.2553],[165697.91280000005,4465872.9350000005],[165653.59250000026,4465755.2553],[165630.20189999975,4465702.5912999995],[165687.29559999984,4465695.724099999],[165734.49870000035,4465708.6381],[165797.14719999954,4465689.864700001],[165818.68620000035,4465681.9662999995],[165878.10030000005,4465632.794399999],[165903.85809999984,4465651.052200001],[165934.67839999963,4465720.169399999],[165950.80339999963,4465749.044399999],[165962.87370000035,4465776.0912999995],[165983.59250000026,4465809.2553],[166006.93620000035,4465849.7787999995],[166064.94400000013,4465837.1225000005],[166098.92839999963,4465839.864700001],[166111.37370000035,4465854.302200001],[166128.53000000026,4465929.8178],[166151.59250000026,4465989.2553],[166158.06120000035,4466024.8335],[166148.63939999975,4466041.7085],[166106.96750000026,4466024.177200001],[166094.80339999963,4466010.044399999],[166057.39719999954,4465977.8178],[166019.38150000013,4465966.356899999],[166007.59250000026,4465935.2553],[166004.35809999984,4465932.489700001],[166004.35809999984,4465926.489700001]]]},{"type":"Polygon","coordinates":[[[161594.35809999984,4466142.489700001],[161542.86589999963,4466148.349099999],[161543.47530000005,4466119.2631],[161573.42839999963,4466109.5600000005],[161593.39719999954,4466102.7162999995],[161615.28780000005,4466091.419399999],[161627.42839999963,4466085.5600000005],[161650.95969999954,4466073.419399999],[161663.07689999975,4466073.677200001],[161681.28780000005,4466067.419399999],[161699.42839999963,4466061.5600000005],[161751.29559999984,4466041.919399999],[161783.28780000005,4466025.419399999],[161801.42839999963,4466019.5600000005],[161807.28780000005,4466013.419399999],[161837.42839999963,4466007.5600000005],[161860.35030000005,4465995.7475000005],[161879.42839999963,4465989.5600000005],[161891.28780000005,4465983.419399999],[161915.42839999963,4465977.5600000005],[161940.24870000035,4465969.052200001],[161963.28780000005,4465953.419399999],[161975.42839999963,4465947.5600000005],[161999.78000000026,4465934.9975000005],[161998.60809999984,4465878.161599999],[162107.42839999963,4465833.5600000005],[162125.28780000005,4465821.419399999],[162137.42839999963,4465815.5600000005],[162149.28780000005,4465809.419399999],[162186.31900000013,4465803.396],[162223.39719999954,4465790.7162999995],[162245.28780000005,4465779.419399999],[162269.42839999963,4465773.5600000005],[162295.25650000013,4465764.7006],[162323.28780000005,4465743.419399999],[162336.38939999975,4465737.0912999995],[162373.06900000013,4465737.8412999995],[162417.74089999963,4465710.724099999],[162460.79559999984,4465700.2475000005],[162503.28780000005,4465671.419399999],[162545.42839999963,4465665.5600000005],[162563.28780000005,4465659.419399999],[162581.42839999963,4465653.5600000005],[162615.95189999975,4465635.7475000005],[162641.42839999963,4465629.5600000005],[162676.09250000026,4465606.052200001],[162656.00650000013,4465655.5756],[162623.28780000005,4465671.419399999],[162590.35809999984,4465698.021],[162581.42839999963,4465725.5600000005],[162569.28780000005,4465731.419399999],[162550.95969999954,4465743.864700001],[162514.28000000026,4465755.771],[162491.42839999963,4465779.5600000005],[162481.20969999954,4465789.356899999],[162425.89719999954,4465804.9428],[162401.42839999963,4465821.5600000005],[162347.28780000005,4465827.419399999],[162297.45969999954,4465865.2475000005],[162245.28780000005,4465875.419399999],[162229.32689999975,4465883.669399999],[162221.42839999963,4465875.419399999],[162208.23309999984,4465869.5600000005],[162158.68620000035,4465882.239700001],[162135.41280000005,4465917.7475000005],[162101.63929999992,4465917.0678],[162086.59250000026,4465932.724099999],[162064.56120000035,4465953.911599999],[162035.19400000013,4465953.302200001],[162017.52219999954,4465971.677200001],[162002.35809999984,4465971.3725000005],[161986.81900000013,4465971.677200001],[161975.42839999963,4465983.5600000005],[161942.00650000013,4466005.4506],[161893.32689999975,4466017.3335],[161880.92839999963,4466030.224099999],[161813.28780000005,4466043.419399999],[161801.42839999963,4466049.5600000005],[161789.28780000005,4466055.419399999],[161779.56120000035,4466065.5678],[161745.95189999975,4466073.7475000005],[161711.42839999963,4466091.5600000005],[161681.66280000005,4466105.9975000005],[161633.28780000005,4466115.419399999],[161602.28000000026,4466134.239700001],[161594.35809999984,4466142.489700001]]]},{"type":"Polygon","coordinates":[[[171782.35809999984,4465572.489700001],[171794.49870000035,4465593.349099999],[171833.19400000013,4465621.427200001],[171815.52219999954,4465641.6537999995],[171778.84250000026,4465664.974099999],[171727.56120000035,4465704.7475000005],[171695.19400000013,4465725.3256],[171659.52219999954,4465755.6537999995],[171635.19400000013,4465773.3256],[171605.52219999954,4465797.6537999995],[171563.19400000013,4465821.3256],[171545.99089999963,4465840.5678],[171521.52219999954,4465857.6537999995],[171485.59250000026,4465880.5053],[171485.12370000035,4465888.4037999995],[171521.19400000013,4465886.2475000005],[171502.02219999954,4465911.3256],[171452.33469999954,4465901.552200001],[171432.36589999963,4465858.0756],[171414.17839999963,4465841.8335],[171402.95189999975,4465817.3881],[171383.52219999954,4465789.544399999],[171389.19400000013,4465767.3256],[171421.56120000035,4465746.7475000005],[171483.13150000013,4465699.0287999995],[171515.87370000035,4465684.0053],[171570.90500000026,4465645.544399999],[171611.19400000013,4465627.052200001],[171576.83469999954,4465629.6537999995],[171505.60809999984,4465659.2787999995],[171454.88939999975,4465668.7475000005],[171392.47530000005,4465697.036599999],[171359.19400000013,4465707.3256],[171325.74870000035,4465719.3256],[171305.52219999954,4465705.9428],[171323.92059999984,4465679.739700001],[171343.91280000005,4465670.552200001],[171380.82689999975,4465644.771],[171435.92839999963,4465625.0131],[171467.52219999954,4465617.6537999995],[171520.98309999984,4465601.8335],[171648.43620000035,4465590.5600000005],[171671.61589999963,4465603.146],[171749.19400000013,4465575.3256],[171782.35809999984,4465572.489700001]]]},{"type":"Polygon","coordinates":[[[166412.35809999984,4466040.489700001],[166415.12370000035,4466055.724099999],[166427.61589999963,4466097.3725000005],[166426.98309999984,4466105.1537999995],[166399.32689999975,4466102.927200001],[166363.91280000005,4466089.919399999],[166349.59250000026,4466037.2553],[166343.12370000035,4466019.724099999],[166330.81900000013,4465952.224099999],[166307.12370000035,4465887.724099999],[166297.65500000026,4465794.794399999],[166337.59250000026,4465785.724099999],[166343.12370000035,4465756.849099999],[166306.23309999984,4465770.419399999],[166269.60030000005,4465741.7085],[166254.71750000026,4465708.356899999],[166173.95189999975,4465701.606899999],[166157.59250000026,4465647.2553],[166133.80339999963,4465590.8178],[166147.16280000005,4465566.8881],[166207.67839999963,4465553.1537999995],[166243.20969999954,4465540.099099999],[166317.38939999975,4465546.052200001],[166349.12370000035,4465557.724099999],[166391.59250000026,4465569.2553],[166403.12370000035,4465575.724099999],[166453.88939999975,4465590.981899999],[166468.09250000026,4465668.864700001],[166478.80339999963,4465698.044399999],[166487.12370000035,4465743.724099999],[166496.35809999984,4465776.489700001],[166500.34250000026,4465784.5053],[166502.35809999984,4465794.489700001],[166507.53780000005,4465839.161599999],[166493.47530000005,4465809.3725000005],[166490.35809999984,4465806.489700001],[166490.35809999984,4465800.489700001],[166485.13150000013,4465769.7162999995],[166478.35809999984,4465764.489700001],[166475.89719999954,4465748.9506],[166472.35809999984,4465734.489700001],[166472.35809999984,4465716.489700001],[166466.35809999984,4465716.489700001],[166466.35809999984,4465710.489700001],[166466.35809999984,4465704.489700001],[166460.35809999984,4465704.489700001],[166460.35809999984,4465692.489700001],[166448.35809999984,4465692.489700001],[166448.35809999984,4465686.489700001],[166430.35809999984,4465686.489700001],[166430.35809999984,4465692.489700001],[166410.15500000026,4465695.677200001],[166406.35809999984,4465710.489700001],[166410.06120000035,4465748.177200001],[166398.03780000005,4465762.169399999],[166380.20189999975,4465777.521],[166405.95969999954,4465789.0053],[166424.35809999984,4465800.489700001],[166424.35809999984,4465806.489700001],[166430.35809999984,4465806.489700001],[166430.35809999984,4465818.489700001],[166436.35809999984,4465818.489700001],[166436.35809999984,4465824.489700001],[166436.35809999984,4465836.489700001],[166442.35809999984,4465836.489700001],[166442.35809999984,4465848.489700001],[166433.63939999975,4465851.771],[166379.87370000035,4465861.356899999],[166373.63939999975,4465922.6225000005],[166391.07689999975,4465965.771],[166394.35809999984,4465968.489700001],[166394.35809999984,4465980.489700001],[166403.99089999963,4466033.271],[166412.35809999984,4466040.489700001]]]},{"type":"Polygon","coordinates":[[[172268.35809999984,4465500.489700001],[172295.52219999954,4465497.6537999995],[172339.25650000013,4465484.7162999995],[172364.21750000026,4465486.1928],[172385.19400000013,4465509.6537999995],[172399.84250000026,4465522.7553],[172409.19400000013,4465549.544399999],[172373.31120000035,4465566.021],[172343.19400000013,4465575.3256],[172325.52219999954,4465581.6537999995],[172307.19400000013,4465587.3256],[172289.47530000005,4465593.677200001],[172278.08469999954,4465592.9975000005],[172256.70969999954,4465600.661599999],[172241.52219999954,4465617.6537999995],[172217.19400000013,4465623.3256],[172191.06120000035,4465632.7006],[172162.39719999954,4465648.2631],[172080.06120000035,4465663.6381],[172064.33469999954,4465681.239700001],[171988.93620000035,4465702.0053],[171971.35809999984,4465700.9506],[171958.84250000026,4465701.7006],[171959.85030000005,4465718.927200001],[171905.19400000013,4465725.3256],[171899.52219999954,4465731.6537999995],[171893.19400000013,4465737.3256],[171872.78000000026,4465769.411599999],[171851.19400000013,4465779.3256],[171833.52219999954,4465791.6537999995],[171821.19400000013,4465797.3256],[171815.52219999954,4465809.6537999995],[171808.46750000026,4465822.6381],[171785.19400000013,4465833.3256],[171756.90500000026,4465848.7006],[171743.52219999954,4465863.6537999995],[171727.06900000013,4465878.349099999],[171709.98309999984,4465905.231899999],[171701.52219999954,4465923.6537999995],[171671.19400000013,4465929.3256],[171641.52219999954,4465941.6537999995],[171603.36589999963,4465947.3256],[171593.52219999954,4465919.8335],[171665.17059999984,4465855.802200001],[171714.85809999984,4465826.8803],[171745.60809999984,4465792.474099999],[171779.68620000035,4465776.8178],[171815.19400000013,4465749.3256],[171846.03780000005,4465735.169399999],[171884.49870000035,4465714.2631],[171894.83469999954,4465691.739700001],[171929.52219999954,4465683.6537999995],[171947.19400000013,4465671.3256],[172007.59250000026,4465632.8881],[172037.52219999954,4465623.6537999995],[172072.86589999963,4465601.8100000005],[172076.35809999984,4465590.489700001],[172088.35809999984,4465590.489700001],[172088.35809999984,4465584.489700001],[172108.56120000035,4465581.0678],[172138.98309999984,4465569.114700001],[172157.73309999984,4465563.864700001],[172198.98309999984,4465545.114700001],[172230.97530000005,4465536.1850000005],[172248.38939999975,4465522.7553],[172244.35809999984,4465512.489700001],[172250.35809999984,4465512.489700001],[172256.35809999984,4465512.489700001],[172256.35809999984,4465506.489700001],[172262.35809999984,4465506.489700001],[172268.35809999984,4465506.489700001],[172268.35809999984,4465500.489700001]]]},{"type":"Polygon","coordinates":[[[168512.35809999984,4465236.489700001],[168516.55339999963,4465250.106899999],[168536.68620000035,4465287.161599999],[168553.67839999963,4465324.169399999],[168574.25650000013,4465362.044399999],[168589.70189999975,4465402.2162999995],[168605.52219999954,4465431.3256],[168622.51439999975,4465468.3335],[168646.25650000013,4465512.044399999],[168661.70189999975,4465552.2162999995],[168677.52219999954,4465581.3256],[168683.19400000013,4465597.544399999],[168658.93620000035,4465632.2787999995],[168606.06120000035,4465665.3256],[168550.77219999954,4465640.9975000005],[168532.13939999975,4465642.099099999],[168535.02219999954,4465690.3100000005],[168519.60030000005,4465701.3256],[168496.20969999954,4465688.599099999],[168479.87370000035,4465652.974099999],[168467.19400000013,4465629.6537999995],[168460.84250000026,4465609.099099999],[168449.19400000013,4465587.6537999995],[168440.68620000035,4465569.161599999],[168431.19400000013,4465551.6537999995],[168425.52219999954,4465533.3256],[168419.19400000013,4465515.6537999995],[168408.27219999954,4465480.2631],[168389.19400000013,4465455.6537999995],[168374.49870000035,4465417.427200001],[168352.84250000026,4465407.5131],[168341.52219999954,4465371.8178],[168406.67839999963,4465297.099099999],[168448.44400000013,4465272.794399999],[168490.95969999954,4465243.099099999],[168512.35809999984,4465236.489700001]]]},{"type":"Polygon","coordinates":[[[168848.35809999984,4465272.489700001],[168868.95969999954,4465233.864700001],[168916.28000000026,4465239.6537999995],[168937.58469999954,4465267.2631],[168944.35809999984,4465272.489700001],[168944.35809999984,4465278.489700001],[168950.35809999984,4465278.489700001],[168956.35809999984,4465278.489700001],[168956.35809999984,4465290.489700001],[168956.35809999984,4465296.489700001],[168962.35809999984,4465296.489700001],[168962.35809999984,4465302.489700001],[168964.77219999954,4465321.6381],[168974.35809999984,4465326.489700001],[168979.11589999963,4465342.6850000005],[169007.07689999975,4465407.771],[169016.35809999984,4465410.489700001],[169020.34250000026,4465418.5053],[169022.35809999984,4465428.489700001],[169022.35809999984,4465434.489700001],[169028.35809999984,4465434.489700001],[169028.35809999984,4465446.489700001],[169040.35809999984,4465446.489700001],[169044.34250000026,4465454.5053],[169048.37370000035,4465474.474099999],[169064.35809999984,4465476.489700001],[169064.35809999984,4465482.489700001],[169064.35809999984,4465494.489700001],[169070.35809999984,4465494.489700001],[169070.35809999984,4465500.489700001],[169076.35809999984,4465500.489700001],[169079.03000000026,4465513.7787999995],[169088.35809999984,4465518.489700001],[169091.56900000013,4465529.9975000005],[169106.54559999984,4465566.606899999],[169132.09250000026,4465601.0600000005],[169138.98309999984,4465617.864700001],[169148.35809999984,4465620.489700001],[169154.35809999984,4465632.489700001],[169154.35809999984,4465638.489700001],[169160.35809999984,4465638.489700001],[169160.35809999984,4465644.489700001],[169160.35809999984,4465650.489700001],[169166.35809999984,4465650.489700001],[169166.35809999984,4465662.489700001],[169172.35809999984,4465662.489700001],[169176.34250000026,4465670.5053],[169178.35809999984,4465680.489700001],[169181.12370000035,4465689.724099999],[169191.95189999975,4465719.1381],[169172.19400000013,4465754.552200001],[169157.12370000035,4465761.2553],[169151.59250000026,4465767.724099999],[169142.78000000026,4465775.294399999],[169064.63939999975,4465798.0053],[169052.96750000026,4465797.0678],[169031.59250000026,4465767.2553],[169025.12370000035,4465761.724099999],[169019.59250000026,4465749.2553],[169001.12370000035,4465719.724099999],[168989.59250000026,4465689.2553],[168971.12370000035,4465665.724099999],[168953.59250000026,4465635.2553],[168947.12370000035,4465629.724099999],[168923.87370000035,4465589.364700001],[168914.80339999963,4465569.044399999],[168905.12370000035,4465551.724099999],[168899.59250000026,4465534.9428],[168923.59250000026,4465527.724099999],[168955.86589999963,4465507.5678],[168951.85809999984,4465457.739700001],[168932.35809999984,4465446.489700001],[168932.35809999984,4465434.489700001],[168926.35809999984,4465434.489700001],[168926.35809999984,4465422.489700001],[168920.35809999984,4465422.489700001],[168920.35809999984,4465416.489700001],[168920.35809999984,4465410.489700001],[168914.35809999984,4465410.489700001],[168908.35809999984,4465386.489700001],[168908.35809999984,4465380.489700001],[168902.35809999984,4465380.489700001],[168902.35809999984,4465374.489700001],[168902.35809999984,4465368.489700001],[168896.35809999984,4465368.489700001],[168892.30339999963,4465344.6303],[168884.35809999984,4465338.489700001],[168884.35809999984,4465326.489700001],[168878.35809999984,4465326.489700001],[168878.35809999984,4465320.489700001],[168878.35809999984,4465302.489700001],[168872.35809999984,4465302.489700001],[168869.68620000035,4465289.2006],[168860.35809999984,4465284.489700001],[168860.35809999984,4465278.489700001],[168854.35809999984,4465278.489700001],[168848.35809999984,4465278.489700001],[168848.35809999984,4465272.489700001]]]},{"type":"Polygon","coordinates":[[[162140.35809999984,4464924.489700001],[162174.85809999984,4464960.396],[162235.46750000026,4465003.3803],[162275.28780000005,4465035.5600000005],[162312.62370000035,4465060.0053],[162341.89719999954,4465059.419399999],[162341.24089999963,4465026.606899999],[162276.03780000005,4464971.0600000005],[162267.50650000013,4464953.481899999],[162279.67059999984,4464939.5600000005],[162311.28780000005,4464963.5600000005],[162353.42839999963,4464993.419399999],[162377.28780000005,4465011.5600000005],[162395.42839999963,4465023.419399999],[162418.44400000013,4465047.396],[162425.56900000013,4465091.224099999],[162482.26439999975,4465145.6928],[162544.86589999963,4465186.731899999],[162629.28780000005,4465266.864700001],[162608.45189999975,4465297.6381],[162559.44400000013,4465323.419399999],[162509.42839999963,4465281.419399999],[162491.28780000005,4465269.5600000005],[162473.42839999963,4465257.419399999],[162421.74870000035,4465225.356899999],[162389.42839999963,4465203.419399999],[162353.17059999984,4465191.677200001],[162329.42839999963,4465179.419399999],[162312.50650000013,4465171.239700001],[162229.46750000026,4465161.0912999995],[162200.89719999954,4465141.731899999],[162172.58469999954,4465094.036599999],[162173.73309999984,4465038.349099999],[162089.28780000005,4464969.5600000005],[162083.42839999963,4464962.8335],[162119.00650000013,4464928.661599999],[162140.35809999984,4464924.489700001]]]},{"type":"Polygon","coordinates":[[[171236.35809999984,4465020.489700001],[171250.93620000035,4465007.481899999],[171257.19400000013,4464988.544399999],[171191.26439999975,4464929.646],[171190.18620000035,4464897.6537999995],[171341.19400000013,4465029.6537999995],[171404.07689999975,4465083.864700001],[171447.17839999963,4465111.286599999],[171507.53000000026,4465163.9037999995],[171521.19400000013,4465187.271],[171482.35809999984,4465176.864700001],[171454.32679999992,4465198.5912999995],[171395.19400000013,4465221.3256],[171325.44400000013,4465250.3178],[171305.52219999954,4465281.6537999995],[171267.60030000005,4465296.231899999],[171245.52219999954,4465311.6537999995],[171231.15500000026,4465318.2631],[171213.36589999963,4465317.1850000005],[171191.33469999954,4465305.2085],[171152.85030000005,4465335.044399999],[171119.19400000013,4465341.3256],[171113.52219999954,4465353.6537999995],[171065.96750000026,4465371.9350000005],[171041.87370000035,4465363.286599999],[171022.51439999975,4465352.7631],[171023.63929999992,4465333.6381],[171081.36589999963,4465307.1303],[171145.44400000013,4465292.224099999],[171209.19400000013,4465263.3256],[171242.17059999984,4465253.1303],[171293.92059999984,4465230.349099999],[171356.17059999984,4465211.1303],[171401.19400000013,4465191.3256],[171443.19400000013,4465178.3412999995],[171461.19400000013,4465165.0053],[171431.66280000005,4465155.6537999995],[171359.52219999954,4465185.6537999995],[171329.19400000013,4465197.3256],[171282.34250000026,4465216.802200001],[171191.19400000013,4465251.3256],[171157.39719999954,4465265.364700001],[171125.19400000013,4465275.3256],[171090.78780000005,4465287.6537999995],[171047.52219999954,4465305.6537999995],[171029.19400000013,4465311.3256],[170975.35809999984,4465335.021],[170951.52219999954,4465304.3881],[170971.95969999954,4465286.1303],[171053.52219999954,4465263.6537999995],[171075.60030000005,4465248.231899999],[171113.52219999954,4465233.6537999995],[171165.27219999954,4465210.8725000005],[171227.52219999954,4465191.6537999995],[171289.39719999954,4465163.599099999],[171325.20969999954,4465155.2787999995],[171380.87370000035,4465125.021],[171389.19400000013,4465108.2162999995],[171356.45189999975,4465068.3256],[171276.78780000005,4465006.169399999],[171269.52219999954,4465029.6537999995],[171254.35809999984,4465032.489700001],[171241.06900000013,4465029.8178],[171236.35809999984,4465020.489700001]]]},{"type":"Polygon","coordinates":[[[167960.35809999984,4465314.489700001],[167979.85809999984,4465359.1850000005],[167969.26439999975,4465359.606899999],[167951.47530000005,4465353.3725000005],[167898.95189999975,4465336.7553],[167863.09250000026,4465303.521],[167855.47530000005,4465287.3725000005],[167843.24089999963,4465269.606899999],[167831.31120000035,4465231.9428],[167807.47530000005,4465191.3725000005],[167795.24089999963,4465173.606899999],[167786.59250000026,4465155.2553],[167772.41280000005,4465128.4662999995],[167735.24089999963,4465047.606899999],[167729.47530000005,4465029.3725000005],[167717.24089999963,4464999.606899999],[167705.47530000005,4464969.3725000005],[167669.52219999954,4464922.4975000005],[167669.03000000026,4464910.0756],[167680.51439999975,4464897.677200001],[167780.45189999975,4464889.0053],[167789.47530000005,4464897.3725000005],[167805.10809999984,4464930.489700001],[167820.55339999963,4464952.9428],[167839.88939999975,4464993.9585],[167858.59250000026,4465029.2553],[167867.24089999963,4465047.606899999],[167909.05339999963,4465126.5912999995],[167909.82689999975,4465146.606899999],[167879.47530000005,4465160.927200001],[167891.92059999984,4465180.661599999],[167900.35809999984,4465188.489700001],[167906.87370000035,4465213.849099999],[167920.81900000013,4465234.0287999995],[167924.35809999984,4465236.489700001],[167924.35809999984,4465248.489700001],[167930.35809999984,4465248.489700001],[167930.35809999984,4465260.489700001],[167936.35809999984,4465260.489700001],[167936.35809999984,4465266.489700001],[167936.35809999984,4465272.489700001],[167942.35809999984,4465272.489700001],[167942.35809999984,4465284.489700001],[167942.35809999984,4465290.489700001],[167948.35809999984,4465290.489700001],[167948.35809999984,4465302.489700001],[167954.35809999984,4465302.489700001],[167954.35809999984,4465314.489700001],[167960.35809999984,4465314.489700001]]]},{"type":"Polygon","coordinates":[[[170120.35809999984,4464516.489700001],[170123.87370000035,4464497.177200001],[170144.45189999975,4464489.724099999],[170204.42839999963,4464511.731899999],[170237.59250000026,4464519.2553],[170261.12370000035,4464525.724099999],[170285.59250000026,4464531.2553],[170309.12370000035,4464537.724099999],[170339.59250000026,4464543.2553],[170382.27219999954,4464562.2162999995],[170399.12370000035,4464578.2475000005],[170387.12370000035,4464633.2553],[170375.33469999954,4464697.9662999995],[170369.59250000026,4464735.724099999],[170357.66280000005,4464779.294399999],[170351.59250000026,4464825.724099999],[170345.12370000035,4464849.2553],[170339.42839999963,4464905.2475000005],[170327.10030000005,4464927.3256],[170282.35809999984,4464930.489700001],[170270.35809999984,4464930.489700001],[170256.60030000005,4464922.0053],[170244.06120000035,4464884.786599999],[170240.35809999984,4464882.489700001],[170240.35809999984,4464870.489700001],[170243.12370000035,4464861.2553],[170253.17839999963,4464843.2787999995],[170225.12370000035,4464825.724099999],[170219.59250000026,4464795.2553],[170202.08469999954,4464763.919399999],[170193.74089999963,4464727.1225000005],[170177.12370000035,4464687.724099999],[170171.59250000026,4464669.2553],[170162.26439999975,4464643.896],[170144.99089999963,4464567.864700001],[170129.59250000026,4464543.2553],[170126.35809999984,4464540.489700001],[170126.35809999984,4464534.489700001],[170126.35809999984,4464522.489700001],[170120.35809999984,4464522.489700001],[170120.35809999984,4464516.489700001]]]},{"type":"Polygon","coordinates":[[[170606.35809999984,4464546.489700001],[170589.53000000026,4464540.5835],[170505.38939999975,4464543.9350000005],[170495.47530000005,4464585.606899999],[170488.81900000013,4464610.989700001],[170489.70969999954,4464633.489700001],[170488.49089999963,4464664.474099999],[170471.24089999963,4464723.3725000005],[170465.47530000005,4464747.606899999],[170452.37370000035,4464779.5053],[170453.89719999954,4464817.989700001],[170447.24089999963,4464843.3725000005],[170438.31120000035,4464880.919399999],[170420.12370000035,4464915.2553],[170407.20969999954,4464942.606899999],[170398.58469999954,4464957.3725000005],[170385.24870000035,4464942.9585],[170393.47530000005,4464903.5600000005],[170393.00650000013,4464891.489700001],[170394.08469999954,4464864.0912999995],[170406.13150000013,4464829.7553],[170405.12370000035,4464804.489700001],[170405.68620000035,4464790.099099999],[170429.47530000005,4464735.606899999],[170435.78000000026,4464682.9428],[170434.81900000013,4464658.989700001],[170441.47530000005,4464633.5835],[170440.20969999954,4464601.356899999],[170448.08469999954,4464571.286599999],[170476.49089999963,4464544.9662999995],[170453.24089999963,4464537.606899999],[170432.59250000026,4464530.364700001],[170443.60809999984,4464509.5756],[170510.45189999975,4464521.2006],[170527.30339999963,4464512.294399999],[170555.24089999963,4464519.606899999],[170592.13150000013,4464525.3725000005],[170603.24089999963,4464513.3725000005],[170623.44400000013,4464507.606899999],[170672.87370000035,4464520.544399999],[170787.78780000005,4464513.0912999995],[170854.16280000005,4464524.646],[170887.42059999984,4464501.7475000005],[170923.09250000026,4464514.2631],[170946.15500000026,4464513.349099999],[170958.95189999975,4464499.544399999],[171032.49870000035,4464512.3412999995],[171054.92839999963,4464500.481899999],[171122.52219999954,4464503.1537999995],[171139.77219999954,4464494.036599999],[171200.35809999984,4464496.4506],[171302.89719999954,4464492.3725000005],[171311.24089999963,4464483.3725000005],[171331.44400000013,4464477.606899999],[171386.35809999984,4464491.9975000005],[171419.24089999963,4464483.3725000005],[171485.47530000005,4464477.606899999],[171491.24089999963,4464471.3725000005],[171500.80339999963,4464465.606899999],[171515.24089999963,4464475.2162999995],[171493.32689999975,4464507.0678],[171385.93620000035,4464514.427200001],[171353.35809999984,4464513.1381],[171332.35809999984,4464513.9585],[171317.26439999975,4464513.3725000005],[171298.16280000005,4464526.521],[171248.35809999984,4464524.5287999995],[171203.35809999984,4464526.3335],[171138.74089999963,4464523.7553],[171131.47530000005,4464531.606899999],[171107.24089999963,4464537.3725000005],[171086.21750000026,4464551.856899999],[171077.47530000005,4464597.606899999],[171067.06900000013,4464603.3725000005],[171057.53000000026,4464573.2085],[171046.74870000035,4464573.6303],[171048.20189999975,4464537.349099999],[171035.80339999963,4464537.8178],[171003.81120000035,4464524.6928],[170957.47530000005,4464531.606899999],[170878.88939999975,4464537.396],[170865.64719999954,4464565.474099999],[170855.47530000005,4464597.606899999],[170846.35809999984,4464600.489700001],[170850.53000000026,4464575.106899999],[170846.35809999984,4464564.489700001],[170852.35809999984,4464564.489700001],[170852.35809999984,4464540.489700001],[170840.35809999984,4464540.489700001],[170828.35809999984,4464540.489700001],[170809.98309999984,4464543.606899999],[170783.73309999984,4464553.2162999995],[170795.73309999984,4464573.114700001],[170798.35809999984,4464594.489700001],[170798.35809999984,4464624.489700001],[170794.37370000035,4464632.5053],[170792.35809999984,4464660.489700001],[170792.35809999984,4464678.489700001],[170786.35809999984,4464678.489700001],[170786.35809999984,4464702.489700001],[170792.35809999984,4464702.489700001],[170792.35809999984,4464708.489700001],[170786.35809999984,4464708.489700001],[170786.35809999984,4464714.489700001],[170786.35809999984,4464732.489700001],[170782.98309999984,4464735.114700001],[170771.10030000005,4464764.1303],[170768.35809999984,4464786.489700001],[170766.34250000026,4464796.474099999],[170757.60030000005,4464814.0756],[170762.35809999984,4464816.489700001],[170759.52219999954,4464837.6537999995],[170739.60030000005,4464861.3256],[170721.20189999975,4464840.724099999],[170723.70969999954,4464798.489700001],[170722.88939999975,4464784.474099999],[170729.52219999954,4464759.6537999995],[170738.89719999954,4464719.364700001],[170751.34250000026,4464708.2553],[170759.19400000013,4464591.3256],[170765.82689999975,4464566.5053],[170764.91280000005,4464550.849099999],[170732.35809999984,4464546.489700001],[170726.35809999984,4464546.489700001],[170726.35809999984,4464540.489700001],[170708.35809999984,4464540.489700001],[170708.35809999984,4464546.489700001],[170696.35809999984,4464546.489700001],[170690.35809999984,4464546.489700001],[170690.35809999984,4464552.489700001],[170668.86589999963,4464549.981899999],[170645.85030000005,4464542.9975000005],[170609.21750000026,4464535.661599999],[170606.35809999984,4464546.489700001]]]},{"type":"Polygon","coordinates":[[[162944.35809999984,4464546.489700001],[162947.24089999963,4464549.606899999],[162983.07689999975,4464563.552200001],[162984.57689999975,4464600.981899999],[162946.51439999975,4464706.989700001],[162917.47530000005,4464699.3725000005],[162879.85809999984,4464693.396],[162783.60030000005,4464667.544399999],[162715.60809999984,4464605.856899999],[162636.81120000035,4464568.6850000005],[162617.47530000005,4464555.3725000005],[162587.24089999963,4464543.606899999],[162557.47530000005,4464531.3725000005],[162515.24089999963,4464519.606899999],[162468.27219999954,4464505.849099999],[162425.24089999963,4464495.606899999],[162395.47530000005,4464483.3725000005],[162335.73309999984,4464471.9585],[162335.00650000013,4464453.6303],[162365.87370000035,4464452.3881],[162425.12370000035,4464462.724099999],[162515.47530000005,4464471.3725000005],[162545.38150000013,4464477.6303],[162591.27219999954,4464465.606899999],[162641.47530000005,4464477.3725000005],[162665.24089999963,4464483.606899999],[162698.35809999984,4464486.489700001],[162702.57689999975,4464491.7631],[162755.03000000026,4464507.8178],[162785.68620000035,4464513.161599999],[162851.03000000026,4464531.8178],[162899.68620000035,4464537.161599999],[162929.03000000026,4464543.8178],[162944.35809999984,4464546.489700001]]]},{"type":"Polygon","coordinates":[[[164726.35809999984,4464420.489700001],[164729.63939999975,4464430.849099999],[164762.89719999954,4464461.669399999],[164783.47530000005,4464471.3725000005],[164810.28780000005,4464491.927200001],[164824.11589999963,4464506.856899999],[164804.47530000005,4464535.4037999995],[164773.37370000035,4464558.2085],[164741.24089999963,4464573.3725000005],[164719.81900000013,4464588.114700001],[164694.97530000005,4464614.927200001],[164669.26439999975,4464597.231899999],[164663.00650000013,4464623.552200001],[164593.04559999984,4464674.856899999],[164568.17839999963,4464686.599099999],[164492.78000000026,4464618.9585],[164414.10030000005,4464688.4975000005],[164387.47530000005,4464680.271],[164405.47530000005,4464663.606899999],[164419.88939999975,4464648.021],[164445.36589999963,4464624.4428],[164453.24089999963,4464591.3725000005],[164465.92059999984,4464572.927200001],[164464.88939999975,4464546.489700001],[164465.59250000026,4464528.864700001],[164505.31900000013,4464492.021],[164575.93620000035,4464478.544399999],[164621.24089999963,4464447.3725000005],[164653.84250000026,4464428.2006],[164726.35809999984,4464420.489700001]]]},{"type":"Polygon","coordinates":[[[163724.35809999984,4464510.489700001],[163715.75650000013,4464501.536599999],[163697.28780000005,4464495.5600000005],[163685.42839999963,4464489.419399999],[163648.39719999954,4464483.396],[163613.42839999963,4464471.419399999],[163552.88939999975,4464459.606899999],[163519.16280000005,4464424.521],[163505.19400000013,4464417.302200001],[163476.31900000013,4464417.8881],[163445.75650000013,4464407.4350000005],[163383.43620000035,4464397.286599999],[163367.42839999963,4464381.911599999],[163422.01439999975,4464377.5287999995],[163451.28780000005,4464387.5600000005],[163469.42839999963,4464393.419399999],[163484.35809999984,4464401.1303],[163501.46750000026,4464392.3178],[163523.42839999963,4464399.419399999],[163550.35809999984,4464408.6537999995],[163594.46750000026,4464393.5600000005],[163610.35809999984,4464400.7553],[163625.28780000005,4464423.5600000005],[163631.42839999963,4464429.419399999],[163644.83469999954,4464457.052200001],[163661.75650000013,4464465.794399999],[163684.58469999954,4464465.3256],[163703.42839999963,4464471.419399999],[163748.82689999975,4464489.8412999995],[163769.40500000026,4464489.419399999],[163794.13150000013,4464497.8803],[163842.38929999992,4464507.771],[163877.07689999975,4464507.0678],[163912.67839999963,4464525.419399999],[163949.17059999984,4464526.169399999],[163949.54559999984,4464507.489700001],[163948.70179999992,4464465.911599999],[163962.67059999984,4464458.7162999995],[164027.26439999975,4464460.0287999995],[164030.35809999984,4464450.489700001],[164072.35809999984,4464450.489700001],[164074.74870000035,4464460.6381],[164105.35809999984,4464470.1537999995],[164126.45189999975,4464463.5912999995],[164166.55339999963,4464476.786599999],[164196.06120000035,4464472.1928],[164198.35809999984,4464468.489700001],[164234.35809999984,4464468.489700001],[164231.24089999963,4464492.231899999],[164199.17839999963,4464529.4506],[164167.91280000005,4464549.044399999],[164156.80339999963,4464573.9350000005],[164142.62370000035,4464599.364700001],[164129.59250000026,4464633.724099999],[164118.48309999984,4464643.286599999],[164111.10030000005,4464663.349099999],[164112.43620000035,4464679.7787999995],[164095.56120000035,4464699.349099999],[164047.91280000005,4464708.044399999],[164032.18620000035,4464726.302200001],[163961.12370000035,4464753.2553],[163955.59250000026,4464759.724099999],[163949.12370000035,4464765.2553],[163940.61589999963,4464793.544399999],[163913.26439999975,4464795.7475000005],[163877.45189999975,4464789.231899999],[163859.56900000013,4464790.6850000005],[163852.98309999984,4464775.919399999],[163841.12370000035,4464765.724099999],[163835.59250000026,4464759.2553],[163821.90500000026,4464747.489700001],[163853.59250000026,4464741.724099999],[163860.03780000005,4464734.224099999],[163901.12370000035,4464715.8725000005],[163888.09250000026,4464703.896],[163823.89719999954,4464709.052200001],[163821.69400000013,4464681.724099999],[163883.59250000026,4464687.2553],[163907.82689999975,4464696.161599999],[163931.59250000026,4464675.724099999],[163934.35809999984,4464672.489700001],[163940.35809999984,4464672.489700001],[163940.35809999984,4464666.489700001],[163940.35809999984,4464636.489700001],[163949.26439999975,4464629.6225000005],[163962.48309999984,4464596.036599999],[163960.91280000005,4464585.489700001],[163964.12370000035,4464563.786599999],[163949.59250000026,4464555.021],[163943.33469999954,4464555.9350000005],[163922.35809999984,4464552.489700001],[163916.35809999984,4464552.489700001],[163912.09250000026,4464546.9585],[163894.77219999954,4464536.5053],[163861.53780000005,4464523.4506],[163844.35809999984,4464534.489700001],[163838.35809999984,4464534.489700001],[163838.35809999984,4464528.489700001],[163814.35809999984,4464528.489700001],[163808.35809999984,4464528.489700001],[163802.31120000035,4464520.6381],[163769.45189999975,4464513.044399999],[163763.33469999954,4464513.9350000005],[163742.35809999984,4464510.489700001],[163724.35809999984,4464510.489700001]]]},{"type":"Polygon","coordinates":[[[166946.35809999984,4463964.489700001],[166951.25650000013,4463978.1303],[166932.85809999984,4463994.5600000005],[166874.49870000035,4464008.1303],[166844.68620000035,4464018.8178],[166794.53000000026,4464028.1928],[166718.17059999984,4464057.5600000005],[166655.19400000013,4464069.3256],[166603.44400000013,4464089.224099999],[166614.20189999975,4464119.2006],[166634.73309999984,4464137.5287999995],[166741.95969999954,4464114.6303],[166795.46750000026,4464092.3881],[166862.21750000026,4464076.849099999],[166883.19400000013,4464069.3256],[166911.15500000026,4464062.8100000005],[166949.56900000013,4464049.0287999995],[166994.07689999975,4464039.6537999995],[167009.19400000013,4464058.3100000005],[166981.51439999975,4464071.0131],[166937.19400000013,4464081.3256],[166871.52219999954,4464105.6537999995],[166808.66280000005,4464119.1537999995],[166753.77219999954,4464143.3178],[166677.60030000005,4464159.6537999995],[166654.51439999975,4464172.2162999995],[166655.73309999984,4464192.7006],[166691.87370000035,4464224.974099999],[166711.67839999963,4464247.169399999],[166729.74870000035,4464263.3178],[166775.19400000013,4464243.3256],[166829.52219999954,4464231.6537999995],[166881.22530000005,4464210.161599999],[166948.39719999954,4464194.5287999995],[167027.19400000013,4464165.3256],[167055.13150000013,4464158.8100000005],[167077.63150000013,4464160.169399999],[167074.58469999954,4464211.5912999995],[167025.22530000005,4464220.802200001],[167012.68620000035,4464234.8178],[166999.49089999963,4464246.606899999],[166898.17059999984,4464258.489700001],[166802.73309999984,4464284.036599999],[166781.52219999954,4464291.6537999995],[166757.19400000013,4464297.3256],[166727.52219999954,4464309.6537999995],[166646.45189999975,4464331.989700001],[166576.84250000026,4464344.974099999],[166517.52219999954,4464369.6537999995],[166493.19400000013,4464375.3256],[166475.68620000035,4464384.8178],[166420.37370000035,4464410.224099999],[166317.60030000005,4464418.989700001],[166272.81120000035,4464416.3178],[166241.52219999954,4464399.3256],[166223.19400000013,4464393.6537999995],[166215.20189999975,4464384.724099999],[166218.97530000005,4464321.489700001],[166216.93620000035,4464287.3412999995],[166192.53780000005,4464242.4350000005],[166193.89719999954,4464219.489700001],[166282.23309999984,4464187.989700001],[166365.78780000005,4464172.3803],[166420.20969999954,4464149.739700001],[166481.35809999984,4464138.3256],[166523.75650000013,4464123.114700001],[166541.19400000013,4464106.6381],[166511.19400000013,4464099.6537999995],[166505.52219999954,4464095.0600000005],[166566.85809999984,4464076.1225000005],[166604.19400000013,4464069.161599999],[166637.19400000013,4464057.3256],[166695.71750000026,4464039.2553],[166745.52219999954,4464027.6537999995],[166841.19400000013,4463997.3256],[166883.52219999954,4463985.6537999995],[166918.84250000026,4463972.974099999],[166946.35809999984,4463964.489700001]]]},{"type":"Polygon","coordinates":[[[168032.35809999984,4464210.489700001],[168021.10809999984,4464173.1303],[167964.57689999975,4464073.7085],[167928.69400000013,4464076.5912999995],[167913.50650000013,4464068.106899999],[167877.64719999954,4464005.927200001],[167886.53000000026,4463989.989700001],[167934.03780000005,4463968.802200001],[167957.59250000026,4463961.724099999],[167987.12370000035,4463949.2553],[168035.59250000026,4463931.724099999],[168086.99089999963,4463908.896],[168162.97530000005,4463900.177200001],[168208.11589999963,4463881.169399999],[168215.40500000026,4463921.1537999995],[168239.59250000026,4463955.2553],[168247.91280000005,4463973.9350000005],[168260.26439999975,4463996.0600000005],[168276.62370000035,4464010.169399999],[168287.73309999984,4464035.0600000005],[168299.59250000026,4464045.2553],[168311.12370000035,4464063.724099999],[168323.59250000026,4464081.2553],[168350.56900000013,4464152.411599999],[168346.32689999975,4464205.3100000005],[168243.76439999975,4464213.8881],[168230.80339999963,4464228.9350000005],[168220.65500000026,4464237.677200001],[168221.61589999963,4464249.7006],[168173.12370000035,4464255.2553],[168113.19400000013,4464273.2085],[168081.24870000035,4464295.8725000005],[168059.59250000026,4464261.2553],[168056.35809999984,4464258.489700001],[168056.35809999984,4464246.489700001],[168056.35809999984,4464240.489700001],[168050.35809999984,4464240.489700001],[168045.45969999954,4464221.3881],[168038.35809999984,4464216.489700001],[168038.35809999984,4464210.489700001],[168032.35809999984,4464210.489700001]]]},{"type":"Polygon","coordinates":[[[168794.35809999984,4463682.489700001],[168809.68620000035,4463678.7162999995],[168904.81900000013,4463770.0287999995],[168920.35809999984,4463778.489700001],[168924.90500000026,4463794.849099999],[168950.35809999984,4463814.489700001],[168986.42839999963,4463857.2631],[169042.32689999975,4463910.9585],[169187.59250000026,4464044.6225000005],[169232.00650000013,4464090.8412999995],[169277.42839999963,4464134.5053],[169277.24089999963,4464144.0912999995],[169267.79559999984,4464159.419399999],[169211.59250000026,4464136.6381],[169175.28780000005,4464129.5600000005],[169145.12370000035,4464117.302200001],[169127.75650000013,4464117.6537999995],[169103.42839999963,4464111.419399999],[169079.28780000005,4464105.5600000005],[169036.09250000026,4464093.044399999],[169019.42839999963,4464094.3803],[169040.26439999975,4464155.271],[169049.28780000005,4464201.5600000005],[169058.47530000005,4464237.3725000005],[169067.28780000005,4464291.5600000005],[169081.20969999954,4464339.5835],[169078.70189999975,4464381.419399999],[169055.05339999963,4464369.2553],[169030.30339999963,4464281.4350000005],[168980.31120000035,4464257.2006],[168965.42839999963,4464219.419399999],[168962.35809999984,4464216.489700001],[168962.35809999984,4464204.489700001],[168958.35030000005,4464194.0600000005],[168942.29559999984,4464094.4975000005],[169007.03000000026,4464086.411599999],[168999.64719999954,4464070.8725000005],[168965.68620000035,4464063.161599999],[168894.67059999984,4464052.8256],[168886.86589999963,4464039.5600000005],[168890.35809999984,4464030.489700001],[168902.35809999984,4464030.489700001],[168902.35809999984,4464024.489700001],[168914.35809999984,4464024.489700001],[168914.35809999984,4464018.489700001],[168970.63150000013,4464008.856899999],[169004.35809999984,4463993.786599999],[169058.63939999975,4463959.802200001],[169041.24870000035,4463939.599099999],[169028.35809999984,4463928.489700001],[169028.35809999984,4463922.489700001],[169022.35809999984,4463922.489700001],[169012.56120000035,4463908.286599999],[168998.35809999984,4463898.489700001],[168998.35809999984,4463892.489700001],[168992.35809999984,4463892.489700001],[168986.31120000035,4463880.536599999],[168974.35809999984,4463874.489700001],[168953.73309999984,4463847.114700001],[168926.35809999984,4463826.489700001],[168876.22530000005,4463766.5131],[168841.91280000005,4463736.9350000005],[168819.69400000013,4463711.1537999995],[168800.35809999984,4463694.489700001],[168794.35809999984,4463682.489700001]]]},{"type":"Polygon","coordinates":[[[170666.35809999984,4463808.489700001],[170662.23309999984,4463788.7787999995],[170663.96750000026,4463744.9506],[170634.64719999954,4463717.786599999],[170621.47530000005,4463681.8803],[170640.57689999975,4463673.606899999],[170664.53000000026,4463686.286599999],[170703.41280000005,4463739.2787999995],[170737.44400000013,4463745.3725000005],[170786.80339999963,4463732.4350000005],[170810.47530000005,4463740.731899999],[170825.24089999963,4463763.606899999],[170831.47530000005,4463769.3725000005],[170849.24089999963,4463793.606899999],[170873.31120000035,4463824.989700001],[170897.47530000005,4463847.3725000005],[170926.51439999975,4463892.349099999],[170933.24089999963,4463913.606899999],[170975.47530000005,4463967.3725000005],[170999.24089999963,4464009.606899999],[171035.47530000005,4464051.3725000005],[171059.73309999984,4464088.919399999],[171077.47530000005,4464105.3725000005],[171093.67059999984,4464122.856899999],[171111.95189999975,4464131.481899999],[171129.97530000005,4464177.7475000005],[171155.47530000005,4464201.3725000005],[171161.24089999963,4464208.052200001],[171130.65500000026,4464222.489700001],[171077.24089999963,4464237.3725000005],[171043.16280000005,4464249.3256],[171007.20969999954,4464255.3725000005],[170969.47530000005,4464207.3725000005],[170945.24089999963,4464177.606899999],[170918.49870000035,4464141.1381],[170896.91280000005,4464104.411599999],[170879.80339999963,4464088.5678],[170860.91280000005,4464056.411599999],[170843.94400000013,4464040.7085],[170830.04559999984,4464019.169399999],[170813.24089999963,4464003.606899999],[170795.47530000005,4463973.3725000005],[170771.24089999963,4463943.606899999],[170753.47530000005,4463919.3725000005],[170729.24089999963,4463889.606899999],[170697.78780000005,4463838.6303],[170678.35809999984,4463832.489700001],[170676.34250000026,4463822.5053],[170672.35809999984,4463814.489700001],[170672.35809999984,4463808.489700001],[170666.35809999984,4463808.489700001]]]},{"type":"Polygon","coordinates":[[[167936.35809999984,4463742.489700001],[167867.28780000005,4463775.419399999],[167810.40500000026,4463804.739700001],[167771.28780000005,4463817.419399999],[167747.42839999963,4463835.5600000005],[167723.17059999984,4463847.302200001],[167667.67059999984,4463875.896],[167632.70189999975,4463889.419399999],[167611.09250000026,4463866.9428],[167603.42839999963,4463835.419399999],[167597.14719999954,4463810.927200001],[167579.70969999954,4463794.169399999],[167567.42839999963,4463775.161599999],[167608.06900000013,4463748.489700001],[167663.42839999963,4463725.0053],[167712.06120000035,4463699.9506],[167889.55339999963,4463614.6850000005],[167930.24089999963,4463590.0053],[167964.71750000026,4463583.5600000005],[168025.35030000005,4463595.9585],[168066.31900000013,4463638.614700001],[168077.28780000005,4463661.911599999],[168062.24089999963,4463676.3725000005],[168056.35809999984,4463682.489700001],[168046.37370000035,4463684.5053],[168022.42059999984,4463696.411599999],[168020.35809999984,4463700.489700001],[168014.35809999984,4463700.489700001],[168008.35809999984,4463700.489700001],[168008.35809999984,4463706.489700001],[168002.35809999984,4463706.489700001],[167996.35809999984,4463706.489700001],[167996.35809999984,4463712.489700001],[167990.35809999984,4463712.489700001],[167950.37370000035,4463732.5053],[167948.35809999984,4463736.489700001],[167936.35809999984,4463736.489700001],[167936.35809999984,4463742.489700001]]]},{"type":"Polygon","coordinates":[[[168890.35809999984,4464030.489700001],[168872.82689999975,4464020.5756],[168839.68620000035,4463979.161599999],[168828.43620000035,4463970.1381],[168808.02219999954,4463936.5287999995],[168797.10030000005,4463937.8881],[168767.68620000035,4463913.161599999],[168755.03000000026,4463907.8178],[168731.03000000026,4463877.864700001],[168725.68620000035,4463859.161599999],[168719.03000000026,4463847.8178],[168711.43620000035,4463829.8178],[168692.35809999984,4463826.489700001],[168692.35809999984,4463820.489700001],[168686.35809999984,4463820.489700001],[168686.35809999984,4463814.489700001],[168680.35809999984,4463814.489700001],[168680.35809999984,4463808.489700001],[168674.35809999984,4463808.489700001],[168674.35809999984,4463802.489700001],[168668.35809999984,4463802.489700001],[168668.35809999984,4463796.489700001],[168662.35809999984,4463796.489700001],[168656.05339999963,4463773.8725000005],[168632.35809999984,4463743.169399999],[168608.35809999984,4463736.489700001],[168608.35809999984,4463730.489700001],[168602.35809999984,4463730.489700001],[168602.35809999984,4463724.489700001],[168596.35809999984,4463724.489700001],[168596.35809999984,4463718.489700001],[168590.35809999984,4463718.489700001],[168585.36589999963,4463699.0600000005],[168555.74089999963,4463692.427200001],[168526.81900000013,4463708.9506],[168520.20969999954,4463718.489700001],[168485.89719999954,4463734.0287999995],[168449.89719999954,4463746.661599999],[168458.21750000026,4463765.974099999],[168476.35809999984,4463778.489700001],[168476.35809999984,4463784.489700001],[168482.35809999984,4463784.489700001],[168482.35809999984,4463790.489700001],[168488.35809999984,4463790.489700001],[168491.21750000026,4463800.521],[168509.03000000026,4463829.8178],[168533.92059999984,4463847.3256],[168568.28000000026,4463874.8412999995],[168582.97530000005,4463899.0287999995],[168608.35809999984,4463916.489700001],[168612.88150000013,4463934.1381],[168626.35809999984,4463928.489700001],[168626.35809999984,4463934.489700001],[168632.35809999984,4463934.489700001],[168635.03000000026,4463937.8178],[168639.88150000013,4463976.771],[168620.10030000005,4463991.161599999],[168584.33469999954,4463946.5131],[168545.47530000005,4463915.364700001],[168539.05339999963,4463892.9350000005],[168499.77219999954,4463865.3256],[168467.68620000035,4463823.161599999],[168454.37370000035,4463812.474099999],[168443.68620000035,4463799.161599999],[168431.03000000026,4463793.8178],[168411.57689999975,4463782.3803],[168368.24089999963,4463807.8335],[168359.68620000035,4463832.5835],[168380.35809999984,4463838.489700001],[168380.35809999984,4463850.489700001],[168386.35809999984,4463850.489700001],[168386.35809999984,4463856.489700001],[168392.35809999984,4463856.489700001],[168396.03780000005,4463870.8100000005],[168410.35809999984,4463874.489700001],[168410.35809999984,4463880.489700001],[168416.35809999984,4463880.489700001],[168440.96750000026,4463911.2162999995],[168446.35809999984,4463904.489700001],[168452.35809999984,4463904.489700001],[168452.35809999984,4463916.489700001],[168449.31120000035,4463933.646],[168440.59250000026,4463949.2085],[168419.63939999975,4463937.2085],[168396.31900000013,4463927.106899999],[168344.21750000026,4463919.349099999],[168282.48309999984,4463893.0287999995],[168275.63939999975,4463877.2085],[168246.55339999963,4463870.7631],[168242.35809999984,4463856.489700001],[168267.95189999975,4463862.771],[168271.18620000035,4463848.3803],[168262.06900000013,4463824.0287999995],[168238.81900000013,4463828.9506],[168236.35809999984,4463850.489700001],[168212.40500000026,4463846.411599999],[168216.08469999954,4463821.5678],[168241.74870000035,4463811.0678],[168248.35809999984,4463802.489700001],[168254.35809999984,4463802.489700001],[168254.35809999984,4463796.489700001],[168260.35809999984,4463796.489700001],[168260.35809999984,4463790.489700001],[168267.88150000013,4463779.5678],[168296.35809999984,4463760.489700001],[168302.35809999984,4463760.489700001],[168302.35809999984,4463754.489700001],[168308.35809999984,4463754.489700001],[168313.30339999963,4463761.6381],[168352.16280000005,4463734.802200001],[168356.35809999984,4463718.489700001],[168362.35809999984,4463718.489700001],[168362.35809999984,4463712.489700001],[168377.89719999954,4463710.0287999995],[168394.81900000013,4463702.9506],[168420.22530000005,4463697.981899999],[168431.89719999954,4463680.0287999995],[168434.35809999984,4463664.489700001],[168446.35809999984,4463664.489700001],[168446.35809999984,4463658.489700001],[168452.42839999963,4463646.489700001],[168476.35809999984,4463634.489700001],[168482.35809999984,4463634.489700001],[168482.35809999984,4463628.489700001],[168488.35809999984,4463628.489700001],[168488.35809999984,4463622.489700001],[168515.52219999954,4463615.5287999995],[168518.35809999984,4463604.489700001],[168524.35809999984,4463604.489700001],[168524.35809999984,4463598.489700001],[168530.35809999984,4463598.489700001],[168530.35809999984,4463592.489700001],[168540.53000000026,4463590.427200001],[168568.32689999975,4463576.481899999],[168572.35809999984,4463568.489700001],[168584.35809999984,4463568.489700001],[168584.35809999984,4463562.489700001],[168611.59250000026,4463565.2553],[168621.38939999975,4463587.2631],[168640.20969999954,4463613.794399999],[168615.78780000005,4463644.989700001],[168617.80339999963,4463669.9506],[168648.48309999984,4463696.364700001],[168667.91280000005,4463718.9350000005],[168677.59250000026,4463727.2553],[168691.39719999954,4463749.3100000005],[168730.13939999975,4463782.7085],[168757.91280000005,4463814.9350000005],[168767.59250000026,4463823.2553],[168787.09250000026,4463845.896],[168804.92839999963,4463853.864700001],[168836.87370000035,4463890.9428],[168857.92059999984,4463924.5287999995],[168897.64719999954,4463958.771],[168925.11589999963,4463994.2553],[168914.35809999984,4464018.489700001],[168902.35809999984,4464018.489700001],[168902.35809999984,4464024.489700001],[168890.35809999984,4464024.489700001],[168890.35809999984,4464030.489700001]]]},{"type":"Polygon","coordinates":[[[169136.35809999984,4463406.489700001],[169128.81120000035,4463388.536599999],[169163.56900000013,4463380.731899999],[169202.35809999984,4463406.489700001],[169202.35809999984,4463412.489700001],[169202.35809999984,4463418.489700001],[169208.35809999984,4463418.489700001],[169208.35809999984,4463424.489700001],[169214.35809999984,4463424.489700001],[169218.38939999975,4463432.4585],[169226.35809999984,4463436.489700001],[169226.35809999984,4463442.489700001],[169232.35809999984,4463442.489700001],[169232.35809999984,4463448.489700001],[169238.35809999984,4463448.489700001],[169238.35809999984,4463454.489700001],[169244.35809999984,4463454.489700001],[169250.35809999984,4463454.489700001],[169250.35809999984,4463460.489700001],[169256.35809999984,4463460.489700001],[169256.35809999984,4463466.489700001],[169262.35809999984,4463466.489700001],[169262.35809999984,4463472.489700001],[169268.35809999984,4463472.489700001],[169272.38939999975,4463480.4585],[169280.35809999984,4463484.489700001],[169284.55339999963,4463500.802200001],[169304.35809999984,4463514.489700001],[169304.35809999984,4463520.489700001],[169310.35809999984,4463520.489700001],[169310.35809999984,4463526.489700001],[169322.35809999984,4463526.489700001],[169322.35809999984,4463532.489700001],[169328.35809999984,4463532.489700001],[169328.35809999984,4463538.489700001],[169334.35809999984,4463538.489700001],[169402.18620000035,4463619.489700001],[169424.59250000026,4463640.2553],[169485.88150000013,4463706.419399999],[169565.00650000013,4463799.8412999995],[169577.47530000005,4463811.3725000005],[169603.44400000013,4463839.4037999995],[169636.18620000035,4463869.7553],[169664.63939999975,4463905.919399999],[169741.11589999963,4463974.2162999995],[169757.92059999984,4463992.3335],[169757.07689999975,4464013.731899999],[169702.28000000026,4464045.9350000005],[169694.35809999984,4464054.489700001],[169643.26439999975,4464077.177200001],[169613.52219999954,4464074.786599999],[169580.35809999984,4464048.489700001],[169580.35809999984,4464036.489700001],[169574.35809999984,4464036.489700001],[169571.68620000035,4464023.2006],[169562.35809999984,4464018.489700001],[169538.35809999984,4464000.489700001],[169538.35809999984,4463994.489700001],[169532.35809999984,4463994.489700001],[169532.35809999984,4463988.489700001],[169526.35809999984,4463988.489700001],[169526.35809999984,4463982.489700001],[169520.35809999984,4463982.489700001],[169511.42839999963,4463967.419399999],[169486.58469999954,4463943.5835],[169397.42839999963,4463846.646],[169421.12370000035,4463825.646],[169470.60030000005,4463817.2085],[169505.28780000005,4463817.911599999],[169497.74089999963,4463786.411599999],[169449.08469999954,4463735.7631],[169412.35809999984,4463700.489700001],[169408.32689999975,4463692.521],[169400.35809999984,4463688.489700001],[169400.35809999984,4463682.489700001],[169394.35809999984,4463682.489700001],[169394.35809999984,4463670.489700001],[169382.35809999984,4463670.489700001],[169382.35809999984,4463664.489700001],[169376.35809999984,4463664.489700001],[169376.35809999984,4463658.489700001],[169370.35809999984,4463658.489700001],[169364.35809999984,4463646.489700001],[169364.35809999984,4463640.489700001],[169358.35809999984,4463640.489700001],[169358.35809999984,4463634.489700001],[169352.35809999984,4463634.489700001],[169352.35809999984,4463628.489700001],[169346.35809999984,4463628.489700001],[169346.35809999984,4463622.489700001],[169340.35809999984,4463622.489700001],[169340.35809999984,4463616.489700001],[169334.35809999984,4463616.489700001],[169334.35809999984,4463610.489700001],[169328.35809999984,4463610.489700001],[169328.35809999984,4463604.489700001],[169322.35809999984,4463604.489700001],[169312.79559999984,4463588.224099999],[169238.35809999984,4463520.489700001],[169238.35809999984,4463514.489700001],[169238.35809999984,4463508.489700001],[169232.35809999984,4463508.489700001],[169232.35809999984,4463502.489700001],[169226.35809999984,4463502.489700001],[169220.35809999984,4463502.489700001],[169220.35809999984,4463496.489700001],[169214.35809999984,4463496.489700001],[169214.35809999984,4463490.489700001],[169208.35809999984,4463490.489700001],[169204.16280000005,4463474.177200001],[169184.35809999984,4463460.489700001],[169184.35809999984,4463454.489700001],[169178.35809999984,4463454.489700001],[169178.35809999984,4463448.489700001],[169172.35809999984,4463448.489700001],[169172.35809999984,4463442.489700001],[169166.35809999984,4463442.489700001],[169161.64719999954,4463433.161599999],[169148.35809999984,4463430.489700001],[169148.35809999984,4463424.489700001],[169148.35809999984,4463418.489700001],[169142.35809999984,4463418.489700001],[169136.35809999984,4463406.489700001]]]},{"type":"Polygon","coordinates":[[[168800.35809999984,4463694.489700001],[168797.52219999954,4463697.6537999995],[168791.19400000013,4463703.3256],[168785.38150000013,4463709.8178],[168745.95969999954,4463677.474099999],[168725.52219999954,4463649.3256],[168707.87370000035,4463633.552200001],[168701.52219999954,4463615.927200001],[168731.87370000035,4463602.0053],[168761.03000000026,4463586.161599999],[168779.52219999954,4463577.6537999995],[168790.35030000005,4463554.0756],[168874.32689999975,4463534.552200001],[168887.19400000013,4463504.3881],[168872.03000000026,4463490.8178],[168866.35809999984,4463460.489700001],[168869.19400000013,4463457.3256],[168911.52219999954,4463433.6537999995],[168969.29559999984,4463399.927200001],[169007.19400000013,4463379.3256],[169016.35809999984,4463376.489700001],[169022.35809999984,4463376.489700001],[169022.35809999984,4463370.489700001],[169037.89719999954,4463362.0287999995],[169052.35809999984,4463352.489700001],[169072.06900000013,4463355.8412999995],[169075.11589999963,4463376.396],[169061.73309999984,4463410.4037999995],[169073.73309999984,4463409.864700001],[169097.61589999963,4463392.169399999],[169127.28780000005,4463410.052200001],[169136.35809999984,4463406.489700001],[169142.35809999984,4463418.489700001],[169142.35809999984,4463424.489700001],[169148.35809999984,4463424.489700001],[169148.35809999984,4463430.489700001],[169153.06900000013,4463439.8178],[169166.35809999984,4463442.489700001],[169166.35809999984,4463448.489700001],[169172.35809999984,4463448.489700001],[169172.35809999984,4463454.489700001],[169178.35809999984,4463454.489700001],[169178.35809999984,4463460.489700001],[169184.35809999984,4463460.489700001],[169190.89719999954,4463486.0131],[169208.35809999984,4463490.489700001],[169208.35809999984,4463496.489700001],[169214.35809999984,4463496.489700001],[169214.35809999984,4463502.489700001],[169220.35809999984,4463502.489700001],[169226.35809999984,4463502.489700001],[169226.35809999984,4463508.489700001],[169232.35809999984,4463508.489700001],[169232.35809999984,4463514.489700001],[169238.35809999984,4463514.489700001],[169238.35809999984,4463520.489700001],[169239.90500000026,4463531.0835],[169311.88150000013,4463602.9662999995],[169322.35809999984,4463604.489700001],[169322.35809999984,4463610.489700001],[169328.35809999984,4463610.489700001],[169328.35809999984,4463616.489700001],[169334.35809999984,4463616.489700001],[169334.35809999984,4463622.489700001],[169340.35809999984,4463622.489700001],[169340.35809999984,4463628.489700001],[169346.35809999984,4463628.489700001],[169346.35809999984,4463634.489700001],[169352.35809999984,4463634.489700001],[169352.35809999984,4463640.489700001],[169358.35809999984,4463640.489700001],[169358.35809999984,4463646.489700001],[169364.35809999984,4463646.489700001],[169370.35809999984,4463658.489700001],[169370.35809999984,4463664.489700001],[169376.35809999984,4463664.489700001],[169376.35809999984,4463670.489700001],[169382.35809999984,4463670.489700001],[169386.38929999992,4463678.4585],[169394.35809999984,4463682.489700001],[169394.35809999984,4463688.489700001],[169400.35809999984,4463688.489700001],[169400.35809999984,4463700.489700001],[169412.35809999984,4463700.489700001],[169415.24089999963,4463709.606899999],[169457.47530000005,4463757.3725000005],[169478.21750000026,4463792.646],[169437.20189999975,4463812.0053],[169415.10030000005,4463811.114700001],[169325.47530000005,4463709.3725000005],[169300.56120000035,4463686.286599999],[169277.47530000005,4463661.3725000005],[169257.03780000005,4463648.177200001],[169236.24870000035,4463625.7475000005],[169221.67059999984,4463618.856899999],[169205.47530000005,4463601.3725000005],[169193.80339999963,4463590.5678],[169173.76439999975,4463556.4662999995],[169151.24089999963,4463535.606899999],[169142.59250000026,4463526.2553],[169133.24089999963,4463517.606899999],[169115.47530000005,4463493.3725000005],[169096.79559999984,4463476.052200001],[169079.47530000005,4463457.3725000005],[169070.12370000035,4463448.724099999],[169058.59250000026,4463436.2553],[169048.77219999954,4463427.161599999],[169022.35809999984,4463428.1928],[168995.03000000026,4463427.114700001],[168983.47530000005,4463439.606899999],[168973.88939999975,4463448.489700001],[168995.92059999984,4463468.927200001],[169013.24089999963,4463487.606899999],[169053.99870000035,4463521.099099999],[169067.24089999963,4463541.606899999],[169132.06900000013,4463601.6537999995],[169141.53780000005,4463601.2787999995],[169157.24089999963,4463625.606899999],[169175.92059999984,4463642.927200001],[169193.24089999963,4463661.606899999],[169220.63939999975,4463686.989700001],[169235.24089999963,4463709.606899999],[169247.47530000005,4463715.3725000005],[169311.71750000026,4463791.2162999995],[169342.58469999954,4463800.989700001],[169379.24089999963,4463847.606899999],[169412.89719999954,4463887.427200001],[169438.37370000035,4463911.0287999995],[169445.99089999963,4463927.177200001],[169469.70969999954,4463949.1381],[169481.24089999963,4463961.606899999],[169508.33469999954,4463986.7085],[169520.35809999984,4463982.489700001],[169520.35809999984,4463988.489700001],[169526.35809999984,4463988.489700001],[169526.35809999984,4463994.489700001],[169532.35809999984,4463994.489700001],[169532.35809999984,4464000.489700001],[169538.35809999984,4464000.489700001],[169562.35809999984,4464018.489700001],[169565.03000000026,4464031.7787999995],[169574.35809999984,4464036.489700001],[169574.35809999984,4464048.489700001],[169580.35809999984,4464048.489700001],[169584.95189999975,4464064.544399999],[169632.34250000026,4464099.161599999],[169691.40500000026,4464071.411599999],[169694.35809999984,4464054.489700001],[169712.03000000026,4464049.0287999995],[169751.68620000035,4464030.8178],[169782.99870000035,4464013.8256],[169816.20969999954,4464043.4975000005],[169851.60030000005,4464092.271],[169865.19400000013,4464099.6537999995],[169878.60030000005,4464105.8178],[169889.19400000013,4464117.6537999995],[169898.68620000035,4464126.161599999],[169907.19400000013,4464135.6537999995],[169918.58469999954,4464145.849099999],[169932.13150000013,4464167.1303],[169961.21750000026,4464189.677200001],[169970.66280000005,4464189.114700001],[169997.19400000013,4464225.6537999995],[170027.19400000013,4464262.2162999995],[170005.28000000026,4464283.849099999],[169970.63939999975,4464291.911599999],[169949.52219999954,4464330.794399999],[169957.35030000005,4464343.052200001],[169973.21750000026,4464351.677200001],[169989.15500000026,4464350.7162999995],[170003.52219999954,4464357.3256],[170015.19400000013,4464363.6537999995],[170033.52219999954,4464369.3256],[170046.99870000035,4464376.6381],[170074.46750000026,4464374.9975000005],[170081.52219999954,4464381.3256],[170087.75650000013,4464460.802200001],[170104.51439999975,4464475.7787999995],[170111.52219999954,4464495.3256],[170117.19400000013,4464513.6537999995],[170120.35809999984,4464516.489700001],[170120.35809999984,4464522.489700001],[170120.35809999984,4464534.489700001],[170126.35809999984,4464534.489700001],[170126.35809999984,4464540.489700001],[170128.98309999984,4464597.864700001],[170135.73309999984,4464615.114700001],[170140.98309999984,4464633.864700001],[170153.73309999984,4464651.114700001],[170158.98309999984,4464687.864700001],[170176.04559999984,4464701.036599999],[170182.98309999984,4464741.864700001],[170191.77219999954,4464764.2475000005],[170200.98309999984,4464807.864700001],[170213.73309999984,4464825.114700001],[170218.98309999984,4464837.864700001],[170225.73309999984,4464849.114700001],[170231.78000000026,4464863.8803],[170240.35809999984,4464870.489700001],[170240.35809999984,4464882.489700001],[170243.47530000005,4464909.4428],[170242.56120000035,4464932.8803],[170265.71750000026,4464945.1381],[170270.35809999984,4464930.489700001],[170282.35809999984,4464930.489700001],[170288.14719999954,4464965.669399999],[170284.88939999975,4464987.724099999],[170291.73309999984,4464999.114700001],[170299.58469999954,4465018.2631],[170309.73309999984,4465035.114700001],[170314.98309999984,4465051.2162999995],[170300.99089999963,4465074.396],[170277.88150000013,4465083.114700001],[170262.43620000035,4465009.989700001],[170248.79559999984,4465012.0053],[170215.88939999975,4465054.661599999],[170206.63150000013,4465087.919399999],[170180.35809999984,4465098.489700001],[170180.35809999984,4465092.489700001],[170174.35809999984,4465092.489700001],[170174.35809999984,4465086.489700001],[170168.35809999984,4465086.489700001],[170150.61589999963,4465074.231899999],[170138.35809999984,4465056.489700001],[170138.35809999984,4465050.489700001],[170132.35809999984,4465050.489700001],[170132.35809999984,4465044.489700001],[170126.35809999984,4465044.489700001],[170126.35809999984,4465038.489700001],[170120.35809999984,4465038.489700001],[170120.35809999984,4465032.489700001],[170108.35809999984,4465032.489700001],[170108.35809999984,4465026.489700001],[170102.35809999984,4465026.489700001],[170102.35809999984,4465020.489700001],[170096.35809999984,4465020.489700001],[170096.35809999984,4465014.489700001],[170090.35809999984,4465014.489700001],[170090.35809999984,4465008.489700001],[170084.35809999984,4465008.489700001],[170084.35809999984,4465002.489700001],[170078.35809999984,4465002.489700001],[170036.35809999984,4464966.489700001],[170036.35809999984,4464960.489700001],[170030.35809999984,4464960.489700001],[170030.35809999984,4464954.489700001],[170024.35809999984,4464954.489700001],[170024.35809999984,4464948.489700001],[170018.35809999984,4464948.489700001],[169991.70969999954,4464927.1381],[169970.35809999984,4464900.489700001],[170013.88150000013,4464840.771],[170065.16280000005,4464781.661599999],[170056.37370000035,4464735.606899999],[170039.47530000005,4464717.3725000005],[170006.78000000026,4464687.0912999995],[169990.77219999954,4464662.271],[169976.12370000035,4464648.724099999],[169964.59250000026,4464636.2553],[169943.99089999963,4464617.177200001],[169937.47530000005,4464603.3725000005],[169919.24089999963,4464579.606899999],[169897.02219999954,4464549.302200001],[169885.04559999984,4464549.771],[169859.24089999963,4464537.606899999],[169837.06900000013,4464522.349099999],[169811.47530000005,4464513.3725000005],[169793.24089999963,4464507.606899999],[169775.47530000005,4464495.3725000005],[169757.24089999963,4464483.606899999],[169735.86589999963,4464460.521],[169715.45189999975,4464453.3725000005],[169698.85809999984,4464454.0287999995],[169685.24089999963,4464447.606899999],[169661.47530000005,4464429.3725000005],[169643.24089999963,4464417.606899999],[169619.63939999975,4464401.364700001],[169619.00650000013,4464417.3725000005],[169630.32689999975,4464427.8725000005],[169642.79559999984,4464451.427200001],[169615.30339999963,4464461.0600000005],[169595.52219999954,4464442.7553],[169594.81900000013,4464424.614700001],[169601.78000000026,4464404.7162999995],[169562.94400000013,4464351.7475000005],[169534.60809999984,4464350.6225000005],[169506.62370000035,4464380.856899999],[169481.35809999984,4464381.8412999995],[169457.49870000035,4464380.9037999995],[169456.88939999975,4464396.489700001],[169457.70969999954,4464417.489700001],[169445.24089999963,4464423.3725000005],[169410.60030000005,4464444.5835],[169399.25650000013,4464412.2162999995],[169385.85030000005,4464328.099099999],[169373.47530000005,4464304.7085],[169421.07689999975,4464299.3412999995],[169475.80339999963,4464321.8178],[169504.20969999954,4464320.6928],[169522.67839999963,4464330.4662999995],[169541.47530000005,4464321.606899999],[169544.35809999984,4464318.489700001],[169568.35809999984,4464318.489700001],[169586.68620000035,4464324.161599999],[169613.24089999963,4464333.677200001],[169619.49870000035,4464333.302200001],[169696.74870000035,4464376.052200001],[169709.49870000035,4464375.302200001],[169727.19400000013,4464387.6537999995],[169745.52219999954,4464399.3256],[169775.19400000013,4464423.6537999995],[169820.68620000035,4464450.161599999],[169866.62370000035,4464478.544399999],[169901.52219999954,4464489.3256],[169926.34250000026,4464506.646],[169954.63150000013,4464508.3335],[169964.96750000026,4464489.3256],[169937.19400000013,4464471.6537999995],[169931.52219999954,4464465.3256],[169913.19400000013,4464453.6537999995],[169889.49870000035,4464435.302200001],[169877.82679999992,4464436.0053],[169865.52219999954,4464429.3256],[169853.19400000013,4464423.6537999995],[169819.67839999963,4464397.6850000005],[169781.28780000005,4464385.849099999],[169760.03000000026,4464366.8178],[169750.77219999954,4464356.481899999],[169715.94400000013,4464340.4975000005],[169709.49870000035,4464333.302200001],[169702.35030000005,4464333.724099999],[169673.68620000035,4464318.161599999],[169648.72530000005,4464306.7006],[169622.75650000013,4464283.474099999],[169645.04559999984,4464258.5131],[169693.98309999984,4464271.614700001],[169703.66280000005,4464260.786599999],[169745.52219999954,4464267.3256],[169756.18620000035,4464279.231899999],[169811.19400000013,4464282.5131],[169802.12370000035,4464267.8178],[169754.03000000026,4464258.8178],[169745.52219999954,4464249.3256],[169727.19400000013,4464237.6537999995],[169705.32689999975,4464213.1850000005],[169692.99870000035,4464213.9350000005],[169672.58469999954,4464181.849099999],[169651.67839999963,4464163.169399999],[169632.60030000005,4464141.8178],[169603.67839999963,4464128.5287999995],[169571.52219999954,4464087.3256],[169565.19400000013,4464081.6537999995],[169547.52219999954,4464057.3256],[169541.17059999984,4464051.6303],[169541.92059999984,4464039.044399999],[169526.03000000026,4464024.8178],[169517.49870000035,4464015.302200001],[169506.53000000026,4464015.9585],[169487.19400000013,4464003.6537999995],[169471.63150000013,4463979.2085],[169413.69400000013,4463930.3881],[169385.19400000013,4463895.6537999995],[169379.52219999954,4463883.3256],[169366.84250000026,4463872.0053],[169339.74870000035,4463841.6537999995],[169331.19400000013,4463847.3256],[169324.95969999954,4463854.3100000005],[169286.35809999984,4463832.489700001],[169286.35809999984,4463826.489700001],[169280.35809999984,4463826.489700001],[169280.35809999984,4463820.489700001],[169274.35809999984,4463820.489700001],[169274.35809999984,4463814.489700001],[169268.35809999984,4463814.489700001],[169268.35809999984,4463808.489700001],[169262.35809999984,4463808.489700001],[169262.35809999984,4463802.489700001],[169256.35809999984,4463802.489700001],[169256.35809999984,4463796.489700001],[169250.35809999984,4463796.489700001],[169238.40500000026,4463790.4428],[169232.35809999984,4463778.489700001],[169232.35809999984,4463772.489700001],[169226.35809999984,4463772.489700001],[169226.35809999984,4463766.489700001],[169220.35809999984,4463766.489700001],[169190.89719999954,4463729.927200001],[169147.11589999963,4463679.114700001],[169138.39719999954,4463679.8178],[169127.59250000026,4463667.2553],[169112.35809999984,4463664.489700001],[169112.35809999984,4463658.489700001],[169106.35809999984,4463658.489700001],[169106.35809999984,4463652.489700001],[169100.35809999984,4463652.489700001],[169095.45969999954,4463633.3881],[169076.35809999984,4463628.489700001],[169076.35809999984,4463622.489700001],[169070.35809999984,4463622.489700001],[169070.35809999984,4463616.489700001],[169064.35809999984,4463616.489700001],[169060.67839999963,4463602.169399999],[169046.35809999984,4463598.489700001],[169046.35809999984,4463592.489700001],[169040.35809999984,4463592.489700001],[169040.35809999984,4463586.489700001],[169034.35809999984,4463586.489700001],[169034.35809999984,4463580.489700001],[169028.35809999984,4463580.489700001],[169028.35809999984,4463574.489700001],[169022.35809999984,4463574.489700001],[169004.28780000005,4463547.5600000005],[168992.35809999984,4463544.489700001],[168985.30339999963,4463520.4428],[168968.31120000035,4463500.0053],[168947.07689999975,4463493.771],[168922.06900000013,4463475.771],[168900.43620000035,4463497.989700001],[168896.35809999984,4463537.974099999],[168914.19400000013,4463562.7475000005],[168887.63939999975,4463583.771],[168872.82689999975,4463590.1928],[168857.80339999963,4463616.419399999],[168875.63929999992,4463631.2085],[168881.07689999975,4463637.771],[168887.63939999975,4463643.2085],[168903.97530000005,4463662.8725000005],[168942.50650000013,4463694.8881],[168962.94400000013,4463728.052200001],[168976.95969999954,4463726.6225000005],[168978.27219999954,4463739.489700001],[168973.86589999963,4463782.6850000005],[168988.51439999975,4463800.3335],[169011.06120000035,4463819.036599999],[169026.36589999963,4463843.856899999],[169044.20189999975,4463858.646],[169060.18620000035,4463877.911599999],[169071.62370000035,4463876.739700001],[169102.81900000013,4463931.2085],[169074.17839999963,4463924.646],[169033.28000000026,4463890.6850000005],[169017.81120000035,4463855.0131],[168977.56900000013,4463823.161599999],[168971.17059999984,4463823.8178],[168959.63939999975,4463817.2085],[168950.35809999984,4463814.489700001],[168945.81120000035,4463798.1303],[168920.35809999984,4463778.489700001],[168914.17059999984,4463757.911599999],[168875.12370000035,4463727.724099999],[168830.35809999984,4463675.5053],[168794.87370000035,4463655.724099999],[168788.17059999984,4463665.661599999],[168794.35809999984,4463682.489700001],[168800.35809999984,4463694.489700001]],[[170144.35809999984,4464828.489700001],[170130.15500000026,4464832.7787999995],[170171.85030000005,4464867.2553],[170171.59250000026,4464861.2553],[170144.35809999984,4464828.489700001]],[[170096.35809999984,4464780.489700001],[170087.47530000005,4464788.7162999995],[170124.15500000026,4464819.3725000005],[170122.56120000035,4464805.1928],[170099.24089999963,4464783.606899999],[170096.35809999984,4464780.489700001]]]},{"type":"Polygon","coordinates":[[[165932.35809999984,4463430.489700001],[165923.12370000035,4463433.2553],[165913.93620000035,4463443.9428],[165899.59250000026,4463427.2553],[165887.07689999975,4463416.4975000005],[165856.81900000013,4463409.724099999],[165773.10030000005,4463469.0678],[165731.12370000035,4463493.2553],[165702.95189999975,4463515.3335],[165671.12370000035,4463535.2553],[165653.59250000026,4463547.724099999],[165639.43620000035,4463553.2553],[165611.59250000026,4463517.2553],[165602.33469999954,4463511.724099999],[165596.35809999984,4463544.489700001],[165588.38939999975,4463548.521],[165584.35809999984,4463556.489700001],[165578.35809999984,4463556.489700001],[165578.35809999984,4463562.489700001],[165553.35030000005,4463570.411599999],[165450.29559999984,4463617.7787999995],[165440.35809999984,4463628.489700001],[165422.35809999984,4463628.489700001],[165418.49089999963,4463625.044399999],[165419.59250000026,4463606.5053],[165501.36589999963,4463554.4975000005],[165572.03000000026,4463505.161599999],[165605.63939999975,4463483.7631],[165631.81900000013,4463447.6928],[165666.95189999975,4463416.3100000005],[165699.45969999954,4463408.739700001],[165707.19400000013,4463389.731899999],[165684.55339999963,4463348.106899999],[165676.04559999984,4463320.521],[165677.82689999975,4463290.6850000005],[165729.74089999963,4463229.6537999995],[165756.36589999963,4463223.6537999995],[165791.19400000013,4463271.6537999995],[165810.74089999963,4463296.8725000005],[165823.35030000005,4463324.364700001],[165840.83469999954,4463337.3256],[165875.19400000013,4463313.3256],[165912.20189999975,4463296.3335],[165947.19400000013,4463277.3256],[165979.42059999984,4463262.536599999],[166007.07689999975,4463243.2006],[166034.38150000013,4463234.786599999],[166058.21750000026,4463236.1928],[166082.21750000026,4463263.052200001],[166097.19400000013,4463295.6537999995],[166115.52219999954,4463325.3256],[166118.35809999984,4463334.489700001],[166110.38939999975,4463338.521],[166106.35809999984,4463346.489700001],[166094.35809999984,4463346.489700001],[166094.35809999984,4463352.489700001],[166082.35809999984,4463352.489700001],[166082.35809999984,4463358.489700001],[166076.35809999984,4463358.489700001],[166070.35809999984,4463358.489700001],[166070.35809999984,4463364.489700001],[166064.35809999984,4463364.489700001],[166058.35809999984,4463364.489700001],[166058.35809999984,4463370.489700001],[166046.35809999984,4463370.489700001],[166046.35809999984,4463376.489700001],[166034.35809999984,4463376.489700001],[166034.35809999984,4463382.489700001],[166022.35809999984,4463382.489700001],[165989.68620000035,4463390.5053],[165971.35809999984,4463378.5756],[165957.76439999975,4463387.4350000005],[165960.88150000013,4463401.3335],[165968.35809999984,4463406.489700001],[165964.58469999954,4463412.6303],[165937.72530000005,4463421.771],[165932.35809999984,4463430.489700001]]]},{"type":"Polygon","coordinates":[[[166382.35809999984,4463178.489700001],[166391.59250000026,4463175.724099999],[166409.21750000026,4463169.231899999],[166416.06120000035,4463169.794399999],[166414.65500000026,4463187.3256],[166373.12370000035,4463211.2553],[166356.36589999963,4463238.021],[166290.74089999963,4463273.646],[166283.59250000026,4463289.724099999],[166241.12370000035,4463313.2553],[166187.59250000026,4463355.724099999],[166169.12370000035,4463367.2553],[166157.59250000026,4463385.489700001],[166178.82689999975,4463409.2553],[166217.12370000035,4463379.2553],[166247.59250000026,4463361.724099999],[166282.63150000013,4463339.8335],[166290.34250000026,4463322.5600000005],[166312.86589999963,4463303.1537999995],[166340.28780000005,4463294.9037999995],[166364.33469999954,4463281.474099999],[166378.67839999963,4463264.8100000005],[166418.26439999975,4463240.036599999],[166444.63150000013,4463242.146],[166463.12370000035,4463271.724099999],[166475.24089999963,4463282.1537999995],[166481.12370000035,4463301.724099999],[166487.59250000026,4463313.2553],[166493.12370000035,4463344.5678],[166469.12370000035,4463355.2553],[166427.59250000026,4463403.724099999],[166418.03000000026,4463411.9506],[166394.42839999963,4463422.474099999],[166370.28780000005,4463450.5053],[166344.90500000026,4463461.8256],[166325.59250000026,4463456.0600000005],[166341.31900000013,4463442.489700001],[166328.03000000026,4463431.0287999995],[166307.12370000035,4463421.724099999],[166294.79559999984,4463407.4037999995],[166295.92059999984,4463393.599099999],[166322.35809999984,4463381.8100000005],[166331.12370000035,4463359.8256],[166291.02219999954,4463363.036599999],[166283.59250000026,4463379.724099999],[166271.38150000013,4463401.5678],[166229.10030000005,4463409.2787999995],[166229.59250000026,4463415.5131],[166226.35809999984,4463448.489700001],[166200.34250000026,4463450.8803],[166204.46750000026,4463458.661599999],[166223.87370000035,4463468.1303],[166226.35809999984,4463448.489700001],[166229.52219999954,4463451.3256],[166241.19400000013,4463483.2475000005],[166223.19400000013,4463499.3256],[166217.52219999954,4463505.6537999995],[166202.59250000026,4463519.0131],[166158.24870000035,4463532.7006],[166121.19400000013,4463541.3256],[166114.11589999963,4463556.7475000005],[166088.63939999975,4463572.9428],[166055.35809999984,4463570.9506],[166048.79559999984,4463585.2475000005],[166029.60030000005,4463601.3256],[166008.60030000005,4463577.8178],[165995.19400000013,4463571.6537999995],[165989.52219999954,4463565.3256],[165983.19400000013,4463559.6537999995],[165953.40500000026,4463506.3803],[165943.77219999954,4463475.161599999],[165935.19400000013,4463475.677200001],[165923.52219999954,4463455.099099999],[165932.35809999984,4463430.489700001],[165937.72530000005,4463421.771],[165964.58469999954,4463412.6303],[165968.35809999984,4463406.489700001],[165996.48309999984,4463404.474099999],[166020.34250000026,4463392.474099999],[166022.35809999984,4463382.489700001],[166034.35809999984,4463382.489700001],[166046.35809999984,4463382.489700001],[166046.35809999984,4463376.489700001],[166058.35809999984,4463376.489700001],[166058.35809999984,4463370.489700001],[166064.35809999984,4463370.489700001],[166064.35809999984,4463364.489700001],[166070.35809999984,4463364.489700001],[166076.35809999984,4463364.489700001],[166076.35809999984,4463358.489700001],[166082.35809999984,4463358.489700001],[166094.35809999984,4463358.489700001],[166094.35809999984,4463352.489700001],[166106.35809999984,4463352.489700001],[166106.35809999984,4463346.489700001],[166110.38939999975,4463338.521],[166118.35809999984,4463334.489700001],[166163.68620000035,4463331.8178],[166211.03000000026,4463289.161599999],[166239.55339999963,4463282.974099999],[166277.68620000035,4463259.8178],[166298.89719999954,4463224.896],[166319.03000000026,4463217.161599999],[166346.59250000026,4463211.1850000005],[166358.35809999984,4463196.489700001],[166370.35809999984,4463196.489700001],[166370.35809999984,4463184.489700001],[166376.35809999984,4463184.489700001],[166382.35809999984,4463184.489700001],[166382.35809999984,4463178.489700001]]]},{"type":"Polygon","coordinates":[[[166952.35809999984,4463070.489700001],[166981.93620000035,4463112.911599999],[166997.24089999963,4463149.544399999],[166930.79559999984,4463180.927200001],[166895.47530000005,4463199.606899999],[166793.24089999963,4463247.3725000005],[166763.47530000005,4463265.606899999],[166705.58469999954,4463298.1850000005],[166655.24089999963,4463319.3725000005],[166637.47530000005,4463331.606899999],[166586.14719999954,4463360.481899999],[166571.05339999963,4463392.521],[166571.49870000035,4463404.286599999],[166593.13150000013,4463424.3256],[166529.24089999963,4463469.3725000005],[166499.47530000005,4463493.606899999],[166462.20969999954,4463520.9350000005],[166415.24089999963,4463547.3725000005],[166397.47530000005,4463559.606899999],[166363.49089999963,4463581.544399999],[166330.37370000035,4463608.4975000005],[166319.47530000005,4463631.606899999],[166312.32689999975,4463645.106899999],[166298.17059999984,4463658.2085],[166259.24089999963,4463673.3725000005],[166173.41280000005,4463712.8178],[166139.47530000005,4463733.606899999],[166125.85809999984,4463740.0287999995],[166105.67839999963,4463739.231899999],[166097.47530000005,4463720.271],[166125.41280000005,4463694.396],[166181.70969999954,4463667.8412999995],[166214.73309999984,4463650.356899999],[166264.44400000013,4463630.9975000005],[166296.15500000026,4463606.669399999],[166294.51439999975,4463565.489700001],[166295.75650000013,4463534.669399999],[166331.47530000005,4463511.606899999],[166358.12370000035,4463493.2553],[166385.47530000005,4463475.606899999],[166409.24089999963,4463457.3725000005],[166427.47530000005,4463445.606899999],[166451.24089999963,4463427.3725000005],[166481.47530000005,4463409.606899999],[166505.24089999963,4463391.3725000005],[166563.43620000035,4463358.606899999],[166539.74089999963,4463336.646],[166523.47530000005,4463300.927200001],[166557.90500000026,4463284.6850000005],[166586.12370000035,4463265.2553],[166633.98309999984,4463246.6225000005],[166667.00650000013,4463229.1381],[166701.08469999954,4463213.0835],[166733.24089999963,4463193.3725000005],[166771.02219999954,4463178.6537999995],[166793.24089999963,4463163.3725000005],[166823.47530000005,4463145.606899999],[166848.38939999975,4463126.5053],[166882.32689999975,4463110.474099999],[166907.24089999963,4463091.3725000005],[166919.47530000005,4463085.606899999],[166941.60030000005,4463073.8881],[166952.35809999984,4463070.489700001]]]},{"type":"Polygon","coordinates":[[[164354.35809999984,4463070.489700001],[164350.95969999954,4463054.5756],[164390.05339999963,4463056.896],[164411.35809999984,4463049.2553],[164438.54559999984,4463059.0053],[164489.19400000013,4463139.6537999995],[164516.10030000005,4463145.911599999],[164535.45969999954,4463176.3803],[164555.19400000013,4463223.6537999995],[164578.86589999963,4463244.8178],[164591.19400000013,4463271.6537999995],[164607.64719999954,4463286.349099999],[164621.19400000013,4463307.6537999995],[164646.85809999984,4463323.989700001],[164666.73309999984,4463355.231899999],[164681.92059999984,4463388.302200001],[164711.54559999984,4463407.146],[164753.19400000013,4463481.6537999995],[164781.15500000026,4463501.9506],[164796.50650000013,4463519.1303],[164794.81900000013,4463547.489700001],[164795.61589999963,4463560.661599999],[164812.58469999954,4463575.849099999],[164847.48309999984,4463630.7162999995],[164855.19400000013,4463655.6537999995],[164861.87370000035,4463667.9585],[164861.12370000035,4463680.3335],[164836.11589999963,4463691.8178],[164822.68620000035,4463706.8178],[164794.11589999963,4463732.364700001],[164778.95189999975,4463699.3881],[164761.63150000013,4463674.5678],[164747.19400000013,4463661.6537999995],[164711.52219999954,4463619.3256],[164660.17059999984,4463562.3256],[164639.52219999954,4463517.3256],[164633.19400000013,4463505.6537999995],[164630.35809999984,4463490.489700001],[164646.71750000026,4463495.036599999],[164666.35809999984,4463520.489700001],[164666.35809999984,4463526.489700001],[164672.35809999984,4463526.489700001],[164672.35809999984,4463532.489700001],[164672.35809999984,4463538.489700001],[164678.35809999984,4463538.489700001],[164681.56900000013,4463558.856899999],[164696.66280000005,4463562.2553],[164715.81120000035,4463532.8178],[164699.68620000035,4463504.5756],[164690.35809999984,4463508.489700001],[164690.35809999984,4463502.489700001],[164684.35809999984,4463502.489700001],[164684.35809999984,4463496.489700001],[164678.35809999984,4463496.489700001],[164661.64719999954,4463484.9585],[164648.35809999984,4463460.489700001],[164648.35809999984,4463454.489700001],[164642.35809999984,4463454.489700001],[164636.35809999984,4463442.489700001],[164636.35809999984,4463436.489700001],[164630.35809999984,4463436.489700001],[164630.35809999984,4463430.489700001],[164624.35809999984,4463430.489700001],[164621.68620000035,4463417.2006],[164612.35809999984,4463412.489700001],[164612.35809999984,4463406.489700001],[164606.35809999984,4463406.489700001],[164606.35809999984,4463400.489700001],[164600.35809999984,4463400.489700001],[164576.35809999984,4463364.489700001],[164576.35809999984,4463358.489700001],[164570.35809999984,4463358.489700001],[164570.35809999984,4463352.489700001],[164564.35809999984,4463352.489700001],[164564.35809999984,4463340.489700001],[164558.35809999984,4463340.489700001],[164554.74870000035,4463326.427200001],[164540.35809999984,4463316.489700001],[164532.38939999975,4463312.4585],[164528.35809999984,4463304.489700001],[164528.35809999984,4463298.489700001],[164522.35809999984,4463298.489700001],[164522.35809999984,4463292.489700001],[164522.35809999984,4463286.489700001],[164516.35809999984,4463286.489700001],[164516.35809999984,4463280.489700001],[164510.35809999984,4463280.489700001],[164504.35809999984,4463280.489700001],[164504.35809999984,4463274.489700001],[164504.35809999984,4463268.489700001],[164498.35809999984,4463268.489700001],[164489.59250000026,4463253.2553],[164448.20189999975,4463203.239700001],[164444.35809999984,4463190.489700001],[164444.35809999984,4463184.489700001],[164438.35809999984,4463184.489700001],[164438.35809999984,4463178.489700001],[164432.35809999984,4463178.489700001],[164432.35809999984,4463166.489700001],[164426.35809999984,4463166.489700001],[164422.67839999963,4463152.169399999],[164408.35809999984,4463148.489700001],[164401.11589999963,4463143.4975000005],[164372.35809999984,4463100.489700001],[164372.35809999984,4463094.489700001],[164366.35809999984,4463094.489700001],[164366.35809999984,4463088.489700001],[164366.35809999984,4463082.489700001],[164360.35809999984,4463082.489700001],[164360.35809999984,4463070.489700001],[164354.35809999984,4463070.489700001]]]},{"type":"Polygon","coordinates":[[[167996.35809999984,4463436.489700001],[167999.45189999975,4463412.8178],[168028.18620000035,4463394.8178],[168035.12370000035,4463379.2553],[168060.31900000013,4463343.724099999],[168025.63150000013,4463321.9975000005],[168016.91280000005,4463293.0287999995],[167980.67839999963,4463234.974099999],[167983.74870000035,4463196.7475000005],[167972.80339999963,4463184.044399999],[167956.67839999963,4463170.169399999],[167945.59250000026,4463157.2553],[167935.91280000005,4463148.9350000005],[167918.28780000005,4463090.364700001],[167891.12370000035,4463055.724099999],[167884.37370000035,4463040.5600000005],[167866.04559999984,4463024.786599999],[167878.23309999984,4462984.3100000005],[167902.16280000005,4462982.3881],[167918.35809999984,4462992.489700001],[167918.35809999984,4462998.489700001],[167924.35809999984,4462998.489700001],[167924.35809999984,4463004.489700001],[167924.35809999984,4463010.489700001],[167930.35809999984,4463010.489700001],[167936.35809999984,4463022.489700001],[167936.35809999984,4463028.489700001],[167942.35809999984,4463028.489700001],[167942.35809999984,4463040.489700001],[167942.35809999984,4463052.489700001],[167948.35809999984,4463052.489700001],[167950.37370000035,4463062.474099999],[167966.35809999984,4463070.489700001],[167966.35809999984,4463076.489700001],[167972.35809999984,4463076.489700001],[167972.35809999984,4463082.489700001],[167972.35809999984,4463094.489700001],[167978.35809999984,4463094.489700001],[167980.77219999954,4463113.6381],[167990.35809999984,4463118.489700001],[167993.03000000026,4463131.7787999995],[168002.35809999984,4463136.489700001],[168002.35809999984,4463148.489700001],[168008.35809999984,4463148.489700001],[168008.35809999984,4463154.489700001],[168014.35809999984,4463154.489700001],[168014.35809999984,4463160.489700001],[168017.03000000026,4463173.7787999995],[168026.35809999984,4463178.489700001],[168032.35809999984,4463178.489700001],[168032.35809999984,4463184.489700001],[168032.35809999984,4463190.489700001],[168038.35809999984,4463190.489700001],[168042.34250000026,4463198.5053],[168044.35809999984,4463208.489700001],[168044.35809999984,4463214.489700001],[168050.35809999984,4463214.489700001],[168050.35809999984,4463220.489700001],[168050.35809999984,4463232.489700001],[168062.35809999984,4463232.489700001],[168062.35809999984,4463238.489700001],[168068.35809999984,4463238.489700001],[168068.35809999984,4463244.489700001],[168074.35809999984,4463244.489700001],[168074.35809999984,4463256.489700001],[168074.35809999984,4463262.489700001],[168080.35809999984,4463262.489700001],[168080.35809999984,4463268.489700001],[168080.35809999984,4463280.489700001],[168086.35809999984,4463280.489700001],[168086.35809999984,4463286.489700001],[168092.35809999984,4463286.489700001],[168095.12370000035,4463295.724099999],[168124.13939999975,4463320.7085],[168149.17059999984,4463349.7475000005],[168155.56900000013,4463349.231899999],[168173.12370000035,4463377.286599999],[168179.49870000035,4463405.294399999],[168206.38150000013,4463443.239700001],[168217.06900000013,4463490.2085],[168234.03780000005,4463504.8100000005],[168245.12370000035,4463517.724099999],[168263.14719999954,4463533.2162999995],[168269.12370000035,4463560.919399999],[168253.91280000005,4463574.044399999],[168245.59250000026,4463583.724099999],[168227.21750000026,4463591.9037999995],[168179.59250000026,4463583.2553],[168137.12370000035,4463577.724099999],[168119.59250000026,4463571.2553],[168079.13939999975,4463565.114700001],[168071.35809999984,4463565.724099999],[168059.00650000013,4463564.739700001],[167972.87370000035,4463572.4975000005],[167954.89719999954,4463571.044399999],[167939.59250000026,4463553.2553],[167929.91280000005,4463544.9350000005],[167919.85809999984,4463533.2631],[167922.53000000026,4463499.911599999],[167962.98309999984,4463465.0600000005],[167973.90500000026,4463440.5912999995],[167996.35809999984,4463436.489700001],[167996.35809999984,4463448.489700001],[168014.35809999984,4463448.489700001],[168014.35809999984,4463436.489700001],[167996.35809999984,4463436.489700001]]]},{"type":"Polygon","coordinates":[[[160970.35809999984,4462920.489700001],[160973.19400000013,4462923.6537999995],[161037.15500000026,4462941.2787999995],[161069.52219999954,4462947.3256],[161104.84250000026,4462960.0053],[161153.52219999954,4462971.3256],[161194.70189999975,4462988.4585],[161231.52219999954,4462995.3256],[161261.19400000013,4463007.6537999995],[161303.52219999954,4463019.3256],[161363.19400000013,4463037.6537999995],[161404.11589999963,4463045.294399999],[161425.06900000013,4463056.6850000005],[161518.06900000013,4463085.396],[161564.78000000026,4463096.271],[161624.73309999984,4463119.3335],[161714.14719999954,4463143.9662999995],[161725.79559999984,4463169.349099999],[161789.52219999954,4463175.3256],[161844.06120000035,4463186.974099999],[161891.52219999954,4463193.3256],[161958.08469999954,4463208.6303],[161996.03000000026,4463166.161599999],[162009.99870000035,4463153.646],[162095.19400000013,4463169.6537999995],[162149.52219999954,4463175.3256],[162215.19400000013,4463187.6537999995],[162255.34250000026,4463193.911599999],[162307.18620000035,4463207.8100000005],[162305.00650000013,4463244.5131],[162216.55339999963,4463239.239700001],[162179.52219999954,4463229.3256],[162131.19400000013,4463223.6537999995],[162095.35809999984,4463214.0678],[162058.84250000026,4463223.8412999995],[162060.83469999954,4463257.3335],[162145.02219999954,4463266.099099999],[162278.26439999975,4463294.5756],[162293.19400000013,4463305.4506],[162230.33469999954,4463313.3256],[162173.82689999975,4463298.1850000005],[162044.03000000026,4463280.8178],[161999.52219999954,4463271.3256],[161930.00650000013,4463265.396],[161873.52219999954,4463253.3256],[161795.19400000013,4463247.6537999995],[161741.24089999963,4463238.0678],[161708.03000000026,4463214.8881],[161697.15500000026,4463179.614700001],[161583.31900000013,4463148.2787999995],[161537.19400000013,4463139.6537999995],[161507.52219999954,4463127.3256],[161487.60030000005,4463121.6537999995],[161463.43620000035,4463134.802200001],[161399.78000000026,4463117.739700001],[161371.42059999984,4463086.0053],[161310.43620000035,4463063.739700001],[161267.19400000013,4463055.6537999995],[161218.79559999984,4463034.349099999],[161171.19400000013,4463019.6537999995],[161129.52219999954,4463001.3256],[161093.19400000013,4462995.6537999995],[161033.52219999954,4462977.3256],[160991.19400000013,4462965.6537999995],[160933.72530000005,4462940.364700001],[160925.52219999954,4462925.1537999995],[160970.35809999984,4462920.489700001]]]},{"type":"Polygon","coordinates":[[[166358.35809999984,4463196.489700001],[166336.11589999963,4463201.1537999995],[166319.47530000005,4463175.3725000005],[166284.24870000035,4463124.1850000005],[166269.03780000005,4463085.1381],[166235.24089999963,4463043.606899999],[166217.47530000005,4463013.3725000005],[166193.47530000005,4462982.0835],[166201.95969999954,4462957.521],[166247.26439999975,4462938.911599999],[166271.70969999954,4462972.239700001],[166347.13150000013,4463061.2787999995],[166382.99089999963,4463062.7085],[166427.99089999963,4463036.2475000005],[166439.47530000005,4463025.606899999],[166456.16280000005,4463007.5835],[166487.47530000005,4463001.606899999],[166505.24089999963,4462995.3725000005],[166532.35809999984,4462992.489700001],[166526.59250000026,4462998.724099999],[166515.01429999992,4463009.4350000005],[166469.00650000013,4463031.1381],[166433.70969999954,4463049.8412999995],[166398.38939999975,4463066.5053],[166370.68620000035,4463087.739700001],[166380.99870000035,4463103.3725000005],[166429.37370000035,4463086.427200001],[166505.70969999954,4463042.1537999995],[166588.37370000035,4463003.1303],[166647.69400000013,4462962.3256],[166685.47530000005,4462947.606899999],[166715.24089999963,4462929.3725000005],[166757.47530000005,4462905.606899999],[166775.24089999963,4462893.3725000005],[166806.43620000035,4462875.044399999],[166823.14719999954,4462857.021],[166838.68620000035,4462873.7787999995],[166859.24089999963,4462929.606899999],[166871.47530000005,4462947.3725000005],[166877.24089999963,4462972.731899999],[166810.04559999984,4463004.4428],[166773.08469999954,4463027.0835],[166742.35809999984,4463041.5678],[166697.47530000005,4463067.606899999],[166577.96750000026,4463130.864700001],[166496.78000000026,4463169.1850000005],[166447.63150000013,4463175.3725000005],[166421.47530000005,4463157.3725000005],[166407.27219999954,4463151.606899999],[166382.35809999984,4463178.489700001],[166376.35809999984,4463178.489700001],[166376.35809999984,4463184.489700001],[166370.35809999984,4463184.489700001],[166362.38939999975,4463188.521],[166358.35809999984,4463196.489700001]]]},{"type":"Polygon","coordinates":[[[168284.35809999984,4463208.489700001],[168281.19400000013,4463183.8100000005],[168255.83469999954,4463162.739700001],[168245.63939999975,4463139.2085],[168235.86589999963,4463131.099099999],[168221.85030000005,4463106.6303],[168209.63939999975,4463061.2085],[168197.03000000026,4463043.7006],[168198.20189999975,4463032.1928],[168187.79559999984,4463014.052200001],[168179.63939999975,4462995.2085],[168173.07689999975,4462989.771],[168161.63939999975,4462971.2085],[168149.07689999975,4462953.771],[168133.35030000005,4462911.771],[168113.63939999975,4462919.294399999],[168120.29559999984,4462946.786599999],[168131.07689999975,4462959.771],[168143.24089999963,4462969.8725000005],[168149.07689999975,4462989.771],[168156.74089999963,4463003.1537999995],[168167.07689999975,4463049.771],[168179.24089999963,4463059.8725000005],[168187.79559999984,4463089.052200001],[168197.63939999975,4463115.2085],[168203.07689999975,4463133.771],[168212.85030000005,4463141.8803],[168221.63939999975,4463157.2085],[168227.10030000005,4463169.8178],[168244.91280000005,4463168.0131],[168246.24870000035,4463181.2553],[168239.07689999975,4463187.2085],[168224.12370000035,4463205.2085],[168207.24870000035,4463195.0600000005],[168185.63939999975,4463145.2085],[168174.97530000005,4463136.349099999],[168161.07689999975,4463103.771],[168145.25650000013,4463061.5600000005],[168131.07689999975,4463049.771],[168122.54559999984,4463011.239700001],[168107.07689999975,4462989.771],[168101.63939999975,4462977.2085],[168089.07689999975,4462959.771],[168077.63939999975,4462929.2085],[168066.01439999975,4462908.911599999],[168062.75650000013,4462876.849099999],[168083.40500000026,4462869.0912999995],[168099.53000000026,4462878.302200001],[168110.68620000035,4462864.8725000005],[168134.85030000005,4462855.802200001],[168152.38150000013,4462902.5835],[168167.63939999975,4462929.2085],[168179.07689999975,4462959.771],[168186.88150000013,4462966.239700001],[168197.07689999975,4462989.771],[168206.35809999984,4462992.489700001],[168210.34250000026,4463000.5053],[168212.35809999984,4463010.489700001],[168212.35809999984,4463022.489700001],[168218.35809999984,4463022.489700001],[168221.33469999954,4463048.6225000005],[168236.35809999984,4463052.489700001],[168236.35809999984,4463058.489700001],[168236.35809999984,4463064.489700001],[168242.35809999984,4463064.489700001],[168242.35809999984,4463082.489700001],[168248.35809999984,4463082.489700001],[168251.17059999984,4463099.036599999],[168264.60030000005,4463131.8725000005],[168278.35809999984,4463142.489700001],[168284.96750000026,4463168.294399999],[168305.19400000013,4463172.8178],[168317.89719999954,4463164.0287999995],[168324.67059999984,4463154.231899999],[168346.81900000013,4463144.9506],[168370.51439999975,4463138.856899999],[168388.81900000013,4463126.9506],[168401.89719999954,4463122.0287999995],[168418.46750000026,4463098.0287999995],[168453.90500000026,4463103.5600000005],[168460.81900000013,4463122.0287999995],[168464.35809999984,4463124.489700001],[168470.35809999984,4463124.489700001],[168470.35809999984,4463130.489700001],[168470.35809999984,4463136.489700001],[168476.35809999984,4463136.489700001],[168479.54559999984,4463156.6928],[168494.35809999984,4463160.489700001],[168500.35809999984,4463172.489700001],[168500.35809999984,4463184.489700001],[168506.35809999984,4463184.489700001],[168506.35809999984,4463190.489700001],[168512.35809999984,4463190.489700001],[168512.35809999984,4463196.489700001],[168515.03000000026,4463211.8178],[168525.01439999975,4463228.8335],[168535.70189999975,4463254.146],[168549.01439999975,4463276.8335],[168557.03000000026,4463295.8178],[168563.68620000035,4463301.161599999],[168582.78780000005,4463334.9585],[168580.25650000013,4463355.419399999],[168540.88150000013,4463379.3256],[168527.03000000026,4463385.161599999],[168501.36589999963,4463418.8881],[168486.06120000035,4463431.146],[168460.70189999975,4463441.8335],[168443.68620000035,4463451.8178],[168425.03000000026,4463457.161599999],[168416.35809999984,4463460.489700001],[168416.35809999984,4463454.489700001],[168416.35809999984,4463448.489700001],[168410.35809999984,4463448.489700001],[168410.35809999984,4463442.489700001],[168410.35809999984,4463436.489700001],[168404.35809999984,4463436.489700001],[168404.35809999984,4463424.489700001],[168398.35809999984,4463424.489700001],[168398.35809999984,4463412.489700001],[168392.35809999984,4463412.489700001],[168392.35809999984,4463394.489700001],[168380.35809999984,4463394.489700001],[168380.35809999984,4463388.489700001],[168386.52219999954,4463383.731899999],[168376.98309999984,4463367.864700001],[168371.14719999954,4463353.661599999],[168353.73309999984,4463331.114700001],[168350.35809999984,4463328.489700001],[168347.68620000035,4463315.2006],[168338.35809999984,4463310.489700001],[168332.35809999984,4463310.489700001],[168332.35809999984,4463304.489700001],[168332.35809999984,4463292.489700001],[168326.35809999984,4463292.489700001],[168326.35809999984,4463286.489700001],[168320.35809999984,4463286.489700001],[168320.35809999984,4463280.489700001],[168320.35809999984,4463268.489700001],[168314.35809999984,4463268.489700001],[168311.94400000013,4463249.3412999995],[168302.35809999984,4463244.489700001],[168302.35809999984,4463232.489700001],[168296.35809999984,4463232.489700001],[168296.35809999984,4463226.489700001],[168290.35809999984,4463226.489700001],[168286.37370000035,4463218.474099999],[168284.35809999984,4463208.489700001]]]},{"type":"Polygon","coordinates":[[[165686.35809999984,4462902.489700001],[165683.47530000005,4462899.3725000005],[165657.83469999954,4462893.606899999],[165641.47530000005,4462935.606899999],[165623.61589999963,4462952.1537999995],[165563.24089999963,4462959.3725000005],[165557.47530000005,4462965.606899999],[165537.83469999954,4462971.3725000005],[165521.05339999963,4462928.294399999],[165521.47530000005,4462917.396],[165513.95189999975,4462895.927200001],[165516.06120000035,4462842.489700001],[165515.03000000026,4462816.0053],[165521.47530000005,4462797.606899999],[165530.66280000005,4462768.5912999995],[165545.47530000005,4462761.606899999],[165556.63150000013,4462749.5835],[165575.47530000005,4462743.606899999],[165592.39719999954,4462725.3256],[165602.35809999984,4462725.724099999],[165615.31900000013,4462725.2085],[165645.38939999975,4462704.5131],[165719.26439999975,4462743.606899999],[165734.92059999984,4462742.9975000005],[165749.24089999963,4462745.1303],[165731.56900000013,4462795.5912999995],[165773.47530000005,4462815.3725000005],[165791.87370000035,4462828.0287999995],[165839.47530000005,4462839.3725000005],[165871.81900000013,4462861.6381],[165886.72530000005,4462893.231899999],[165934.81900000013,4462928.5053],[165941.24089999963,4462937.1303],[165917.24089999963,4462959.3725000005],[165911.10030000005,4462972.3803],[165899.24089999963,4462983.3725000005],[165893.47530000005,4462995.606899999],[165884.66280000005,4463003.7631],[165846.50650000013,4462983.5835],[165830.35809999984,4462980.489700001],[165827.35809999984,4462972.802200001],[165824.35809999984,4462980.489700001],[165812.35809999984,4462974.489700001],[165812.35809999984,4462968.489700001],[165806.35809999984,4462968.489700001],[165802.53780000005,4462955.786599999],[165747.06120000035,4462916.4585],[165731.21750000026,4462917.7475000005],[165713.59250000026,4462911.2553],[165704.35809999984,4462908.489700001],[165704.35809999984,4462902.489700001],[165698.35809999984,4462902.489700001],[165686.35809999984,4462902.489700001]]]},{"type":"Polygon","coordinates":[[[167918.35809999984,4462686.489700001],[167921.24089999963,4462689.606899999],[167936.82689999975,4462704.021],[167962.72530000005,4462732.0053],[167993.24089999963,4462773.606899999],[168023.31120000035,4462810.544399999],[168044.59250000026,4462830.2553],[168057.64719999954,4462844.364700001],[168040.53780000005,4462876.731899999],[167994.38939999975,4462898.5053],[167961.55339999963,4462923.677200001],[167915.42839999963,4462950.794399999],[167886.38939999975,4462964.5053],[167861.47530000005,4462983.606899999],[167831.24089999963,4462995.3725000005],[167813.47530000005,4463007.606899999],[167793.85809999984,4463020.2631],[167767.35030000005,4463019.2085],[167717.47530000005,4462965.3725000005],[167708.12370000035,4462956.724099999],[167696.78000000026,4462944.4662999995],[167684.14719999954,4462891.4037999995],[167712.48309999984,4462854.4662999995],[167741.47530000005,4462827.606899999],[167765.73309999984,4462801.4037999995],[167795.47530000005,4462779.606899999],[167894.52219999954,4462689.7475000005],[167918.35809999984,4462686.489700001]]]},{"type":"Polygon","coordinates":[[[169454.35809999984,4462614.489700001],[169475.52219999954,4462617.3256],[169529.24089999963,4462641.677200001],[169597.95969999954,4462685.4350000005],[169619.52219999954,4462695.3256],[169640.85030000005,4462710.2085],[169649.19400000013,4462738.5912999995],[169613.78000000026,4462770.231899999],[169589.52219999954,4462803.6537999995],[169561.11589999963,4462838.294399999],[169505.63939999975,4462886.106899999],[169493.52219999954,4462899.6537999995],[169482.90500000026,4462909.146],[169442.80339999963,4462934.646],[169416.20189999975,4462897.9662999995],[169405.32689999975,4462851.2787999995],[169396.63150000013,4462730.927200001],[169367.92059999984,4462665.6537999995],[169364.35809999984,4462662.489700001],[169364.35809999984,4462656.489700001],[169364.35809999984,4462626.489700001],[169370.35809999984,4462626.489700001],[169370.35809999984,4462620.489700001],[169430.35809999984,4462620.489700001],[169430.35809999984,4462614.489700001],[169454.35809999984,4462614.489700001]]]},{"type":"Polygon","coordinates":[[[169046.35809999984,4462608.489700001],[169052.35809999984,4462608.489700001],[169052.35809999984,4462620.489700001],[169052.35809999984,4462626.489700001],[169058.35809999984,4462626.489700001],[169058.35809999984,4462638.489700001],[169054.35030000005,4462654.7787999995],[169060.81900000013,4462672.0287999995],[169064.35809999984,4462674.489700001],[169064.35809999984,4462698.489700001],[169064.35809999984,4462716.489700001],[169064.35809999984,4462728.489700001],[169035.48309999984,4462740.114700001],[169040.35809999984,4462752.489700001],[169034.35809999984,4462752.489700001],[169034.35809999984,4462764.489700001],[169030.32689999975,4462772.4585],[169022.35809999984,4462776.489700001],[169016.35809999984,4462776.489700001],[169016.35809999984,4462782.489700001],[169010.35809999984,4462782.489700001],[169010.35809999984,4462788.489700001],[168988.98309999984,4462797.114700001],[168986.35809999984,4462830.489700001],[168978.67059999984,4462833.489700001],[168986.35809999984,4462836.489700001],[168988.81900000013,4462858.0287999995],[168992.35809999984,4462872.489700001],[168992.35809999984,4462878.489700001],[168998.35809999984,4462878.489700001],[168998.35809999984,4462896.489700001],[169000.88939999975,4462924.989700001],[169009.25650000013,4462957.5912999995],[169016.35809999984,4462962.489700001],[169016.35809999984,4462974.489700001],[169016.35809999984,4462998.489700001],[169022.35809999984,4462998.489700001],[169022.35809999984,4463022.489700001],[169022.35809999984,4463040.489700001],[169028.35809999984,4463040.489700001],[169028.35809999984,4463070.489700001],[169028.35809999984,4463100.489700001],[169034.35809999984,4463100.489700001],[169028.85030000005,4463132.8803],[168983.56900000013,4463126.2006],[168965.73309999984,4463103.114700001],[168962.35809999984,4463100.489700001],[168954.36589999963,4463079.2085],[168947.63939999975,4463019.2085],[168938.35809999984,4462980.489700001],[168932.19400000013,4462931.1537999995],[168926.35809999984,4462926.489700001],[168920.35809999984,4462878.489700001],[168920.35809999984,4462848.489700001],[168914.35809999984,4462848.489700001],[168911.89719999954,4462832.9506],[168908.35809999984,4462818.489700001],[168908.35809999984,4462806.489700001],[168902.35809999984,4462806.489700001],[168902.35809999984,4462800.489700001],[168890.35809999984,4462800.489700001],[168872.35809999984,4462800.489700001],[168857.19400000013,4462797.6537999995],[168851.52219999954,4462791.3256],[168845.19400000013,4462785.6537999995],[168839.52219999954,4462755.3256],[168827.28780000005,4462732.8256],[168821.10030000005,4462666.802200001],[168821.70969999954,4462656.489700001],[168821.00650000013,4462644.489700001],[168822.24870000035,4462623.6537999995],[168918.60030000005,4462617.1850000005],[168926.35809999984,4462608.489700001],[168938.35809999984,4462608.489700001],[168984.01439999975,4462612.896],[169046.35809999984,4462608.489700001]]]},{"type":"Polygon","coordinates":[[[167186.35809999984,4462572.489700001],[167219.42839999963,4462568.669399999],[167251.91280000005,4462569.9585],[167291.24089999963,4462641.606899999],[167309.47530000005,4462671.3725000005],[167357.24089999963,4462761.606899999],[167375.47530000005,4462791.3725000005],[167384.47530000005,4462810.4506],[167443.16280000005,4462919.7162999995],[167418.67059999984,4462975.849099999],[167375.24089999963,4463001.3725000005],[167344.56120000035,4463024.9037999995],[167297.24089999963,4463031.3725000005],[167251.65500000026,4463038.169399999],[167230.79559999984,4463037.349099999],[167209.60809999984,4462992.489700001],[167195.24089999963,4462971.606899999],[167176.67839999963,4462921.1928],[167162.96750000026,4462895.271],[167138.35809999984,4462872.489700001],[167138.35809999984,4462866.489700001],[167138.35809999984,4462860.489700001],[167132.35809999984,4462860.489700001],[167129.68620000035,4462847.2006],[167120.35809999984,4462842.489700001],[167115.34250000026,4462826.224099999],[167057.17059999984,4462719.6537999995],[167030.28780000005,4462726.0053],[166999.23309999984,4462779.3256],[166975.93620000035,4462765.7787999995],[166967.19400000013,4462749.6537999995],[166954.06900000013,4462707.1850000005],[166921.72530000005,4462665.4428],[166907.52219999954,4462625.8803],[166956.38939999975,4462614.161599999],[167033.19400000013,4462618.731899999],[167092.98309999984,4462600.2631],[167096.35809999984,4462596.489700001],[167114.35809999984,4462596.489700001],[167121.01429999992,4462605.114700001],[167163.71750000026,4462598.294399999],[167174.35809999984,4462584.489700001],[167180.35809999984,4462584.489700001],[167180.35809999984,4462578.489700001],[167186.35809999984,4462578.489700001],[167186.35809999984,4462572.489700001]]]},{"type":"Polygon","coordinates":[[[165584.35809999984,4462542.489700001],[165597.50650000013,4462547.2006],[165648.22530000005,4462544.177200001],[165708.67059999984,4462557.0912999995],[165724.25650000013,4462539.6537999995],[165785.19400000013,4462548.911599999],[165774.57689999975,4462565.3178],[165749.68620000035,4462578.8178],[165731.19400000013,4462587.3256],[165724.60809999984,4462594.6850000005],[165695.82689999975,4462592.974099999],[165683.52219999954,4462599.6537999995],[165665.75650000013,4462607.8100000005],[165664.81900000013,4462623.489700001],[165665.59250000026,4462636.4037999995],[165641.35809999984,4462634.9506],[165609.88150000013,4462636.8256],[165577.06900000013,4462621.7787999995],[165567.03780000005,4462599.8881],[165551.42839999963,4462598.9506],[165539.52219999954,4462617.6537999995],[165533.19400000013,4462623.3256],[165522.57689999975,4462635.2085],[165437.31120000035,4462642.731899999],[165367.63150000013,4462638.5835],[165355.98309999984,4462651.614700001],[165310.91280000005,4462639.544399999],[165257.35809999984,4462642.731899999],[165193.32689999975,4462638.9350000005],[165182.75650000013,4462650.771],[165135.20189999975,4462609.286599999],[165080.35809999984,4462612.5678],[165021.36589999963,4462609.052200001],[164998.77219999954,4462621.3335],[164957.19400000013,4462611.6537999995],[164931.27219999954,4462604.7162999995],[164895.38939999975,4462606.849099999],[164831.52219999954,4462596.911599999],[164839.23309999984,4462575.7006],[164964.27219999954,4462583.1537999995],[164999.52219999954,4462551.6537999995],[165002.35809999984,4462548.489700001],[165010.37370000035,4462552.474099999],[165020.35809999984,4462554.489700001],[165025.16280000005,4462563.981899999],[165054.34250000026,4462568.5053],[165060.41280000005,4462580.5053],[165090.34250000026,4462576.474099999],[165094.37370000035,4462568.5053],[165102.34250000026,4462564.474099999],[165106.37370000035,4462556.5053],[165114.34250000026,4462552.474099999],[165116.35809999984,4462548.489700001],[165158.35809999984,4462548.489700001],[165170.78000000026,4462562.411599999],[165195.36589999963,4462549.052200001],[165255.60030000005,4462552.6381],[165359.52219999954,4462545.6537999995],[165362.35809999984,4462542.489700001],[165398.35809999984,4462542.489700001],[165417.27219999954,4462554.302200001],[165476.35809999984,4462548.489700001],[165482.35809999984,4462548.489700001],[165536.35809999984,4462548.489700001],[165536.35809999984,4462542.489700001],[165584.35809999984,4462542.489700001]]]},{"type":"Polygon","coordinates":[[[164810.35809999984,4462524.489700001],[164813.24089999963,4462527.606899999],[164824.51439999975,4462538.036599999],[164831.24089999963,4462547.364700001],[164793.55339999963,4462618.5912999995],[164764.56120000035,4462654.1928],[164581.20969999954,4462712.1303],[164543.24089999963,4462719.3725000005],[164496.71750000026,4462732.989700001],[164286.88150000013,4462747.3803],[164249.92059999984,4462757.0600000005],[164241.64719999954,4462739.5053],[164231.26439999975,4462706.7631],[164217.03780000005,4462693.5678],[164156.35809999984,4462695.9585],[164130.27219999954,4462694.927200001],[164126.35809999984,4462674.489700001],[164123.73309999984,4462647.114700001],[164120.35809999984,4462626.489700001],[164123.54559999984,4462582.356899999],[164183.19400000013,4462575.3256],[164367.29559999984,4462569.536599999],[164464.95969999954,4462556.552200001],[164764.18620000035,4462536.536599999],[164783.52219999954,4462527.6537999995],[164786.35809999984,4462524.489700001],[164810.35809999984,4462524.489700001]]]},{"type":"Polygon","coordinates":[[[161792.35809999984,4462554.489700001],[161795.28780000005,4462557.5600000005],[161813.42839999963,4462563.419399999],[161845.25650000013,4462576.3335],[161904.71750000026,4462595.646],[161944.93620000035,4462628.106899999],[161981.28780000005,4462635.5600000005],[162011.42839999963,4462641.419399999],[162035.28780000005,4462647.5600000005],[162113.42839999963,4462665.419399999],[162155.28780000005,4462677.5600000005],[162212.59250000026,4462686.8881],[162268.02219999954,4462702.919399999],[162369.13150000013,4462726.4506],[162425.42839999963,4462737.419399999],[162455.28780000005,4462749.5600000005],[162506.80339999963,4462757.927200001],[162545.28780000005,4462773.5600000005],[162614.26439999975,4462781.036599999],[162671.28780000005,4462797.5600000005],[162717.03780000005,4462806.4662999995],[162779.28780000005,4462829.6225000005],[162762.15500000026,4462843.9428],[162731.42839999963,4462833.419399999],[162677.24089999963,4462824.606899999],[162629.47530000005,4462812.3725000005],[162593.28780000005,4462803.5600000005],[162523.46750000026,4462785.6537999995],[162466.60809999984,4462779.4662999995],[162419.75650000013,4462763.4350000005],[162371.28780000005,4462755.5600000005],[162312.88150000013,4462738.6381],[162268.39719999954,4462731.396],[162233.42839999963,4462719.419399999],[162167.28780000005,4462707.5600000005],[162125.42839999963,4462695.419399999],[162057.31900000013,4462683.1850000005],[162011.42839999963,4462671.419399999],[161928.57689999975,4462656.536599999],[161897.38150000013,4462635.396],[161867.92059999984,4462645.4975000005],[161807.19400000013,4462625.786599999],[161750.47530000005,4462604.3178],[161691.55339999963,4462585.1928],[161633.28780000005,4462563.5600000005],[161601.45969999954,4462550.646],[161567.28780000005,4462539.5600000005],[161489.42839999963,4462509.419399999],[161445.10809999984,4462498.6381],[161423.28780000005,4462491.5600000005],[161352.69400000013,4462459.9428],[161258.31120000035,4462433.3178],[161225.42839999963,4462411.7553],[161242.04559999984,4462365.5835],[161272.49089999963,4462364.9506],[161304.50650000013,4462381.4506],[161330.35809999984,4462386.489700001],[161336.35809999984,4462386.489700001],[161336.35809999984,4462392.489700001],[161348.35809999984,4462392.489700001],[161354.35809999984,4462392.489700001],[161359.25650000013,4462399.5912999995],[161378.35809999984,4462404.489700001],[161384.35809999984,4462404.489700001],[161389.81900000013,4462411.5678],[161428.20969999954,4462426.6381],[161465.73309999984,4462437.114700001],[161501.19400000013,4462452.606899999],[161522.35809999984,4462458.489700001],[161540.35809999984,4462458.489700001],[161542.42059999984,4462462.544399999],[161578.37370000035,4462480.474099999],[161588.35809999984,4462482.489700001],[161600.35809999984,4462482.489700001],[161600.35809999984,4462488.489700001],[161618.35809999984,4462488.489700001],[161622.29559999984,4462494.864700001],[161668.65500000026,4462510.1928],[161684.35809999984,4462512.489700001],[161690.35809999984,4462512.489700001],[161690.35809999984,4462518.489700001],[161702.35809999984,4462518.489700001],[161702.35809999984,4462524.489700001],[161714.35809999984,4462524.489700001],[161714.35809999984,4462530.489700001],[161732.35809999984,4462530.489700001],[161734.81900000013,4462534.0287999995],[161747.89719999954,4462538.9506],[161767.44400000013,4462551.6537999995],[161792.35809999984,4462554.489700001]]]},{"type":"Polygon","coordinates":[[[164786.35809999984,4462524.489700001],[164720.70969999954,4462528.5912999995],[164661.36589999963,4462525.052200001],[164644.20969999954,4462534.3803],[164534.14719999954,4462540.9428],[164483.52219999954,4462531.474099999],[164490.36589999963,4462519.2162999995],[164554.30339999963,4462523.036599999],[164561.94400000013,4462514.481899999],[164596.39719999954,4462498.661599999],[164600.00650000013,4462438.0756],[164588.35809999984,4462434.489700001],[164584.37370000035,4462426.474099999],[164582.35809999984,4462416.489700001],[164582.35809999984,4462410.489700001],[164576.35809999984,4462410.489700001],[164567.49870000035,4462400.5756],[164472.13150000013,4462406.271],[164465.52219999954,4462413.6537999995],[164359.28000000026,4462420.802200001],[164344.84250000026,4462412.9506],[164346.08469999954,4462392.3256],[164447.52219999954,4462383.6537999995],[164465.19400000013,4462377.3256],[164506.77219999954,4462367.646],[164530.09250000026,4462380.3256],[164555.19400000013,4462371.3256],[164609.52219999954,4462365.6537999995],[164615.19400000013,4462355.739700001],[164537.35809999984,4462360.3803],[164475.97530000005,4462356.724099999],[164453.42839999963,4462368.981899999],[164411.52219999954,4462364.3881],[164424.24870000035,4462352.9975000005],[164457.62370000035,4462354.989700001],[164478.62370000035,4462340.3178],[164525.35809999984,4462343.106899999],[164631.48309999984,4462336.7787999995],[164645.19400000013,4462329.3256],[164663.52219999954,4462323.6537999995],[164692.77219999954,4462307.7631],[164813.52219999954,4462299.6537999995],[164819.49870000035,4462292.9506],[164843.35809999984,4462294.3803],[164864.35809999984,4462293.1381],[164888.35809999984,4462294.5678],[164912.35809999984,4462293.1381],[164922.60030000005,4462293.7475000005],[164921.17059999984,4462317.489700001],[164921.59250000026,4462324.239700001],[164909.19400000013,4462335.3256],[164903.52219999954,4462341.6537999995],[164884.25650000013,4462347.3256],[164870.45189999975,4462331.8803],[164849.52219999954,4462336.5912999995],[164861.70969999954,4462347.489700001],[164843.42839999963,4462363.849099999],[164813.03000000026,4462373.224099999],[164779.09250000026,4462364.1303],[164731.58469999954,4462366.9662999995],[164712.95189999975,4462356.8178],[164681.52219999954,4462379.8803],[164695.37370000035,4462418.481899999],[164720.38150000013,4462426.1928],[164771.80339999963,4462423.146],[164801.19400000013,4462443.6537999995],[164815.74870000035,4462449.3256],[164837.85030000005,4462424.599099999],[164837.17059999984,4462413.349099999],[164851.11589999963,4462395.6537999995],[164875.67839999963,4462409.0131],[164885.19400000013,4462419.6537999995],[164893.25650000013,4462426.849099999],[164881.35030000005,4462460.036599999],[164863.81900000013,4462475.6928],[164843.52219999954,4462503.6537999995],[164837.19400000013,4462509.3256],[164826.29559999984,4462521.5131],[164810.35809999984,4462524.489700001],[164786.35809999984,4462524.489700001]],[[164876.35809999984,4462422.489700001],[164862.34250000026,4462425.3256],[164867.61589999963,4462442.5053],[164883.76439999975,4462437.396],[164876.35809999984,4462422.489700001]]]},{"type":"Polygon","coordinates":[[[166106.35809999984,4462542.489700001],[166103.47530000005,4462539.3725000005],[166097.12370000035,4462490.599099999],[166076.87370000035,4462471.849099999],[166096.46750000026,4462434.8178],[166084.39719999954,4462412.0131],[165995.24089999963,4462359.606899999],[165972.83469999954,4462344.1850000005],[165965.47530000005,4462304.271],[165980.56900000013,4462275.7475000005],[166045.56120000035,4462289.3412999995],[166064.17059999984,4462337.106899999],[166086.08469999954,4462378.521],[166129.86589999963,4462406.8100000005],[166157.47530000005,4462413.3725000005],[166181.24089999963,4462419.606899999],[166237.63150000013,4462430.364700001],[166282.81900000013,4462442.2006],[166343.47530000005,4462455.3725000005],[166369.86589999963,4462462.286599999],[166394.99089999963,4462475.599099999],[166358.54559999984,4462544.5053],[166321.84250000026,4462561.802200001],[166251.95189999975,4462637.2475000005],[166238.35809999984,4462632.489700001],[166238.35809999984,4462626.489700001],[166232.35809999984,4462626.489700001],[166232.35809999984,4462620.489700001],[166226.35809999984,4462620.489700001],[166210.32689999975,4462600.4506],[166159.32689999975,4462570.4975000005],[166136.35809999984,4462566.489700001],[166130.35809999984,4462566.489700001],[166130.35809999984,4462560.489700001],[166124.35809999984,4462560.489700001],[166112.40500000026,4462554.4428],[166106.35809999984,4462542.489700001]]]},{"type":"Polygon","coordinates":[[[168734.35809999984,4462308.489700001],[168757.49089999963,4462301.3412999995],[168794.70969999954,4462268.106899999],[168811.13939999975,4462242.2553],[168839.52219999954,4462221.6537999995],[168845.99089999963,4462207.5678],[168887.52219999954,4462173.6537999995],[168893.19400000013,4462167.3256],[168899.52219999954,4462161.6537999995],[168910.18620000035,4462149.7475000005],[168959.19400000013,4462146.8178],[168953.52219999954,4462173.6537999995],[168918.90500000026,4462195.661599999],[168905.17059999984,4462215.349099999],[168905.54559999984,4462221.6303],[168894.88150000013,4462231.169399999],[168887.19400000013,4462245.3256],[168881.52219999954,4462257.6537999995],[168863.19400000013,4462269.3256],[168827.52219999954,4462299.6537999995],[168815.19400000013,4462305.3256],[168798.20189999975,4462324.3335],[168739.84250000026,4462376.481899999],[168725.52219999954,4462407.6537999995],[168697.13939999975,4462428.2553],[168624.20189999975,4462511.411599999],[168583.20969999954,4462537.474099999],[168563.19400000013,4462563.3256],[168551.52219999954,4462581.6537999995],[168545.17059999984,4462587.349099999],[168545.82689999975,4462598.4585],[168515.68620000035,4462614.8178],[168489.27219999954,4462626.9585],[168473.19400000013,4462641.3256],[168467.52219999954,4462647.6537999995],[168419.52219999954,4462662.489700001],[168426.06120000035,4462673.0600000005],[168471.90500000026,4462670.3178],[168488.35809999984,4462680.489700001],[168492.34250000026,4462688.5053],[168494.35809999984,4462698.489700001],[168494.35809999984,4462710.489700001],[168500.35809999984,4462710.489700001],[168503.99089999963,4462724.646],[168519.45969999954,4462748.3881],[168526.81900000013,4462768.0287999995],[168530.35809999984,4462770.489700001],[168536.35809999984,4462770.489700001],[168536.35809999984,4462776.489700001],[168536.35809999984,4462782.489700001],[168542.35809999984,4462782.489700001],[168542.35809999984,4462794.489700001],[168548.35809999984,4462794.489700001],[168548.35809999984,4462800.489700001],[168554.35809999984,4462800.489700001],[168560.35809999984,4462800.489700001],[168560.35809999984,4462812.489700001],[168560.35809999984,4462818.489700001],[168566.35809999984,4462818.489700001],[168566.35809999984,4462824.489700001],[168566.35809999984,4462836.489700001],[168572.35809999984,4462836.489700001],[168578.35809999984,4462836.489700001],[168578.35809999984,4462842.489700001],[168578.35809999984,4462848.489700001],[168584.35809999984,4462848.489700001],[168594.34250000026,4462868.5053],[168596.35809999984,4462884.489700001],[168596.35809999984,4462890.489700001],[168602.35809999984,4462890.489700001],[168602.35809999984,4462902.489700001],[168608.35809999984,4462902.489700001],[168611.03000000026,4462915.7787999995],[168620.35809999984,4462920.489700001],[168620.35809999984,4462938.489700001],[168632.35809999984,4462938.489700001],[168632.35809999984,4462950.489700001],[168632.35809999984,4462962.489700001],[168638.35809999984,4462962.489700001],[168638.35809999984,4462968.489700001],[168644.35809999984,4462968.489700001],[168644.35809999984,4462980.489700001],[168656.35809999984,4462980.489700001],[168664.53780000005,4462990.0053],[168691.30339999963,4462982.669399999],[168701.12370000035,4462971.2553],[168726.03780000005,4462960.169399999],[168737.12370000035,4462947.2553],[168758.92059999984,4462937.552200001],[168782.54559999984,4462970.4585],[168791.12370000035,4462989.724099999],[168806.61589999963,4463017.474099999],[168821.12370000035,4463055.724099999],[168827.59250000026,4463067.2553],[168843.03780000005,4463101.896],[168851.59250000026,4463109.2553],[168869.12370000035,4463139.724099999],[168887.00650000013,4463155.1225000005],[168857.12370000035,4463193.2553],[168854.35809999984,4463202.489700001],[168848.35809999984,4463202.489700001],[168828.64719999954,4463206.7787999995],[168807.69400000013,4463191.919399999],[168797.59250000026,4463169.2553],[168779.12370000035,4463139.724099999],[168772.37370000035,4463124.5600000005],[168755.12370000035,4463109.724099999],[168744.22530000005,4463097.044399999],[168721.23309999984,4463045.5287999995],[168686.73309999984,4462998.4428],[168608.00650000013,4463012.7162999995],[168587.59250000026,4462977.2553],[168575.12370000035,4462959.724099999],[168568.28000000026,4462944.3725000005],[168543.38939999975,4462909.2631],[168523.67839999963,4462865.0835],[168515.12370000035,4462857.724099999],[168509.59250000026,4462839.2553],[168497.63939999975,4462806.771],[168461.12370000035,4462785.724099999],[168450.38939999975,4462773.231899999],[168443.59250000026,4462743.2553],[168431.05339999963,4462701.4428],[168409.25650000013,4462689.724099999],[168401.59250000026,4462709.7631],[168413.59250000026,4462731.2553],[168419.12370000035,4462767.724099999],[168453.83469999954,4462816.6381],[168467.12370000035,4462851.724099999],[168473.59250000026,4462863.2553],[168479.12370000035,4462881.724099999],[168496.65500000026,4462896.794399999],[168512.99089999963,4462939.8725000005],[168531.31900000013,4462955.669399999],[168545.12370000035,4462977.724099999],[168557.59250000026,4462995.2553],[168563.12370000035,4463031.724099999],[168571.98309999984,4463047.5912999995],[168581.14719999954,4463097.7475000005],[168587.56900000013,4463097.231899999],[168601.13939999975,4463118.911599999],[168588.10809999984,4463142.2787999995],[168572.35809999984,4463136.489700001],[168572.35809999984,4463124.489700001],[168560.35809999984,4463124.489700001],[168560.35809999984,4463112.489700001],[168554.35809999984,4463112.489700001],[168554.35809999984,4463100.489700001],[168548.35809999984,4463100.489700001],[168548.35809999984,4463094.489700001],[168545.54559999984,4463056.0287999995],[168502.81900000013,4463066.9506],[168500.35809999984,4463070.489700001],[168476.35809999984,4463076.489700001],[168464.07689999975,4463073.0678],[168449.73309999984,4463049.114700001],[168436.98309999984,4463031.864700001],[168419.73309999984,4462983.114700001],[168402.01439999975,4462959.1850000005],[168392.35809999984,4462956.489700001],[168370.37370000035,4462912.474099999],[168368.35809999984,4462902.489700001],[168368.35809999984,4462896.489700001],[168362.35809999984,4462896.489700001],[168362.35809999984,4462890.489700001],[168362.35809999984,4462884.489700001],[168356.35809999984,4462884.489700001],[168356.35809999984,4462878.489700001],[168356.35809999984,4462866.489700001],[168350.35809999984,4462866.489700001],[168344.35809999984,4462866.489700001],[168344.35809999984,4462854.489700001],[168351.50650000013,4462849.544399999],[168330.99870000035,4462819.849099999],[168320.35809999984,4462812.489700001],[168320.35809999984,4462800.489700001],[168314.35809999984,4462800.489700001],[168314.35809999984,4462794.489700001],[168314.35809999984,4462776.489700001],[168302.35809999984,4462776.489700001],[168302.35809999984,4462770.489700001],[168296.35809999984,4462770.489700001],[168296.35809999984,4462764.489700001],[168296.35809999984,4462758.489700001],[168290.35809999984,4462758.489700001],[168284.35809999984,4462758.489700001],[168276.45969999954,4462749.6537999995],[168246.48309999984,4462758.4662999995],[168225.01439999975,4462768.3100000005],[168207.48309999984,4462787.9506],[168158.80339999963,4462814.3881],[168125.19400000013,4462827.3256],[168109.20969999954,4462845.2085],[168090.62370000035,4462846.3100000005],[168071.63939999975,4462829.3412999995],[168070.16280000005,4462804.4037999995],[168083.19400000013,4462797.3256],[168095.52219999954,4462791.6537999995],[168148.91280000005,4462726.239700001],[168203.52219999954,4462683.6537999995],[168218.00650000013,4462660.8725000005],[168239.52219999954,4462641.6537999995],[168248.03000000026,4462623.161599999],[168275.52219999954,4462605.6537999995],[168305.89719999954,4462566.724099999],[168326.35809999984,4462555.5912999995],[168353.52219999954,4462575.3256],[168369.01439999975,4462592.669399999],[168394.77219999954,4462604.481899999],[168406.25650000013,4462617.3256],[168419.52219999954,4462611.6537999995],[168431.19400000013,4462605.3256],[168443.52219999954,4462599.6537999995],[168488.03000000026,4462545.161599999],[168535.63150000013,4462508.0131],[168545.19400000013,4462497.3256],[168556.84250000026,4462486.896],[168572.35809999984,4462458.489700001],[168591.45969999954,4462453.5912999995],[168596.35809999984,4462434.489700001],[168602.35809999984,4462434.489700001],[168602.35809999984,4462428.489700001],[168621.55339999963,4462425.161599999],[168635.68620000035,4462413.8178],[168642.08469999954,4462398.6303],[168671.68620000035,4462377.8178],[168679.70189999975,4462367.8100000005],[168722.35809999984,4462333.6850000005],[168731.68620000035,4462317.8178],[168734.35809999984,4462308.489700001]]]},{"type":"Polygon","coordinates":[[[168626.35809999984,4462170.489700001],[168632.59250000026,4462164.724099999],[168657.64719999954,4462137.677200001],[168797.03000000026,4462132.146],[168797.68620000035,4462148.9975000005],[168731.47530000005,4462203.606899999],[168712.13939999975,4462216.0756],[168642.64719999954,4462291.099099999],[168610.13939999975,4462312.0756],[168593.70969999954,4462329.8412999995],[168571.88929999992,4462350.021],[168540.85809999984,4462383.536599999],[168495.38939999975,4462420.896],[168480.85809999984,4462436.599099999],[168448.37370000035,4462460.411599999],[168412.60809999984,4462498.989700001],[168363.01439999975,4462539.3725000005],[168344.56900000013,4462532.6225000005],[168308.82689999975,4462494.021],[168293.24089999963,4462479.606899999],[168281.70969999954,4462455.1381],[168263.47530000005,4462438.2631],[168295.20969999954,4462400.411599999],[168361.32689999975,4462346.0835],[168383.70969999954,4462321.919399999],[168425.47530000005,4462287.606899999],[168479.42839999963,4462239.2085],[168485.24089999963,4462269.606899999],[168488.35809999984,4462272.489700001],[168488.35809999984,4462278.489700001],[168500.35809999984,4462278.489700001],[168512.35809999984,4462278.489700001],[168518.35809999984,4462278.489700001],[168518.35809999984,4462272.489700001],[168530.31120000035,4462266.4428],[168536.35809999984,4462254.489700001],[168542.35809999984,4462254.489700001],[168542.35809999984,4462248.489700001],[168602.35809999984,4462195.919399999],[168614.35809999984,4462182.489700001],[168620.35809999984,4462182.489700001],[168620.35809999984,4462176.489700001],[168626.35809999984,4462176.489700001],[168626.35809999984,4462170.489700001]]]},{"type":"Polygon","coordinates":[[[168926.35809999984,4462608.489700001],[168896.35809999984,4462602.0912999995],[168846.22530000005,4462612.802200001],[168801.95189999975,4462610.1537999995],[168695.19400000013,4462617.3256],[168639.01439999975,4462629.3256],[168611.52219999954,4462622.2006],[168648.64719999954,4462563.5600000005],[168705.64719999954,4462512.6303],[168728.99089999963,4462475.9037999995],[168790.16280000005,4462403.974099999],[168810.85809999984,4462368.4662999995],[168883.04559999984,4462287.6537999995],[168892.60809999984,4462299.7475000005],[168881.52219999954,4462335.6537999995],[168865.58469999954,4462358.481899999],[168857.14719999954,4462403.739700001],[168815.52219999954,4462503.794399999],[168823.88939999975,4462521.3256],[168859.65500000026,4462513.989700001],[168866.35809999984,4462506.489700001],[168872.35809999984,4462506.489700001],[168872.35809999984,4462500.489700001],[168872.35809999984,4462488.489700001],[168878.35809999984,4462488.489700001],[168878.35809999984,4462476.489700001],[168893.31120000035,4462453.8725000005],[168896.35809999984,4462434.489700001],[168902.35809999984,4462434.489700001],[168902.35809999984,4462422.489700001],[168908.35809999984,4462422.489700001],[168908.35809999984,4462410.489700001],[168914.35809999984,4462410.489700001],[168914.35809999984,4462398.489700001],[168918.06120000035,4462396.1928],[168928.65500000026,4462364.786599999],[168942.06120000035,4462336.1928],[168944.35809999984,4462320.489700001],[168950.35809999984,4462320.489700001],[168950.35809999984,4462308.489700001],[168950.35809999984,4462302.489700001],[168956.35809999984,4462302.489700001],[168956.35809999984,4462296.489700001],[168962.35809999984,4462296.489700001],[168962.35809999984,4462290.489700001],[168972.34250000026,4462270.474099999],[168974.35809999984,4462260.489700001],[168978.43620000035,4462258.427200001],[168990.34250000026,4462234.474099999],[168992.35809999984,4462218.489700001],[168998.35809999984,4462218.489700001],[168998.35809999984,4462200.489700001],[168998.35809999984,4462194.489700001],[169004.35809999984,4462194.489700001],[169004.35809999984,4462182.489700001],[169004.35809999984,4462176.489700001],[169010.35809999984,4462176.489700001],[169010.35809999984,4462170.489700001],[169010.35809999984,4462164.489700001],[169016.35809999984,4462164.489700001],[169016.35809999984,4462158.489700001],[169016.35809999984,4462152.489700001],[169019.59250000026,4462149.724099999],[169025.12370000035,4462143.2553],[169037.33469999954,4462132.7553],[169049.12370000035,4462152.5835],[169026.67059999984,4462213.7553],[169019.12370000035,4462227.2553],[169001.59250000026,4462269.724099999],[168983.12370000035,4462311.2553],[168971.59250000026,4462341.724099999],[168953.12370000035,4462383.2553],[168941.59250000026,4462413.724099999],[168904.09250000026,4462501.8256],[168913.49089999963,4462518.7006],[169019.03000000026,4462504.4037999995],[169088.17059999984,4462509.9585],[169097.87370000035,4462542.1381],[169095.29559999984,4462574.177200001],[169065.88150000013,4462599.5131],[169123.58469999954,4462608.3256],[169136.33469999954,4462636.8725000005],[169146.48309999984,4462725.5835],[169109.12370000035,4462731.2553],[169106.35809999984,4462734.489700001],[169100.35809999984,4462734.489700001],[169100.35809999984,4462740.489700001],[169100.35809999984,4462752.489700001],[169100.35809999984,4462764.489700001],[169093.51439999975,4462769.3881],[169104.90500000026,4462826.1537999995],[169114.86589999963,4462851.981899999],[169118.35809999984,4462854.489700001],[169118.35809999984,4462860.489700001],[169120.86589999963,4462894.099099999],[169130.07689999975,4462939.989700001],[169136.35809999984,4462944.489700001],[169136.35809999984,4462950.489700001],[169142.45189999975,4463023.4037999995],[169148.35809999984,4463028.489700001],[169148.35809999984,4463034.489700001],[169150.98309999984,4463055.864700001],[169158.88150000013,4463089.989700001],[169148.38150000013,4463107.3803],[169083.78780000005,4463118.3725000005],[169055.73309999984,4463114.224099999],[169034.35809999984,4463100.489700001],[169034.35809999984,4463070.489700001],[169028.35809999984,4463070.489700001],[169028.35809999984,4463040.489700001],[169028.35809999984,4463022.489700001],[169022.35809999984,4463022.489700001],[169022.35809999984,4462998.489700001],[169022.35809999984,4462974.489700001],[169016.35809999984,4462974.489700001],[169016.35809999984,4462962.489700001],[169014.34250000026,4462934.5053],[169006.37370000035,4462918.474099999],[169002.34250000026,4462898.5053],[168998.35809999984,4462896.489700001],[168998.35809999984,4462878.489700001],[168998.35809999984,4462872.489700001],[168992.35809999984,4462872.489700001],[168988.81900000013,4462858.0287999995],[168986.35809999984,4462836.489700001],[168986.35809999984,4462830.489700001],[168988.98309999984,4462797.114700001],[169010.35809999984,4462788.489700001],[169016.35809999984,4462788.489700001],[169016.35809999984,4462782.489700001],[169022.35809999984,4462782.489700001],[169022.35809999984,4462776.489700001],[169030.32689999975,4462772.4585],[169034.35809999984,4462764.489700001],[169040.35809999984,4462764.489700001],[169040.35809999984,4462752.489700001],[169061.66280000005,4462741.802200001],[169064.35809999984,4462728.489700001],[169064.35809999984,4462716.489700001],[169070.35809999984,4462716.489700001],[169070.35809999984,4462698.489700001],[169064.35809999984,4462698.489700001],[169064.35809999984,4462674.489700001],[169064.35809999984,4462638.489700001],[169058.35809999984,4462638.489700001],[169058.35809999984,4462626.489700001],[169058.35809999984,4462620.489700001],[169052.35809999984,4462620.489700001],[169052.35809999984,4462608.489700001],[169046.35809999984,4462608.489700001],[169035.29559999984,4462595.669399999],[168941.12370000035,4462605.2553],[168938.35809999984,4462608.489700001],[168926.35809999984,4462608.489700001]]]},{"type":"Polygon","coordinates":[[[169622.35809999984,4462122.489700001],[169625.24089999963,4462125.606899999],[169643.47530000005,4462131.3725000005],[169665.85809999984,4462143.2085],[169709.47530000005,4462155.3725000005],[169735.44400000013,4462173.231899999],[169799.47530000005,4462179.3725000005],[169817.24089999963,4462191.606899999],[169844.89719999954,4462209.4662999995],[169952.38150000013,4462243.4975000005],[169985.47530000005,4462251.3725000005],[170003.12370000035,4462260.724099999],[170061.20189999975,4462274.552200001],[170103.71750000026,4462241.927200001],[170164.39719999954,4462252.4975000005],[170190.06120000035,4462270.169399999],[170231.54559999984,4462283.294399999],[170272.20969999954,4462311.2787999995],[170291.47530000005,4462317.3725000005],[170331.74089999963,4462338.677200001],[170396.68620000035,4462363.9662999995],[170405.24089999963,4462386.677200001],[170369.54559999984,4462454.1303],[170325.31900000013,4462508.481899999],[170310.22530000005,4462556.177200001],[170301.97530000005,4462571.786599999],[170275.63150000013,4462581.3725000005],[170246.61589999963,4462561.4037999995],[170193.31900000013,4462551.231899999],[170150.59250000026,4462536.2553],[170103.36589999963,4462521.302200001],[170059.53780000005,4462498.1225000005],[169964.40500000026,4462463.974099999],[169951.32689999975,4462478.0835],[170003.26439999975,4462502.599099999],[170051.47530000005,4462521.3725000005],[170084.45189999975,4462534.919399999],[170145.20189999975,4462554.161599999],[170132.40500000026,4462565.9975000005],[170081.35809999984,4462552.6381],[170039.47530000005,4462563.606899999],[170008.81900000013,4462570.896],[170009.47530000005,4462587.5835],[170006.96750000026,4462593.3725000005],[169985.47530000005,4462560.0912999995],[169967.03000000026,4462569.8412999995],[169949.24089999963,4462550.669399999],[169919.87370000035,4462551.8178],[169894.63150000013,4462542.981899999],[169896.62370000035,4462492.474099999],[169925.47530000005,4462485.606899999],[169936.77219999954,4462449.8881],[169994.40500000026,4462385.646],[170015.24089999963,4462353.3725000005],[170038.46750000026,4462319.6225000005],[170026.70189999975,4462286.0600000005],[169893.24870000035,4462238.9037999995],[169870.49089999963,4462226.856899999],[169823.24089999963,4462215.606899999],[169793.47530000005,4462203.3725000005],[169722.55339999963,4462177.919399999],[169667.12370000035,4462164.724099999],[169637.70969999954,4462149.1381],[169583.75650000013,4462132.0756],[169577.47530000005,4462126.4037999995],[169622.35809999984,4462122.489700001]]]},{"type":"Polygon","coordinates":[[[164918.35809999984,4461960.489700001],[164921.24089999963,4461963.606899999],[164939.59250000026,4461972.2553],[164969.05339999963,4461987.864700001],[164987.12370000035,4461987.1381],[165005.24089999963,4461999.606899999],[165029.70969999954,4462011.1381],[165057.64719999954,4462041.302200001],[165065.35809999984,4462041.606899999],[165071.45189999975,4462041.3725000005],[165083.24089999963,4462047.606899999],[165117.41280000005,4462058.411599999],[165137.47530000005,4462071.3725000005],[165148.72530000005,4462083.5131],[165192.15500000026,4462090.4506],[165191.00650000013,4462119.489700001],[165191.63939999975,4462135.6850000005],[165183.34250000026,4462170.5600000005],[165159.17839999963,4462187.177200001],[165047.35809999984,4462191.606899999],[165002.19400000013,4462189.8256],[164983.25650000013,4462199.8335],[164957.24089999963,4462191.606899999],[164923.53780000005,4462168.4037999995],[164903.47530000005,4462161.3725000005],[164873.24089999963,4462155.606899999],[164839.23309999984,4462143.677200001],[164822.35809999984,4462143.021],[164789.03000000026,4462144.3335],[164771.47530000005,4462125.3725000005],[164765.24089999963,4462119.606899999],[164744.92059999984,4462091.9037999995],[164717.47530000005,4462077.3725000005],[164682.64719999954,4462060.9428],[164657.47530000005,4462013.364700001],[164671.42059999984,4461994.052200001],[164693.24089999963,4462005.606899999],[164720.21750000026,4462012.0287999995],[164764.49089999963,4462027.544399999],[164796.06120000035,4462035.8178],[164824.20969999954,4462034.6928],[164837.24089999963,4462041.606899999],[164855.47530000005,4462047.3725000005],[164861.24089999963,4462053.606899999],[164879.47530000005,4462059.3725000005],[164891.26439999975,4462065.606899999],[164914.20969999954,4462064.6928],[164927.24089999963,4462071.606899999],[164954.59250000026,4462080.2553],[164981.26439999975,4462089.606899999],[165002.59250000026,4462088.7631],[165033.20189999975,4462098.4662999995],[165061.60809999984,4462129.099099999],[165107.24089999963,4462118.224099999],[165093.50650000013,4462098.5600000005],[165053.47530000005,4462077.3725000005],[165041.24089999963,4462071.606899999],[165030.55339999963,4462060.052200001],[165011.47530000005,4462053.3725000005],[164961.48309999984,4462041.4662999995],[164891.47530000005,4461996.2553],[164903.24089999963,4461963.3725000005],[164918.35809999984,4461960.489700001]]]},{"type":"Polygon","coordinates":[[[168950.35809999984,4462038.489700001],[168959.19400000013,4462053.6537999995],[168985.93620000035,4462086.2553],[168974.89719999954,4462098.606899999],[168902.35809999984,4462102.919399999],[168866.35809999984,4462100.7631],[168839.35809999984,4462102.3803],[168821.26439999975,4462101.302200001],[168789.90500000026,4462108.0053],[168746.21750000026,4462101.1850000005],[168698.61589999963,4462047.911599999],[168659.49870000035,4462019.5287999995],[168617.52219999954,4461961.8725000005],[168656.80339999963,4461906.114700001],[168701.52219999954,4461873.6537999995],[168738.45969999954,4461832.3100000005],[168761.05339999963,4461830.974099999],[168782.35809999984,4461846.489700001],[168815.33469999954,4461890.3178],[168830.35809999984,4461894.489700001],[168830.35809999984,4461900.489700001],[168836.35809999984,4461900.489700001],[168858.48309999984,4461938.1303],[168947.24089999963,4462035.606899999],[168950.35809999984,4462038.489700001]]]},{"type":"Polygon","coordinates":[[[162980.35809999984,4461966.489700001],[162974.80339999963,4461960.044399999],[162961.25650000013,4461948.3725000005],[162923.12370000035,4461939.724099999],[162908.75650000013,4461931.6850000005],[162899.59250000026,4461891.2553],[162856.39719999954,4461866.364700001],[162839.19400000013,4461867.7475000005],[162827.59250000026,4461861.2553],[162802.67839999963,4461850.169399999],[162779.59250000026,4461837.2553],[162731.12370000035,4461819.724099999],[162713.80339999963,4461810.044399999],[162689.70969999954,4461799.286599999],[162653.78000000026,4461802.169399999],[162626.63939999975,4461782.927200001],[162653.59250000026,4461759.724099999],[162663.78780000005,4461747.8412999995],[162709.30339999963,4461760.3100000005],[162719.12370000035,4461771.724099999],[162734.26439999975,4461778.4506],[162749.52219999954,4461777.231899999],[162761.12370000035,4461783.724099999],[162779.59250000026,4461789.2553],[162791.12370000035,4461795.724099999],[162866.21750000026,4461817.521],[162905.12370000035,4461849.724099999],[162935.59250000026,4461855.2553],[162966.92839999963,4461874.8256],[163009.88939999975,4461887.7631],[163039.11589999963,4461871.4506],[163068.92839999963,4461873.864700001],[163087.60809999984,4461895.544399999],[163121.59250000026,4461903.2553],[163151.12370000035,4461921.724099999],[163181.59250000026,4461933.2553],[163199.17059999984,4461945.7475000005],[163205.35809999984,4461945.2553],[163215.38939999975,4461946.052200001],[163250.78000000026,4461959.0600000005],[163265.12370000035,4461975.724099999],[163295.59250000026,4461987.2553],[163313.12370000035,4462003.0053],[163295.12370000035,4462035.2553],[163286.78000000026,4462063.0053],[163269.92839999963,4462077.2553],[163259.59250000026,4462065.2553],[163210.91280000005,4462045.146],[163196.35809999984,4462050.489700001],[163190.35809999984,4462050.489700001],[163190.35809999984,4462044.489700001],[163178.35809999984,4462044.489700001],[163171.49089999963,4462035.911599999],[163157.03000000026,4462029.8178],[163145.68620000035,4462023.161599999],[163122.15500000026,4462013.2475000005],[163115.63939999975,4462005.0912999995],[163102.70189999975,4462006.6850000005],[163074.01439999975,4461989.8335],[163055.03000000026,4461981.8178],[163042.06900000013,4461974.2006],[162980.35809999984,4461966.489700001]]]},{"type":"Polygon","coordinates":[[[167186.35809999984,4461792.489700001],[167183.59250000026,4461777.2553],[167160.29559999984,4461702.0678],[167156.96750000026,4461660.7475000005],[167181.08469999954,4461632.7631],[167238.41280000005,4461592.099099999],[167279.59250000026,4461579.724099999],[167305.04559999984,4461570.3725000005],[167424.10809999984,4461580.3100000005],[167474.80339999963,4461645.044399999],[167504.26439999975,4461686.0600000005],[167516.35809999984,4461696.489700001],[167516.35809999984,4461702.489700001],[167522.35809999984,4461702.489700001],[167525.12370000035,4461711.724099999],[167567.59250000026,4461759.2553],[167610.92839999963,4461809.8100000005],[167622.03780000005,4461846.724099999],[167618.35809999984,4461870.489700001],[167612.35809999984,4461870.489700001],[167612.35809999984,4461876.489700001],[167606.35809999984,4461876.489700001],[167606.35809999984,4461882.489700001],[167588.61589999963,4461894.7475000005],[167576.35809999984,4461912.489700001],[167570.35809999984,4461912.489700001],[167570.35809999984,4461918.489700001],[167562.38939999975,4461922.521],[167558.35809999984,4461930.489700001],[167552.35809999984,4461930.489700001],[167552.35809999984,4461936.489700001],[167531.73309999984,4461951.864700001],[167500.56120000035,4461964.6381],[167480.35809999984,4462002.489700001],[167474.35809999984,4462002.489700001],[167474.35809999984,4462008.489700001],[167468.35809999984,4462020.489700001],[167453.96750000026,4462030.427200001],[167450.35809999984,4462044.489700001],[167444.35809999984,4462044.489700001],[167444.35809999984,4462050.489700001],[167427.22530000005,4462054.0053],[167387.38150000013,4462053.1850000005],[167378.70969999954,4462079.8803],[167315.28780000005,4462155.419399999],[167303.42839999963,4462173.5600000005],[167267.28780000005,4462215.419399999],[167244.57689999975,4462246.099099999],[167190.81120000035,4462297.731899999],[167127.83469999954,4462368.021],[167093.70969999954,4462400.786599999],[167080.16280000005,4462421.4585],[167054.24089999963,4462446.3725000005],[167031.15500000026,4462470.396],[167009.38150000013,4462503.606899999],[166986.95189999975,4462488.396],[166946.52219999954,4462472.4585],[166931.19400000013,4462449.0678],[166931.47530000005,4462434.5131],[166997.42839999963,4462359.5600000005],[167117.24089999963,4462221.8881],[167132.35809999984,4462194.489700001],[167140.32689999975,4462190.4585],[167144.35809999984,4462182.489700001],[167150.35809999984,4462182.489700001],[167150.35809999984,4462176.489700001],[167156.35809999984,4462176.489700001],[167156.35809999984,4462170.489700001],[167162.35809999984,4462170.489700001],[167162.35809999984,4462164.489700001],[167162.35809999984,4462158.489700001],[167168.35809999984,4462158.489700001],[167168.35809999984,4462152.489700001],[167174.35809999984,4462152.489700001],[167174.35809999984,4462146.489700001],[167180.35809999984,4462146.489700001],[167180.35809999984,4462140.489700001],[167186.35809999984,4462140.489700001],[167192.35809999984,4462140.489700001],[167192.35809999984,4462134.489700001],[167198.35809999984,4462134.489700001],[167198.35809999984,4462128.489700001],[167205.95189999975,4462121.9506],[167237.59250000026,4462083.724099999],[167240.35809999984,4462074.489700001],[167246.35809999984,4462074.489700001],[167246.35809999984,4462068.489700001],[167273.59250000026,4462035.724099999],[167276.35809999984,4462026.489700001],[167282.35809999984,4462026.489700001],[167282.35809999984,4462020.489700001],[167288.35809999984,4462020.489700001],[167288.35809999984,4462014.489700001],[167294.35809999984,4462014.489700001],[167294.35809999984,4462008.489700001],[167300.35809999984,4462008.489700001],[167300.35809999984,4462002.489700001],[167306.35809999984,4462002.489700001],[167306.35809999984,4461996.489700001],[167312.35809999984,4461996.489700001],[167312.35809999984,4461990.489700001],[167312.35809999984,4461984.489700001],[167333.07689999975,4461978.419399999],[167318.52219999954,4461953.8100000005],[167300.35809999984,4461948.489700001],[167292.34250000026,4461944.5053],[167282.35809999984,4461942.489700001],[167273.28780000005,4461939.5600000005],[167259.74089999963,4461891.4428],[167251.20969999954,4461879.5600000005],[167238.67059999984,4461918.1850000005],[167166.71750000026,4462001.599099999],[167105.28780000005,4462071.419399999],[166930.09250000026,4462271.0600000005],[166918.93620000035,4462281.794399999],[166900.56120000035,4462281.419399999],[166901.49870000035,4462235.106899999],[166949.42839999963,4462179.5600000005],[166979.28780000005,4462143.419399999],[167009.42839999963,4462107.5600000005],[167027.28780000005,4462083.419399999],[167061.50650000013,4462042.6850000005],[167081.42839999963,4462023.5600000005],[167093.28780000005,4462005.419399999],[167114.24089999963,4461977.8100000005],[167195.42839999963,4461885.5600000005],[167208.13150000013,4461866.1537999995],[167207.28780000005,4461825.0678],[167198.35809999984,4461816.489700001],[167193.45969999954,4461797.3881],[167186.35809999984,4461792.489700001]]]},{"type":"Polygon","coordinates":[[[171572.35809999984,4461414.489700001],[171593.59250000026,4461460.3803],[171605.47530000005,4461471.3725000005],[171611.24089999963,4461489.606899999],[171620.59250000026,4461498.2553],[171634.16280000005,4461541.099099999],[171692.59250000026,4461552.2553],[171701.82689999975,4461581.481899999],[171725.47530000005,4461603.3725000005],[171740.47530000005,4461641.8803],[171749.24089999963,4461669.606899999],[171764.85030000005,4461714.114700001],[171779.47530000005,4461735.3725000005],[171785.24089999963,4461753.606899999],[171799.06900000013,4461779.739700001],[171815.24089999963,4461794.739700001],[171821.24089999963,4461812.224099999],[171791.24089999963,4461819.3725000005],[171769.81900000013,4461842.5053],[171743.54559999984,4461854.8803],[171720.41280000005,4461890.739700001],[171712.51429999992,4461898.052200001],[171692.89719999954,4461897.2787999995],[171677.47530000005,4461873.3725000005],[171658.88939999975,4461846.3725000005],[171659.70969999954,4461825.606899999],[171653.24089999963,4461819.606899999],[171647.47530000005,4461807.3725000005],[171640.32689999975,4461793.8725000005],[171623.52219999954,4461778.286599999],[171607.53780000005,4461737.294399999],[171599.24089999963,4461729.606899999],[171593.47530000005,4461718.4037999995],[171635.47530000005,4461687.606899999],[171641.24089999963,4461680.271],[171629.24089999963,4461657.606899999],[171623.47530000005,4461645.3725000005],[171617.24089999963,4461639.606899999],[171611.47530000005,4461615.3725000005],[171605.24089999963,4461609.606899999],[171571.04559999984,4461548.8803],[171549.64719999954,4461503.5053],[171539.47530000005,4461471.3725000005],[171533.24089999963,4461459.606899999],[171527.47530000005,4461446.271],[171541.13939999975,4461420.4428],[171572.35809999984,4461414.489700001]]]},{"type":"Polygon","coordinates":[[[164756.35809999984,4461366.489700001],[164759.24089999963,4461369.606899999],[164804.59250000026,4461396.2553],[164849.24089999963,4461423.606899999],[164903.47530000005,4461453.3725000005],[164921.24089999963,4461465.606899999],[164999.47530000005,4461507.3725000005],[165017.24089999963,4461519.606899999],[165090.48309999984,4461559.802200001],[165126.34250000026,4461584.5053],[165212.26439999975,4461620.646],[165273.45969999954,4461662.7631],[165287.47530000005,4461669.3725000005],[165293.24089999963,4461674.0835],[165269.24089999963,4461705.3725000005],[165226.30339999963,4461766.286599999],[165201.31900000013,4461765.2787999995],[165077.40500000026,4461699.724099999],[165059.47530000005,4461687.3725000005],[164993.17059999984,4461644.552200001],[164925.90500000026,4461612.8178],[164884.13939999975,4461584.0835],[164843.12370000035,4461564.724099999],[164816.59250000026,4461550.6850000005],[164765.47530000005,4461519.3725000005],[164715.83469999954,4461491.4350000005],[164699.24089999963,4461483.606899999],[164672.59250000026,4461465.2553],[164645.24089999963,4461447.606899999],[164622.53000000026,4461431.974099999],[164615.47530000005,4461418.9662999995],[164654.59250000026,4461393.724099999],[164688.60030000005,4461370.3100000005],[164756.35809999984,4461366.489700001]]]},{"type":"Polygon","coordinates":[[[168782.35809999984,4461306.489700001],[168791.89719999954,4461304.0287999995],[168816.76439999975,4461293.599099999],[168839.78000000026,4461308.5756],[168844.81900000013,4461322.0287999995],[168854.35809999984,4461336.489700001],[168818.35809999984,4461360.489700001],[168812.35809999984,4461360.489700001],[168812.35809999984,4461366.489700001],[168806.35809999984,4461366.489700001],[168806.35809999984,4461372.489700001],[168797.24089999963,4461375.3725000005],[168772.42059999984,4461394.4037999995],[168761.47530000005,4461417.606899999],[168755.24089999963,4461423.3725000005],[168749.47530000005,4461429.606899999],[168717.17839999963,4461442.169399999],[168692.59250000026,4461468.724099999],[168683.24089999963,4461477.3725000005],[168674.59250000026,4461486.724099999],[168601.42059999984,4461554.5053],[168596.35809999984,4461570.489700001],[168590.35809999984,4461570.489700001],[168590.35809999984,4461576.489700001],[168575.07689999975,4461581.2006],[168551.52219999954,4461597.6537999995],[168515.52219999954,4461620.552200001],[168521.19400000013,4461627.6537999995],[168531.83469999954,4461637.169399999],[168543.55339999963,4461658.731899999],[168515.19400000013,4461693.3256],[168509.52219999954,4461705.6537999995],[168467.19400000013,4461735.3256],[168461.52219999954,4461741.6537999995],[168435.36589999963,4461760.6381],[168421.67839999963,4461775.9662999995],[168407.52219999954,4461783.6537999995],[168376.39719999954,4461797.9506],[168359.19400000013,4461813.3256],[168342.20189999975,4461832.3335],[168317.68620000035,4461854.2475000005],[168307.81900000013,4461875.739700001],[168255.90500000026,4461897.3256],[168233.19400000013,4461885.6537999995],[168185.52219999954,4461831.3256],[168161.94400000013,4461820.4975000005],[168161.05339999963,4461805.544399999],[168227.52219999954,4461759.6537999995],[168254.26439999975,4461738.9350000005],[168278.35809999984,4461756.489700001],[168278.35809999984,4461762.489700001],[168284.35809999984,4461762.489700001],[168284.35809999984,4461768.489700001],[168290.35809999984,4461768.489700001],[168296.35809999984,4461768.489700001],[168302.10030000005,4461776.8100000005],[168335.89719999954,4461754.0287999995],[168340.81900000013,4461746.9506],[168351.45969999954,4461739.5912999995],[168356.35809999984,4461720.489700001],[168370.56120000035,4461710.6928],[168385.25650000013,4461689.3881],[168392.35809999984,4461684.489700001],[168412.06900000013,4461679.427200001],[168422.35809999984,4461660.489700001],[168422.35809999984,4461654.489700001],[168428.35809999984,4461654.489700001],[168434.35809999984,4461654.489700001],[168434.35809999984,4461648.489700001],[168440.35809999984,4461648.489700001],[168440.35809999984,4461642.489700001],[168446.35809999984,4461642.489700001],[168446.35809999984,4461636.489700001],[168452.35809999984,4461636.489700001],[168452.35809999984,4461630.489700001],[168466.67839999963,4461626.8100000005],[168470.35809999984,4461612.489700001],[168476.35809999984,4461612.489700001],[168476.35809999984,4461606.489700001],[168482.35809999984,4461606.489700001],[168482.35809999984,4461600.489700001],[168501.90500000026,4461597.419399999],[168508.81900000013,4461578.9506],[168518.35809999984,4461564.489700001],[168524.35809999984,4461564.489700001],[168524.35809999984,4461558.489700001],[168528.38939999975,4461550.521],[168536.35809999984,4461546.489700001],[168557.94400000013,4461535.661599999],[168560.35809999984,4461516.489700001],[168575.85030000005,4461511.8256],[168590.80339999963,4461498.9350000005],[168599.12370000035,4461489.2553],[168639.22530000005,4461456.7475000005],[168677.59250000026,4461423.724099999],[168685.91280000005,4461414.044399999],[168697.13939999975,4461404.364700001],[168719.59250000026,4461375.724099999],[168722.35809999984,4461366.489700001],[168734.35809999984,4461366.489700001],[168734.35809999984,4461360.489700001],[168753.60030000005,4461358.052200001],[168768.34250000026,4461328.474099999],[168770.35809999984,4461318.489700001],[168782.35809999984,4461318.489700001],[168782.35809999984,4461306.489700001]]]},{"type":"Polygon","coordinates":[[[163094.35809999984,4461390.489700001],[163091.52219999954,4461387.3256],[163049.52219999954,4461354.5600000005],[163065.08469999954,4461345.6537999995],[163093.74870000035,4461358.3100000005],[163127.19400000013,4461381.6537999995],[163241.52219999954,4461441.3256],[163271.19400000013,4461459.6537999995],[163295.87370000035,4461470.974099999],[163325.03000000026,4461486.8178],[163343.52219999954,4461495.3256],[163382.35809999984,4461519.3256],[163397.19400000013,4461510.161599999],[163390.65500000026,4461493.0287999995],[163355.52219999954,4461471.3256],[163283.19400000013,4461429.6537999995],[163244.75650000013,4461405.8881],[163199.52219999954,4461381.3256],[163187.19400000013,4461375.6537999995],[163169.52219999954,4461363.3256],[163091.89719999954,4461321.5835],[163090.86589999963,4461304.356899999],[163139.52219999954,4461285.6537999995],[163196.07689999975,4461249.6537999995],[163232.80339999963,4461257.224099999],[163318.84250000026,4461304.0053],[163350.31900000013,4461318.4428],[163421.19400000013,4461357.6537999995],[163445.87370000035,4461368.974099999],[163513.16280000005,4461405.5600000005],[163595.19400000013,4461441.6537999995],[163604.35809999984,4461444.489700001],[163608.62370000035,4461450.021],[163643.26439999975,4461470.9037999995],[163664.35809999984,4461474.489700001],[163669.06900000013,4461483.8178],[163682.35809999984,4461486.489700001],[163682.35809999984,4461492.489700001],[163694.35809999984,4461492.489700001],[163694.35809999984,4461498.489700001],[163706.35809999984,4461498.489700001],[163714.18620000035,4461507.2553],[163781.19400000013,4461543.6537999995],[163790.35809999984,4461546.489700001],[163794.50650000013,4461552.489700001],[163835.82689999975,4461571.2162999995],[163856.35809999984,4461576.489700001],[163858.81900000013,4461580.0287999995],[163883.89719999954,4461596.9506],[163892.99089999963,4461610.099099999],[163884.22530000005,4461626.9506],[163833.45969999954,4461593.3881],[163814.35809999984,4461588.489700001],[163806.34250000026,4461584.5053],[163796.35809999984,4461582.489700001],[163796.35809999984,4461576.489700001],[163784.35809999984,4461576.489700001],[163784.35809999984,4461570.489700001],[163772.35809999984,4461570.489700001],[163772.35809999984,4461564.489700001],[163766.35809999984,4461564.489700001],[163766.35809999984,4461558.489700001],[163754.35809999984,4461558.489700001],[163754.35809999984,4461552.489700001],[163742.35809999984,4461552.489700001],[163742.35809999984,4461546.489700001],[163730.35809999984,4461546.489700001],[163726.39719999954,4461541.356899999],[163677.71750000026,4461510.0912999995],[163636.58469999954,4461493.2631],[163611.55339999963,4461478.169399999],[163577.19400000013,4461468.606899999],[163535.52219999954,4461450.3725000005],[163514.35809999984,4461444.489700001],[163508.35809999984,4461444.489700001],[163506.29559999984,4461440.4350000005],[163426.25650000013,4461400.474099999],[163402.37370000035,4461404.5053],[163400.35809999984,4461408.489700001],[163378.37370000035,4461406.474099999],[163370.35809999984,4461402.489700001],[163343.52219999954,4461406.0756],[163352.31120000035,4461433.3335],[163400.92059999984,4461463.3803],[163433.03000000026,4461480.8178],[163451.52219999954,4461489.3256],[163472.96750000026,4461504.302200001],[163553.52219999954,4461549.3256],[163572.31900000013,4461562.4506],[163598.35809999984,4461570.489700001],[163603.06900000013,4461579.8178],[163616.35809999984,4461582.489700001],[163620.55339999963,4461587.0131],[163682.68620000035,4461625.0756],[163856.19400000013,4461722.646],[163868.35809999984,4461726.489700001],[163878.50650000013,4461749.364700001],[163853.12370000035,4461765.2553],[163819.53780000005,4461789.0912999995],[163787.59250000026,4461771.2553],[163778.35809999984,4461768.489700001],[163778.35809999984,4461762.489700001],[163772.35809999984,4461762.489700001],[163766.35809999984,4461762.489700001],[163766.35809999984,4461756.489700001],[163760.35809999984,4461756.489700001],[163754.35809999984,4461756.489700001],[163745.21750000026,4461745.0756],[163702.70189999975,4461727.146],[163660.16280000005,4461702.161599999],[163640.35809999984,4461696.489700001],[163636.02219999954,4461691.0756],[163601.03000000026,4461669.8178],[163583.68620000035,4461657.161599999],[163574.35809999984,4461654.489700001],[163564.11589999963,4461642.161599999],[163517.07689999975,4461621.771],[163496.75650000013,4461610.1225000005],[163484.35809999984,4461606.489700001],[163484.35809999984,4461600.489700001],[163472.35809999984,4461600.489700001],[163462.02219999954,4461588.489700001],[163394.66280000005,4461550.1928],[163382.35809999984,4461546.489700001],[163375.72530000005,4461539.0600000005],[163253.52219999954,4461471.3256],[163238.35809999984,4461468.489700001],[163235.89719999954,4461464.9506],[163204.81900000013,4461448.0287999995],[163190.35809999984,4461438.489700001],[163190.35809999984,4461432.489700001],[163178.35809999984,4461432.489700001],[163168.81900000013,4461421.0053],[163103.63939999975,4461393.2085],[163094.35809999984,4461390.489700001]]]},{"type":"Polygon","coordinates":[[[162650.35809999984,4461240.489700001],[162653.19400000013,4461243.6537999995],[162665.52219999954,4461249.3256],[162717.69400000013,4461285.771],[162730.16280000005,4461285.021],[162799.95969999954,4461339.114700001],[162809.35809999984,4461339.677200001],[162816.36589999963,4461339.2553],[162845.03000000026,4461354.8178],[162863.52219999954,4461363.3256],[162899.19400000013,4461393.6537999995],[162929.75650000013,4461403.099099999],[162972.95189999975,4461433.286599999],[163011.99870000035,4461442.356899999],[163019.19400000013,4461465.6537999995],[163051.63150000013,4461490.9662999995],[163065.03780000005,4461505.9662999995],[163083.45969999954,4461515.974099999],[163093.77219999954,4461504.419399999],[163126.11589999963,4461529.474099999],[163151.52219999954,4461537.3256],[163162.13939999975,4461560.4585],[163193.49870000035,4461549.2085],[163199.19400000013,4461567.6537999995],[163223.52219999954,4461585.3256],[163247.19400000013,4461603.6537999995],[163285.32689999975,4461615.4428],[163353.95189999975,4461663.3725000005],[163379.52219999954,4461669.3256],[163397.03000000026,4461678.8178],[163417.91280000005,4461688.427200001],[163452.06120000035,4461712.2631],[163538.26439999975,4461759.114700001],[163582.35030000005,4461767.3412999995],[163565.61589999963,4461782.294399999],[163607.19400000013,4461808.731899999],[163599.45969999954,4461831.8178],[163578.10809999984,4461855.724099999],[163559.26439999975,4461854.599099999],[163518.50650000013,4461862.1928],[163469.94400000013,4461884.481899999],[163454.00650000013,4461902.3178],[163412.99089999963,4461917.0131],[163389.76439999975,4461908.6928],[163373.21750000026,4461909.677200001],[163342.18620000035,4461885.6303],[163319.52219999954,4461873.3256],[163307.19400000013,4461867.6537999995],[163295.52219999954,4461861.3256],[163273.65500000026,4461854.5756],[163243.67839999963,4461821.0131],[163209.15500000026,4461802.2631],[163193.35809999984,4461801.302200001],[163186.35030000005,4461801.724099999],[163157.68620000035,4461786.161599999],[163128.24870000035,4461772.6381],[163120.20969999954,4461757.849099999],[163122.20189999975,4461724.356899999],[163099.42059999984,4461708.4428],[163067.19400000013,4461693.6537999995],[163061.52219999954,4461687.3256],[163049.92059999984,4461676.9428],[163091.14719999954,4461664.2162999995],[163092.74089999963,4461637.1225000005],[163061.52219999954,4461615.3256],[163043.19400000013,4461609.6537999995],[163025.52219999954,4461603.3256],[162995.19400000013,4461597.6537999995],[162960.83469999954,4461573.6537999995],[162943.63150000013,4461580.802200001],[162935.45179999992,4461616.0287999995],[162920.35809999984,4461615.1381],[162906.24870000035,4461615.981899999],[162892.84250000026,4461604.0053],[162876.99870000035,4461586.2631],[162845.52219999954,4461566.2475000005],[162851.85030000005,4461554.036599999],[162887.78000000026,4461537.536599999],[162881.19400000013,4461531.6537999995],[162870.64719999954,4461508.661599999],[162834.97530000005,4461483.771],[162827.35809999984,4461483.302200001],[162819.67059999984,4461483.771],[162791.19400000013,4461465.6537999995],[162773.52219999954,4461453.3256],[162707.26439999975,4461424.474099999],[162692.05339999963,4461407.4350000005],[162658.95969999954,4461386.974099999],[162647.35809999984,4461387.677200001],[162641.35809999984,4461387.302200001],[162634.93620000035,4461387.7006],[162581.19400000013,4461357.6537999995],[162557.52219999954,4461339.3256],[162529.30339999963,4461330.606899999],[162513.85809999984,4461302.1537999995],[162550.09250000026,4461304.3100000005],[162563.33469999954,4461292.474099999],[162573.27219999954,4461249.794399999],[162591.97530000005,4461248.669399999],[162627.81120000035,4461263.5756],[162640.84250000026,4461248.974099999],[162650.35809999984,4461240.489700001]]]},{"type":"Polygon","coordinates":[[[161582.35809999984,4461138.489700001],[161582.35809999984,4461144.489700001],[161594.35809999984,4461144.489700001],[161600.35809999984,4461144.489700001],[161600.35809999984,4461150.489700001],[161612.35809999984,4461150.489700001],[161624.35809999984,4461150.489700001],[161624.35809999984,4461156.489700001],[161648.35809999984,4461156.489700001],[161648.35809999984,4461150.489700001],[161654.35809999984,4461150.489700001],[161654.35809999984,4461156.489700001],[161672.35809999984,4461156.489700001],[161678.35809999984,4461156.489700001],[161682.20189999975,4461162.0678],[161722.81900000013,4461172.0287999995],[161744.35809999984,4461174.489700001],[161804.35809999984,4461174.489700001],[161807.33469999954,4461186.114700001],[161825.38150000013,4461190.169399999],[161840.35809999984,4461186.489700001],[161852.35809999984,4461186.489700001],[161857.88939999975,4461194.2006],[161914.56120000035,4461205.521],[161927.85030000005,4461195.981899999],[161930.35809999984,4461192.489700001],[161942.35809999984,4461192.489700001],[161942.35809999984,4461198.489700001],[161948.35809999984,4461198.489700001],[161954.35809999984,4461198.489700001],[161954.35809999984,4461204.489700001],[161978.35809999984,4461204.489700001],[161999.07689999975,4461232.5912999995],[161993.63939999975,4461243.771],[161981.07689999975,4461261.2085],[161975.63939999975,4461273.771],[161969.07679999992,4461285.2085],[161962.49089999963,4461300.419399999],[161918.85030000005,4461316.8256],[161891.63939999975,4461309.2085],[161861.07689999975,4461303.771],[161837.49870000035,4461297.161599999],[161808.99870000035,4461300.0678],[161798.96750000026,4461287.9975000005],[161759.35809999984,4461283.9662999995],[161741.21750000026,4461285.8178],[161708.07689999975,4461276.536599999],[161657.42839999963,4461267.1850000005],[161646.34250000026,4461268.3100000005],[161593.84250000026,4461245.927200001],[161566.98309999984,4461256.0053],[161525.07689999975,4461249.771],[161496.67059999984,4461241.8256],[161471.75650000013,4461244.356899999],[161468.70969999954,4461214.521],[161477.07689999975,4461195.2085],[161495.94400000013,4461162.2787999995],[161494.53780000005,4461148.4037999995],[161513.49870000035,4461137.5287999995],[161572.18620000035,4461143.5053],[161576.35809999984,4461138.489700001],[161582.35809999984,4461138.489700001]]]},{"type":"Polygon","coordinates":[[[168518.35809999984,4461090.489700001],[168527.47530000005,4461087.606899999],[168537.71750000026,4461076.544399999],[168572.47530000005,4461088.731899999],[168620.42839999963,4461163.0053],[168629.47530000005,4461171.3725000005],[168647.24089999963,4461195.606899999],[168656.59250000026,4461204.2553],[168665.24089999963,4461213.606899999],[168671.47530000005,4461219.3725000005],[168687.31900000013,4461243.9350000005],[168707.33469999954,4461243.1381],[168713.24089999963,4461254.0835],[168689.24089999963,4461285.3725000005],[168686.35809999984,4461294.489700001],[168674.35809999984,4461294.489700001],[168674.35809999984,4461306.489700001],[168668.35809999984,4461306.489700001],[168668.35809999984,4461312.489700001],[168644.35809999984,4461330.489700001],[168638.35809999984,4461330.489700001],[168638.35809999984,4461336.489700001],[168626.40500000026,4461342.536599999],[168620.35809999984,4461354.489700001],[168614.35809999984,4461354.489700001],[168614.35809999984,4461360.489700001],[168608.35809999984,4461360.489700001],[168608.35809999984,4461366.489700001],[168602.35809999984,4461366.489700001],[168602.35809999984,4461372.489700001],[168596.35809999984,4461372.489700001],[168596.35809999984,4461378.489700001],[168588.38939999975,4461382.521],[168578.31120000035,4461402.4428],[168566.35809999984,4461408.489700001],[168560.35809999984,4461408.489700001],[168560.35809999984,4461414.489700001],[168554.35809999984,4461414.489700001],[168554.35809999984,4461420.489700001],[168545.03000000026,4461423.161599999],[168505.16280000005,4461438.4662999995],[168497.68620000035,4461447.8178],[168460.37370000035,4461470.5053],[168419.92059999984,4461500.036599999],[168413.68620000035,4461507.8178],[168398.85030000005,4461513.161599999],[168376.84250000026,4461460.896],[168353.03000000026,4461441.8178],[168347.24089999963,4461421.614700001],[168333.50650000013,4461410.599099999],[168321.99870000035,4461412.0287999995],[168305.92059999984,4461391.9428],[168299.52219999954,4461362.3412999995],[168277.23309999984,4461365.1303],[168261.27219999954,4461355.731899999],[168269.68620000035,4461333.8178],[168272.35809999984,4461318.489700001],[168274.98309999984,4461315.114700001],[168302.35809999984,4461294.489700001],[168308.35809999984,4461294.489700001],[168308.35809999984,4461288.489700001],[168314.35809999984,4461288.489700001],[168314.35809999984,4461282.489700001],[168314.35809999984,4461276.489700001],[168320.35809999984,4461276.489700001],[168326.35809999984,4461276.489700001],[168326.35809999984,4461270.489700001],[168332.35809999984,4461258.489700001],[168341.59250000026,4461255.724099999],[168371.12370000035,4461237.2553],[168392.03000000026,4461227.9506],[168401.59250000026,4461219.724099999],[168421.04559999984,4461188.646],[168476.82689999975,4461140.5756],[168512.35809999984,4461096.489700001],[168518.35809999984,4461096.489700001],[168518.35809999984,4461090.489700001]]]},{"type":"Polygon","coordinates":[[[167192.35809999984,4461084.489700001],[167240.45189999975,4461140.294399999],[167272.39719999954,4461155.364700001],[167329.95969999954,4461217.474099999],[167364.99870000035,4461240.114700001],[167403.27219999954,4461275.5756],[167429.80339999963,4461304.1928],[167464.35030000005,4461320.5053],[167492.07689999975,4461354.5835],[167453.24089999963,4461399.396],[167453.56900000013,4461407.599099999],[167424.74089999963,4461452.224099999],[167385.57689999975,4461482.271],[167370.85809999984,4461466.3803],[167345.24089999963,4461447.606899999],[167282.59250000026,4461393.2553],[167249.56900000013,4461371.9506],[167189.00650000013,4461315.8412999995],[167171.70969999954,4461297.1381],[167149.88939999975,4461276.9585],[167131.91280000005,4461257.5287999995],[167087.47530000005,4461225.3725000005],[167052.76439999975,4461202.9662999995],[167021.47530000005,4461164.5053],[167028.13150000013,4461151.6850000005],[167065.06900000013,4461117.4662999995],[167081.47530000005,4461093.606899999],[167116.30339999963,4461039.6537999995],[167123.45189999975,4461039.3725000005],[167147.24089999963,4461057.606899999],[167159.47530000005,4461063.3725000005],[167180.35809999984,4461078.489700001],[167186.35809999984,4461078.489700001],[167186.35809999984,4461084.489700001],[167192.35809999984,4461084.489700001]]]},{"type":"Polygon","coordinates":[[[167180.35809999984,4461078.489700001],[167176.06900000013,4461063.4662999995],[167129.68620000035,4461035.294399999],[167141.03000000026,4461005.224099999],[167177.68620000035,4460955.8178],[167191.98309999984,4460932.286599999],[167201.40500000026,4460931.114700001],[167222.35809999984,4460934.489700001],[167222.35809999984,4460940.489700001],[167228.35809999984,4460940.489700001],[167233.06900000013,4460949.8178],[167246.35809999984,4460952.489700001],[167290.13939999975,4461001.474099999],[167306.35809999984,4461006.489700001],[167306.35809999984,4461012.489700001],[167312.35809999984,4461012.489700001],[167312.35809999984,4461018.489700001],[167318.35809999984,4461018.489700001],[167330.35809999984,4461024.489700001],[167330.35809999984,4461030.489700001],[167336.35809999984,4461030.489700001],[167360.35809999984,4461048.489700001],[167360.35809999984,4461054.489700001],[167366.35809999984,4461054.489700001],[167372.35809999984,4461054.489700001],[167372.35809999984,4461060.489700001],[167378.35809999984,4461060.489700001],[167395.32689999975,4461082.474099999],[167435.73309999984,4461105.114700001],[167456.35809999984,4461120.489700001],[167456.35809999984,4461126.489700001],[167462.35809999984,4461126.489700001],[167462.35809999984,4461132.489700001],[167468.35809999984,4461132.489700001],[167470.81900000013,4461136.0287999995],[167492.35809999984,4461150.489700001],[167492.35809999984,4461156.489700001],[167498.35809999984,4461156.489700001],[167512.04559999984,4461176.294399999],[167528.35809999984,4461180.489700001],[167532.38929999992,4461188.4585],[167540.35809999984,4461192.489700001],[167552.35809999984,4461198.489700001],[167552.35809999984,4461204.489700001],[167558.35809999984,4461204.489700001],[167576.35809999984,4461216.489700001],[167576.35809999984,4461222.489700001],[167582.35809999984,4461222.489700001],[167582.35809999984,4461228.489700001],[167588.35809999984,4461228.489700001],[167588.35809999984,4461234.489700001],[167594.35809999984,4461234.489700001],[167606.35809999984,4461240.489700001],[167606.35809999984,4461246.489700001],[167612.35809999984,4461246.489700001],[167612.35809999984,4461252.489700001],[167618.35809999984,4461252.489700001],[167624.12370000035,4461258.724099999],[167633.47530000005,4461267.3725000005],[167639.24089999963,4461278.0131],[167608.13939999975,4461298.0756],[167588.26439999975,4461319.544399999],[167567.47530000005,4461363.606899999],[167554.13939999975,4461381.3725000005],[167523.60030000005,4461348.396],[167488.30339999963,4461322.4975000005],[167501.47530000005,4461297.606899999],[167506.13939999975,4461279.606899999],[167477.35809999984,4461294.8412999995],[167453.59250000026,4461282.2553],[167391.62370000035,4461253.0053],[167313.17839999963,4461181.849099999],[167249.54559999984,4461113.177200001],[167217.41280000005,4461092.411599999],[167192.35809999984,4461084.489700001],[167192.35809999984,4461078.489700001],[167186.35809999984,4461078.489700001],[167180.35809999984,4461078.489700001]]]},{"type":"Polygon","coordinates":[[[167240.35809999984,4460910.489700001],[167240.35809999984,4460916.489700001],[167246.35809999984,4460916.489700001],[167287.70189999975,4460923.521],[167300.35809999984,4460928.489700001],[167302.88939999975,4460938.3803],[167321.24089999963,4460950.3100000005],[167330.35809999984,4460946.489700001],[167333.03000000026,4460949.8178],[167382.03780000005,4460963.8335],[167409.76439999975,4460980.1225000005],[167432.35809999984,4460976.489700001],[167442.34250000026,4460978.5053],[167462.35809999984,4460988.489700001],[167462.35809999984,4460994.489700001],[167468.35809999984,4460994.489700001],[167480.35809999984,4460994.489700001],[167484.36589999963,4461008.481899999],[167516.35809999984,4461012.489700001],[167526.13150000013,4461023.8335],[167597.12370000035,4461045.0912999995],[167630.35809999984,4461048.489700001],[167644.98309999984,4461057.864700001],[167666.35809999984,4461066.489700001],[167666.35809999984,4461072.489700001],[167678.35809999984,4461072.489700001],[167681.35809999984,4461080.177200001],[167684.35809999984,4461072.489700001],[167696.35809999984,4461072.489700001],[167696.35809999984,4461078.489700001],[167702.35809999984,4461078.489700001],[167714.35809999984,4461078.489700001],[167714.35809999984,4461084.489700001],[167720.35809999984,4461084.489700001],[167726.35809999984,4461084.489700001],[167726.35809999984,4461090.489700001],[167738.35809999984,4461090.489700001],[167747.85030000005,4461102.794399999],[167771.19400000013,4461111.9585],[167792.35809999984,4461108.489700001],[167798.35809999984,4461108.489700001],[167798.35809999984,4461114.489700001],[167804.35809999984,4461114.489700001],[167818.81900000013,4461118.0287999995],[167834.35809999984,4461120.489700001],[167834.35809999984,4461126.489700001],[167840.35809999984,4461126.489700001],[167843.52219999954,4461135.536599999],[167790.55339999963,4461194.599099999],[167783.24089999963,4461201.3725000005],[167777.47530000005,4461207.606899999],[167753.24089999963,4461213.3725000005],[167739.74089999963,4461220.521],[167720.82689999975,4461240.9585],[167702.12370000035,4461258.2553],[167693.47530000005,4461267.606899999],[167686.51439999975,4461274.052200001],[167667.31900000013,4461273.2787999995],[167633.47530000005,4461255.3725000005],[167618.35809999984,4461252.489700001],[167618.35809999984,4461246.489700001],[167612.35809999984,4461246.489700001],[167609.85030000005,4461232.6850000005],[167606.35809999984,4461240.489700001],[167594.35809999984,4461234.489700001],[167594.35809999984,4461228.489700001],[167588.35809999984,4461228.489700001],[167588.35809999984,4461222.489700001],[167582.35809999984,4461222.489700001],[167582.35809999984,4461216.489700001],[167576.35809999984,4461216.489700001],[167558.35809999984,4461204.489700001],[167558.35809999984,4461198.489700001],[167552.35809999984,4461198.489700001],[167540.35809999984,4461192.489700001],[167540.35809999984,4461180.489700001],[167528.35809999984,4461180.489700001],[167514.67059999984,4461160.6850000005],[167498.35809999984,4461156.489700001],[167498.35809999984,4461150.489700001],[167492.35809999984,4461150.489700001],[167488.56120000035,4461135.677200001],[167468.35809999984,4461132.489700001],[167468.35809999984,4461126.489700001],[167462.35809999984,4461126.489700001],[167462.35809999984,4461120.489700001],[167456.35809999984,4461120.489700001],[167452.60809999984,4461105.8412999995],[167387.89719999954,4461062.9506],[167378.35809999984,4461060.489700001],[167378.35809999984,4461054.489700001],[167372.35809999984,4461054.489700001],[167366.35809999984,4461054.489700001],[167366.35809999984,4461048.489700001],[167360.35809999984,4461048.489700001],[167336.35809999984,4461030.489700001],[167336.35809999984,4461024.489700001],[167330.35809999984,4461024.489700001],[167318.35809999984,4461018.489700001],[167318.35809999984,4461012.489700001],[167312.35809999984,4461012.489700001],[167312.35809999984,4461006.489700001],[167306.35809999984,4461006.489700001],[167301.45969999954,4460989.3803],[167260.35030000005,4460956.4975000005],[167246.35809999984,4460952.489700001],[167233.06900000013,4460949.8178],[167228.35809999984,4460940.489700001],[167228.35809999984,4460934.489700001],[167222.35809999984,4460934.489700001],[167222.35809999984,4460916.489700001],[167234.35809999984,4460916.489700001],[167234.35809999984,4460910.489700001],[167240.35809999984,4460910.489700001]]]},{"type":"Polygon","coordinates":[[[163778.35809999984,4460892.489700001],[163790.35809999984,4460898.489700001],[163790.35809999984,4460904.489700001],[163796.35809999984,4460904.489700001],[163796.35809999984,4460910.489700001],[163802.35809999984,4460910.489700001],[163805.05339999963,4460920.146],[163842.83469999954,4460948.1537999995],[163868.35809999984,4460952.489700001],[163873.06900000013,4460961.8178],[163886.35809999984,4460964.489700001],[163892.35809999984,4460964.489700001],[163892.35809999984,4460970.489700001],[163898.35809999984,4460970.489700001],[163904.35809999984,4460970.489700001],[163904.35809999984,4460976.489700001],[163910.35809999984,4460976.489700001],[163910.35809999984,4460982.489700001],[163916.35809999984,4460982.489700001],[163916.35809999984,4460988.489700001],[163922.35809999984,4460988.489700001],[163922.35809999984,4460994.489700001],[163928.35809999984,4460994.489700001],[163932.92839999963,4461001.919399999],[163944.06120000035,4461008.786599999],[163948.65500000026,4461016.1928],[163968.78780000005,4461023.0600000005],[163984.65500000026,4461034.1928],[164000.35809999984,4461036.489700001],[164006.47530000005,4461048.5835],[164050.37370000035,4461070.474099999],[164060.35809999984,4461072.489700001],[164060.35809999984,4461078.489700001],[164066.35809999984,4461078.489700001],[164072.35809999984,4461078.489700001],[164072.35809999984,4461084.489700001],[164079.31900000013,4461092.5756],[164101.39719999954,4461106.4037999995],[164113.30339999963,4461120.231899999],[164135.17059999984,4461135.7475000005],[164145.67059999984,4461134.9037999995],[164230.16280000005,4461194.8100000005],[164258.35809999984,4461198.489700001],[164258.35809999984,4461204.489700001],[164264.35809999984,4461204.489700001],[164264.35809999984,4461210.489700001],[164270.35809999984,4461210.489700001],[164276.35809999984,4461210.489700001],[164276.35809999984,4461216.489700001],[164282.35809999984,4461216.489700001],[164288.35809999984,4461216.489700001],[164288.35809999984,4461222.489700001],[164294.35809999984,4461222.489700001],[164296.88939999975,4461232.3803],[164315.56900000013,4461244.521],[164318.35809999984,4461240.489700001],[164324.35809999984,4461240.489700001],[164324.35809999984,4461246.489700001],[164330.35809999984,4461246.489700001],[164341.88939999975,4461263.2006],[164381.89719999954,4461284.9506],[164407.20969999954,4461306.044399999],[164432.35809999984,4461312.489700001],[164456.35809999984,4461324.489700001],[164456.35809999984,4461330.489700001],[164462.35809999984,4461330.489700001],[164478.60030000005,4461354.7006],[164500.81900000013,4461364.0287999995],[164522.35809999984,4461366.489700001],[164527.06900000013,4461375.8178],[164540.35809999984,4461378.489700001],[164540.35809999984,4461384.489700001],[164552.35809999984,4461384.489700001],[164561.19400000013,4461399.6537999995],[164580.22530000005,4461411.771],[164579.12370000035,4461430.3335],[164549.03000000026,4461444.161599999],[164529.13150000013,4461454.9662999995],[164493.15500000026,4461452.8335],[164474.68620000035,4461432.161599999],[164465.19400000013,4461423.6537999995],[164459.52219999954,4461417.3256],[164442.31900000013,4461401.9506],[164411.19400000013,4461387.6537999995],[164360.03000000026,4461359.856899999],[164333.52219999954,4461339.3256],[164313.41280000005,4461333.114700001],[164289.15500000026,4461305.9506],[164251.30339999963,4461278.481899999],[164231.21750000026,4461279.677200001],[164198.66280000005,4461259.544399999],[164185.88939999975,4461245.2475000005],[164146.39719999954,4461213.021],[164132.07689999975,4461213.864700001],[164105.52219999954,4461195.3256],[164091.01439999975,4461188.669399999],[164075.52219999954,4461171.3256],[164053.51439999975,4461164.5287999995],[163999.58469999954,4461133.0287999995],[163966.84250000026,4461118.0053],[163939.79559999984,4461103.286599999],[163920.99870000035,4461082.2631],[163896.03780000005,4461066.3725000005],[163888.11589999963,4461040.731899999],[163863.90500000026,4461033.2553],[163823.52219999954,4460985.3256],[163810.84250000026,4460974.0053],[163799.52219999954,4460961.3256],[163793.19400000013,4460955.6537999995],[163781.87370000035,4460942.974099999],[163766.94400000013,4460929.661599999],[163757.52219999954,4460904.606899999],[163778.35809999984,4460892.489700001]]]},{"type":"Polygon","coordinates":[[[163778.35809999984,4460892.489700001],[163775.47530000005,4460889.3725000005],[163757.19400000013,4460872.4506],[163757.49870000035,4460864.927200001],[163792.79559999984,4460848.2631],[163844.12370000035,4460841.231899999],[163857.31900000013,4460841.771],[163883.24089999963,4460859.606899999],[163913.47530000005,4460877.3725000005],[163940.12370000035,4460895.724099999],[163975.93620000035,4460918.856899999],[164015.24089999963,4460991.606899999],[164033.47530000005,4461003.3725000005],[164091.53000000026,4461048.981899999],[164149.25650000013,4461076.2162999995],[164183.24089999963,4461099.606899999],[164203.20969999954,4461109.0287999995],[164243.24089999963,4461141.606899999],[164265.34250000026,4461155.8803],[164307.50650000013,4461175.7787999995],[164339.24089999963,4461201.606899999],[164422.23309999984,4461250.3803],[164463.45969999954,4461278.7631],[164489.70969999954,4461291.1381],[164525.24089999963,4461315.606899999],[164543.47530000005,4461327.3725000005],[164561.24089999963,4461339.606899999],[164629.39719999954,4461377.974099999],[164620.32689999975,4461395.1303],[164595.48309999984,4461405.3725000005],[164561.47530000005,4461387.3725000005],[164552.35809999984,4461384.489700001],[164552.35809999984,4461378.489700001],[164540.35809999984,4461378.489700001],[164535.64719999954,4461369.161599999],[164522.35809999984,4461366.489700001],[164520.34250000026,4461362.5053],[164488.37370000035,4461346.474099999],[164472.34250000026,4461332.5053],[164462.35809999984,4461330.489700001],[164462.35809999984,4461324.489700001],[164456.35809999984,4461324.489700001],[164432.35809999984,4461312.489700001],[164425.39719999954,4461304.4037999995],[164405.12370000035,4461291.724099999],[164379.06120000035,4461271.286599999],[164339.59250000026,4461249.2553],[164330.35809999984,4461246.489700001],[164330.35809999984,4461240.489700001],[164324.35809999984,4461240.489700001],[164318.35809999984,4461240.489700001],[164314.30339999963,4461232.4975000005],[164294.35809999984,4461222.489700001],[164294.35809999984,4461216.489700001],[164288.35809999984,4461216.489700001],[164282.35809999984,4461216.489700001],[164282.35809999984,4461210.489700001],[164276.35809999984,4461210.489700001],[164270.35809999984,4461210.489700001],[164270.35809999984,4461204.489700001],[164264.35809999984,4461204.489700001],[164264.35809999984,4461198.489700001],[164258.35809999984,4461198.489700001],[164255.73309999984,4461195.114700001],[164212.98309999984,4461171.864700001],[164171.73309999984,4461141.114700001],[164152.98309999984,4461129.864700001],[164123.66280000005,4461106.1928],[164081.73309999984,4461087.114700001],[164072.35809999984,4461084.489700001],[164072.35809999984,4461078.489700001],[164066.35809999984,4461078.489700001],[164066.35809999984,4461072.489700001],[164060.35809999984,4461072.489700001],[164053.39719999954,4461063.794399999],[164013.17839999963,4461040.146],[164000.35809999984,4461036.489700001],[163991.80339999963,4461025.802200001],[163948.16280000005,4461000.161599999],[163928.35809999984,4460994.489700001],[163928.35809999984,4460988.489700001],[163922.35809999984,4460988.489700001],[163922.35809999984,4460982.489700001],[163916.35809999984,4460982.489700001],[163916.35809999984,4460976.489700001],[163910.35809999984,4460976.489700001],[163910.35809999984,4460970.489700001],[163904.35809999984,4460970.489700001],[163898.35809999984,4460970.489700001],[163898.35809999984,4460964.489700001],[163892.35809999984,4460964.489700001],[163886.35809999984,4460964.489700001],[163881.64719999954,4460955.161599999],[163868.35809999984,4460952.489700001],[163866.34250000026,4460948.5053],[163846.37370000035,4460938.474099999],[163830.34250000026,4460924.5053],[163802.35809999984,4460910.489700001],[163802.35809999984,4460904.489700001],[163796.35809999984,4460904.489700001],[163796.35809999984,4460898.489700001],[163790.35809999984,4460898.489700001],[163778.35809999984,4460892.489700001]]]},{"type":"Polygon","coordinates":[[[162248.35809999984,4460754.489700001],[162251.56900000013,4460757.9585],[162321.97530000005,4460774.739700001],[162377.47530000005,4460781.3725000005],[162488.66280000005,4460804.646],[162537.38939999975,4460817.396],[162593.47530000005,4460823.3725000005],[162653.24089999963,4460841.606899999],[162689.47530000005,4460847.3725000005],[162719.24089999963,4460853.606899999],[162755.47530000005,4460859.3725000005],[162767.24089999963,4460863.544399999],[162748.30339999963,4460909.646],[162697.39719999954,4460976.044399999],[162677.59250000026,4461006.724099999],[162659.24089999963,4461033.3725000005],[162647.47530000005,4461051.606899999],[162630.95189999975,4461057.3725000005],[162567.48309999984,4461038.786599999],[162497.24089999963,4461027.606899999],[162455.47530000005,4461015.3725000005],[162411.17839999963,4461008.3178],[162393.83469999954,4460989.614700001],[162410.00650000013,4460927.9506],[162466.46750000026,4460912.2006],[162473.24089999963,4460881.099099999],[162447.43620000035,4460864.4350000005],[162359.24089999963,4460847.606899999],[162329.47530000005,4460841.3725000005],[162287.24089999963,4460835.606899999],[162245.47530000005,4460823.3725000005],[162192.13150000013,4460814.8881],[162179.47530000005,4460797.849099999],[162193.44400000013,4460758.0053],[162248.35809999984,4460754.489700001]]]},{"type":"Polygon","coordinates":[[[162998.35809999984,4460772.489700001],[162995.47530000005,4460769.3725000005],[162946.02219999954,4460755.5912999995],[162929.47530000005,4460740.2631],[162962.10030000005,4460737.802200001],[163031.47530000005,4460763.3725000005],[163081.88939999975,4460785.3803],[163115.47530000005,4460793.3725000005],[163148.45189999975,4460806.919399999],[163190.59250000026,4460820.2553],[163226.12370000035,4460832.724099999],[163253.47530000005,4460841.3725000005],[163294.91280000005,4460858.3881],[163332.50650000013,4460865.5835],[163365.06120000035,4460882.8100000005],[163415.47530000005,4460901.3725000005],[163445.24089999963,4460913.606899999],[163463.47530000005,4460919.3725000005],[163505.24089999963,4460937.606899999],[163535.47530000005,4460943.3725000005],[163567.35030000005,4460962.896],[163663.81900000013,4461002.5287999995],[163716.43620000035,4461019.169399999],[163763.24089999963,4461039.606899999],[163799.59250000026,4461048.2553],[163824.38939999975,4461061.3803],[163914.62370000035,4461102.6537999995],[163953.67059999984,4461138.8412999995],[164001.27219999954,4461206.3412999995],[164049.74089999963,4461214.052200001],[164075.24089999963,4461231.606899999],[164108.47530000005,4461247.286599999],[164189.24089999963,4461303.606899999],[164207.47530000005,4461315.3725000005],[164225.24089999963,4461327.606899999],[164270.59250000026,4461354.2553],[164315.24089999963,4461381.606899999],[164357.47530000005,4461405.3725000005],[164375.24089999963,4461417.606899999],[164417.47530000005,4461441.3725000005],[164435.24089999963,4461453.606899999],[164489.24089999963,4461484.0053],[164472.43620000035,4461500.552200001],[164447.47530000005,4461483.3725000005],[164381.24089999963,4461441.606899999],[164363.47530000005,4461429.3725000005],[164297.24089999963,4461393.606899999],[164249.47530000005,4461363.3725000005],[164171.24089999963,4461321.606899999],[164118.55339999963,4461283.474099999],[164054.54559999984,4461249.606899999],[164042.05339999963,4461257.364700001],[164069.24089999963,4461303.606899999],[164093.19400000013,4461338.411599999],[164094.41280000005,4461369.3725000005],[164072.21750000026,4461359.646],[164034.76439999975,4461333.8881],[164003.24089999963,4461321.606899999],[163961.47530000005,4461303.3725000005],[163931.24089999963,4461291.606899999],[163890.10809999984,4461269.8335],[163829.47530000005,4461243.3725000005],[163796.73309999984,4461230.6225000005],[163775.47530000005,4461219.3725000005],[163757.24089999963,4461213.606899999],[163643.47530000005,4461159.3725000005],[163601.59250000026,4461143.0600000005],[163493.47530000005,4461093.3725000005],[163463.24089999963,4461081.606899999],[163428.64719999954,4461063.302200001],[163349.24089999963,4461027.606899999],[163327.98309999984,4461016.356899999],[163295.24089999963,4461003.606899999],[163273.98309999984,4460992.356899999],[163241.24089999963,4460979.606899999],[163199.47530000005,4460961.3725000005],[163169.24089999963,4460949.606899999],[163139.47530000005,4460937.3725000005],[163101.74089999963,4460922.677200001],[163039.35030000005,4460889.677200001],[162997.95969999954,4460876.552200001],[162965.47530000005,4460859.3725000005],[162947.24089999963,4460853.606899999],[162916.46750000026,4460837.3178],[162863.47530000005,4460816.6928],[162872.00650000013,4460799.981899999],[162892.16280000005,4460799.1850000005],[162914.35809999984,4460802.489700001],[162914.35809999984,4460808.489700001],[162920.35809999984,4460808.489700001],[162930.34250000026,4460810.5053],[162958.37370000035,4460824.474099999],[162968.35809999984,4460826.489700001],[162983.26439999975,4460845.7787999995],[163019.73309999984,4460859.114700001],[163056.17839999963,4460875.0287999995],[163088.35809999984,4460880.489700001],[163094.35809999984,4460880.489700001],[163094.35809999984,4460886.489700001],[163106.35809999984,4460886.489700001],[163111.20969999954,4460896.0756],[163130.35809999984,4460898.489700001],[163133.26439999975,4460901.6303],[163235.24089999963,4460949.606899999],[163265.47530000005,4460961.3725000005],[163289.00650000013,4460973.8412999995],[163313.47530000005,4460985.3725000005],[163325.24089999963,4460991.606899999],[163367.47530000005,4461009.3725000005],[163409.24089999963,4461027.606899999],[163451.47530000005,4461045.3725000005],[163541.24089999963,4461087.606899999],[163559.47530000005,4461093.3725000005],[163583.00650000013,4461105.8412999995],[163621.11589999963,4461117.8881],[163673.07689999975,4461145.3803],[163745.47530000005,4461171.3725000005],[163777.53780000005,4461188.3412999995],[163827.27219999954,4461201.3725000005],[163847.24089999963,4461176.3881],[163841.47530000005,4461165.3725000005],[163832.35809999984,4461162.489700001],[163832.35809999984,4461156.489700001],[163826.35809999984,4461156.489700001],[163826.35809999984,4461150.489700001],[163814.35809999984,4461150.489700001],[163814.35809999984,4461144.489700001],[163808.35809999984,4461144.489700001],[163802.35809999984,4461144.489700001],[163802.35809999984,4461138.489700001],[163790.35809999984,4461138.489700001],[163790.35809999984,4461132.489700001],[163766.35809999984,4461132.489700001],[163766.35809999984,4461126.489700001],[163754.35809999984,4461126.489700001],[163739.89719999954,4461116.9506],[163730.35809999984,4461114.489700001],[163730.35809999984,4461108.489700001],[163724.35809999984,4461108.489700001],[163716.34250000026,4461104.5053],[163700.35809999984,4461102.489700001],[163698.29559999984,4461098.4350000005],[163662.34250000026,4461080.5053],[163646.35809999984,4461078.489700001],[163640.35809999984,4461078.489700001],[163640.35809999984,4461072.489700001],[163628.35809999984,4461072.489700001],[163626.29559999984,4461068.411599999],[163602.34250000026,4461056.5053],[163582.18620000035,4461052.427200001],[163558.37370000035,4461040.474099999],[163553.94400000013,4461005.3412999995],[163544.35809999984,4461000.489700001],[163544.35809999984,4460994.489700001],[163538.35809999984,4460994.489700001],[163538.35809999984,4460988.489700001],[163532.35809999984,4460988.489700001],[163526.35809999984,4460988.489700001],[163526.35809999984,4460982.489700001],[163514.35809999984,4460982.489700001],[163508.35809999984,4460982.489700001],[163508.35809999984,4460976.489700001],[163496.35809999984,4460976.489700001],[163492.42059999984,4460970.0912999995],[163464.06120000035,4460960.786599999],[163448.35809999984,4460958.489700001],[163442.94400000013,4460950.6381],[163413.57689999975,4460931.5131],[163394.35809999984,4460928.489700001],[163384.81900000013,4460926.0287999995],[163359.45969999954,4460915.3881],[163340.35809999984,4460910.489700001],[163340.35809999984,4460904.489700001],[163334.35809999984,4460904.489700001],[163328.35809999984,4460904.489700001],[163322.96750000026,4460895.7475000005],[163288.65500000026,4460884.1928],[163260.06120000035,4460870.786599999],[163240.65500000026,4460866.1928],[163212.06120000035,4460852.786599999],[163196.35809999984,4460850.489700001],[163193.52219999954,4460847.0678],[163151.63939999975,4460829.2085],[163117.44400000013,4460816.411599999],[163072.79559999984,4460797.052200001],[163054.74870000035,4460786.7162999995],[163013.63939999975,4460775.2085],[162998.35809999984,4460772.489700001]]]},{"type":"Polygon","coordinates":[[[163514.35809999984,4460640.489700001],[163517.92059999984,4460644.919399999],[163553.68620000035,4460655.161599999],[163571.03000000026,4460661.8178],[163619.68620000035,4460667.161599999],[163650.50650000013,4460675.9506],[163673.35809999984,4460673.114700001],[163698.50650000013,4460676.2553],[163755.92839999963,4460698.3335],[163788.78780000005,4460688.9350000005],[163837.77219999954,4460711.0600000005],[163865.35809999984,4460707.614700001],[163890.08469999954,4460710.7085],[163928.70969999954,4460725.544399999],[163942.51439999975,4460708.294399999],[163961.03000000026,4460721.8178],[163980.01439999975,4460729.8335],[164002.77219999954,4460743.1928],[163987.32679999992,4460769.4662999995],[163958.19400000013,4460775.771],[163935.48309999984,4460789.1303],[163916.14719999954,4460786.7162999995],[163862.99089999963,4460794.1928],[163851.01439999975,4460809.146],[163823.03000000026,4460817.161599999],[163805.68620000035,4460823.8178],[163769.03000000026,4460829.161599999],[163754.35809999984,4460837.786599999],[163739.68620000035,4460829.161599999],[163721.03000000026,4460823.8178],[163702.06900000013,4460816.5287999995],[163691.14719999954,4460817.8881],[163679.56900000013,4460811.0912999995],[163673.35809999984,4460811.864700001],[163654.91280000005,4460809.5678],[163619.68620000035,4460787.161599999],[163595.78000000026,4460780.3178],[163583.14719999954,4460781.8881],[163567.16280000005,4460772.5131],[163556.42839999963,4460759.0835],[163526.42839999963,4460737.989700001],[163508.35809999984,4460740.239700001],[163499.35809999984,4460739.114700001],[163489.67839999963,4460740.3100000005],[163449.57689999975,4460732.7631],[163452.10809999984,4460712.489700001],[163450.16280000005,4460696.8335],[163467.01439999975,4460668.146],[163476.69400000013,4460645.2006],[163514.35809999984,4460640.489700001]]]},{"type":"Polygon","coordinates":[[[161738.35809999984,4460526.489700001],[161741.12370000035,4460529.724099999],[161759.80339999963,4460538.044399999],[161779.46750000026,4460549.0131],[161838.57689999975,4460544.2553],[161875.95969999954,4460554.4975000005],[161892.03780000005,4460553.1850000005],[161951.59250000026,4460559.2553],[161958.31900000013,4460567.106899999],[161986.13939999975,4460564.856899999],[162055.88939999975,4460584.4975000005],[162106.77219999954,4460580.396],[162145.13939999975,4460596.544399999],[162166.42059999984,4460594.8335],[162185.12370000035,4460601.724099999],[162221.12370000035,4460609.8803],[162215.59250000026,4460619.724099999],[162180.01439999975,4460668.239700001],[162179.12370000035,4460679.489700001],[162180.45969999954,4460696.3178],[162156.10809999984,4460713.5912999995],[162137.59250000026,4460703.2553],[162082.79559999984,4460683.427200001],[162084.55339999963,4460661.724099999],[162077.12370000035,4460667.2553],[162069.15500000026,4460676.536599999],[162025.11589999963,4460680.0756],[161987.45189999975,4460673.231899999],[161978.00650000013,4460674.0053],[161957.12370000035,4460667.724099999],[161947.30339999963,4460656.3100000005],[161918.75650000013,4460648.481899999],[161892.69400000013,4460650.5912999995],[161878.77219999954,4460642.8100000005],[161852.45189999975,4460644.919399999],[161831.59250000026,4460637.2553],[161783.12370000035,4460631.724099999],[161745.92839999963,4460610.9585],[161704.16280000005,4460614.3100000005],[161675.12370000035,4460607.724099999],[161627.49870000035,4460589.231899999],[161609.68620000035,4460590.661599999],[161608.86589999963,4460580.4662999995],[161655.60030000005,4460526.2085],[161717.00650000013,4460531.1537999995],[161738.35809999984,4460526.489700001]]]},{"type":"Polygon","coordinates":[[[165416.35809999984,4460532.489700001],[165448.18620000035,4460512.802200001],[165467.19400000013,4460519.2475000005],[165454.04559999984,4460543.411599999],[165375.99870000035,4460604.2787999995],[165365.52219999954,4460636.9975000005],[165401.63939999975,4460679.4428],[165392.99089999963,4460695.356899999],[165329.19400000013,4460751.3256],[165326.35809999984,4460754.489700001],[165310.04559999984,4460758.6850000005],[165296.35809999984,4460778.489700001],[165290.35809999984,4460778.489700001],[165290.35809999984,4460784.489700001],[165277.46750000026,4460795.599099999],[165240.64719999954,4460838.3256],[165192.41280000005,4460872.9662999995],[165175.51439999975,4460910.8178],[165141.78780000005,4460925.864700001],[165131.59250000026,4460937.724099999],[165094.56120000035,4460964.302200001],[165035.12370000035,4461015.2553],[164981.59250000026,4461063.724099999],[164955.83469999954,4461082.1928],[164904.34250000026,4461126.5600000005],[164892.48309999984,4461153.114700001],[164839.63150000013,4461119.9975000005],[164830.56120000035,4461089.9037999995],[164795.59250000026,4461059.7631],[164810.12370000035,4461037.521],[164861.59250000026,4460997.724099999],[164927.12370000035,4460937.2553],[164945.59250000026,4460925.724099999],[164969.12370000035,4460907.2553],[164999.14719999954,4460885.7162999995],[165017.59250000026,4460859.724099999],[165024.22530000005,4460844.8178],[165057.92839999963,4460805.724099999],[165091.42059999984,4460779.474099999],[165123.36589999963,4460782.052200001],[165144.03780000005,4460772.8412999995],[165161.59250000026,4460757.724099999],[165187.06900000013,4460728.1225000005],[165251.12370000035,4460673.2553],[165273.90500000026,4460659.0053],[165315.24870000035,4460623.3803],[165332.96750000026,4460602.8256],[165374.82689999975,4460572.7553],[165404.35809999984,4460538.489700001],[165410.35809999984,4460538.489700001],[165410.35809999984,4460532.489700001],[165416.35809999984,4460532.489700001]]]},{"type":"Polygon","coordinates":[[[167234.35809999984,4460910.489700001],[167231.59250000026,4460907.2553],[167217.71750000026,4460895.3256],[167254.84250000026,4460812.1225000005],[167275.18620000035,4460800.7787999995],[167315.12370000035,4460811.724099999],[167345.59250000026,4460817.2553],[167369.12370000035,4460823.724099999],[167399.59250000026,4460829.2553],[167441.70969999954,4460840.786599999],[167475.55339999963,4460843.5053],[167489.59250000026,4460823.724099999],[167498.89719999954,4460802.8178],[167517.15500000026,4460781.6303],[167534.35809999984,4460778.489700001],[167540.35809999984,4460778.489700001],[167540.35809999984,4460784.489700001],[167546.35809999984,4460784.489700001],[167552.35809999984,4460784.489700001],[167552.35809999984,4460790.489700001],[167558.35809999984,4460790.489700001],[167576.35809999984,4460802.489700001],[167576.35809999984,4460808.489700001],[167588.35809999984,4460808.489700001],[167588.35809999984,4460814.489700001],[167606.35809999984,4460814.489700001],[167611.06900000013,4460823.8178],[167624.35809999984,4460826.489700001],[167624.35809999984,4460832.489700001],[167630.35809999984,4460832.489700001],[167630.35809999984,4460838.489700001],[167642.35809999984,4460838.489700001],[167642.35809999984,4460844.489700001],[167654.35809999984,4460844.489700001],[167654.35809999984,4460850.489700001],[167660.35809999984,4460850.489700001],[167666.35809999984,4460850.489700001],[167674.56120000035,4460859.349099999],[167690.21750000026,4460859.9585],[167783.14719999954,4460807.646],[167784.15500000026,4460782.5678],[167777.47530000005,4460775.3725000005],[167735.24089999963,4460751.606899999],[167690.80339999963,4460717.5287999995],[167664.17839999963,4460700.3256],[167575.88939999975,4460636.4350000005],[167553.43620000035,4460644.3100000005],[167525.24089999963,4460637.606899999],[167390.03000000026,4460594.271],[167329.11589999963,4460579.7631],[167309.80339999963,4460551.6850000005],[167345.73309999984,4460487.8412999995],[167357.42839999963,4460487.3725000005],[167378.35809999984,4460490.489700001],[167378.35809999984,4460496.489700001],[167384.35809999984,4460496.489700001],[167390.35809999984,4460496.489700001],[167402.35809999984,4460496.489700001],[167408.35809999984,4460496.489700001],[167416.37370000035,4460500.474099999],[167426.35809999984,4460502.489700001],[167432.35809999984,4460502.489700001],[167432.35809999984,4460508.489700001],[167444.35809999984,4460508.489700001],[167449.25650000013,4460515.5912999995],[167468.35809999984,4460520.489700001],[167480.35809999984,4460520.489700001],[167527.37370000035,4460539.239700001],[167558.35809999984,4460544.489700001],[167570.35809999984,4460544.489700001],[167579.59250000026,4460559.2553],[167588.17059999984,4460587.8256],[167648.35809999984,4460610.489700001],[167666.35809999984,4460622.489700001],[167672.35809999984,4460622.489700001],[167672.35809999984,4460628.489700001],[167684.35809999984,4460628.489700001],[167684.35809999984,4460634.489700001],[167696.35809999984,4460634.489700001],[167701.06900000013,4460643.8178],[167714.35809999984,4460646.489700001],[167714.35809999984,4460652.489700001],[167720.35809999984,4460652.489700001],[167726.35809999984,4460652.489700001],[167726.35809999984,4460658.489700001],[167732.35809999984,4460658.489700001],[167738.35809999984,4460658.489700001],[167738.35809999984,4460664.489700001],[167744.35809999984,4460664.489700001],[167744.35809999984,4460670.489700001],[167756.35809999984,4460670.489700001],[167756.35809999984,4460676.489700001],[167762.35809999984,4460676.489700001],[167768.35809999984,4460676.489700001],[167770.42059999984,4460680.544399999],[167818.37370000035,4460704.474099999],[167828.35809999984,4460706.489700001],[167846.35809999984,4460706.489700001],[167852.35809999984,4460706.489700001],[167852.35809999984,4460700.489700001],[167858.35809999984,4460700.489700001],[167858.35809999984,4460694.489700001],[167873.33469999954,4460685.3256],[167905.51439999975,4460698.544399999],[167952.38939999975,4460734.474099999],[167975.47530000005,4460745.3725000005],[168053.24089999963,4460793.606899999],[168098.59250000026,4460820.2553],[168121.67839999963,4460845.169399999],[168148.46750000026,4460869.989700001],[168193.23309999984,4460931.021],[168216.50650000013,4460918.6928],[168243.69400000013,4460919.771],[168251.24089999963,4460943.606899999],[168258.08469999954,4460956.521],[168304.49089999963,4460954.6928],[168330.85809999984,4460972.8335],[168386.21750000026,4460986.0287999995],[168424.09250000026,4460999.3178],[168431.24089999963,4461020.5053],[168393.22530000005,4461027.771],[168379.39719999954,4461027.2085],[168353.47530000005,4461009.3725000005],[168322.79559999984,4460997.606899999],[168309.29559999984,4461026.224099999],[168225.06120000035,4461008.599099999],[168059.42839999963,4461016.802200001],[168008.94400000013,4461034.4975000005],[167952.10809999984,4461048.021],[167903.47530000005,4461087.606899999],[167863.23309999984,4461119.2475000005],[167840.35809999984,4461126.489700001],[167840.35809999984,4461120.489700001],[167834.35809999984,4461120.489700001],[167818.81900000013,4461118.0287999995],[167804.35809999984,4461114.489700001],[167804.35809999984,4461108.489700001],[167798.35809999984,4461108.489700001],[167792.35809999984,4461108.489700001],[167789.68620000035,4461105.161599999],[167738.35809999984,4461090.489700001],[167738.35809999984,4461084.489700001],[167726.35809999984,4461084.489700001],[167720.35809999984,4461084.489700001],[167720.35809999984,4461078.489700001],[167714.35809999984,4461078.489700001],[167702.35809999984,4461078.489700001],[167702.35809999984,4461072.489700001],[167696.35809999984,4461072.489700001],[167684.35809999984,4461072.489700001],[167678.35809999984,4461072.489700001],[167678.35809999984,4461066.489700001],[167666.35809999984,4461066.489700001],[167644.98309999984,4461057.864700001],[167630.35809999984,4461048.489700001],[167624.33469999954,4461041.5053],[167584.09250000026,4461026.7162999995],[167531.59250000026,4461015.2553],[167516.35809999984,4461012.489700001],[167513.59250000026,4461009.2553],[167480.35809999984,4460994.489700001],[167468.35809999984,4460994.489700001],[167468.35809999984,4460988.489700001],[167462.35809999984,4460988.489700001],[167442.34250000026,4460978.5053],[167432.35809999984,4460976.489700001],[167426.12370000035,4460968.7085],[167357.68620000035,4460949.161599999],[167330.35809999984,4460946.489700001],[167328.34250000026,4460942.5053],[167300.35809999984,4460928.489700001],[167287.70189999975,4460923.521],[167246.35809999984,4460916.489700001],[167246.35809999984,4460910.489700001],[167240.35809999984,4460910.489700001],[167234.35809999984,4460910.489700001]]]},{"type":"Polygon","coordinates":[[[162914.35809999984,4460592.489700001],[162928.56120000035,4460615.481899999],[162864.99870000035,4460731.919399999],[162838.13939999975,4460752.731899999],[162815.19400000013,4460745.6537999995],[162771.95189999975,4460726.6225000005],[162713.19400000013,4460715.6537999995],[162680.45189999975,4460697.864700001],[162646.53780000005,4460691.536599999],[162581.19400000013,4460667.6537999995],[162568.18620000035,4460660.599099999],[162499.44400000013,4460644.5912999995],[162384.03780000005,4460596.544399999],[162330.06120000035,4460586.4662999995],[162328.74870000035,4460564.224099999],[162383.19400000013,4460464.0287999995],[162377.52219999954,4460433.3256],[162347.52219999954,4460411.552200001],[162363.74089999963,4460391.771],[162386.61589999963,4460390.411599999],[162422.35809999984,4460412.489700001],[162434.45189999975,4460430.021],[162466.81900000013,4460440.0287999995],[162482.35809999984,4460442.489700001],[162490.37370000035,4460446.474099999],[162506.35809999984,4460448.489700001],[162506.35809999984,4460454.489700001],[162512.35809999984,4460454.489700001],[162518.35809999984,4460454.489700001],[162521.96750000026,4460459.7162999995],[162548.35809999984,4460466.489700001],[162554.35809999984,4460466.489700001],[162554.35809999984,4460472.489700001],[162560.35809999984,4460472.489700001],[162568.37370000035,4460476.474099999],[162578.35809999984,4460478.489700001],[162578.35809999984,4460484.489700001],[162584.35809999984,4460484.489700001],[162596.35809999984,4460484.489700001],[162653.12370000035,4460505.724099999],[162668.35809999984,4460508.489700001],[162676.37370000035,4460512.474099999],[162686.35809999984,4460514.489700001],[162692.35809999984,4460514.489700001],[162704.35809999984,4460514.489700001],[162704.35809999984,4460520.489700001],[162710.35809999984,4460520.489700001],[162716.35809999984,4460520.489700001],[162722.49870000035,4460528.4350000005],[162746.35809999984,4460532.489700001],[162746.35809999984,4460538.489700001],[162752.35809999984,4460538.489700001],[162770.35809999984,4460538.489700001],[162778.11589999963,4460546.856899999],[162888.41280000005,4460588.9506],[162914.35809999984,4460592.489700001]]]},{"type":"Polygon","coordinates":[[[164132.35809999984,4460268.489700001],[164141.52219999954,4460283.3256],[164147.19400000013,4460313.6537999995],[164159.19400000013,4460324.3881],[164153.17059999984,4460364.0678],[164130.83469999954,4460376.2085],[164116.60809999984,4460360.294399999],[164082.41280000005,4460362.3100000005],[164064.15500000026,4460352.396],[164003.00650000013,4460356.052200001],[163960.63150000013,4460340.8412999995],[163893.13150000013,4460336.8100000005],[163853.52219999954,4460346.044399999],[163859.19400000013,4460355.6537999995],[163893.67059999984,4460366.3178],[163901.52219999954,4460373.3256],[163909.02219999954,4460381.7162999995],[163971.15500000026,4460378.0131],[164009.35809999984,4460391.724099999],[164040.55339999963,4460380.521],[164075.89719999954,4460391.4428],[164074.46750000026,4460415.3256],[164099.52219999954,4460409.6537999995],[164109.64719999954,4460398.3335],[164141.19400000013,4460409.6537999995],[164225.19400000013,4460415.724099999],[164217.85809999984,4460431.1928],[164171.00650000013,4460447.9975000005],[164135.19400000013,4460439.6537999995],[164115.76439999975,4460432.6928],[164093.82689999975,4460434.0053],[164067.38939999975,4460419.6381],[164030.35809999984,4460421.8412999995],[164018.35809999984,4460421.1381],[163971.74089999963,4460423.9037999995],[163930.13939999975,4460415.021],[163914.85809999984,4460415.9350000005],[163901.19400000013,4460409.6537999995],[163893.38939999975,4460400.9350000005],[163844.35809999984,4460403.8412999995],[163835.35809999984,4460403.302200001],[163807.09250000026,4460404.989700001],[163781.49870000035,4460387.106899999],[163745.82689999975,4460384.974099999],[163729.25650000013,4460393.974099999],[163716.88150000013,4460380.1225000005],[163683.62370000035,4460378.1303],[163634.38150000013,4460391.3256],[163595.19400000013,4460385.6537999995],[163576.63150000013,4460378.9975000005],[163565.21750000026,4460379.677200001],[163531.02219999954,4460355.794399999],[163468.65500000026,4460369.1303],[163439.52219999954,4460361.3256],[163373.19400000013,4460355.6537999995],[163330.42059999984,4460340.302200001],[163274.38150000013,4460355.3256],[163229.52219999954,4460331.4428],[163243.42059999984,4460316.419399999],[163272.41280000005,4460300.669399999],[163301.35809999984,4460302.3803],[163351.93620000035,4460299.3803],[163379.42839999963,4460314.3100000005],[163449.62370000035,4460306.856899999],[163468.13939999975,4460307.9585],[163525.70189999975,4460295.6537999995],[163541.52219999954,4460301.3256],[163553.82689999975,4460308.0053],[163588.91280000005,4460305.896],[163616.82689999975,4460337.161599999],[163646.35809999984,4460338.919399999],[163692.36589999963,4460336.177200001],[163739.24089999963,4460355.677200001],[163750.63150000013,4460354.9975000005],[163784.96750000026,4460367.3256],[163829.52219999954,4460361.6537999995],[163835.19400000013,4460355.3256],[163847.19400000013,4460344.5912999995],[163823.52219999954,4460337.3256],[163799.19400000013,4460331.6537999995],[163776.34250000026,4460323.474099999],[163723.79559999984,4460326.5912999995],[163703.52219999954,4460319.3256],[163649.52219999954,4460310.911599999],[163658.92059999984,4460285.0835],[163678.60809999984,4460274.3725000005],[163723.79559999984,4460290.5912999995],[163755.90500000026,4460288.6928],[163805.52219999954,4460295.3256],[163829.35809999984,4460301.7006],[163871.66280000005,4460290.3803],[163895.52219999954,4460301.3256],[163901.80339999963,4460308.356899999],[163963.63150000013,4460304.677200001],[164001.62370000035,4460314.849099999],[164055.38939999975,4460311.6381],[164089.49089999963,4460330.177200001],[164099.19400000013,4460319.3256],[164106.22530000005,4460313.044399999],[164104.13939999975,4460278.146],[164123.19400000013,4460271.3256],[164132.35809999984,4460268.489700001]]]},{"type":"Polygon","coordinates":[[[163118.35809999984,4460238.489700001],[163127.47530000005,4460235.606899999],[163213.60809999984,4460156.739700001],[163240.11589999963,4460128.1225000005],[163265.24089999963,4460085.3725000005],[163278.99870000035,4460079.606899999],[163340.59250000026,4460101.1928],[163365.36589999963,4460074.4506],[163427.05339999963,4460066.0131],[163451.24089999963,4460049.3725000005],[163482.57689999975,4460037.606899999],[163504.63150000013,4460061.419399999],[163523.24089999963,4460110.2631],[163510.42059999984,4460122.146],[163463.24089999963,4460133.3725000005],[163407.01439999975,4460148.114700001],[163361.47530000005,4460187.606899999],[163342.13939999975,4460200.0756],[163322.82689999975,4460220.9585],[163307.24089999963,4460235.3725000005],[163291.39719999954,4460252.4585],[163259.24089999963,4460271.3725000005],[163242.48309999984,4460289.4662999995],[163217.24089999963,4460301.3725000005],[163192.32689999975,4460320.474099999],[163153.88939999975,4460338.614700001],[163112.82689999975,4460382.9585],[163087.88939999975,4460406.021],[163073.47530000005,4460421.606899999],[163049.31120000035,4460443.989700001],[163013.47530000005,4460487.606899999],[162972.69400000013,4460534.6225000005],[162923.47530000005,4460517.3725000005],[162908.35809999984,4460514.489700001],[162908.35809999984,4460508.489700001],[162896.35809999984,4460508.489700001],[162896.35809999984,4460502.489700001],[162890.35809999984,4460502.489700001],[162872.35809999984,4460502.489700001],[162872.35809999984,4460496.489700001],[162866.35809999984,4460496.489700001],[162860.35809999984,4460496.489700001],[162852.34250000026,4460492.5053],[162842.35809999984,4460490.489700001],[162804.78780000005,4460476.052200001],[162776.35809999984,4460472.489700001],[162776.35809999984,4460466.489700001],[162764.35809999984,4460466.489700001],[162758.35809999984,4460466.489700001],[162758.35809999984,4460460.489700001],[162746.35809999984,4460460.489700001],[162746.35809999984,4460454.489700001],[162740.35809999984,4460454.489700001],[162734.35809999984,4460454.489700001],[162734.35809999984,4460448.489700001],[162722.35809999984,4460448.489700001],[162704.66280000005,4460427.9585],[162662.35809999984,4460418.489700001],[162626.35809999984,4460412.489700001],[162623.94400000013,4460408.5756],[162588.06120000035,4460396.786599999],[162572.35809999984,4460394.489700001],[162561.81120000035,4460380.802200001],[162536.35809999984,4460376.489700001],[162530.35809999984,4460376.489700001],[162530.35809999984,4460370.489700001],[162518.35809999984,4460370.489700001],[162506.35809999984,4460370.489700001],[162504.29559999984,4460366.411599999],[162480.34250000026,4460354.5053],[162470.35809999984,4460352.489700001],[162466.37370000035,4460341.3803],[162473.19400000013,4460319.3256],[162515.40500000026,4460281.614700001],[162536.26439999975,4460227.3100000005],[162550.18620000035,4460211.7475000005],[162561.62370000035,4460211.0678],[162593.52219999954,4460223.3256],[162625.84250000026,4460240.8803],[162672.06120000035,4460251.6381],[162734.54559999984,4460279.1303],[162776.68620000035,4460292.161599999],[162829.67839999963,4460311.169399999],[162884.68620000035,4460328.161599999],[162939.34250000026,4460347.7553],[162989.19400000013,4460350.731899999],[162979.86589999963,4460328.6537999995],[162970.98309999984,4460318.7162999995],[162923.52219999954,4460277.3256],[162902.35809999984,4460262.489700001],[162890.82689999975,4460245.7787999995],[162866.35809999984,4460232.489700001],[162866.35809999984,4460226.489700001],[162860.35809999984,4460226.489700001],[162856.37370000035,4460224.474099999],[162850.32689999975,4460212.521],[162842.35809999984,4460208.489700001],[162842.35809999984,4460202.489700001],[162836.35809999984,4460202.489700001],[162826.42059999984,4460188.099099999],[162812.35809999984,4460184.489700001],[162812.35809999984,4460178.489700001],[162806.35809999984,4460178.489700001],[162803.68620000035,4460175.1381],[162773.68620000035,4460151.161599999],[162758.35809999984,4460142.489700001],[162758.35809999984,4460136.489700001],[162752.35809999984,4460136.489700001],[162742.42059999984,4460122.099099999],[162728.35809999984,4460118.489700001],[162714.15500000026,4460085.911599999],[162758.21750000026,4460053.5912999995],[162789.15500000026,4460020.2162999995],[162837.27219999954,4460007.606899999],[162845.47530000005,4460013.3725000005],[162935.24089999963,4460097.606899999],[162977.47530000005,4460133.3725000005],[163080.38929999992,4460226.7475000005],[163100.35809999984,4460238.489700001],[163100.35809999984,4460244.489700001],[163118.35809999984,4460244.489700001],[163118.35809999984,4460238.489700001]]]},{"type":"Polygon","coordinates":[[[162032.35809999984,4459992.489700001],[162035.24089999963,4459995.606899999],[162041.47530000005,4460001.3725000005],[162076.09250000026,4460038.7553],[162137.14719999954,4460095.3100000005],[162137.70969999954,4460109.2553],[162125.24089999963,4460127.3725000005],[162113.47530000005,4460145.606899999],[162071.47530000005,4460195.294399999],[162083.24089999963,4460205.606899999],[162116.03000000026,4460213.411599999],[162139.86589999963,4460244.489700001],[162169.44400000013,4460290.3100000005],[162228.17839999963,4460358.021],[162243.95189999975,4460387.856899999],[162122.35809999984,4460392.6850000005],[162074.35809999984,4460390.786599999],[162044.35809999984,4460391.9585],[162012.27219999954,4460390.6928],[161931.17839999963,4460413.3100000005],[161897.92059999984,4460430.8881],[161849.24089999963,4460451.3725000005],[161810.05339999963,4460475.3725000005],[161795.24089999963,4460469.606899999],[161771.35809999984,4460453.177200001],[161734.74870000035,4460478.3725000005],[161683.25650000013,4460491.849099999],[161663.45189999975,4460481.3725000005],[161651.49870000035,4460481.8412999995],[161651.05339999963,4460470.521],[161663.00650000013,4460445.1381],[161680.49089999963,4460412.114700001],[161703.08469999954,4460354.106899999],[161722.02219999954,4460364.1381],[161751.64719999954,4460332.146],[161782.42059999984,4460330.927200001],[161837.24089999963,4460375.974099999],[161827.35030000005,4460402.739700001],[161801.47530000005,4460426.7162999995],[161812.09250000026,4460439.3725000005],[161844.38939999975,4460421.0912999995],[161925.81120000035,4460354.177200001],[161951.24089999963,4460317.2162999995],[161945.47530000005,4460301.3725000005],[161858.78000000026,4460208.9585],[161878.16280000005,4460180.786599999],[161861.17059999984,4460139.419399999],[161906.82689999975,4460112.5835],[161915.47530000005,4460079.5835],[161915.10030000005,4460070.2787999995],[161951.47530000005,4460043.606899999],[162011.47530000005,4459996.474099999],[162032.35809999984,4459992.489700001]]]},{"type":"Polygon","coordinates":[[[163100.35809999984,4460238.489700001],[163095.62370000035,4460223.1381],[163049.19400000013,4460181.6537999995],[163035.03780000005,4460165.8100000005],[163012.84250000026,4460146.0053],[162983.31120000035,4460112.9350000005],[162927.36589999963,4460072.3412999995],[162890.40500000026,4460030.974099999],[162861.71750000026,4460012.7162999995],[162848.68620000035,4459998.161599999],[162838.98309999984,4459989.4662999995],[162865.65500000026,4459970.1303],[162899.52219999954,4459959.6537999995],[162919.06900000013,4459952.646],[162929.19400000013,4459941.3256],[162935.52219999954,4459935.6537999995],[162944.85030000005,4459915.3335],[162984.45969999954,4459887.6537999995],[163004.21750000026,4459909.7787999995],[163025.52219999954,4459923.3256],[163060.25650000013,4459951.8256],[163101.78780000005,4460001.114700001],[163133.52219999954,4460013.3256],[163159.37370000035,4460033.3412999995],[163185.08469999954,4460073.771],[163219.35030000005,4460098.6381],[163229.85030000005,4460110.3803],[163229.03000000026,4460124.021],[163205.19400000013,4460145.3256],[163199.52219999954,4460151.6537999995],[163173.36589999963,4460170.6381],[163128.85809999984,4460220.4662999995],[163118.35809999984,4460238.489700001],[163100.35809999984,4460238.489700001]]]},{"type":"Polygon","coordinates":[[[164318.35809999984,4460670.489700001],[164375.28780000005,4460625.419399999],[164389.63150000013,4460618.481899999],[164450.68620000035,4460554.919399999],[164508.85809999984,4460504.294399999],[164548.37370000035,4460463.161599999],[164561.28780000005,4460430.8412999995],[164519.28780000005,4460397.5600000005],[164453.42839999963,4460337.419399999],[164429.28780000005,4460319.5600000005],[164409.31900000013,4460292.606899999],[164309.28780000005,4460205.5600000005],[164261.42839999963,4460163.419399999],[164213.28780000005,4460121.5600000005],[164129.42839999963,4460043.419399999],[164099.28780000005,4460019.5600000005],[164084.59250000026,4460004.2553],[164062.51439999975,4459983.044399999],[164051.42839999963,4459958.599099999],[164076.17839999963,4459934.8335],[164146.58469999954,4459911.981899999],[164180.75650000013,4459894.3803],[164231.42839999963,4459875.5600000005],[164243.28780000005,4459869.419399999],[164271.81120000035,4459863.5600000005],[164297.28780000005,4459897.052200001],[164278.13939999975,4459944.302200001],[164279.52219999954,4460012.1537999995],[164345.45189999975,4460087.106899999],[164405.78000000026,4460145.0678],[164438.12370000035,4460178.724099999],[164468.70969999954,4460208.1381],[164514.88150000013,4460256.161599999],[164555.21750000026,4460269.2631],[164615.89719999954,4460332.427200001],[164633.12370000035,4460385.5131],[164663.42839999963,4460391.419399999],[164681.28780000005,4460398.146],[164661.24870000035,4460437.0287999995],[164615.17059999984,4460481.302200001],[164600.47530000005,4460496.606899999],[164545.67839999963,4460549.271],[164447.28780000005,4460637.419399999],[164381.42839999963,4460697.5600000005],[164319.69400000013,4460751.2787999995],[164299.79559999984,4460763.419399999],[164244.38939999975,4460740.9428],[164270.35809999984,4460694.489700001],[164294.35809999984,4460688.489700001],[164300.35809999984,4460688.489700001],[164300.35809999984,4460682.489700001],[164313.64719999954,4460679.8178],[164318.35809999984,4460670.489700001]]]},{"type":"Polygon","coordinates":[[[167846.35809999984,4459830.489700001],[167869.49089999963,4459860.8178],[167897.96750000026,4459869.3725000005],[167964.03780000005,4459916.8100000005],[167975.12370000035,4459929.724099999],[167994.03780000005,4459938.1381],[168028.84250000026,4459968.1381],[168030.57689999975,4459989.677200001],[168016.37370000035,4460001.9350000005],[167987.10030000005,4460037.302200001],[167987.61589999963,4460043.6303],[167975.59250000026,4460076.396],[167985.53000000026,4460103.8178],[168043.63150000013,4460148.771],[168099.95189999975,4460195.9506],[168089.12370000035,4460205.2553],[168080.68620000035,4460233.356899999],[168030.22530000005,4460251.8725000005],[168005.59250000026,4460223.2553],[167987.12370000035,4460217.724099999],[167965.63150000013,4460205.724099999],[167950.93620000035,4460215.3100000005],[167953.02219999954,4460241.114700001],[167940.57689999975,4460242.1225000005],[167929.91280000005,4460232.9350000005],[167921.59250000026,4460223.2553],[167915.12370000035,4460217.724099999],[167902.98309999984,4460173.0287999995],[167885.59250000026,4460145.2553],[167873.12370000035,4460127.724099999],[167867.59250000026,4460091.2553],[167849.12370000035,4460079.724099999],[167819.54559999984,4460055.231899999],[167808.99870000035,4460056.0756],[167775.48309999984,4460036.7631],[167762.80339999963,4460022.044399999],[167747.47530000005,4460008.8256],[167741.59250000026,4459989.2553],[167730.24870000035,4459979.5053],[167723.59250000026,4459896.5835],[167742.78780000005,4459871.106899999],[167778.03780000005,4459886.8100000005],[167803.86589999963,4459901.2475000005],[167820.50650000013,4459886.9037999995],[167817.85809999984,4459853.7162999995],[167834.89719999954,4459833.9350000005],[167846.35809999984,4459830.489700001]]]},{"type":"Polygon","coordinates":[[[171320.35809999984,4459830.489700001],[171323.28780000005,4459833.5600000005],[171335.42839999963,4459839.419399999],[171353.31120000035,4459851.5600000005],[171365.19400000013,4459851.302200001],[171377.28780000005,4459857.5600000005],[171389.42839999963,4459863.419399999],[171412.35030000005,4459875.231899999],[171439.74870000035,4459884.1381],[171461.28780000005,4459904.8335],[171438.41280000005,4459930.9428],[171414.13150000013,4459905.7006],[171383.92059999984,4459905.0678],[171371.42839999963,4459917.0678],[171444.67059999984,4459947.6537999995],[171455.35809999984,4459947.419399999],[171461.42839999963,4459947.5600000005],[171470.00650000013,4459921.099099999],[171490.70189999975,4459899.5600000005],[171515.85030000005,4459911.6303],[171527.28780000005,4459923.5600000005],[171551.42839999963,4459929.419399999],[171569.28780000005,4459935.5600000005],[171593.42839999963,4459941.419399999],[171623.31120000035,4459953.5600000005],[171634.13939999975,4459953.3256],[171688.98309999984,4459971.1381],[171707.42839999963,4459995.419399999],[171718.46750000026,4460018.177200001],[171731.28780000005,4460031.5600000005],[171755.54559999984,4460043.302200001],[171789.31900000013,4460060.7162999995],[171809.31120000035,4460067.5600000005],[171825.92839999963,4460067.2085],[171861.99870000035,4460076.021],[171881.42839999963,4460085.419399999],[171899.31120000035,4460097.5600000005],[171906.92839999963,4460097.396],[171989.31120000035,4460127.5600000005],[172001.28780000005,4460127.302200001],[172001.63939999975,4460144.8100000005],[171989.42839999963,4460157.5600000005],[171977.28780000005,4460163.419399999],[171960.29559999984,4460172.1850000005],[171905.40500000026,4460151.419399999],[171899.31120000035,4460151.5600000005],[171858.50650000013,4460130.536599999],[171803.28780000005,4460121.5600000005],[171725.40500000026,4460091.419399999],[171713.40500000026,4460091.677200001],[171701.99089999963,4460079.794399999],[171667.63150000013,4460068.0287999995],[171635.40500000026,4460061.419399999],[171629.31120000035,4460061.5600000005],[171599.42839999963,4460049.419399999],[171581.28780000005,4460043.5600000005],[171551.12370000035,4460031.302200001],[171539.31120000035,4460031.5600000005],[171516.27219999954,4460015.927200001],[171473.28780000005,4460007.5600000005],[171455.40500000026,4460001.419399999],[171447.27219999954,4460001.5835],[171367.44400000013,4459971.396],[171359.31120000035,4459971.5600000005],[171338.61589999963,4459960.896],[171291.43620000035,4459941.7475000005],[171275.35809999984,4459941.419399999],[171257.78000000026,4459941.794399999],[171245.42839999963,4459929.911599999],[171255.71750000026,4459897.521],[171282.10809999984,4459883.927200001],[171311.42839999963,4459893.419399999],[171359.28780000005,4459909.8256],[171353.42839999963,4459887.419399999],[171347.28780000005,4459881.5600000005],[171341.42839999963,4459875.419399999],[171281.42839999963,4459860.794399999],[171296.40500000026,4459833.8412999995],[171320.35809999984,4459830.489700001]],[[171500.35809999984,4459944.489700001],[171480.01439999975,4459947.536599999],[171507.95189999975,4459964.8335],[171512.52219999954,4459954.4506],[171502.70189999975,4459948.146],[171500.35809999984,4459944.489700001]]]},{"type":"Polygon","coordinates":[[[163982.35809999984,4459860.489700001],[163993.67839999963,4459873.169399999],[164033.19400000013,4459908.4662999995],[164021.92059999984,4459926.771],[163971.34250000026,4459938.536599999],[163933.35030000005,4459959.1850000005],[163909.09250000026,4459960.6381],[163865.19400000013,4459923.6537999995],[163823.52219999954,4459887.3256],[163799.19400000013,4459869.6537999995],[163721.52219999954,4459809.3256],[163701.71750000026,4459796.7162999995],[163686.99870000035,4459780.2631],[163662.88150000013,4459764.911599999],[163619.52219999954,4459731.3256],[163592.31120000035,4459714.0053],[163556.68620000035,4459674.161599999],[163505.52219999954,4459628.4350000005],[163512.43620000035,4459578.2553],[163554.50650000013,4459545.6537999995],[163584.55339999963,4459555.6381],[163613.19400000013,4459575.6537999995],[163637.19400000013,4459586.669399999],[163689.64719999954,4459617.2085],[163745.19400000013,4459665.6537999995],[163766.35809999984,4459680.489700001],[163766.35809999984,4459686.489700001],[163772.35809999984,4459686.489700001],[163772.35809999984,4459692.489700001],[163778.35809999984,4459692.489700001],[163778.35809999984,4459698.489700001],[163784.35809999984,4459698.489700001],[163787.24089999963,4459701.8412999995],[163833.43620000035,4459741.4037999995],[163850.35809999984,4459746.489700001],[163850.35809999984,4459752.489700001],[163856.35809999984,4459752.489700001],[163856.35809999984,4459758.489700001],[163862.35809999984,4459758.489700001],[163865.78000000026,4459769.552200001],[163956.62370000035,4459850.2475000005],[163970.35809999984,4459854.489700001],[163970.35809999984,4459860.489700001],[163976.35809999984,4459860.489700001],[163982.35809999984,4459860.489700001]]]},{"type":"Polygon","coordinates":[[[162410.35809999984,4459500.489700001],[162404.59250000026,4459494.2553],[162392.17059999984,4459482.771],[162353.24089999963,4459467.606899999],[162335.47530000005,4459455.3725000005],[162317.24089999963,4459443.606899999],[162295.28000000026,4459428.489700001],[162287.47530000005,4459394.481899999],[162332.35809999984,4459329.2553],[162342.43620000035,4459329.6537999995],[162378.81120000035,4459354.6850000005],[162407.59250000026,4459368.2553],[162444.29559999984,4459387.6850000005],[162473.24089999963,4459407.606899999],[162545.47530000005,4459449.3725000005],[162568.95969999954,4459465.544399999],[162689.47530000005,4459533.3725000005],[162707.24089999963,4459545.606899999],[162754.11589999963,4459571.9975000005],[162761.24089999963,4459589.8803],[162737.24089999963,4459605.3725000005],[162708.57689999975,4459627.356899999],[162669.03780000005,4459639.8725000005],[162617.47530000005,4459617.3725000005],[162608.35809999984,4459614.489700001],[162608.35809999984,4459608.489700001],[162596.35809999984,4459608.489700001],[162584.87370000035,4459595.1537999995],[162503.49870000035,4459548.489700001],[162454.93620000035,4459514.036599999],[162425.59250000026,4459503.2553],[162410.35809999984,4459500.489700001]]]},{"type":"Polygon","coordinates":[[[161870.35809999984,4458852.489700001],[161866.67839999963,4458848.224099999],[161796.99870000035,4458817.1225000005],[161783.59250000026,4458780.5835],[161790.10809999984,4458755.5287999995],[161833.02219999954,4458771.8178],[161898.03780000005,4458800.8100000005],[161923.39719999954,4458814.9662999995],[161957.59250000026,4458825.2553],[161981.19400000013,4458838.4506],[162073.16280000005,4458879.2553],[162110.94400000013,4458869.9037999995],[162139.72530000005,4458835.1225000005],[162123.60030000005,4458806.2006],[162109.81900000013,4458768.677200001],[162116.35809999984,4458726.489700001],[162133.02219999954,4458708.5131],[162341.24089999963,4458825.606899999],[162344.35809999984,4458828.489700001],[162339.08469999954,4458849.9350000005],[162380.35809999984,4458852.489700001],[162380.35809999984,4458858.489700001],[162386.35809999984,4458858.489700001],[162396.34250000026,4458860.5053],[162404.35809999984,4458864.489700001],[162407.45189999975,4458874.2162999995],[162423.13150000013,4458888.771],[162447.76439999975,4458897.3725000005],[162513.69400000013,4458878.0835],[162564.88150000013,4458850.989700001],[162632.78000000026,4458825.9585],[162662.87370000035,4458818.786599999],[162684.43620000035,4458819.6537999995],[162743.10030000005,4458860.0131],[162761.24089999963,4458879.606899999],[162779.47530000005,4458891.3725000005],[162797.24089999963,4458903.606899999],[162827.47530000005,4458921.3725000005],[162882.22530000005,4458968.8803],[162930.57689999975,4459000.0756],[162941.24089999963,4459011.606899999],[162977.70969999954,4459035.1381],[163037.24089999963,4459083.606899999],[163064.59250000026,4459101.2553],[163124.12370000035,4459149.724099999],[163151.47530000005,4459167.3725000005],[163189.13939999975,4459199.2006],[163223.47530000005,4459221.3725000005],[163250.35809999984,4459241.9975000005],[163283.47530000005,4459263.3725000005],[163295.24089999963,4459281.981899999],[163239.36589999963,4459299.677200001],[163204.04559999984,4459318.356899999],[163169.24089999963,4459329.3725000005],[163162.32689999975,4459358.4585],[163124.96750000026,4459367.3412999995],[163104.74089999963,4459389.2085],[163079.17059999984,4459349.6225000005],[163006.18620000035,4459298.1537999995],[162970.13939999975,4459274.9037999995],[162959.47530000005,4459263.3725000005],[162923.87370000035,4459230.396],[162905.24089999963,4459221.606899999],[162882.60030000005,4459206.021],[162858.24870000035,4459179.7475000005],[162821.87370000035,4459162.5678],[162809.47530000005,4459143.3725000005],[162791.24089999963,4459137.606899999],[162785.47530000005,4459125.3725000005],[162778.77219999954,4459112.7162999995],[162742.23309999984,4459095.4662999995],[162719.70969999954,4459071.1381],[162646.74870000035,4459057.2162999995],[162605.47530000005,4459035.3725000005],[162590.35809999984,4459032.489700001],[162590.35809999984,4459026.489700001],[162584.35809999984,4459026.489700001],[162578.35809999984,4459026.489700001],[162578.35809999984,4459020.489700001],[162572.35809999984,4459020.489700001],[162572.35809999984,4459014.489700001],[162566.35809999984,4459014.489700001],[162560.35809999984,4459014.489700001],[162550.42059999984,4459000.099099999],[162536.35809999984,4458996.489700001],[162536.35809999984,4458990.489700001],[162530.35809999984,4458990.489700001],[162524.35809999984,4458990.489700001],[162519.45969999954,4458983.3881],[162500.35809999984,4458978.489700001],[162494.35809999984,4458978.489700001],[162494.35809999984,4458972.489700001],[162482.35809999984,4458972.489700001],[162482.35809999984,4458966.489700001],[162476.35809999984,4458966.489700001],[162474.29559999984,4458962.411599999],[162450.34250000026,4458950.5053],[162440.35809999984,4458948.489700001],[162420.99870000035,4458927.606899999],[162392.89719999954,4458935.8100000005],[162377.96750000026,4458978.4428],[162485.47530000005,4459035.3725000005],[162516.62370000035,4459056.794399999],[162571.67839999963,4459085.9506],[162599.24089999963,4459095.606899999],[162608.35809999984,4459098.489700001],[162613.65500000026,4459106.177200001],[162652.81900000013,4459132.0287999995],[162662.35809999984,4459134.489700001],[162668.12370000035,4459140.9350000005],[162689.19400000013,4459155.6537999995],[162743.85030000005,4459186.2162999995],[162812.03000000026,4459233.8178],[162839.52219999954,4459251.3256],[162857.19400000013,4459263.6537999995],[162875.52219999954,4459275.3256],[162893.19400000013,4459287.6537999995],[162911.52219999954,4459299.3256],[162938.03000000026,4459317.8178],[162965.52219999954,4459335.3256],[162992.03000000026,4459353.8178],[163036.28000000026,4459381.9662999995],[163045.72530000005,4459399.356899999],[163013.61589999963,4459424.2475000005],[162973.58469999954,4459433.552200001],[162959.52219999954,4459455.6537999995],[162941.52219999954,4459471.731899999],[162952.63150000013,4459475.5053],[163022.59250000026,4459471.3335],[163031.52219999954,4459479.3256],[163054.18620000035,4459504.661599999],[163093.16280000005,4459539.489700001],[163167.53000000026,4459624.3100000005],[163196.35809999984,4459644.489700001],[163203.71750000026,4459655.1303],[163228.56120000035,4459672.286599999],[163243.25650000013,4459693.5912999995],[163250.35809999984,4459698.489700001],[163250.35809999984,4459710.489700001],[163256.35809999984,4459710.489700001],[163240.56120000035,4459727.5287999995],[163182.38939999975,4459741.3803],[163158.34250000026,4459728.6537999995],[163169.47530000005,4459707.606899999],[163175.89719999954,4459693.989700001],[163175.03000000026,4459672.2162999995],[163121.56900000013,4459651.4037999995],[163095.95189999975,4459611.724099999],[163073.33469999954,4459623.677200001],[163041.97530000005,4459599.6303],[163009.13939999975,4459557.8881],[162959.24089999963,4459515.606899999],[162941.87370000035,4459488.677200001],[162912.76439999975,4459473.606899999],[162881.47530000005,4459497.606899999],[162863.24089999963,4459509.3725000005],[162839.47530000005,4459527.606899999],[162824.78000000026,4459534.544399999],[162794.42839999963,4459526.5756],[162731.47530000005,4459473.3725000005],[162689.24089999963,4459449.606899999],[162665.47530000005,4459431.3725000005],[162622.32689999975,4459407.0912999995],[162603.31900000013,4459386.5835],[162608.35809999984,4459362.489700001],[162608.35809999984,4459350.489700001],[162614.35809999984,4459350.489700001],[162614.35809999984,4459344.489700001],[162620.35809999984,4459344.489700001],[162620.35809999984,4459338.489700001],[162620.35809999984,4459332.489700001],[162624.03780000005,4459329.6537999995],[162635.73309999984,4459299.864700001],[162642.03780000005,4459277.294399999],[162658.16280000005,4459250.552200001],[162664.98309999984,4459204.4975000005],[162653.49870000035,4459175.106899999],[162626.35809999984,4459170.489700001],[162621.64719999954,4459161.161599999],[162608.35809999984,4459158.489700001],[162608.35809999984,4459152.489700001],[162602.35809999984,4459152.489700001],[162596.35809999984,4459152.489700001],[162586.28000000026,4459141.2162999995],[162560.96750000026,4459123.544399999],[162485.52219999954,4459089.3256],[162470.35809999984,4459086.489700001],[162470.35809999984,4459080.489700001],[162458.35809999984,4459080.489700001],[162458.35809999984,4459074.489700001],[162446.35809999984,4459074.489700001],[162446.35809999984,4459068.489700001],[162440.35809999984,4459068.489700001],[162429.81120000035,4459054.802200001],[162404.35809999984,4459050.489700001],[162404.35809999984,4459044.489700001],[162392.35809999984,4459044.489700001],[162392.35809999984,4459038.489700001],[162386.35809999984,4459038.489700001],[162380.35809999984,4459038.489700001],[162374.47530000005,4459019.4585],[162264.95189999975,4458959.739700001],[162215.10030000005,4458936.864700001],[162191.19400000013,4458921.6537999995],[162157.84250000026,4458898.3803],[162110.38150000013,4458885.6537999995],[162090.95189999975,4458897.6303],[162079.93620000035,4458933.3256],[162046.58469999954,4458921.4428],[161975.19400000013,4458891.6537999995],[161901.74089999963,4458858.349099999],[161870.35809999984,4458852.489700001]]]},{"type":"Polygon","coordinates":[[[163376.35809999984,4458948.489700001],[163384.23309999984,4458959.9037999995],[163426.81900000013,4458988.0287999995],[163436.35809999984,4458990.489700001],[163442.35809999984,4458990.489700001],[163449.81120000035,4459061.974099999],[163474.84250000026,4459090.0053],[163528.86589999963,4459138.2631],[163530.24870000035,4459161.3256],[163517.19400000013,4459167.3256],[163499.49870000035,4459179.677200001],[163483.16280000005,4459178.6928],[163451.19400000013,4459197.3256],[163444.77219999954,4459204.4975000005],[163421.19400000013,4459215.3256],[163414.39719999954,4459222.919399999],[163338.31900000013,4459256.0600000005],[163326.45969999954,4459269.3256],[163302.27219999954,4459262.224099999],[163271.19400000013,4459239.6537999995],[163247.52219999954,4459221.3256],[163225.95969999954,4459211.4350000005],[163175.19400000013,4459167.6537999995],[163161.03780000005,4459151.8100000005],[163145.19400000013,4459137.6537999995],[163133.87370000035,4459124.974099999],[163107.29559999984,4459112.786599999],[163061.49870000035,4459077.302200001],[163055.21750000026,4459077.677200001],[163013.52219999954,4459041.3256],[162984.29559999984,4459022.739700001],[162959.68620000035,4459000.731899999],[162953.19400000013,4458986.5756],[162916.16280000005,4458956.2006],[162893.19400000013,4458945.6537999995],[162881.52219999954,4458939.3256],[162869.19400000013,4458933.6537999995],[162806.68620000035,4458879.161599999],[162773.52219999954,4458858.0678],[162785.63939999975,4458830.271],[162801.41280000005,4458816.1850000005],[162821.54559999984,4458783.6303],[162820.67839999963,4458769.0756],[162863.52219999954,4458735.6537999995],[162872.85030000005,4458725.224099999],[162933.13150000013,4458672.6537999995],[162946.30339999963,4458687.396],[162965.52219999954,4458693.3256],[163025.56900000013,4458737.036599999],[163067.19400000013,4458759.6537999995],[163100.59250000026,4458769.9662999995],[163118.68620000035,4458786.161599999],[163127.19400000013,4458795.6537999995],[163139.52219999954,4458801.3256],[163147.86589999963,4458810.6537999995],[163196.85030000005,4458846.3256],[163233.20189999975,4458863.0131],[163282.58469999954,4458891.771],[163298.68620000035,4458906.161599999],[163307.19400000013,4458915.6537999995],[163319.52219999954,4458921.3256],[163331.19400000013,4458927.6537999995],[163349.68620000035,4458936.161599999],[163367.19400000013,4458945.6537999995],[163376.35809999984,4458948.489700001]]]},{"type":"Polygon","coordinates":[[[171002.35809999984,4458672.489700001],[171026.33469999954,4458676.9662999995],[171035.19400000013,4458705.6537999995],[171041.52219999954,4458717.3256],[171047.19400000013,4458729.6537999995],[171053.52219999954,4458741.3256],[171064.63150000013,4458765.536599999],[171089.52219999954,4458771.3256],[171124.16280000005,4458783.7475000005],[171232.06900000013,4458776.599099999],[171309.62370000035,4458784.0756],[171323.52219999954,4458771.6537999995],[171339.76429999992,4458753.489700001],[171389.52219999954,4458747.6537999995],[171439.30339999963,4458741.044399999],[171551.19400000013,4458748.052200001],[171544.84250000026,4458767.7631],[171479.35809999984,4458771.677200001],[171456.99870000035,4458770.3412999995],[171437.68620000035,4458780.8178],[171407.59250000026,4458794.646],[171407.00650000013,4458804.489700001],[171407.85030000005,4458818.7631],[171400.25650000013,4458839.927200001],[171402.53000000026,4458878.177200001],[171357.62370000035,4458880.849099999],[171310.79559999984,4458868.3100000005],[171275.19400000013,4458861.6537999995],[171254.07689999975,4458850.1928],[171230.35809999984,4458848.7631],[171215.21750000026,4458849.677200001],[171203.52219999954,4458843.3256],[171185.19400000013,4458837.6537999995],[171178.98309999984,4458830.7162999995],[171124.84250000026,4458814.0053],[171081.45969999954,4458790.427200001],[171041.45189999975,4458783.302200001],[171023.35809999984,4458784.3803],[170910.53000000026,4458777.6537999995],[170887.46750000026,4458791.5756],[170879.33469999954,4458826.474099999],[170872.46750000026,4458789.6537999995],[170849.52219999954,4458797.177200001],[170855.19400000013,4458831.6537999995],[170864.66280000005,4458849.114700001],[170846.14719999954,4458850.2162999995],[170723.63939999975,4458842.5756],[170702.35809999984,4458843.8412999995],[170693.35809999984,4458843.302200001],[170617.95969999954,4458847.802200001],[170609.19400000013,4458831.6537999995],[170600.31120000035,4458802.919399999],[170561.35809999984,4458800.599099999],[170526.99870000035,4458802.6381],[170513.49870000035,4458795.302200001],[170504.28780000005,4458795.8412999995],[170477.52219999954,4458757.544399999],[170491.86589999963,4458731.646],[170511.36589999963,4458721.052200001],[170593.11589999963,4458725.927200001],[170604.83469999954,4458688.0053],[170645.52219999954,4458681.6537999995],[170648.35809999984,4458678.489700001],[170688.34250000026,4458676.474099999],[170696.35809999984,4458672.489700001],[170696.35809999984,4458678.489700001],[170702.35809999984,4458678.489700001],[170747.68620000035,4458675.8178],[170774.35809999984,4458672.489700001],[170774.35809999984,4458678.489700001],[170816.35809999984,4458678.489700001],[170828.35809999984,4458678.489700001],[170864.35809999984,4458678.489700001],[170921.73309999984,4458675.864700001],[170942.35809999984,4458672.489700001],[170945.35809999984,4458680.177200001],[170948.35809999984,4458672.489700001],[171002.35809999984,4458672.489700001]]]},{"type":"Polygon","coordinates":[[[163376.35809999984,4458948.489700001],[163357.88939999975,4458927.044399999],[163307.12370000035,4458891.724099999],[163283.59250000026,4458873.2553],[163241.12370000035,4458843.724099999],[163196.68620000035,4458804.724099999],[163163.12370000035,4458783.724099999],[163120.65500000026,4458750.4428],[163097.12370000035,4458735.724099999],[163055.24089999963,4458699.8412999995],[163045.39719999954,4458688.4037999995],[163025.12370000035,4458675.724099999],[163019.59250000026,4458662.6225000005],[163082.14719999954,4458648.396],[163109.12370000035,4458627.2553],[163124.14719999954,4458621.724099999],[163175.47530000005,4458651.911599999],[163226.03000000026,4458696.2553],[163259.59250000026,4458717.2553],[163292.75650000013,4458744.7006],[163325.59250000026,4458765.2553],[163369.91280000005,4458801.9350000005],[163397.59250000026,4458819.2553],[163421.12370000035,4458837.724099999],[163463.59250000026,4458867.2553],[163494.01439999975,4458892.427200001],[163492.91280000005,4458905.9506],[163451.96750000026,4458941.224099999],[163416.22530000005,4458938.364700001],[163409.59250000026,4458943.8725000005],[163427.59250000026,4458969.2553],[163430.35809999984,4458978.489700001],[163398.38939999975,4458954.6303],[163376.35809999984,4458948.489700001]]]},{"type":"Polygon","coordinates":[[[162608.35809999984,4459614.489700001],[162613.58469999954,4459621.2631],[162623.73309999984,4459629.114700001],[162634.20969999954,4459642.6381],[162649.79559999984,4459654.6850000005],[162639.27219999954,4459681.427200001],[162608.00650000013,4459703.1537999995],[162597.13150000013,4459717.2631],[162573.43620000035,4459735.5678],[162557.73309999984,4459755.864700001],[162544.20969999954,4459766.3412999995],[162533.73309999984,4459779.864700001],[162512.31120000035,4459796.411599999],[162461.82689999975,4459804.989700001],[162447.74089999963,4459786.731899999],[162414.71750000026,4459773.231899999],[162392.35809999984,4459770.489700001],[162392.35809999984,4459764.489700001],[162386.35809999984,4459764.489700001],[162376.81900000013,4459762.0287999995],[162362.35809999984,4459752.489700001],[162362.35809999984,4459746.489700001],[162356.35809999984,4459746.489700001],[162350.35809999984,4459746.489700001],[162350.35809999984,4459740.489700001],[162344.35809999984,4459740.489700001],[162338.35809999984,4459740.489700001],[162335.56900000013,4459730.7162999995],[162297.17839999963,4459708.146],[162284.35809999984,4459704.489700001],[162278.35809999984,4459704.489700001],[162278.35809999984,4459698.489700001],[162272.35809999984,4459698.489700001],[162270.34250000026,4459694.5053],[162250.37370000035,4459684.474099999],[162234.34250000026,4459670.5053],[162212.35809999984,4459668.489700001],[162212.35809999984,4459662.489700001],[162206.35809999984,4459662.489700001],[162206.35809999984,4459656.489700001],[162200.35809999984,4459656.489700001],[162190.37370000035,4459654.474099999],[162174.34250000026,4459646.5053],[162164.35809999984,4459644.489700001],[162129.03780000005,4459591.6850000005],[162107.19400000013,4459586.786599999],[162098.35809999984,4459590.489700001],[162092.35809999984,4459590.489700001],[162082.28000000026,4459577.411599999],[162042.85809999984,4459565.927200001],[162020.17059999984,4459562.5756],[161996.35809999984,4459566.489700001],[161988.08469999954,4459557.5835],[161969.24089999963,4459551.606899999],[161933.63939999975,4459539.114700001],[161915.05339999963,4459539.864700001],[161881.65500000026,4459522.169399999],[161816.35809999984,4459518.489700001],[161810.35809999984,4459518.489700001],[161804.33469999954,4459511.5053],[161748.85809999984,4459491.1381],[161735.54559999984,4459492.1928],[161729.59250000026,4459485.2553],[161699.12370000035,4459479.724099999],[161669.59250000026,4459473.2553],[161623.16280000005,4459466.2006],[161582.87370000035,4459443.724099999],[161567.12370000035,4459461.2553],[161558.80339999963,4459497.9350000005],[161543.59250000026,4459525.2162999995],[161551.93620000035,4459565.0131],[161571.08469999954,4459587.2553],[161585.59250000026,4459581.724099999],[161593.23309999984,4459572.8412999995],[161617.28000000026,4459586.2475000005],[161703.74089999963,4459594.1928],[161735.12370000035,4459611.724099999],[161765.59250000026,4459617.2553],[161808.34250000026,4459635.2787999995],[161873.59250000026,4459641.2553],[161907.97530000005,4459655.739700001],[161942.28780000005,4459666.0756],[161980.18620000035,4459687.2162999995],[162014.35809999984,4459689.981899999],[162024.74089999963,4459689.1381],[162075.24870000035,4459695.7475000005],[162101.12370000035,4459718.0600000005],[162083.35809999984,4459748.294399999],[162062.35809999984,4459749.981899999],[162041.35809999984,4459748.294399999],[162014.42839999963,4459750.4506],[161969.12370000035,4459731.724099999],[161948.05339999963,4459719.9585],[161939.35809999984,4459719.2553],[161923.06900000013,4459720.5678],[161915.12370000035,4459713.724099999],[161906.89719999954,4459704.161599999],[161849.42839999963,4459695.231899999],[161828.31120000035,4459696.9428],[161777.59250000026,4459677.2553],[161741.12370000035,4459671.724099999],[161717.19400000013,4459654.731899999],[161624.87370000035,4459647.021],[161599.63150000013,4459617.724099999],[161578.32689999975,4459631.646],[161580.55339999963,4459659.489700001],[161576.40500000026,4459711.356899999],[161591.12370000035,4459724.0600000005],[161566.44400000013,4459743.2553],[161522.19400000013,4459736.3178],[161455.74870000035,4459721.8100000005],[161447.10030000005,4459737.3256],[161447.61589999963,4459743.6303],[161432.21750000026,4459780.1928],[161415.95189999975,4459824.489700001],[161420.35809999984,4459836.489700001],[161412.64719999954,4459842.021],[161405.85030000005,4459876.356899999],[161437.72530000005,4459898.1537999995],[161471.85030000005,4459904.9975000005],[161495.68620000035,4459912.239700001],[161498.35809999984,4459908.489700001],[161504.35809999984,4459908.489700001],[161504.35809999984,4459914.489700001],[161510.35809999984,4459914.489700001],[161567.89719999954,4459928.9506],[161570.35809999984,4459932.489700001],[161574.53000000026,4459940.739700001],[161591.35809999984,4459948.9662999995],[161600.35809999984,4459944.489700001],[161600.35809999984,4459950.489700001],[161618.35809999984,4459950.489700001],[161618.35809999984,4459956.489700001],[161636.35809999984,4459956.489700001],[161639.24089999963,4459959.606899999],[161663.80339999963,4459975.4506],[161663.24089999963,4459989.489700001],[161663.68620000035,4460000.9037999995],[161657.47530000005,4460007.606899999],[161615.47530000005,4460020.896],[161621.24089999963,4460025.606899999],[161649.90500000026,4460032.427200001],[161662.04559999984,4460070.7475000005],[161736.78780000005,4460088.536599999],[161765.24089999963,4460103.606899999],[161794.86589999963,4460112.981899999],[161783.03000000026,4460158.1928],[161783.66280000005,4460174.4585],[161766.50650000013,4460210.856899999],[161741.35809999984,4460211.8412999995],[161723.35809999984,4460211.1381],[161693.35809999984,4460212.3335],[161637.99870000035,4460210.1303],[161597.28780000005,4460220.794399999],[161579.47530000005,4460211.3725000005],[161541.34250000026,4460202.302200001],[161526.62370000035,4460171.0835],[161513.89719999954,4460157.349099999],[161507.26439999975,4460157.606899999],[161495.47530000005,4460151.3725000005],[161437.51439999975,4460128.802200001],[161423.45189999975,4460121.3725000005],[161411.61589999963,4460121.8412999995],[161372.24089999963,4460097.724099999],[161351.21750000026,4460096.8803],[161351.47530000005,4460103.5835],[161339.00650000013,4460127.1381],[161310.62370000035,4460187.3256],[161281.37370000035,4460188.474099999],[161249.45189999975,4460175.3725000005],[161232.20189999975,4460176.052200001],[161225.24089999963,4460169.606899999],[161216.33469999954,4460159.974099999],[161160.38939999975,4460145.3256],[161147.94400000013,4460145.8178],[161131.88939999975,4460130.9585],[161117.47530000005,4460115.3725000005],[161105.75650000013,4460104.521],[161104.58469999954,4460075.224099999],[161117.17059999984,4460039.364700001],[161117.59250000026,4460028.489700001],[161117.12370000035,4460016.489700001],[161141.24089999963,4459965.3725000005],[161152.72530000005,4459954.7553],[161153.47530000005,4459935.489700001],[161153.24089999963,4459929.396],[161160.22530000005,4459916.177200001],[161174.24089999963,4459871.8803],[161197.37370000035,4459812.489700001],[161233.13939999975,4459801.169399999],[161243.47530000005,4459791.606899999],[161249.24089999963,4459779.3725000005],[161255.47530000005,4459773.606899999],[161261.24089999963,4459761.3725000005],[161267.47530000005,4459749.5835],[161267.07689999975,4459739.294399999],[161273.52219999954,4459712.177200001],[161297.75650000013,4459666.4037999995],[161297.05339999963,4459649.0600000005],[161309.24089999963,4459605.3725000005],[161327.00650000013,4459579.5678],[161333.40500000026,4459526.036599999],[161345.47530000005,4459491.606899999],[161352.45969999954,4459433.177200001],[161375.47530000005,4459395.606899999],[161385.48309999984,4459353.606899999],[161441.24089999963,4459376.599099999],[161435.47530000005,4459395.606899999],[161417.47530000005,4459421.7631],[161451.67059999984,4459453.731899999],[161490.22530000005,4459461.8178],[161522.35809999984,4459460.5287999995],[161555.40500000026,4459461.8412999995],[161567.40500000026,4459423.896],[161597.24089999963,4459396.2631],[161591.47530000005,4459377.3725000005],[161579.47530000005,4459343.1303],[161585.24089999963,4459275.3725000005],[161594.33469999954,4459205.599099999],[161556.06120000035,4459185.349099999],[161543.47530000005,4459185.8412999995],[161531.05339999963,4459172.4585],[161486.26439999975,4459154.0600000005],[161453.24089999963,4459143.606899999],[161425.74870000035,4459124.6928],[161393.47530000005,4459113.3725000005],[161384.35809999984,4459110.489700001],[161384.35809999984,4459104.489700001],[161372.35809999984,4459104.489700001],[161364.38939999975,4459100.4585],[161360.35809999984,4459092.489700001],[161366.87370000035,4459067.1303],[161383.25650000013,4459043.3881],[161390.35809999984,4459038.489700001],[161402.35809999984,4459038.489700001],[161402.35809999984,4459044.489700001],[161408.35809999984,4459044.489700001],[161414.35809999984,4459044.489700001],[161419.72530000005,4459051.1928],[161453.92059999984,4459078.544399999],[161465.59250000026,4459077.0912999995],[161485.58469999954,4459091.6928],[161513.03000000026,4459107.8178],[161531.68620000035,4459113.161599999],[161550.64719999954,4459127.0131],[161568.48309999984,4459119.489700001],[161561.68620000035,4459065.161599999],[161558.35809999984,4459062.489700001],[161554.60809999984,4459032.536599999],[161528.35809999984,4459014.489700001],[161524.44400000013,4458991.3803],[161489.73309999984,4458969.114700001],[161446.98309999984,4458957.864700001],[161435.73309999984,4458951.114700001],[161420.35809999984,4458948.489700001],[161417.59250000026,4458945.2553],[161399.80339999963,4458929.9506],[161398.39719999954,4458912.606899999],[161405.59250000026,4458879.724099999],[161411.12370000035,4458807.2553],[161423.61589999963,4458765.606899999],[161422.70189999975,4458754.2162999995],[161459.63939999975,4458675.5600000005],[161453.05339999963,4458645.3725000005],[161465.59250000026,4458627.724099999],[161472.22530000005,4458612.8178],[161508.78780000005,4458570.396],[161530.04559999984,4458558.5131],[161547.78780000005,4458579.114700001],[161573.73309999984,4458581.2006],[161570.75650000013,4458544.052200001],[161579.12370000035,4458525.2553],[161589.95189999975,4458515.9506],[161592.06120000035,4458489.677200001],[161573.59250000026,4458473.7631],[161580.50650000013,4458470.646],[161612.35809999984,4458474.489700001],[161618.35809999984,4458474.489700001],[161618.35809999984,4458480.489700001],[161624.35809999984,4458480.489700001],[161630.35809999984,4458480.489700001],[161630.35809999984,4458486.489700001],[161636.35809999984,4458486.489700001],[161672.35809999984,4458504.489700001],[161672.35809999984,4458510.489700001],[161678.35809999984,4458510.489700001],[161678.35809999984,4458522.489700001],[161690.35809999984,4458522.489700001],[161690.35809999984,4458534.489700001],[161714.35809999984,4458534.489700001],[161714.35809999984,4458540.489700001],[161726.35809999984,4458540.489700001],[161732.42839999963,4458552.489700001],[161760.34250000026,4458566.5053],[161785.18620000035,4458589.0287999995],[161798.35809999984,4458582.489700001],[161808.64719999954,4458597.3725000005],[161828.35809999984,4458600.489700001],[161834.35809999984,4458600.489700001],[161834.35809999984,4458606.489700001],[161840.35809999984,4458606.489700001],[161840.35809999984,4458612.489700001],[161846.35809999984,4458612.489700001],[161852.35809999984,4458612.489700001],[161852.35809999984,4458618.489700001],[161858.35809999984,4458618.489700001],[161876.00650000013,4458641.3412999995],[161888.35809999984,4458636.489700001],[161894.35809999984,4458636.489700001],[161894.35809999984,4458642.489700001],[161900.35809999984,4458642.489700001],[161900.35809999984,4458648.489700001],[161912.35809999984,4458648.489700001],[161912.35809999984,4458654.489700001],[161918.35809999984,4458654.489700001],[161924.35809999984,4458654.489700001],[161924.35809999984,4458660.489700001],[161930.35809999984,4458660.489700001],[161936.35809999984,4458660.489700001],[161936.35809999984,4458666.489700001],[161942.35809999984,4458666.489700001],[161942.35809999984,4458672.489700001],[161948.35809999984,4458672.489700001],[161954.35809999984,4458672.489700001],[161954.35809999984,4458678.489700001],[161960.35809999984,4458678.489700001],[161964.88150000013,4458696.1381],[161978.35809999984,4458690.489700001],[161978.35809999984,4458696.489700001],[161990.35809999984,4458696.489700001],[161999.00650000013,4458709.0053],[162020.35809999984,4458714.489700001],[162020.35809999984,4458720.489700001],[162032.35809999984,4458720.489700001],[162037.06900000013,4458729.8178],[162050.35809999984,4458732.489700001],[162056.35809999984,4458732.489700001],[162060.88150000013,4458750.1381],[162074.35809999984,4458744.489700001],[162074.35809999984,4458750.489700001],[162080.35809999984,4458750.489700001],[162095.68620000035,4458771.161599999],[162101.03000000026,4458801.8178],[162107.68620000035,4458819.161599999],[162113.03000000026,4458846.7475000005],[162090.31900000013,4458864.9350000005],[162077.07689999975,4458848.411599999],[162065.07689999975,4458849.8881],[162058.91280000005,4458842.177200001],[162011.03000000026,4458831.8178],[161981.54559999984,4458819.0912999995],[161972.35809999984,4458820.239700001],[161954.59250000026,4458818.036599999],[161912.87370000035,4458793.4975000005],[161879.03000000026,4458783.8178],[161862.55339999963,4458763.239700001],[161819.03000000026,4458753.8178],[161807.68620000035,4458747.161599999],[161758.79559999984,4458740.036599999],[161735.68620000035,4458723.161599999],[161715.10809999984,4458710.646],[161699.63939999975,4458712.5678],[161680.02219999954,4458688.099099999],[161651.03000000026,4458681.8178],[161621.68620000035,4458669.161599999],[161560.37370000035,4458658.474099999],[161561.73309999984,4458669.5835],[161550.62370000035,4458718.4975000005],[161556.48309999984,4458765.489700001],[161543.03000000026,4458771.161599999],[161537.68620000035,4458788.294399999],[161561.68620000035,4458795.161599999],[161582.07689999975,4458810.044399999],[161611.32689999975,4458822.3725000005],[161633.35809999984,4458809.4350000005],[161651.03000000026,4458819.8178],[161695.84250000026,4458826.3335],[161705.63939999975,4458838.5678],[161717.59250000026,4458837.0912999995],[161741.03000000026,4458855.8178],[161765.00650000013,4458861.161599999],[161800.18620000035,4458833.0131],[161855.03000000026,4458849.8178],[161870.35809999984,4458852.489700001],[161889.43620000035,4458879.8881],[161901.36589999963,4458878.927200001],[161925.13150000013,4458889.521],[161951.38150000013,4458908.1537999995],[161999.59250000026,4458921.2553],[162017.12370000035,4458927.724099999],[162037.44400000013,4458933.8178],[162074.14719999954,4458959.8335],[162095.28780000005,4458941.6225000005],[162101.99089999963,4458897.724099999],[162125.96750000026,4458905.271],[162149.12370000035,4458921.724099999],[162173.59250000026,4458927.2553],[162193.23309999984,4458938.224099999],[162227.59250000026,4458951.2553],[162251.12370000035,4458969.724099999],[162281.87370000035,4458978.9585],[162311.61589999963,4459000.052200001],[162359.12370000035,4459029.724099999],[162380.35809999984,4459038.489700001],[162386.35809999984,4459038.489700001],[162386.35809999984,4459044.489700001],[162392.35809999984,4459044.489700001],[162392.35809999984,4459050.489700001],[162404.35809999984,4459050.489700001],[162407.33469999954,4459054.356899999],[162431.24089999963,4459072.0756],[162440.35809999984,4459068.489700001],[162440.35809999984,4459074.489700001],[162446.35809999984,4459074.489700001],[162446.35809999984,4459080.489700001],[162458.35809999984,4459080.489700001],[162458.35809999984,4459086.489700001],[162470.35809999984,4459086.489700001],[162484.79559999984,4459104.536599999],[162521.03000000026,4459125.8178],[162533.68620000035,4459131.161599999],[162545.03000000026,4459137.8178],[162569.68620000035,4459143.161599999],[162587.03000000026,4459149.8178],[162596.35809999984,4459152.489700001],[162602.35809999984,4459152.489700001],[162602.35809999984,4459158.489700001],[162608.35809999984,4459158.489700001],[162608.35809999984,4459170.489700001],[162626.35809999984,4459170.489700001],[162649.86589999963,4459200.302200001],[162647.07689999975,4459247.3412999995],[162629.19400000013,4459263.3256],[162622.91280000005,4459270.356899999],[162603.36589999963,4459269.1850000005],[162580.51439999975,4459256.7631],[162509.19400000013,4459245.6537999995],[162482.87370000035,4459238.599099999],[162449.52219999954,4459215.3256],[162435.01439999975,4459208.669399999],[162419.52219999954,4459191.3256],[162408.50650000013,4459181.481899999],[162383.19400000013,4459173.6537999995],[162361.74870000035,4459162.0053],[162329.10030000005,4459151.927200001],[162317.52219999954,4459135.731899999],[162329.52219999954,4459113.6537999995],[162335.19400000013,4459095.3256],[162341.54559999984,4459077.606899999],[162341.07689999975,4459069.8256],[162328.53780000005,4459059.6537999995],[162315.06120000035,4459089.021],[162293.52219999954,4459077.3256],[162284.35809999984,4459074.489700001],[162272.35809999984,4459068.489700001],[162272.35809999984,4459062.489700001],[162266.35809999984,4459062.489700001],[162242.35809999984,4459056.489700001],[162238.93620000035,4459044.2085],[162214.98309999984,4459029.864700001],[162209.52219999954,4459022.8100000005],[162179.73309999984,4459011.114700001],[162170.35809999984,4459008.489700001],[162170.35809999984,4459002.489700001],[162158.35809999984,4459002.489700001],[162158.35809999984,4458996.489700001],[162152.35809999984,4458996.489700001],[162146.35809999984,4458996.489700001],[162146.35809999984,4458990.489700001],[162140.35809999984,4458990.489700001],[162134.35809999984,4458990.489700001],[162134.35809999984,4458984.489700001],[162128.35809999984,4458984.489700001],[162116.35809999984,4458984.489700001],[162105.95189999975,4458969.981899999],[162072.81120000035,4458977.177200001],[162080.35809999984,4459008.489700001],[162080.35809999984,4459020.489700001],[162074.03000000026,4459014.8178],[162064.04559999984,4459003.661599999],[162027.15500000026,4458986.7162999995],[161979.27219999954,4458989.5756],[161939.52219999954,4458975.3256],[161917.35030000005,4458968.481899999],[161891.49870000035,4458970.0287999995],[161881.44400000013,4458958.7553],[161821.58469999954,4458944.8100000005],[161801.35809999984,4458946.0287999995],[161787.50650000013,4458945.2085],[161770.86589999963,4458926.599099999],[161772.60030000005,4458897.7475000005],[161757.60030000005,4458891.6537999995],[161738.68620000035,4458912.8178],[161718.27219999954,4458931.0756],[161711.52219999954,4458944.9975000005],[161775.50650000013,4458952.4975000005],[161784.97530000005,4459003.286599999],[161819.52219999954,4459011.3256],[161837.19400000013,4459023.6537999995],[161879.52219999954,4459029.3256],[161891.82689999975,4459036.0053],[161903.47530000005,4459035.302200001],[161930.63939999975,4459045.052200001],[162008.35809999984,4459040.411599999],[162035.35809999984,4459042.0287999995],[162065.38150000013,4459040.2475000005],[162072.36589999963,4459092.5131],[162060.31900000013,4459137.489700001],[162071.52219999954,4459179.3256],[162077.94400000013,4459213.7553],[162131.12370000035,4459238.1537999995],[162162.27219999954,4459273.0287999995],[162223.98309999984,4459282.6381],[162240.50650000013,4459301.1303],[162238.44400000013,4459335.6303],[162279.01439999975,4459371.8881],[162227.19400000013,4459431.3256],[162215.52219999954,4459461.6537999995],[162201.69400000013,4459494.8881],[162206.24089999963,4459503.3256],[162227.19400000013,4459467.3256],[162245.54559999984,4459437.6303],[162245.17059999984,4459431.349099999],[162255.03780000005,4459422.536599999],[162263.19400000013,4459431.6537999995],[162287.52219999954,4459437.3256],[162305.19400000013,4459449.6537999995],[162362.12370000035,4459485.864700001],[162371.49870000035,4459485.302200001],[162389.19400000013,4459497.6537999995],[162410.35809999984,4459500.489700001],[162413.12370000035,4459503.724099999],[162435.17839999963,4459517.5287999995],[162449.12370000035,4459533.724099999],[162476.80339999963,4459542.044399999],[162489.41280000005,4459556.669399999],[162539.12370000035,4459587.724099999],[162557.59250000026,4459593.2553],[162587.12370000035,4459605.724099999],[162596.35809999984,4459608.489700001],[162596.35809999984,4459614.489700001],[162608.35809999984,4459614.489700001]],[[161612.35809999984,4460028.489700001],[161597.68620000035,4460032.6850000005],[161608.25650000013,4460042.856899999],[161612.35809999984,4460028.489700001]]]},{"type":"Polygon","coordinates":[[[171674.35809999984,4458144.489700001],[171706.37370000035,4458148.4975000005],[171730.51439999975,4458167.8335],[171737.03000000026,4458219.8178],[171747.03780000005,4458245.8803],[171749.73309999984,4458267.489700001],[171744.71750000026,4458307.731899999],[171761.21750000026,4458352.356899999],[171805.18620000035,4458369.2553],[171848.26439999975,4458375.536599999],[171863.03000000026,4458399.8178],[171869.68620000035,4458405.161599999],[171884.17059999984,4458428.9975000005],[171896.35809999984,4458432.489700001],[171896.35809999984,4458444.489700001],[171902.35809999984,4458444.489700001],[171905.12370000035,4458465.724099999],[171912.78780000005,4458486.5835],[171911.12370000035,4458507.489700001],[171773.12370000035,4458513.2553],[171761.59250000026,4458519.724099999],[171739.49089999963,4458526.356899999],[171705.34250000026,4458517.0053],[171674.17059999984,4458492.606899999],[171617.12370000035,4458459.724099999],[171611.59250000026,4458453.2553],[171584.52219999954,4458447.114700001],[171569.59250000026,4458423.2553],[171555.81120000035,4458403.8256],[171557.89719999954,4458377.8100000005],[171593.59250000026,4458369.724099999],[171596.35809999984,4458366.489700001],[171685.60809999984,4458375.2553],[171707.59250000026,4458369.724099999],[171710.35809999984,4458366.489700001],[171716.26439999975,4458362.856899999],[171708.06120000035,4458338.786599999],[171704.35809999984,4458336.489700001],[171701.03000000026,4458309.8178],[171698.35809999984,4458276.489700001],[171702.85809999984,4458273.021],[171691.95969999954,4458208.802200001],[171686.35809999984,4458204.489700001],[171674.35809999984,4458150.489700001],[171674.35809999984,4458144.489700001]]]},{"type":"Polygon","coordinates":[[[162668.35809999984,4458048.489700001],[162665.52219999954,4458045.3256],[162659.05339999963,4458014.974099999],[162643.67839999963,4458015.8881],[162635.52219999954,4457995.544399999],[162672.97530000005,4457997.771],[162707.19400000013,4458021.6537999995],[162730.77219999954,4458032.481899999],[162737.21750000026,4458039.677200001],[162746.35809999984,4458039.1381],[162757.88939999975,4458039.8178],[162780.41280000005,4458065.036599999],[162839.52219999954,4458081.3256],[162865.32689999975,4458095.3412999995],[162910.28000000026,4458092.669399999],[162917.19400000013,4458129.6537999995],[162947.52219999954,4458135.3256],[162985.67839999963,4458149.0131],[162998.35809999984,4458163.2162999995],[163007.21750000026,4458153.302200001],[163013.35809999984,4458153.677200001],[163021.51439999975,4458153.1850000005],[163044.50650000013,4458121.521],[163087.67839999963,4458137.0131],[163097.21750000026,4458147.677200001],[163103.49870000035,4458147.302200001],[163121.19400000013,4458159.6537999995],[163143.45969999954,4458169.896],[163174.95969999954,4458191.8803],[163205.52219999954,4458201.3256],[163226.96750000026,4458212.974099999],[163247.52219999954,4458219.3256],[163300.67839999963,4458239.7631],[163354.28000000026,4458277.2162999995],[163370.63939999975,4458295.521],[163355.19400000013,4458309.3256],[163345.25650000013,4458330.9585],[163288.86589999963,4458394.427200001],[163289.73309999984,4458408.771],[163270.49089999963,4458436.3335],[163238.61589999963,4458434.4350000005],[163205.52219999954,4458411.3256],[163190.35809999984,4458408.489700001],[163190.35809999984,4458402.489700001],[163178.35809999984,4458402.489700001],[163172.35809999984,4458402.489700001],[163172.35809999984,4458396.489700001],[163166.35809999984,4458396.489700001],[163119.90500000026,4458346.356899999],[163112.35809999984,4458354.489700001],[163106.35809999984,4458354.489700001],[163106.35809999984,4458348.489700001],[163106.35809999984,4458342.489700001],[163094.35809999984,4458342.489700001],[163094.35809999984,4458336.489700001],[163082.35809999984,4458336.489700001],[163073.70969999954,4458323.974099999],[163052.35809999984,4458318.489700001],[163040.35809999984,4458312.489700001],[163040.35809999984,4458306.489700001],[163034.35809999984,4458306.489700001],[163029.64719999954,4458297.161599999],[163016.35809999984,4458294.489700001],[163016.35809999984,4458288.489700001],[163004.35809999984,4458288.489700001],[163004.35809999984,4458282.489700001],[162998.35809999984,4458282.489700001],[162998.35809999984,4458276.489700001],[162992.35809999984,4458276.489700001],[162966.71750000026,4458244.474099999],[162929.75650000013,4458230.271],[162926.35809999984,4458234.489700001],[162920.35809999984,4458234.489700001],[162920.35809999984,4458228.489700001],[162911.54559999984,4458212.739700001],[162880.81900000013,4458189.9585],[162860.35809999984,4458186.489700001],[162860.35809999984,4458180.489700001],[162848.35809999984,4458180.489700001],[162848.35809999984,4458174.489700001],[162842.35809999984,4458174.489700001],[162842.35809999984,4458168.489700001],[162836.35809999984,4458168.489700001],[162830.35809999984,4458168.489700001],[162830.35809999984,4458162.489700001],[162824.35809999984,4458162.489700001],[162812.35809999984,4458156.489700001],[162812.35809999984,4458150.489700001],[162806.35809999984,4458150.489700001],[162806.35809999984,4458144.489700001],[162800.35809999984,4458144.489700001],[162800.35809999984,4458138.489700001],[162794.35809999984,4458138.489700001],[162781.98309999984,4458120.5600000005],[162758.35809999984,4458114.489700001],[162758.35809999984,4458108.489700001],[162752.35809999984,4458108.489700001],[162752.35809999984,4458102.489700001],[162740.35809999984,4458102.489700001],[162736.74870000035,4458088.427200001],[162718.81900000013,4458076.0287999995],[162712.74870000035,4458067.2631],[162686.35809999984,4458060.489700001],[162680.35809999984,4458060.489700001],[162680.35809999984,4458054.489700001],[162674.35809999984,4458054.489700001],[162668.35809999984,4458054.489700001],[162668.35809999984,4458048.489700001]]]},{"type":"Polygon","coordinates":[[[171500.35809999984,4458192.489700001],[171510.90500000026,4458209.5756],[171521.94400000013,4458282.0678],[171512.82689999975,4458321.2787999995],[171462.57689999975,4458303.231899999],[171455.24089999963,4458303.677200001],[171437.52219999954,4458297.3256],[171395.19400000013,4458291.6537999995],[171372.36589999963,4458279.2553],[171362.05339999963,4458279.864700001],[171305.19400000013,4458267.6537999995],[171287.47530000005,4458261.302200001],[171280.51439999975,4458261.724099999],[171237.78780000005,4458236.8335],[171240.06120000035,4458198.5131],[171233.10030000005,4458175.9428],[171201.76439999975,4458164.6928],[171172.35030000005,4458166.4506],[171143.19400000013,4458159.6537999995],[171092.78000000026,4458140.271],[171037.77219999954,4458127.474099999],[171029.19400000013,4458111.6537999995],[171021.85809999984,4458087.8881],[170975.19400000013,4458081.6537999995],[170957.52219999954,4458075.3256],[170939.19400000013,4458069.6537999995],[170910.38939999975,4458059.3178],[170861.19400000013,4458051.6537999995],[170843.52219999954,4458045.3256],[170798.03000000026,4458036.8178],[170771.52219999954,4458027.3256],[170753.19400000013,4458021.6537999995],[170735.52219999954,4458015.3256],[170669.52219999954,4458008.4350000005],[170676.97530000005,4457985.9350000005],[170687.45189999975,4457985.302200001],[170702.35809999984,4457988.489700001],[170708.35809999984,4457988.489700001],[170708.35809999984,4457994.489700001],[170714.35809999984,4457994.489700001],[170726.35809999984,4457994.489700001],[170733.03780000005,4458002.8100000005],[170762.35809999984,4458006.489700001],[170764.74870000035,4458010.3803],[170818.65500000026,4458028.1928],[170846.35809999984,4458030.489700001],[170876.35809999984,4458030.489700001],[170876.35809999984,4458036.489700001],[170882.35809999984,4458036.489700001],[170894.35809999984,4458036.489700001],[170894.35809999984,4458042.489700001],[170900.35809999984,4458042.489700001],[170918.35809999984,4458042.489700001],[170923.25650000013,4458052.1928],[170948.35809999984,4458054.489700001],[170954.35809999984,4458054.489700001],[170954.35809999984,4458060.489700001],[170972.35809999984,4458060.489700001],[170977.88939999975,4458068.2006],[171016.86589999963,4458075.981899999],[171044.35809999984,4458078.489700001],[171068.35809999984,4458078.489700001],[171068.35809999984,4458084.489700001],[171080.35809999984,4458084.489700001],[171086.35809999984,4458084.489700001],[171093.99870000035,4458098.4350000005],[171098.35809999984,4458090.489700001],[171110.35809999984,4458090.489700001],[171110.35809999984,4458096.489700001],[171116.35809999984,4458096.489700001],[171122.35809999984,4458096.489700001],[171122.35809999984,4458102.489700001],[171140.35809999984,4458102.489700001],[171146.35809999984,4458102.489700001],[171146.35809999984,4458108.489700001],[171170.35809999984,4458108.489700001],[171170.35809999984,4458114.489700001],[171188.35809999984,4458114.489700001],[171206.35809999984,4458114.489700001],[171217.77219999954,4458128.739700001],[171224.35809999984,4458120.489700001],[171232.37370000035,4458124.474099999],[171260.35809999984,4458126.489700001],[171260.35809999984,4458132.489700001],[171266.35809999984,4458132.489700001],[171272.35809999984,4458132.489700001],[171272.35809999984,4458138.489700001],[171290.35809999984,4458138.489700001],[171296.35809999984,4458138.489700001],[171301.25650000013,4458148.1928],[171326.35809999984,4458150.489700001],[171332.35809999984,4458150.489700001],[171335.19400000013,4458154.169399999],[171365.26439999975,4458165.981899999],[171380.35809999984,4458162.489700001],[171386.35809999984,4458162.489700001],[171386.35809999984,4458168.489700001],[171416.35809999984,4458168.489700001],[171436.98309999984,4458171.864700001],[171464.35809999984,4458174.489700001],[171464.35809999984,4458180.489700001],[171470.35809999984,4458180.489700001],[171476.35809999984,4458180.489700001],[171476.35809999984,4458186.489700001],[171482.35809999984,4458186.489700001],[171494.35809999984,4458186.489700001],[171494.35809999984,4458192.489700001],[171500.35809999984,4458192.489700001]]]},{"type":"Polygon","coordinates":[[[162356.35809999984,4458276.489700001],[162352.09250000026,4458299.8100000005],[162341.12370000035,4458309.2553],[162335.59250000026,4458321.724099999],[162313.25650000013,4458350.224099999],[162303.17839999963,4458383.669399999],[162255.83469999954,4458436.7085],[162244.49089999963,4458462.161599999],[162231.92839999963,4458471.2553],[162221.59250000026,4458459.2553],[162212.03000000026,4458451.0287999995],[162191.12370000035,4458441.724099999],[162170.35809999984,4458430.1225000005],[162149.21750000026,4458441.911599999],[162138.03780000005,4458416.8100000005],[162125.12370000035,4458405.724099999],[162111.92839999963,4458390.396],[162070.30339999963,4458360.489700001],[162041.12370000035,4458351.724099999],[162024.48309999984,4458332.364700001],[161994.55339999963,4458306.5835],[161945.12370000035,4458291.724099999],[161921.59250000026,4458273.2553],[161906.63939999975,4458266.599099999],[161883.88150000013,4458234.8881],[161886.34250000026,4458204.2787999995],[161910.20189999975,4458189.3256],[161854.13939999975,4458183.606899999],[161855.85030000005,4458162.419399999],[161908.13939999975,4458120.021],[161921.12370000035,4458099.2553],[161941.09250000026,4458073.802200001],[161956.23309999984,4458039.8178],[161975.61589999963,4458027.7006],[161975.03000000026,4458020.5287999995],[161990.80339999963,4458006.9350000005],[162007.46750000026,4457987.599099999],[162023.59250000026,4457973.724099999],[162029.12370000035,4457967.2553],[162048.48309999984,4457950.614700001],[162072.31900000013,4457922.911599999],[162113.10030000005,4457926.1928],[162143.12370000035,4457949.724099999],[162155.59250000026,4457955.2553],[162197.47530000005,4457991.1381],[162203.12370000035,4457997.724099999],[162212.68620000035,4458005.9506],[162233.59250000026,4458015.2553],[162257.12370000035,4458034.919399999],[162242.61589999963,4458047.4350000005],[162200.35809999984,4458044.036599999],[162162.20189999975,4458047.106899999],[162109.04559999984,4458078.396],[162089.12370000035,4458087.2553],[162083.59250000026,4458096.5835],[162117.64719999954,4458125.9506],[162122.35809999984,4458120.489700001],[162140.35809999984,4458132.489700001],[162143.61589999963,4458145.169399999],[162164.35809999984,4458150.489700001],[162169.06900000013,4458159.8178],[162182.35809999984,4458162.489700001],[162182.35809999984,4458168.489700001],[162194.35809999984,4458168.489700001],[162208.81900000013,4458190.0287999995],[162221.89719999954,4458194.9506],[162244.44400000013,4458212.411599999],[162260.35809999984,4458216.489700001],[162271.74870000035,4458231.231899999],[162305.24089999963,4458256.0756],[162314.35809999984,4458252.489700001],[162314.35809999984,4458258.489700001],[162320.35809999984,4458258.489700001],[162342.03780000005,4458272.8100000005],[162356.35809999984,4458276.489700001]]]},{"type":"Polygon","coordinates":[[[162914.35809999984,4457772.489700001],[162917.28780000005,4457775.5600000005],[162935.42839999963,4457787.419399999],[162970.20969999954,4457811.021],[162989.28780000005,4457817.5600000005],[163007.42839999963,4457823.419399999],[163029.78780000005,4457834.9506],[163068.95189999975,4457850.396],[163091.28780000005,4457865.5600000005],[163123.16280000005,4457884.474099999],[163109.42839999963,4457924.599099999],[163135.42059999984,4457943.419399999],[163175.19400000013,4457936.552200001],[163175.42839999963,4457925.4428],[163167.24870000035,4457901.5600000005],[163209.48309999984,4457925.021],[163189.58469999954,4457955.3725000005],[163178.35809999984,4457955.606899999],[163109.42839999963,4457954.2006],[163116.99870000035,4457979.114700001],[163163.42839999963,4457997.419399999],[163187.28780000005,4458015.5600000005],[163226.52219999954,4458025.099099999],[163241.42839999963,4458039.419399999],[163262.12370000035,4458067.3803],[163301.28780000005,4458087.5600000005],[163332.92839999963,4458100.0287999995],[163367.17059999984,4458117.677200001],[163391.42839999963,4458129.419399999],[163447.18620000035,4458163.2631],[163463.28780000005,4458171.5600000005],[163511.28780000005,4458194.8335],[163486.84250000026,4458222.771],[163451.28780000005,4458231.419399999],[163406.24089999963,4458246.864700001],[163374.43620000035,4458213.771],[163337.35809999984,4458201.724099999],[163329.57689999975,4458177.771],[163307.35809999984,4458177.302200001],[163277.40500000026,4458177.911599999],[163259.78000000026,4458159.5600000005],[163247.28780000005,4458165.419399999],[163237.93620000035,4458175.169399999],[163181.28780000005,4458141.5600000005],[163122.43620000035,4458105.864700001],[163016.96750000026,4458099.396],[162971.54559999984,4458071.856899999],[162909.74089999963,4458041.8803],[162779.42839999963,4457973.419399999],[162746.33469999954,4457957.3881],[162784.98309999984,4457932.0287999995],[162791.42839999963,4457919.5600000005],[162798.95189999975,4457896.3335],[162874.86589999963,4457877.8412999995],[162887.38150000013,4457871.396],[162898.49089999963,4457882.9506],[162921.43620000035,4457894.786599999],[162977.28780000005,4457895.911599999],[162965.94400000013,4457860.2162999995],[162956.47530000005,4457850.3725000005],[162947.28780000005,4457841.536599999],[162947.85030000005,4457814.0678],[162917.42839999963,4457793.419399999],[162881.42839999963,4457784.6537999995],[162887.28780000005,4457775.419399999],[162914.35809999984,4457772.489700001]]]},{"type":"Polygon","coordinates":[[[163874.35809999984,4458264.489700001],[163868.59250000026,4458258.2553],[163859.24089999963,4458249.606899999],[163853.47530000005,4458243.3725000005],[163813.67839999963,4458212.0835],[163774.56120000035,4458213.6303],[163763.47530000005,4458225.606899999],[163721.94400000013,4458233.5287999995],[163655.35809999984,4458230.9037999995],[163637.26439999975,4458231.606899999],[163625.47530000005,4458225.3725000005],[163558.06900000013,4458201.1850000005],[163547.35809999984,4458201.606899999],[163538.47530000005,4458201.2553],[163489.28000000026,4458171.1381],[163463.45189999975,4458153.3725000005],[163457.24089999963,4458153.606899999],[163451.47530000005,4458147.3725000005],[163420.28000000026,4458129.044399999],[163409.47530000005,4458117.3725000005],[163355.24089999963,4458093.606899999],[163349.47530000005,4458087.3725000005],[163304.35809999984,4458055.5678],[163279.11589999963,4458043.661599999],[163325.47530000005,4457979.606899999],[163331.24089999963,4457968.9662999995],[163299.41280000005,4457948.411599999],[163265.24089999963,4457937.606899999],[163259.47530000005,4457931.3725000005],[163244.05339999963,4457917.099099999],[163185.01439999975,4457889.231899999],[163169.68620000035,4457889.8412999995],[163151.59250000026,4457880.2553],[163112.35809999984,4457861.739700001],[163091.45189999975,4457847.3725000005],[163085.24089999963,4457847.606899999],[163078.91280000005,4457840.786599999],[163055.24089999963,4457829.606899999],[163043.47530000005,4457823.3725000005],[162977.68620000035,4457794.544399999],[162941.47530000005,4457775.3725000005],[162929.24089999963,4457769.606899999],[162917.47530000005,4457763.3725000005],[162905.24089999963,4457757.606899999],[162897.95189999975,4457742.161599999],[162907.44400000013,4457721.606899999],[162935.24089999963,4457751.606899999],[162965.47530000005,4457763.3725000005],[162992.14719999954,4457781.724099999],[163001.45189999975,4457781.3725000005],[163019.24089999963,4457793.606899999],[163043.47530000005,4457799.3725000005],[163072.09250000026,4457809.4037999995],[163085.24089999963,4457823.606899999],[163098.88150000013,4457823.0678],[163145.24089999963,4457847.606899999],[163157.47530000005,4457853.3725000005],[163169.24089999963,4457859.606899999],[163230.13150000013,4457874.114700001],[163265.24089999963,4457895.606899999],[163277.47530000005,4457901.3725000005],[163295.12370000035,4457910.724099999],[163319.28780000005,4457922.114700001],[163417.20969999954,4457953.1225000005],[163529.24089999963,4458003.606899999],[163547.47530000005,4458009.3725000005],[163565.24089999963,4458015.606899999],[163598.63939999975,4458023.552200001],[163625.70969999954,4458004.919399999],[163688.73309999984,4457924.786599999],[163709.35809999984,4457925.606899999],[163715.45189999975,4457925.3725000005],[163751.00650000013,4457949.8412999995],[163789.67839999963,4457974.802200001],[163805.24089999963,4457991.606899999],[163823.47530000005,4458003.3725000005],[163842.81120000035,4458016.6850000005],[163875.90500000026,4458032.294399999],[163895.24089999963,4458045.606899999],[163918.91280000005,4458056.786599999],[163925.47530000005,4458063.8412999995],[163937.47530000005,4458063.3725000005],[163962.34250000026,4458097.286599999],[163979.47530000005,4458105.3725000005],[164070.13150000013,4458181.989700001],[164098.02219999954,4458190.8256],[164139.31900000013,4458216.0912999995],[164165.00650000013,4458243.8412999995],[164177.70969999954,4458255.606899999],[164177.12370000035,4458270.114700001],[164131.88939999975,4458312.021],[164094.97530000005,4458351.864700001],[164087.47530000005,4458375.606899999],[164077.63150000013,4458387.3725000005],[164051.47530000005,4458369.3725000005],[164036.35809999984,4458366.489700001],[164030.35809999984,4458366.489700001],[164030.35809999984,4458360.489700001],[164024.35809999984,4458360.489700001],[164024.35809999984,4458354.489700001],[164018.35809999984,4458354.489700001],[164018.35809999984,4458348.489700001],[164006.35809999984,4458348.489700001],[164006.35809999984,4458342.489700001],[163994.35809999984,4458342.489700001],[163991.66280000005,4458332.8335],[163953.78780000005,4458304.7553],[163936.98309999984,4458297.864700001],[163917.38939999975,4458283.356899999],[163904.35809999984,4458288.489700001],[163894.42059999984,4458274.099099999],[163880.35809999984,4458270.489700001],[163880.35809999984,4458264.489700001],[163874.35809999984,4458264.489700001]]]},{"type":"Polygon","coordinates":[[[171512.35809999984,4457478.489700001],[171377.24089999963,4457481.3725000005],[171311.24089999963,4457489.974099999],[171242.66280000005,4457487.2553],[171175.35030000005,4457494.427200001],[171142.23309999984,4457506.0287999995],[171107.35809999984,4457504.646],[171080.35809999984,4457505.724099999],[171071.28780000005,4457505.3725000005],[171002.63939999975,4457514.3256],[170982.90500000026,4457496.021],[171021.78780000005,4457475.4428],[171187.04559999984,4457467.896],[171235.63150000013,4457447.927200001],[171279.71750000026,4457463.3725000005],[171299.47530000005,4457457.606899999],[171335.07689999975,4457445.114700001],[171370.60809999984,4457446.521],[171377.24089999963,4457439.3725000005],[171506.52219999954,4457433.4662999995],[171599.28780000005,4457421.3725000005],[171670.53780000005,4457424.1850000005],[171767.47530000005,4457409.606899999],[171779.24089999963,4457403.3725000005],[171892.42059999984,4457395.0287999995],[171955.06900000013,4457378.599099999],[171991.51439999975,4457387.294399999],[172019.47530000005,4457451.3725000005],[172029.53000000026,4457504.0131],[172037.47530000005,4457511.3725000005],[172036.53780000005,4457534.9506],[172049.24089999963,4457546.7162999995],[172038.95189999975,4457558.9975000005],[171959.24089999963,4457565.3725000005],[171851.85030000005,4457579.9975000005],[171785.26439999975,4457577.3725000005],[171755.80339999963,4457592.9585],[171689.47530000005,4457601.606899999],[171548.66280000005,4457608.052200001],[171510.01439999975,4457628.489700001],[171428.12370000035,4457625.231899999],[171341.52219999954,4457637.0678],[171335.47530000005,4457643.606899999],[171182.47530000005,4457650.5912999995],[171137.24089999963,4457661.3725000005],[171119.47530000005,4457667.606899999],[170996.87370000035,4457675.4350000005],[170982.15500000026,4457691.349099999],[170942.35809999984,4457692.919399999],[170903.35809999984,4457691.3725000005],[170892.41280000005,4457691.794399999],[170873.47530000005,4457674.2631],[170895.99870000035,4457647.4037999995],[170968.46750000026,4457635.849099999],[170977.56120000035,4457597.669399999],[170993.24089999963,4457589.3725000005],[171059.07689999975,4457581.4975000005],[171059.89719999954,4457560.614700001],[171049.25650000013,4457530.239700001],[171071.35809999984,4457529.3725000005],[171141.06120000035,4457532.1381],[171203.47530000005,4457523.606899999],[171248.17059999984,4457505.2553],[171314.14719999954,4457507.856899999],[171425.28780000005,4457493.3725000005],[171442.23309999984,4457494.0287999995],[171461.24089999963,4457487.3725000005],[171509.47530000005,4457481.606899999],[171512.35809999984,4457478.489700001],[171563.24089999963,4457475.3725000005],[171712.30339999963,4457468.224099999],[171757.95969999954,4457452.2162999995],[171779.35809999984,4457451.3725000005],[171845.24089999963,4457453.974099999],[171911.24089999963,4457445.3725000005],[171989.24089999963,4457438.5756],[171977.78000000026,4457416.3335],[171949.93620000035,4457415.231899999],[171869.24089999963,4457427.3725000005],[171862.39719999954,4457434.7553],[171782.61589999963,4457431.5912999995],[171764.85030000005,4457440.989700001],[171665.24089999963,4457453.974099999],[171595.81900000013,4457451.231899999],[171522.15500000026,4457462.974099999],[171515.24089999963,4457469.3725000005],[171512.35809999984,4457478.489700001]],[[171962.35809999984,4457454.489700001],[171959.19400000013,4457457.3256],[171867.29559999984,4457469.536599999],[171826.63150000013,4457484.1381],[171779.28780000005,4457481.302200001],[171689.52219999954,4457493.6537999995],[171616.06900000013,4457499.419399999],[171591.03780000005,4457513.0131],[171581.21750000026,4457524.0287999995],[171566.35809999984,4457523.1381],[171557.35809999984,4457523.677200001],[171533.35809999984,4457522.2475000005],[171470.35809999984,4457525.9975000005],[171425.35809999984,4457523.302200001],[171419.24089999963,4457523.677200001],[171385.56120000035,4457514.6537999995],[171373.91280000005,4457527.7085],[171341.19400000013,4457535.3256],[171327.03780000005,4457551.169399999],[171307.32689999975,4457568.771],[171293.52219999954,4457553.3256],[171219.60030000005,4457547.6537999995],[171197.52219999954,4457559.6537999995],[171167.19400000013,4457565.3256],[171155.49870000035,4457571.677200001],[171143.70969999954,4457570.974099999],[171137.52219999954,4457575.052200001],[171160.13939999975,4457585.4350000005],[171107.19400000013,4457595.3256],[171088.13939999975,4457602.146],[171089.80339999963,4457629.9428],[171196.30339999963,4457623.5912999995],[171215.19400000013,4457613.3256],[171248.35809999984,4457607.1381],[171311.28780000005,4457610.8881],[171429.31900000013,4457595.1850000005],[171442.63150000013,4457595.981899999],[171461.19400000013,4457589.3256],[171515.52219999954,4457583.6537999995],[171597.88150000013,4457572.7085],[171605.38150000013,4457540.5053],[171618.99870000035,4457528.3412999995],[171680.73309999984,4457532.021],[171756.24870000035,4457511.794399999],[171779.21750000026,4457499.302200001],[171837.24870000035,4457502.771],[171942.64719999954,4457490.3256],[171959.19400000013,4457481.3256],[171983.52219999954,4457475.6537999995],[171989.19400000013,4457465.0600000005],[171965.19400000013,4457457.6537999995],[171962.35809999984,4457454.489700001]]]},{"type":"Polygon","coordinates":[[[166130.35809999984,4457340.489700001],[166141.67839999963,4457353.169399999],[166161.17839999963,4457370.5835],[166217.17059999984,4457392.099099999],[166269.69400000013,4457435.2006],[166315.06900000013,4457432.5053],[166396.46750000026,4457461.7085],[166433.19400000013,4457481.6537999995],[166463.52219999954,4457493.3256],[166493.19400000013,4457511.6537999995],[166523.52219999954,4457523.3256],[166535.19400000013,4457529.6537999995],[166547.52219999954,4457535.3256],[166559.19400000013,4457562.1850000005],[166538.70969999954,4457599.896],[166525.30339999963,4457607.3256],[166499.52219999954,4457589.3256],[166466.52219999954,4457570.106899999],[166451.49870000035,4457553.302200001],[166440.08469999954,4457553.981899999],[166421.52219999954,4457547.3256],[166396.37370000035,4457541.4662999995],[166385.52219999954,4457529.3256],[166377.67059999984,4457522.3178],[166343.19400000013,4457511.6537999995],[166325.52219999954,4457499.3256],[166307.19400000013,4457487.6537999995],[166289.03000000026,4457474.974099999],[166273.67839999963,4457475.8881],[166265.52219999954,4457493.6537999995],[166248.67059999984,4457524.661599999],[166281.15500000026,4457522.7162999995],[166331.19400000013,4457553.6537999995],[166345.56120000035,4457560.2631],[166361.49870000035,4457559.302200001],[166379.19400000013,4457571.6537999995],[166433.52219999954,4457601.3256],[166439.19400000013,4457607.6537999995],[166445.52219999954,4457613.3256],[166451.94400000013,4457620.4975000005],[166486.77219999954,4457636.481899999],[166497.95189999975,4457648.9975000005],[166478.66280000005,4457661.3256],[166428.03780000005,4457633.8100000005],[166374.67059999984,4457609.3178],[166367.52219999954,4457601.3256],[166347.08469999954,4457591.927200001],[166297.53780000005,4457635.1225000005],[166257.48309999984,4457618.481899999],[166241.87370000035,4457600.974099999],[166217.19400000013,4457589.6537999995],[166201.79559999984,4457581.286599999],[166187.49870000035,4457565.302200001],[166181.21750000026,4457565.677200001],[166175.52219999954,4457559.3256],[166169.19400000013,4457553.6537999995],[166146.81120000035,4457518.474099999],[166134.13150000013,4457507.1303],[166121.52219999954,4457487.3256],[166091.19400000013,4457463.6537999995],[166081.51429999992,4457452.8256],[166073.52219999954,4457428.1928],[166103.52219999954,4457379.6537999995],[166115.35809999984,4457353.896],[166130.35809999984,4457340.489700001]]]},{"type":"Polygon","coordinates":[[[167708.35809999984,4457208.489700001],[167723.03000000026,4457235.8178],[167734.65500000026,4457245.146],[167760.69400000013,4457256.114700001],[167813.03000000026,4457241.161599999],[167843.03000000026,4457240.294399999],[167819.03000000026,4457247.161599999],[167807.68620000035,4457256.7475000005],[167819.68620000035,4457277.161599999],[167829.92839999963,4457312.927200001],[167837.68620000035,4457319.161599999],[167844.17839999963,4457327.2475000005],[167861.35809999984,4457325.114700001],[167870.35809999984,4457326.239700001],[167888.14719999954,4457324.0131],[167884.32689999975,4457354.856899999],[167897.68620000035,4457373.161599999],[167913.55339999963,4457399.271],[167923.35030000005,4457444.5756],[167945.68620000035,4457475.161599999],[167965.63150000013,4457510.4585],[167975.03000000026,4457553.8178],[167981.68620000035,4457559.161599999],[167991.74089999963,4457571.724099999],[167999.03000000026,4457614.5678],[167970.71750000026,4457611.052200001],[167955.34250000026,4457630.2475000005],[167959.91280000005,4457667.044399999],[167934.01439999975,4457651.8335],[167915.03000000026,4457643.8178],[167903.68620000035,4457637.161599999],[167864.66280000005,4457622.724099999],[167836.79559999984,4457600.4350000005],[167825.19400000013,4457601.8881],[167791.32689999975,4457588.8803],[167783.07689999975,4457589.8881],[167771.68620000035,4457571.161599999],[167765.03000000026,4457565.8178],[167759.68620000035,4457557.427200001],[167771.68620000035,4457547.8178],[167777.03000000026,4457536.474099999],[167754.81120000035,4457506.052200001],[167747.03000000026,4457499.8178],[167741.68620000035,4457481.161599999],[167728.74870000035,4457447.4585],[167730.50650000013,4457433.1850000005],[167775.15500000026,4457397.419399999],[167821.84250000026,4457390.646],[167840.26429999992,4457367.606899999],[167806.13939999975,4457361.6537999995],[167795.68620000035,4457325.161599999],[167776.72530000005,4457299.1928],[167765.03000000026,4457289.8178],[167747.94400000013,4457268.489700001],[167702.94400000013,4457285.8100000005],[167681.35809999984,4457283.114700001],[167675.35809999984,4457283.864700001],[167664.45969999954,4457282.5053],[167657.68620000035,4457260.474099999],[167679.90500000026,4457230.052200001],[167691.01439999975,4457221.146],[167699.03000000026,4457211.161599999],[167708.35809999984,4457208.489700001]]]},{"type":"Polygon","coordinates":[[[163604.35809999984,4457178.489700001],[163604.35809999984,4457184.489700001],[163608.24870000035,4457205.794399999],[163643.56900000013,4457248.4975000005],[163675.16280000005,4457298.9350000005],[163700.35809999984,4457316.489700001],[163706.35809999984,4457316.489700001],[163706.35809999984,4457322.489700001],[163706.35809999984,4457328.489700001],[163712.35809999984,4457328.489700001],[163712.35809999984,4457334.489700001],[163712.35809999984,4457340.489700001],[163718.35809999984,4457340.489700001],[163724.35809999984,4457352.489700001],[163724.35809999984,4457364.489700001],[163730.35809999984,4457364.489700001],[163733.26439999975,4457374.9428],[163753.58469999954,4457401.2631],[163760.35809999984,4457406.489700001],[163760.35809999984,4457412.489700001],[163766.35809999984,4457412.489700001],[163771.53780000005,4457436.2085],[163762.25650000013,4457452.8256],[163764.31900000013,4457478.396],[163786.98309999984,4457497.919399999],[163798.13939999975,4457522.927200001],[163806.08469999954,4457557.919399999],[163827.60030000005,4457596.4506],[163852.04559999984,4457655.606899999],[163865.59250000026,4457667.2553],[163880.99089999963,4457691.864700001],[163890.08469999954,4457731.919399999],[163923.36589999963,4457791.544399999],[163874.28780000005,4457819.8335],[163826.78000000026,4457841.021],[163795.18620000035,4457764.661599999],[163787.12370000035,4457757.724099999],[163776.57689999975,4457734.052200001],[163769.59250000026,4457703.2553],[163759.02219999954,4457674.4975000005],[163736.99089999963,4457655.5131],[163709.59250000026,4457589.2553],[163703.12370000035,4457583.724099999],[163694.24089999963,4457573.3881],[163685.59250000026,4457535.2553],[163679.12370000035,4457517.724099999],[163673.59250000026,4457499.2553],[163649.12370000035,4457493.724099999],[163628.17059999984,4457464.521],[163619.59250000026,4457445.2553],[163607.12370000035,4457427.724099999],[163601.59250000026,4457415.2553],[163588.67839999963,4457404.169399999],[163566.57689999975,4457378.481899999],[163559.24089999963,4457354.1537999995],[163547.12370000035,4457343.724099999],[163533.24870000035,4457327.599099999],[163517.12370000035,4457313.724099999],[163511.59250000026,4457301.2553],[163481.12370000035,4457265.724099999],[163475.59250000026,4457250.7475000005],[163499.59250000026,4457235.724099999],[163505.12370000035,4457229.2553],[163536.69400000013,4457206.5912999995],[163559.59250000026,4457199.724099999],[163579.56120000035,4457192.364700001],[163589.12370000035,4457181.2553],[163604.35809999984,4457178.489700001]]]},{"type":"Polygon","coordinates":[[[165368.35809999984,4457166.489700001],[165373.72530000005,4457183.4585],[165413.59250000026,4457202.2553],[165433.84250000026,4457212.9662999995],[165449.24089999963,4457229.606899999],[165461.33469999954,4457240.8100000005],[165469.74870000035,4457276.0835],[165515.47530000005,4457283.3725000005],[165532.79559999984,4457302.052200001],[165551.47530000005,4457319.3725000005],[165557.24089999963,4457354.0835],[165523.98309999984,4457397.4428],[165533.47530000005,4457415.3725000005],[165539.24089999963,4457439.606899999],[165545.68620000035,4457458.0053],[165544.77219999954,4457481.489700001],[165545.94400000013,4457511.349099999],[165534.83469999954,4457517.3725000005],[165514.58469999954,4457485.989700001],[165515.70969999954,4457457.8178],[165509.24089999963,4457445.606899999],[165503.42839999963,4457415.1381],[165488.14719999954,4457415.724099999],[165494.31120000035,4457571.0912999995],[165612.27219999954,4457577.7475000005],[165624.83469999954,4457591.3178],[165623.21750000026,4457632.286599999],[165611.00650000013,4457643.606899999],[165611.52219999954,4457656.802200001],[165623.70969999954,4457679.8178],[165623.14719999954,4457693.646],[165579.71750000026,4457703.3725000005],[165552.24870000035,4457673.7475000005],[165539.24089999963,4457667.606899999],[165515.47530000005,4457647.099099999],[165548.28780000005,4457636.7162999995],[165536.33469999954,4457614.099099999],[165503.35809999984,4457625.6537999995],[165485.47530000005,4457619.3725000005],[165467.24089999963,4457613.606899999],[165452.82689999975,4457598.021],[165428.82689999975,4457575.802200001],[165378.45969999954,4457577.794399999],[165359.47530000005,4457561.5053],[165401.87370000035,4457467.4037999995],[165401.21750000026,4457450.6928],[165386.56900000013,4457437.1225000005],[165340.84250000026,4457407.5912999995],[165341.54559999984,4457389.9428],[165383.47530000005,4457373.606899999],[165420.45969999954,4457358.419399999],[165431.24089999963,4457339.481899999],[165409.63150000013,4457331.606899999],[165378.43620000035,4457353.0756],[165355.63150000013,4457361.3725000005],[165324.81120000035,4457340.161599999],[165281.24089999963,4457319.606899999],[165253.37370000035,4457300.4350000005],[165264.88150000013,4457267.6225000005],[165330.15500000026,4457258.6928],[165329.24089999963,4457235.396],[165350.89719999954,4457182.6850000005],[165368.35809999984,4457166.489700001]]]},{"type":"Polygon","coordinates":[[[168128.35809999984,4457358.489700001],[168125.21750000026,4457326.9662999995],[168104.73309999984,4457298.489700001],[168124.02219999954,4457271.677200001],[168137.63939999975,4457265.771],[168167.07689999975,4457247.2085],[168205.86589999963,4457240.294399999],[168215.12370000035,4457229.161599999],[168226.84250000026,4457230.356899999],[168282.17839999963,4457189.552200001],[168301.13939999975,4457166.724099999],[168337.23309999984,4457151.0678],[168350.40500000026,4457135.2006],[168359.07689999975,4457115.2085],[168371.63939999975,4457109.771],[168389.14719999954,4457097.161599999],[168404.96750000026,4457098.7787999995],[168425.07689999975,4457091.2085],[168447.83469999954,4457085.771],[168455.07689999975,4457107.731899999],[168410.03000000026,4457115.7475000005],[168415.86589999963,4457173.099099999],[168441.43620000035,4457194.3335],[168449.07679999992,4457211.302200001],[168430.56120000035,4457260.614700001],[168431.66280000005,4457271.5131],[168423.97530000005,4457334.161599999],[168411.90500000026,4457344.1928],[168414.01439999975,4457364.911599999],[168395.07689999975,4457391.2085],[168383.63939999975,4457409.771],[168365.61589999963,4457434.802200001],[168353.03000000026,4457445.2553],[168353.68620000035,4457451.7006],[168337.44400000013,4457474.271],[168329.07689999975,4457481.2085],[168306.41280000005,4457508.489700001],[168288.36589999963,4457517.2085],[168280.37370000035,4457446.052200001],[168283.56120000035,4457414.9506],[168274.25650000013,4457415.911599999],[168262.42059999984,4457469.2553],[168263.66280000005,4457481.489700001],[168261.95189999975,4457498.224099999],[168248.47530000005,4457521.7787999995],[168197.38150000013,4457516.5756],[168175.25650000013,4457457.5600000005],[168164.35809999984,4457448.489700001],[168160.67839999963,4457412.396],[168149.12370000035,4457391.724099999],[168141.41280000005,4457374.427200001],[168128.35809999984,4457370.489700001],[168128.35809999984,4457358.489700001]]]},{"type":"Polygon","coordinates":[[[163604.35809999984,4457178.489700001],[163594.63150000013,4457161.614700001],[163583.12370000035,4457151.724099999],[163577.59250000026,4457132.0600000005],[163605.69400000013,4457107.8256],[163625.12370000035,4457085.2553],[163640.45189999975,4457073.724099999],[163721.63939999975,4457080.239700001],[163765.51439999975,4457098.7085],[163789.65500000026,4457152.802200001],[163810.79559999984,4457182.6381],[163835.78000000026,4457238.6303],[163871.24089999963,4457298.864700001],[163883.12370000035,4457337.114700001],[163828.06900000013,4457376.6537999995],[163789.77219999954,4457421.0912999995],[163766.35809999984,4457412.489700001],[163766.35809999984,4457406.489700001],[163760.35809999984,4457406.489700001],[163753.67839999963,4457382.489700001],[163730.35809999984,4457364.489700001],[163730.35809999984,4457352.489700001],[163724.35809999984,4457352.489700001],[163718.35809999984,4457340.489700001],[163718.35809999984,4457334.489700001],[163712.35809999984,4457334.489700001],[163712.35809999984,4457328.489700001],[163712.35809999984,4457322.489700001],[163706.35809999984,4457322.489700001],[163706.35809999984,4457316.489700001],[163700.35809999984,4457316.489700001],[163696.93620000035,4457304.2085],[163666.58469999954,4457263.2631],[163647.92839999963,4457232.0912999995],[163621.28000000026,4457197.5678],[163604.35809999984,4457184.489700001],[163604.35809999984,4457178.489700001]]]},{"type":"Polygon","coordinates":[[[164828.35809999984,4456662.489700001],[164842.37370000035,4456657.3335],[164859.76439999975,4456685.0835],[164885.59250000026,4456701.2553],[164893.91280000005,4456710.9350000005],[164903.59250000026,4456719.2553],[164909.12370000035,4456725.724099999],[164915.59250000026,4456731.2553],[164938.72530000005,4456771.427200001],[164920.16280000005,4456779.7006],[164922.31900000013,4456806.4662999995],[164951.59250000026,4456815.2553],[164957.99089999963,4456822.7085],[164955.43620000035,4456854.489700001],[164958.50650000013,4456892.9037999995],[164951.10030000005,4456899.302200001],[164952.36589999963,4456915.1225000005],[164977.63150000013,4456935.2553],[164999.56900000013,4456923.021],[165006.90500000026,4457003.106899999],[165004.81900000013,4457029.3335],[164980.67839999963,4457068.0053],[164981.61589999963,4457079.6303],[164964.60030000005,4457120.0131],[164930.35809999984,4457124.489700001],[164930.35809999984,4457118.489700001],[164900.35809999984,4457118.489700001],[164894.35809999984,4457118.489700001],[164894.35809999984,4457112.489700001],[164888.35809999984,4457112.489700001],[164864.35809999984,4457112.489700001],[164864.35809999984,4457106.489700001],[164858.35809999984,4457106.489700001],[164834.35809999984,4457106.489700001],[164828.35809999984,4457106.489700001],[164828.35809999984,4457118.489700001],[164819.03000000026,4457123.2006],[164816.35809999984,4457136.489700001],[164810.35809999984,4457136.489700001],[164810.35809999984,4457142.489700001],[164769.53000000026,4457148.7006],[164747.52219999954,4457133.3256],[164712.13150000013,4457122.4037999995],[164687.52219999954,4457103.3256],[164673.15500000026,4457096.7162999995],[164656.18620000035,4457097.7475000005],[164645.52219999954,4457109.6537999995],[164629.44400000013,4457124.021],[164609.19400000013,4457133.3256],[164603.52219999954,4457147.0835],[164670.22530000005,4457143.1225000005],[164707.23309999984,4457158.4975000005],[164722.84250000026,4457176.0053],[164736.24870000035,4457187.981899999],[164747.49870000035,4457187.302200001],[164759.19400000013,4457193.6537999995],[164807.12370000035,4457215.661599999],[164788.18620000035,4457242.7553],[164791.16280000005,4457292.6537999995],[164782.44400000013,4457308.6850000005],[164747.45189999975,4457306.599099999],[164705.52219999954,4457277.3256],[164671.91280000005,4457261.9037999995],[164629.18620000035,4457226.8412999995],[164609.19400000013,4457217.6537999995],[164578.72530000005,4457194.052200001],[164543.52219999954,4457243.2475000005],[164562.24870000035,4457259.981899999],[164574.36589999963,4457259.2553],[164597.19400000013,4457271.6537999995],[164630.70969999954,4457279.4585],[164649.36589999963,4457300.3412999995],[164654.35809999984,4457316.489700001],[164648.35809999984,4457316.489700001],[164648.35809999984,4457322.489700001],[164642.35809999984,4457322.489700001],[164642.35809999984,4457328.489700001],[164615.68620000035,4457349.8412999995],[164612.35809999984,4457376.489700001],[164606.35809999984,4457376.489700001],[164606.35809999984,4457388.489700001],[164597.03000000026,4457393.2006],[164594.35809999984,4457406.489700001],[164585.28780000005,4457409.419399999],[164567.82689999975,4457418.419399999],[164491.63150000013,4457372.224099999],[164475.55339999963,4457380.521],[164453.42839999963,4457403.5600000005],[164440.67839999963,4457415.771],[164416.58469999954,4457415.2787999995],[164398.93620000035,4457396.927200001],[164399.42839999963,4457373.489700001],[164399.28780000005,4457367.4428],[164419.39719999954,4457340.9350000005],[164435.42839999963,4457325.5600000005],[164459.61589999963,4457292.911599999],[164459.28780000005,4457277.0912999995],[164472.69400000013,4457251.0756],[164506.91280000005,4457200.5912999995],[164513.28780000005,4457187.419399999],[164528.66280000005,4457164.7553],[164537.28780000005,4457142.161599999],[164518.70189999975,4457133.5600000005],[164495.42839999963,4457145.5600000005],[164483.28780000005,4457151.419399999],[164445.03780000005,4457182.3100000005],[164410.25650000013,4457175.1850000005],[164387.42839999963,4457151.419399999],[164366.40500000026,4457131.239700001],[164315.28780000005,4457109.5600000005],[164291.40500000026,4457093.3412999995],[164273.42839999963,4457072.8335],[164301.29559999984,4457046.044399999],[164274.57689999975,4457031.5600000005],[164237.38150000013,4457061.5835],[164212.95969999954,4457055.3256],[164201.31120000035,4457055.5600000005],[164183.42839999963,4457043.419399999],[164174.35809999984,4457040.489700001],[164174.35809999984,4457034.489700001],[164174.35809999984,4457028.489700001],[164168.35809999984,4457028.489700001],[164168.35809999984,4457022.489700001],[164175.06120000035,4457016.724099999],[164165.10030000005,4456989.6303],[164165.85030000005,4456980.489700001],[164164.18620000035,4456959.8178],[164176.42059999984,4456958.8335],[164195.21750000026,4456965.7475000005],[164201.49870000035,4456965.231899999],[164223.53000000026,4456973.3178],[164270.49870000035,4456969.544399999],[164285.19400000013,4456977.7475000005],[164295.36589999963,4456976.927200001],[164311.46750000026,4456984.1225000005],[164308.18620000035,4457025.161599999],[164332.39719999954,4457027.106899999],[164348.89719999954,4457007.9350000005],[164362.11589999963,4457006.856899999],[164398.84250000026,4457016.911599999],[164400.62370000035,4456994.669399999],[164393.59250000026,4456971.2553],[164370.81120000035,4456957.0053],[164337.27219999954,4456928.106899999],[164390.35809999984,4456932.3725000005],[164429.47530000005,4456929.231899999],[164454.60030000005,4456936.1225000005],[164467.60809999984,4456935.0678],[164501.59250000026,4456941.2553],[164532.20189999975,4456958.3412999995],[164549.35809999984,4456959.724099999],[164573.17059999984,4456957.8256],[164585.12370000035,4456971.724099999],[164603.59250000026,4456977.2553],[164644.81900000013,4457000.271],[164684.75650000013,4457009.364700001],[164735.19400000013,4457031.7475000005],[164749.13939999975,4457030.6225000005],[164816.26439999975,4457055.2553],[164846.35809999984,4457047.427200001],[164856.36589999963,4457010.8881],[164855.10030000005,4456995.349099999],[164867.12370000035,4456962.5835],[164856.17839999963,4456944.2085],[164837.12370000035,4456935.724099999],[164825.52219999954,4456929.231899999],[164814.29559999984,4456930.146],[164780.45189999975,4456917.724099999],[164743.84250000026,4456925.1537999995],[164724.78780000005,4456947.2553],[164699.12370000035,4456941.724099999],[164681.59250000026,4456935.2553],[164657.12370000035,4456929.724099999],[164643.36589999963,4456922.036599999],[164627.12370000035,4456929.2553],[164621.38150000013,4456935.9350000005],[164546.87370000035,4456941.9350000005],[164513.12370000035,4456917.724099999],[164497.81900000013,4456883.3881],[164465.52219999954,4456863.231899999],[164458.74870000035,4456863.771],[164407.13939999975,4456844.2006],[164396.14719999954,4456819.5678],[164362.16280000005,4456822.3100000005],[164333.12370000035,4456815.724099999],[164321.59250000026,4456809.2553],[164309.12370000035,4456803.724099999],[164297.59250000026,4456797.2553],[164248.72530000005,4456783.9662999995],[164201.78000000026,4456766.739700001],[164185.32689999975,4456768.052200001],[164117.59250000026,4456761.1381],[164142.90500000026,4456741.919399999],[164174.35809999984,4456744.4506],[164189.49870000035,4456743.231899999],[164225.42839999963,4456758.3725000005],[164270.35809999984,4456761.981899999],[164279.54559999984,4456761.231899999],[164313.99870000035,4456785.677200001],[164364.29559999984,4456804.146],[164375.49870000035,4456803.231899999],[164401.67839999963,4456812.8412999995],[164477.59250000026,4456784.0600000005],[164501.12370000035,4456763.7631],[164484.08469999954,4456751.224099999],[164459.12370000035,4456743.724099999],[164416.58469999954,4456724.8335],[164391.69400000013,4456726.8256],[164349.85809999984,4456710.9585],[164327.59250000026,4456691.7631],[164343.90500000026,4456666.802200001],[164374.30339999963,4456664.364700001],[164393.12370000035,4456677.724099999],[164453.59250000026,4456695.2553],[164471.12370000035,4456701.724099999],[164495.59250000026,4456707.2553],[164534.05339999963,4456717.802200001],[164540.35809999984,4456710.489700001],[164546.35809999984,4456710.489700001],[164546.35809999984,4456716.489700001],[164552.35809999984,4456716.489700001],[164552.35809999984,4456722.489700001],[164558.35809999984,4456722.489700001],[164558.35809999984,4456734.489700001],[164549.99089999963,4456740.489700001],[164558.35809999984,4456746.489700001],[164552.35809999984,4456758.489700001],[164555.42839999963,4456776.6303],[164578.98309999984,4456785.864700001],[164630.35809999984,4456794.489700001],[164633.35809999984,4456802.177200001],[164636.35809999984,4456794.489700001],[164642.35809999984,4456794.489700001],[164642.35809999984,4456800.489700001],[164654.35809999984,4456800.489700001],[164661.22530000005,4456809.396],[164692.98309999984,4456821.864700001],[164741.73309999984,4456827.114700001],[164775.85809999984,4456837.052200001],[164811.81120000035,4456842.3725000005],[164816.35809999984,4456836.489700001],[164822.35809999984,4456836.489700001],[164824.88939999975,4456846.052200001],[164872.86589999963,4456855.544399999],[164866.95969999954,4456828.9428],[164852.35809999984,4456818.489700001],[164852.35809999984,4456812.489700001],[164846.35809999984,4456812.489700001],[164846.35809999984,4456806.489700001],[164846.35809999984,4456800.489700001],[164840.35809999984,4456800.489700001],[164838.34250000026,4456766.5053],[164818.37370000035,4456744.474099999],[164814.10809999984,4456729.661599999],[164800.60809999984,4456736.2475000005],[164798.35809999984,4456698.489700001],[164804.35809999984,4456698.489700001],[164804.35809999984,4456686.489700001],[164810.35809999984,4456686.489700001],[164810.35809999984,4456674.489700001],[164828.35809999984,4456674.489700001],[164828.35809999984,4456662.489700001]]]},{"type":"Polygon","coordinates":[[[165716.35809999984,4456962.489700001],[165713.28780000005,4456965.419399999],[165707.42839999963,4456971.5600000005],[165689.28780000005,4456977.419399999],[165683.42839999963,4456980.864700001],[165705.20189999975,4457012.9975000005],[165713.28780000005,4457036.411599999],[165661.51439999975,4457015.411599999],[165623.42839999963,4456983.419399999],[165605.24089999963,4456974.606899999],[165542.59250000026,4456942.3335],[165533.42839999963,4456923.419399999],[165502.63150000013,4456903.239700001],[165491.42839999963,4456882.8725000005],[165521.52219999954,4456875.536599999],[165514.16280000005,4456868.4585],[165479.28780000005,4456851.5600000005],[165450.13150000013,4456831.7787999995],[165442.23309999984,4456791.3256],[165390.74089999963,4456792.3803],[165377.42839999963,4456780.146],[165431.42839999963,4456773.5600000005],[165479.28780000005,4456767.419399999],[165624.92839999963,4456760.9506],[165650.14719999954,4456747.9662999995],[165677.85030000005,4456710.5835],[165677.28780000005,4456683.489700001],[165677.49870000035,4456673.739700001],[165720.50650000013,4456665.3256],[165755.35809999984,4456653.419399999],[165773.28780000005,4456659.5600000005],[165791.42839999963,4456665.419399999],[165813.76439999975,4456680.5835],[165852.92839999963,4456696.0287999995],[165875.31120000035,4456707.5600000005],[165881.40500000026,4456707.419399999],[165907.04559999984,4456720.6381],[165929.40500000026,4456743.911599999],[165959.89719999954,4456743.302200001],[165971.28780000005,4456731.419399999],[166008.55339999963,4456700.599099999],[166019.28780000005,4456689.419399999],[166025.42839999963,4456683.5600000005],[166031.28780000005,4456677.419399999],[166049.42839999963,4456665.5600000005],[166055.31120000035,4456659.396],[166080.69400000013,4456665.911599999],[166109.70969999954,4456680.864700001],[166109.26439999975,4456702.6381],[166070.75650000013,4456739.646],[166061.42839999963,4456766.106899999],[166091.42839999963,4456773.419399999],[166109.28780000005,4456785.5600000005],[166128.06120000035,4456797.8412999995],[166139.28780000005,4456809.5600000005],[166156.23309999984,4456817.7631],[166167.78780000005,4456853.364700001],[166151.70969999954,4456868.786599999],[166139.17059999984,4456887.911599999],[166114.79559999984,4456887.419399999],[166078.06900000013,4456862.5053],[166067.42839999963,4456851.419399999],[166049.28780000005,4456845.5600000005],[166023.24870000035,4456827.8881],[166001.42839999963,4456851.911599999],[166013.42839999963,4456863.419399999],[166019.28780000005,4456869.5600000005],[166025.42839999963,4456875.419399999],[166031.28780000005,4456881.5600000005],[166074.71750000026,4456918.544399999],[166085.28780000005,4456929.5600000005],[166101.31900000013,4456944.9350000005],[166079.28780000005,4456977.419399999],[166067.42839999963,4456995.5600000005],[166053.45969999954,4457016.161599999],[166010.21750000026,4457005.0756],[165989.42839999963,4456983.419399999],[165977.28780000005,4456977.5600000005],[165952.77219999954,4456958.927200001],[165907.13939999975,4456936.802200001],[165887.40500000026,4456923.419399999],[165881.31120000035,4456923.5600000005],[165874.77219999954,4456916.7631],[165828.76439999975,4456894.4506],[165797.40500000026,4456875.419399999],[165788.35809999984,4456875.606899999],[165777.95189999975,4456875.396],[165725.35809999984,4456848.302200001],[165707.17059999984,4456857.677200001],[165707.42839999963,4456869.536599999],[165701.28780000005,4456887.419399999],[165695.42839999963,4456910.106899999],[165725.42839999963,4456917.4428],[165722.35809999984,4456944.489700001],[165716.35809999984,4456944.489700001],[165716.35809999984,4456956.489700001],[165716.35809999984,4456962.489700001]]]},{"type":"Polygon","coordinates":[[[167828.35809999984,4456566.489700001],[167834.49870000035,4456573.3803],[167885.52219999954,4456581.3256],[167909.24089999963,4456587.677200001],[167915.49870000035,4456587.302200001],[167943.53000000026,4456602.536599999],[167972.66280000005,4456592.0835],[167999.35809999984,4456593.677200001],[168011.21750000026,4456592.9506],[168017.19400000013,4456599.6537999995],[168050.49870000035,4456609.9428],[168071.52219999954,4456623.3256],[168089.21750000026,4456635.677200001],[168095.35809999984,4456635.302200001],[168122.35809999984,4456636.919399999],[168154.46750000026,4456634.9975000005],[168161.52219999954,4456641.3256],[168173.94400000013,4456655.224099999],[168232.37370000035,4456706.177200001],[168263.35809999984,4456708.0287999995],[168292.20969999954,4456706.3178],[168329.19400000013,4456757.106899999],[168322.18620000035,4456785.021],[168290.35809999984,4456786.919399999],[168260.35809999984,4456785.1381],[168248.35809999984,4456785.8412999995],[168223.79559999984,4456784.3881],[168203.47530000005,4456791.677200001],[168189.13150000013,4456790.8100000005],[168161.19400000013,4456797.3256],[168135.38939999975,4456815.3256],[168071.19400000013,4456827.3256],[168031.23309999984,4456852.0287999995],[167988.92839999963,4456844.5053],[167951.35809999984,4456846.731899999],[167927.35809999984,4456845.302200001],[167919.95189999975,4456845.7475000005],[167861.47530000005,4456830.0912999995],[167774.80339999963,4456841.6225000005],[167758.88939999975,4456832.974099999],[167741.78000000026,4456834.0053],[167731.42059999984,4456805.177200001],[167728.51439999975,4456756.356899999],[167747.19400000013,4456743.3256],[167782.49089999963,4456729.7553],[167765.52219999954,4456714.5912999995],[167775.20189999975,4456702.146],[167804.35809999984,4456700.411599999],[167830.46750000026,4456701.981899999],[167843.19400000013,4456690.5912999995],[167829.48309999984,4456672.989700001],[167792.35809999984,4456670.7631],[167777.24089999963,4456671.677200001],[167751.27219999954,4456664.7162999995],[167730.08469999954,4456665.981899999],[167711.52219999954,4456659.3256],[167663.94400000013,4456648.239700001],[167663.00650000013,4456632.489700001],[167663.70969999954,4456620.489700001],[167662.53780000005,4456600.7553],[167674.25650000013,4456587.6537999995],[167705.52219999954,4456593.3256],[167737.23309999984,4456600.099099999],[167777.52219999954,4456587.6537999995],[167786.52219999954,4456577.5756],[167825.19400000013,4456569.3256],[167828.35809999984,4456566.489700001]]]},{"type":"Polygon","coordinates":[[[164540.35809999984,4456710.489700001],[164537.52219999954,4456707.3256],[164519.66280000005,4456699.1225000005],[164453.19400000013,4456683.6537999995],[164406.20189999975,4456669.7553],[164368.18620000035,4456640.271],[164369.80339999963,4456613.106899999],[164453.87370000035,4456600.0053],[164522.92059999984,4456581.489700001],[164667.60030000005,4456570.169399999],[164708.49870000035,4456559.224099999],[164723.49870000035,4456576.0287999995],[164735.35809999984,4456575.302200001],[164742.20189999975,4456575.724099999],[164754.67059999984,4456602.911599999],[164783.00650000013,4456628.224099999],[164823.74089999963,4456637.6928],[164828.35809999984,4456662.489700001],[164812.37370000035,4456670.5053],[164810.35809999984,4456674.489700001],[164804.35809999984,4456674.489700001],[164804.35809999984,4456686.489700001],[164798.35809999984,4456686.489700001],[164798.35809999984,4456698.489700001],[164789.73309999984,4456705.146],[164795.42839999963,4456740.677200001],[164807.73309999984,4456761.114700001],[164816.24089999963,4456781.8803],[164840.35809999984,4456800.489700001],[164840.35809999984,4456806.489700001],[164846.35809999984,4456806.489700001],[164846.35809999984,4456812.489700001],[164846.35809999984,4456818.489700001],[164852.35809999984,4456818.489700001],[164849.96750000026,4456834.4975000005],[164827.65500000026,4456828.239700001],[164822.35809999984,4456836.489700001],[164816.35809999984,4456836.489700001],[164767.18620000035,4456822.661599999],[164697.60030000005,4456815.5600000005],[164675.59250000026,4456803.2553],[164654.35809999984,4456800.489700001],[164654.35809999984,4456794.489700001],[164642.35809999984,4456794.489700001],[164636.35809999984,4456794.489700001],[164630.35809999984,4456794.489700001],[164626.04559999984,4456788.231899999],[164603.89719999954,4456778.9506],[164560.81900000013,4456768.0287999995],[164555.89719999954,4456760.9506],[164552.35809999984,4456758.489700001],[164558.35809999984,4456746.489700001],[164558.35809999984,4456734.489700001],[164558.35809999984,4456722.489700001],[164558.35809999984,4456716.489700001],[164552.35809999984,4456716.489700001],[164552.35809999984,4456710.489700001],[164546.35809999984,4456710.489700001],[164540.35809999984,4456710.489700001]]]},{"type":"Polygon","coordinates":[[[165080.35809999984,4456458.489700001],[165095.35809999984,4456453.239700001],[165176.28780000005,4456456.427200001],[165203.26439999975,4456449.3725000005],[165230.38150000013,4456450.4506],[165307.81900000013,4456461.981899999],[165326.35809999984,4456461.2553],[165346.53780000005,4456462.052200001],[165385.16280000005,4456491.677200001],[165447.22530000005,4456528.169399999],[165480.15500000026,4456526.856899999],[165491.24089999963,4456503.3725000005],[165503.70969999954,4456479.8412999995],[165520.37370000035,4456444.521],[165539.47530000005,4456419.606899999],[165555.38939999975,4456394.9506],[165571.18620000035,4456354.3803],[165588.17839999963,4456322.2475000005],[165628.09250000026,4456303.427200001],[165641.24089999963,4456317.606899999],[165713.47530000005,4456323.3725000005],[165737.24089999963,4456329.606899999],[165791.47530000005,4456335.3725000005],[165811.20969999954,4456348.9662999995],[165857.35809999984,4456347.1381],[165877.16280000005,4456347.911599999],[165900.22530000005,4456360.1225000005],[165947.47530000005,4456371.3725000005],[165980.33469999954,4456379.974099999],[165995.87370000035,4456396.7787999995],[166073.47530000005,4456407.3725000005],[166100.54559999984,4456414.474099999],[166085.24089999963,4456443.3725000005],[166074.34250000026,4456466.4585],[166048.20969999954,4456500.536599999],[166023.85809999984,4456516.2631],[165948.85809999984,4456534.146],[165921.90500000026,4456552.6850000005],[165862.56120000035,4456580.6928],[165785.52219999954,4456621.4506],[165712.58469999954,4456647.3725000005],[165696.08469999954,4456629.5600000005],[165676.86589999963,4456623.606899999],[165664.16280000005,4456663.731899999],[165632.47530000005,4456678.6850000005],[165575.59250000026,4456676.4350000005],[165526.77219999954,4456683.7006],[165527.56900000013,4456703.739700001],[165623.05339999963,4456699.9662999995],[165666.13150000013,4456684.849099999],[165665.07689999975,4456711.4506],[165644.49870000035,4456741.356899999],[165548.14719999954,4456751.6225000005],[165482.35809999984,4456749.021],[165458.35809999984,4456749.9585],[165437.87370000035,4456749.161599999],[165417.01439999975,4456756.474099999],[165383.35809999984,4456755.1381],[165368.35809999984,4456755.724099999],[165342.31900000013,4456754.6928],[165176.56900000013,4456763.3178],[165155.47530000005,4456759.4506],[165208.09250000026,4456722.349099999],[165184.13939999975,4456706.9037999995],[165171.43620000035,4456693.169399999],[165173.47530000005,4456641.489700001],[165173.12370000035,4456632.396],[165134.35809999984,4456596.489700001],[165134.35809999984,4456590.489700001],[165134.35809999984,4456584.489700001],[165128.35809999984,4456584.489700001],[165128.35809999984,4456578.489700001],[165128.35809999984,4456572.489700001],[165122.35809999984,4456572.489700001],[165122.35809999984,4456566.489700001],[165122.35809999984,4456560.489700001],[165116.35809999984,4456560.489700001],[165110.35809999984,4456548.489700001],[165110.35809999984,4456542.489700001],[165104.35809999984,4456542.489700001],[165104.35809999984,4456536.489700001],[165098.35809999984,4456536.489700001],[165093.13150000013,4456505.7162999995],[165086.35809999984,4456500.489700001],[165083.89719999954,4456472.9506],[165080.35809999984,4456458.489700001]]]},{"type":"Polygon","coordinates":[[[164744.35809999984,4456530.489700001],[164741.12370000035,4456533.2553],[164733.53000000026,4456542.0912999995],[164705.12370000035,4456521.724099999],[164674.79559999984,4456497.9585],[164619.43620000035,4456490.7162999995],[164604.92839999963,4456473.864700001],[164573.35809999984,4456471.3100000005],[164504.35809999984,4456476.864700001],[164444.45189999975,4456472.0600000005],[164411.07689999975,4456484.3178],[164345.59250000026,4456489.5678],[164351.12370000035,4456479.2553],[164391.50650000013,4456432.1225000005],[164385.83469999954,4456361.599099999],[164421.71750000026,4456339.1225000005],[164429.59250000026,4456317.724099999],[164437.46750000026,4456274.481899999],[164451.34250000026,4456258.3803],[164469.81120000035,4456256.8803],[164489.59250000026,4456269.2553],[164513.12370000035,4456287.724099999],[164549.05339999963,4456301.3412999995],[164579.59250000026,4456323.2553],[164604.13150000013,4456342.474099999],[164661.10809999984,4456355.4350000005],[164685.60030000005,4456383.864700001],[164716.42059999984,4456381.4037999995],[164735.99089999963,4456444.5912999995],[164731.93620000035,4456495.099099999],[164741.12370000035,4456515.724099999],[164744.35809999984,4456518.489700001],[164744.35809999984,4456530.489700001]]]},{"type":"Polygon","coordinates":[[[165902.35809999984,4456056.489700001],[165908.89719999954,4456064.0835],[165929.35809999984,4456065.724099999],[165935.52219999954,4456065.231899999],[165947.12370000035,4456071.724099999],[165959.59250000026,4456077.2553],[165974.21750000026,4456094.271],[166019.24089999963,4456107.7475000005],[166031.17059999984,4456106.786599999],[166045.46750000026,4456123.3803],[166079.12370000035,4456152.396],[166063.04559999984,4456190.4585],[166050.48309999984,4456201.286599999],[166043.10030000005,4456221.349099999],[166043.61589999963,4456227.6303],[166037.12370000035,4456245.2553],[166026.92839999963,4456279.1928],[166010.70969999954,4456298.0131],[165989.19400000013,4456299.7475000005],[165947.52219999954,4456281.231899999],[165938.00650000013,4456282.0053],[165917.12370000035,4456275.724099999],[165865.13939999975,4456256.6225000005],[165846.60030000005,4456258.1225000005],[165820.11589999963,4456250.856899999],[165804.29559999984,4456252.146],[165782.26439999975,4456244.0600000005],[165758.00650000013,4456246.0053],[165726.81120000035,4456236.606899999],[165719.00650000013,4456215.3725000005],[165728.38150000013,4456207.286599999],[165737.99089999963,4456172.2475000005],[165737.12370000035,4456161.489700001],[165737.59250000026,4456155.489700001],[165737.10030000005,4456149.349099999],[165749.59250000026,4456119.724099999],[165760.39719999954,4456072.146],[165780.29559999984,4456064.8335],[165823.04559999984,4456068.2787999995],[165881.12370000035,4456059.2553],[165902.35809999984,4456056.489700001]]]},{"type":"Polygon","coordinates":[[[165134.35809999984,4456596.489700001],[165137.24089999963,4456605.606899999],[165161.47530000005,4456635.3725000005],[165167.24089999963,4456707.606899999],[165173.54559999984,4456713.4428],[165160.42059999984,4456738.286599999],[165132.83469999954,4456737.1850000005],[165072.83469999954,4456744.146],[165025.39719999954,4456742.271],[164993.45189999975,4456725.3725000005],[164987.35809999984,4456725.606899999],[164971.95969999954,4456724.9975000005],[164959.91280000005,4456674.4662999995],[164970.17839999963,4456664.9506],[164969.21750000026,4456640.6928],[164950.53780000005,4456623.3725000005],[164951.94400000013,4456587.8178],[164944.53780000005,4456580.9506],[164945.70969999954,4456551.606899999],[164939.24089999963,4456545.606899999],[164904.27219999954,4456486.1225000005],[164891.00650000013,4456473.8412999995],[164878.09250000026,4456459.896],[164863.13939999975,4456428.2085],[164826.85809999984,4456404.771],[164801.47530000005,4456377.3725000005],[164783.24089999963,4456371.606899999],[164746.51439999975,4456314.724099999],[164717.24089999963,4456287.606899999],[164699.56900000013,4456268.5287999995],[164685.60030000005,4456283.6225000005],[164714.87370000035,4456354.896],[164707.30339999963,4456365.3725000005],[164657.56900000013,4456344.9585],[164636.87370000035,4456334.0131],[164621.47530000005,4456317.3725000005],[164603.24089999963,4456311.606899999],[164585.47530000005,4456299.3725000005],[164558.85030000005,4456293.021],[164519.59250000026,4456272.2553],[164501.24089999963,4456263.606899999],[164460.01439999975,4456235.224099999],[164453.47530000005,4456221.3725000005],[164444.00650000013,4456212.606899999],[164454.78780000005,4456181.856899999],[164445.60030000005,4456164.489700001],[164453.70969999954,4456149.161599999],[164435.49870000035,4456132.286599999],[164477.47530000005,4456125.606899999],[164477.19400000013,4456118.224099999],[164449.65500000026,4456092.7006],[164474.80339999963,4456069.4037999995],[164556.92839999963,4456046.5053],[164567.24089999963,4456035.3725000005],[164599.49089999963,4456029.2085],[164631.78780000005,4456030.4975000005],[164646.67059999984,4456022.6225000005],[164690.59250000026,4456008.724099999],[164733.62370000035,4455993.6303],[164780.52219999954,4455986.1537999995],[164813.24089999963,4455999.606899999],[164858.12370000035,4456005.7475000005],[164867.47530000005,4456005.3725000005],[164873.24089999963,4456011.606899999],[164894.00650000013,4456021.4037999995],[164927.47530000005,4456029.3725000005],[164945.12370000035,4456038.724099999],[164969.59250000026,4456050.2553],[164998.25650000013,4456094.646],[165005.24089999963,4456133.1303],[164987.00650000013,4456185.161599999],[164993.47530000005,4456197.3725000005],[165000.55339999963,4456212.3725000005],[164998.53780000005,4456262.9506],[165011.47530000005,4456287.3725000005],[165022.35030000005,4456333.0756],[165030.60030000005,4456356.606899999],[165053.47530000005,4456371.3725000005],[165059.24089999963,4456383.606899999],[165067.49089999963,4456399.169399999],[165089.47530000005,4456413.3725000005],[165095.24089999963,4456419.606899999],[165146.17059999984,4456431.724099999],[165155.45189999975,4456431.3725000005],[165167.24089999963,4456438.802200001],[165128.35809999984,4456437.2553],[165086.56900000013,4456438.919399999],[165080.35809999984,4456458.489700001],[165072.01439999975,4456463.8335],[165081.67059999984,4456497.489700001],[165086.35809999984,4456500.489700001],[165090.03780000005,4456529.8100000005],[165098.35809999984,4456536.489700001],[165098.35809999984,4456542.489700001],[165104.35809999984,4456542.489700001],[165104.35809999984,4456548.489700001],[165110.35809999984,4456548.489700001],[165116.35809999984,4456560.489700001],[165116.35809999984,4456566.489700001],[165122.35809999984,4456566.489700001],[165122.35809999984,4456572.489700001],[165122.35809999984,4456578.489700001],[165128.35809999984,4456578.489700001],[165128.35809999984,4456584.489700001],[165128.35809999984,4456590.489700001],[165134.35809999984,4456590.489700001],[165134.35809999984,4456596.489700001]]]},{"type":"Polygon","coordinates":[[[165662.35809999984,4455726.489700001],[165665.12370000035,4455735.724099999],[165714.08469999954,4455742.1225000005],[165774.20189999975,4455775.661599999],[165821.12370000035,4455789.724099999],[165845.59250000026,4455795.2553],[165851.12370000035,4455801.724099999],[165863.59250000026,4455807.2553],[165877.42059999984,4455814.989700001],[165917.21750000026,4455831.7475000005],[165929.05339999963,4455830.786599999],[165931.39719999954,4455859.989700001],[165917.59250000026,4455867.724099999],[165873.50650000013,4455873.489700001],[165851.52219999954,4455885.7475000005],[165839.54559999984,4455884.786599999],[165830.80339999963,4455894.9350000005],[165803.12370000035,4455903.2553],[165797.59250000026,4455909.724099999],[165767.12370000035,4455915.2553],[165742.11589999963,4455922.1225000005],[165722.33469999954,4455920.5287999995],[165671.54559999984,4455957.7475000005],[165663.10809999984,4455957.0678],[165629.12370000035,4455963.2553],[165607.81900000013,4455978.396],[165557.75650000013,4455959.3881],[165556.30339999963,4455941.5053],[165568.98309999984,4455907.0053],[165575.12370000035,4455873.2553],[165595.49089999963,4455844.544399999],[165605.61589999963,4455807.606899999],[165605.10030000005,4455801.349099999],[165611.59250000026,4455783.724099999],[165618.57689999975,4455752.927200001],[165629.56900000013,4455728.294399999],[165647.45189999975,4455729.7475000005],[165662.35809999984,4455726.489700001]]]},{"type":"Polygon","coordinates":[[[164762.35809999984,4455582.489700001],[164774.70969999954,4455597.3725000005],[164825.63939999975,4455611.599099999],[164852.78000000026,4455608.8335],[164911.53780000005,4455615.419399999],[164933.17059999984,4455627.8178],[164945.12370000035,4455626.599099999],[164951.07689999975,4455633.771],[165005.63939999975,4455639.2085],[165023.19400000013,4455645.8178],[165029.52219999954,4455645.161599999],[165052.32689999975,4455653.739700001],[165093.48309999984,4455649.544399999],[165119.63939999975,4455657.2085],[165149.31120000035,4455674.224099999],[165199.65500000026,4455682.169399999],[165229.93620000035,4455679.099099999],[165245.07689999975,4455687.771],[165268.77219999954,4455698.036599999],[165281.07689999975,4455764.646],[165254.21750000026,4455772.802200001],[165210.22530000005,4455745.661599999],[165187.79559999984,4455727.052200001],[165179.63939999975,4455717.2085],[165161.07689999975,4455705.771],[165155.63939999975,4455699.2085],[165132.10809999984,4455689.0131],[165122.35809999984,4455677.271],[165113.63939999975,4455687.771],[165107.07689999975,4455693.2085],[165101.59250000026,4455699.8178],[165067.51439999975,4455696.349099999],[165040.79559999984,4455707.927200001],[164995.09250000026,4455734.106899999],[164963.07689999975,4455741.2085],[164940.95189999975,4455767.856899999],[164894.94400000013,4455787.474099999],[164856.88150000013,4455773.177200001],[164804.17059999984,4455767.8100000005],[164777.52219999954,4455777.8178],[164768.35809999984,4455776.8803],[164752.44400000013,4455778.4975000005],[164712.34250000026,4455761.106899999],[164698.49089999963,4455724.239700001],[164717.07689999975,4455691.7787999995],[164711.63939999975,4455675.2085],[164704.81900000013,4455669.5600000005],[164722.93620000035,4455644.3881],[164731.60809999984,4455586.169399999],[164741.35809999984,4455585.1850000005],[164752.23309999984,4455586.286599999],[164762.35809999984,4455582.489700001]]]},{"type":"Polygon","coordinates":[[[165110.35809999984,4455540.489700001],[165113.47530000005,4455543.7475000005],[165164.87370000035,4455556.2631],[165256.39719999954,4455571.169399999],[165275.28780000005,4455561.419399999],[165288.13150000013,4455555.2085],[165316.28000000026,4455555.771],[165440.17059999984,4455613.239700001],[165461.28780000005,4455627.5600000005],[165491.42839999963,4455639.419399999],[165512.82689999975,4455650.4585],[165599.89719999954,4455688.8725000005],[165617.28780000005,4455703.239700001],[165589.37370000035,4455799.7085],[165574.58469999954,4455825.419399999],[165475.58469999954,4455785.271],[165414.92839999963,4455754.0287999995],[165374.26439999975,4455737.974099999],[165283.88939999975,4455691.427200001],[165275.42839999963,4455639.419399999],[165268.98309999984,4455607.989700001],[165222.92839999963,4455589.8256],[165149.28780000005,4455579.5600000005],[165107.42839999963,4455567.419399999],[165038.87370000035,4455559.052200001],[165023.42839999963,4455543.8881],[165110.35809999984,4455540.489700001]]]},{"type":"Polygon","coordinates":[[[165944.35809999984,4454754.489700001],[165952.04559999984,4454760.6303],[165931.09250000026,4454833.896],[165917.03000000026,4454853.161599999],[165909.01439999975,4454872.146],[165899.03000000026,4454889.161599999],[165892.02219999954,4454905.802200001],[165866.66280000005,4454908.9428],[165812.70969999954,4454876.4350000005],[165801.01439999975,4454861.8335],[165754.37370000035,4454848.474099999],[165731.68620000035,4454835.161599999],[165689.03000000026,4454817.8178],[165670.74870000035,4454807.0835],[165629.03000000026,4454799.8178],[165619.35030000005,4454776.849099999],[165605.35809999984,4454775.114700001],[165596.19400000013,4454776.2631],[165552.34250000026,4454750.5053],[165511.06900000013,4454738.6928],[165501.01439999975,4454714.8335],[165490.06900000013,4454696.2006],[165497.73309999984,4454655.5600000005],[165496.51439999975,4454645.739700001],[165511.30339999963,4454621.411599999],[165539.03000000026,4454601.161599999],[165567.43620000035,4454589.1850000005],[165577.18620000035,4454566.052200001],[165614.35809999984,4454574.489700001],[165617.03000000026,4454587.7787999995],[165626.35809999984,4454592.489700001],[165626.35809999984,4454598.489700001],[165638.35809999984,4454598.489700001],[165644.35809999984,4454598.489700001],[165644.35809999984,4454604.489700001],[165650.35809999984,4454604.489700001],[165655.58469999954,4454623.2631],[165686.35809999984,4454628.489700001],[165692.35809999984,4454628.489700001],[165692.35809999984,4454634.489700001],[165698.35809999984,4454634.489700001],[165704.35809999984,4454634.489700001],[165704.35809999984,4454640.489700001],[165710.35809999984,4454640.489700001],[165722.35809999984,4454640.489700001],[165722.35809999984,4454646.489700001],[165728.35809999984,4454646.489700001],[165728.35809999984,4454652.489700001],[165740.35809999984,4454652.489700001],[165740.35809999984,4454658.489700001],[165752.35809999984,4454658.489700001],[165752.35809999984,4454664.489700001],[165758.35809999984,4454664.489700001],[165764.35809999984,4454664.489700001],[165764.35809999984,4454670.489700001],[165770.35809999984,4454670.489700001],[165780.34250000026,4454672.5053],[165800.35809999984,4454682.489700001],[165800.35809999984,4454688.489700001],[165806.35809999984,4454688.489700001],[165806.35809999984,4454694.489700001],[165812.35809999984,4454694.489700001],[165812.35809999984,4454700.489700001],[165824.35809999984,4454700.489700001],[165824.35809999984,4454706.489700001],[165836.35809999984,4454706.489700001],[165847.70189999975,4454720.646],[165878.35809999984,4454724.489700001],[165884.35809999984,4454724.489700001],[165884.35809999984,4454730.489700001],[165890.35809999984,4454730.489700001],[165899.89719999954,4454732.9506],[165914.35809999984,4454742.489700001],[165914.35809999984,4454748.489700001],[165920.35809999984,4454748.489700001],[165932.35809999984,4454748.489700001],[165932.35809999984,4454754.489700001],[165938.35809999984,4454754.489700001],[165944.35809999984,4454754.489700001]]]},{"type":"Polygon","coordinates":[[[166100.35809999984,4454454.489700001],[166106.63939999975,4454461.7787999995],[166140.62370000035,4454469.489700001],[166159.53780000005,4454491.4506],[166211.10030000005,4454523.7475000005],[166217.35809999984,4454523.2553],[166226.05339999963,4454523.9585],[166247.12370000035,4454535.724099999],[166259.59250000026,4454541.2553],[166271.12370000035,4454547.724099999],[166289.59250000026,4454553.2553],[166319.07689999975,4454569.731899999],[166333.91280000005,4454586.9350000005],[166348.23309999984,4454599.286599999],[166379.59250000026,4454613.2553],[166396.91280000005,4454622.9350000005],[166425.13150000013,4454635.521],[166445.12370000035,4454649.724099999],[166463.80339999963,4454658.044399999],[166481.94400000013,4454668.169399999],[166493.54559999984,4454667.231899999],[166517.12370000035,4454685.724099999],[166573.06900000013,4454716.0756],[166584.50650000013,4454715.161599999],[166624.04559999984,4454743.1928],[166631.12370000035,4454780.6225000005],[166607.12370000035,4454811.2553],[166591.09250000026,4454836.8725000005],[166583.59250000026,4454853.724099999],[166577.10030000005,4454865.3256],[166577.59250000026,4454871.489700001],[166576.04559999984,4454890.849099999],[166529.12370000035,4454931.2553],[166523.59250000026,4454937.724099999],[166498.42059999984,4454953.474099999],[166475.59250000026,4454937.2553],[166452.53000000026,4454930.3178],[166415.52219999954,4454907.231899999],[166408.09250000026,4454907.8412999995],[166385.59250000026,4454895.2553],[166373.12370000035,4454889.724099999],[166361.59250000026,4454883.2553],[166346.42839999963,4454876.5053],[166330.18620000035,4454857.661599999],[166277.12370000035,4454835.724099999],[166259.80339999963,4454826.044399999],[166241.12370000035,4454817.724099999],[166199.63939999975,4454794.544399999],[166187.59250000026,4454774.0600000005],[166199.59250000026,4454763.724099999],[166205.12370000035,4454732.0600000005],[166182.03780000005,4454712.1381],[166161.78780000005,4454703.114700001],[166141.81900000013,4454679.9350000005],[166121.12370000035,4454673.724099999],[166083.60030000005,4454657.9037999995],[166049.59250000026,4454631.2553],[166013.82689999975,4454623.146],[166031.61589999963,4454541.5835],[166031.12370000035,4454535.489700001],[166032.50650000013,4454518.3335],[166051.37370000035,4454484.5131],[166073.17059999984,4454465.739700001],[166100.35809999984,4454454.489700001]]]},{"type":"Polygon","coordinates":[[[167792.35809999984,4454322.489700001],[167785.91280000005,4454328.044399999],[167774.80339999963,4454340.9350000005],[167759.73309999984,4454353.919399999],[167752.98309999984,4454369.0600000005],[167724.95189999975,4454393.224099999],[167713.32689999975,4454419.2631],[167694.97530000005,4454445.114700001],[167682.88150000013,4454485.286599999],[167627.49870000035,4454495.3881],[167567.59250000026,4454487.2553],[167472.97530000005,4454481.724099999],[167442.03780000005,4454503.6381],[167373.31900000013,4454498.1303],[167345.59250000026,4454505.724099999],[167264.85030000005,4454513.1303],[167249.59250000026,4454492.0600000005],[167261.61589999963,4454481.677200001],[167261.12370000035,4454475.489700001],[167261.85030000005,4454466.489700001],[167259.08469999954,4454432.1537999995],[167273.59250000026,4454397.724099999],[167279.35809999984,4454372.224099999],[167291.59250000026,4454361.724099999],[167311.77219999954,4454338.286599999],[167349.36589999963,4454326.9662999995],[167326.37370000035,4454316.7006],[167328.01439999975,4454296.427200001],[167363.73309999984,4454288.3178],[167414.35809999984,4454292.3725000005],[167499.01439999975,4454285.5756],[167542.09250000026,4454276.177200001],[167591.35809999984,4454280.1381],[167636.35809999984,4454276.5287999995],[167668.28000000026,4454279.0835],[167693.12370000035,4454313.724099999],[167707.35030000005,4454320.052200001],[167717.35809999984,4454319.2553],[167732.94400000013,4454320.4975000005],[167741.12370000035,4454318.0600000005],[167726.03000000026,4454305.0287999995],[167705.12370000035,4454295.724099999],[167697.27219999954,4454278.099099999],[167716.09250000026,4454269.7085],[167759.87370000035,4454273.224099999],[167788.58469999954,4454293.5678],[167792.35809999984,4454322.489700001]]]},{"type":"Polygon","coordinates":[[[167234.35809999984,4454358.489700001],[167195.99089999963,4454354.7162999995],[167183.35809999984,4454355.724099999],[167171.00650000013,4454354.739700001],[167050.79559999984,4454365.5678],[167015.00650000013,4454345.599099999],[166979.59250000026,4454367.724099999],[166871.00650000013,4454377.6850000005],[166835.00650000013,4454357.599099999],[166799.59250000026,4454379.724099999],[166774.30339999963,4454387.3178],[166775.78000000026,4454405.599099999],[166846.72530000005,4454431.3100000005],[166859.12370000035,4454445.724099999],[166880.59250000026,4454455.286599999],[166889.12370000035,4454478.114700001],[166840.09250000026,4454474.177200001],[166805.59250000026,4454481.724099999],[166751.12370000035,4454487.2553],[166721.59250000026,4454493.724099999],[166690.63150000013,4454499.349099999],[166691.92059999984,4454515.3803],[166715.80339999963,4454526.044399999],[166738.91280000005,4454538.9350000005],[166767.13150000013,4454551.521],[166810.91280000005,4454582.5756],[166855.67839999963,4454590.7553],[166865.12370000035,4454601.724099999],[166892.24089999963,4454625.0678],[166919.59250000026,4454637.2553],[166936.42059999984,4454646.6537999995],[166945.18620000035,4454666.3178],[166964.87370000035,4454673.2553],[166997.12370000035,4454655.2553],[167015.59250000026,4454649.724099999],[167027.12370000035,4454643.2553],[167076.27219999954,4454634.302200001],[167093.12370000035,4454643.724099999],[167117.59250000026,4454649.2553],[167135.12370000035,4454661.724099999],[167158.79559999984,4454672.271],[167197.09250000026,4454680.9662999995],[167261.49870000035,4454721.1850000005],[167276.89719999954,4454739.044399999],[167301.81120000035,4454746.544399999],[167315.12370000035,4454764.919399999],[167290.13939999975,4454786.4585],[167216.35809999984,4454780.5287999995],[167191.65500000026,4454782.521],[167171.59250000026,4454793.724099999],[167133.41280000005,4454799.536599999],[167107.74870000035,4454813.856899999],[167058.76439999975,4454809.919399999],[167027.35809999984,4454835.8881],[167003.59250000026,4454817.2553],[166984.91280000005,4454808.9350000005],[166949.59250000026,4454781.2553],[166908.50650000013,4454762.927200001],[166882.81900000013,4454744.7162999995],[166871.59250000026,4454722.9428],[166895.59250000026,4454715.724099999],[166914.53000000026,4454705.1303],[166925.12370000035,4454689.544399999],[166867.44400000013,4454653.4037999995],[166853.59250000026,4454631.2553],[166841.12370000035,4454625.724099999],[166823.80339999963,4454616.044399999],[166792.67839999963,4454602.169399999],[166757.59250000026,4454577.2553],[166739.12370000035,4454571.724099999],[166728.03780000005,4454558.8100000005],[166703.12370000035,4454547.724099999],[166679.59250000026,4454529.2553],[166669.42059999984,4454523.724099999],[166643.59250000026,4454559.724099999],[166635.64719999954,4454566.5678],[166614.38929999992,4454564.856899999],[166572.50650000013,4454535.161599999],[166565.35809999984,4454535.724099999],[166549.23309999984,4454534.4350000005],[166538.24089999963,4454509.802200001],[166552.06900000013,4454459.3178],[166539.88150000013,4454437.474099999],[166499.73309999984,4454412.3256],[166476.92839999963,4454385.864700001],[166460.24089999963,4454378.411599999],[166412.47530000005,4454344.5678],[166397.12370000035,4454337.724099999],[166385.52219999954,4454331.231899999],[166379.17059999984,4454331.7475000005],[166361.59250000026,4454316.771],[166434.97530000005,4454231.0600000005],[166451.12370000035,4454205.2553],[166485.29559999984,4454169.724099999],[166520.70969999954,4454210.8100000005],[166530.34250000026,4454232.419399999],[166551.24870000035,4454250.419399999],[166559.12370000035,4454241.2553],[166623.95189999975,4454234.646],[166640.35809999984,4454235.981899999],[166667.35809999984,4454233.802200001],[166697.35809999984,4454236.2162999995],[166742.40500000026,4454232.5835],[166828.63150000013,4454216.224099999],[166856.35809999984,4454218.4506],[166877.35809999984,4454216.7631],[166903.39719999954,4454218.849099999],[166932.60030000005,4454210.856899999],[166965.99870000035,4454213.552200001],[166974.55339999963,4454203.614700001],[167039.59250000026,4454193.724099999],[167051.12370000035,4454187.2553],[167098.42059999984,4454178.6303],[167131.84250000026,4454190.911599999],[167183.17059999984,4454186.786599999],[167192.99089999963,4454198.2006],[167175.36589999963,4454206.052200001],[167159.35809999984,4454204.7631],[167142.60030000005,4454206.1225000005],[167116.11589999963,4454198.856899999],[167097.34250000026,4454200.3803],[167087.59250000026,4454211.724099999],[167045.12370000035,4454217.2553],[167039.59250000026,4454229.724099999],[167029.81900000013,4454247.2085],[166961.80339999963,4454262.6537999995],[166916.35809999984,4454258.9975000005],[166907.35809999984,4454259.724099999],[166886.35809999984,4454258.036599999],[166856.35809999984,4454260.4506],[166822.67839999963,4454257.7553],[166793.59250000026,4454265.724099999],[166695.92839999963,4454275.6850000005],[166664.26439999975,4454264.0600000005],[166638.38939999975,4454266.1225000005],[166608.45969999954,4454287.3335],[166633.06900000013,4454308.5678],[166658.35809999984,4454306.5287999995],[166706.40500000026,4454310.396],[166816.72530000005,4454299.544399999],[166846.72530000005,4454282.786599999],[166863.71750000026,4454292.2787999995],[166931.96750000026,4454286.794399999],[167013.10809999984,4454269.099099999],[167023.91280000005,4454304.9350000005],[167038.65500000026,4454317.6381],[167158.46750000026,4454308.0053],[167196.43620000035,4454297.6225000005],[167220.41280000005,4454314.614700001],[167261.38150000013,4454311.3100000005],[167264.35809999984,4454340.489700001],[167258.35809999984,4454340.489700001],[167258.35809999984,4454346.489700001],[167246.35809999984,4454352.489700001],[167240.35809999984,4454352.489700001],[167240.35809999984,4454358.489700001],[167234.35809999984,4454358.489700001]]]},{"type":"Polygon","coordinates":[[[165656.35809999984,4453926.489700001],[165659.28780000005,4453929.5600000005],[165668.47530000005,4453938.3725000005],[165693.55339999963,4453964.4585],[165707.28780000005,4453971.5600000005],[165760.35030000005,4453994.0600000005],[165773.61589999963,4454007.8881],[165797.42839999963,4454019.419399999],[165827.28780000005,4454037.5600000005],[165856.91280000005,4454044.7787999995],[165927.50650000013,4454085.419399999],[165923.42839999963,4454055.419399999],[165911.42839999963,4454032.146],[165944.40500000026,4454028.1850000005],[165958.35030000005,4454071.099099999],[165986.63939999975,4454032.919399999],[166007.31120000035,4454043.5600000005],[166017.97530000005,4454043.3256],[166055.47530000005,4454049.4428],[166043.42839999963,4454072.8335],[166054.79559999984,4454097.419399999],[166067.49870000035,4454097.677200001],[166058.17059999984,4454070.419399999],[166067.42839999963,4454061.5600000005],[166089.53000000026,4454031.7006],[166115.35809999984,4454031.1850000005],[166160.35809999984,4454032.099099999],[166215.64719999954,4454030.974099999],[166246.67839999963,4454038.919399999],[166291.53780000005,4454029.731899999],[166349.38150000013,4454039.6225000005],[166390.46750000026,4454025.5600000005],[166433.28780000005,4454032.356899999],[166427.42839999963,4454043.5600000005],[166391.75650000013,4454064.724099999],[166361.96750000026,4454104.919399999],[166295.73309999984,4454168.552200001],[166278.62370000035,4454203.802200001],[166254.17839999963,4454229.2553],[166217.28780000005,4454253.419399999],[166194.50650000013,4454268.864700001],[166152.55339999963,4454248.521],[166142.24089999963,4454238.606899999],[166116.10809999984,4454211.419399999],[166109.31120000035,4454211.5600000005],[166097.42839999963,4454205.419399999],[166079.28780000005,4454199.5600000005],[166058.61589999963,4454188.896],[166025.40500000026,4454175.419399999],[166019.31120000035,4454175.5600000005],[165995.42839999963,4454157.419399999],[165975.38939999975,4454144.294399999],[165947.99089999963,4454115.794399999],[165920.47530000005,4454106.3725000005],[165886.67839999963,4454095.4037999995],[165845.42839999963,4454067.419399999],[165833.28780000005,4454061.5600000005],[165799.77219999954,4454038.8256],[165785.42839999963,4454031.419399999],[165773.28780000005,4454025.5600000005],[165764.47530000005,4454016.3725000005],[165737.28780000005,4454007.5600000005],[165719.42839999963,4453995.419399999],[165696.76439999975,4453984.4506],[165665.42839999963,4453965.419399999],[165636.29559999984,4453955.974099999],[165627.24870000035,4453929.5835],[165638.35809999984,4453929.3725000005],[165647.40500000026,4453929.5600000005],[165656.35809999984,4453926.489700001]]]},{"type":"Polygon","coordinates":[[[163874.35809999984,4454010.489700001],[163877.70969999954,4454014.1225000005],[163958.59250000026,4454061.021],[164021.24089999963,4454090.599099999],[163993.88939999975,4454095.3803],[163943.47530000005,4454073.3725000005],[163909.49089999963,4454062.614700001],[163853.47530000005,4454037.3725000005],[163826.12370000035,4454028.724099999],[163799.47530000005,4454019.3725000005],[163781.24089999963,4454013.606899999],[163751.47530000005,4454001.3725000005],[163717.30339999963,4453990.5678],[163697.24089999963,4453977.606899999],[163662.36589999963,4453953.606899999],[163660.13939999975,4453976.856899999],[163679.47530000005,4454013.3725000005],[163701.20189999975,4454069.1537999995],[163751.19400000013,4454161.7553],[163787.24089999963,4454205.606899999],[163817.05339999963,4454224.849099999],[163819.20969999954,4454279.2006],[163811.47530000005,4454295.606899999],[163799.75650000013,4454317.731899999],[163788.22530000005,4454354.177200001],[163781.24089999963,4454367.3725000005],[163775.33469999954,4454379.8881],[163767.55339999963,4454355.302200001],[163751.24089999963,4454331.606899999],[163737.10809999984,4454309.739700001],[163681.46750000026,4454273.786599999],[163609.28000000026,4454186.224099999],[163601.47530000005,4454145.3725000005],[163595.19400000013,4454139.536599999],[163602.34250000026,4454119.146],[163601.03000000026,4454086.1928],[163607.47530000005,4454061.606899999],[163614.48309999984,4454024.9037999995],[163631.24089999963,4453989.3725000005],[163656.76439999975,4453956.0912999995],[163654.65500000026,4453902.981899999],[163679.24089999963,4453911.606899999],[163688.35809999984,4453914.489700001],[163692.31900000013,4453919.6225000005],[163736.31120000035,4453947.8881],[163782.90500000026,4453966.9428],[163814.00650000013,4453985.7162999995],[163838.35809999984,4453992.489700001],[163838.35809999984,4453998.489700001],[163850.35809999984,4453998.489700001],[163850.35809999984,4454004.489700001],[163868.35809999984,4454004.489700001],[163868.35809999984,4454010.489700001],[163874.35809999984,4454010.489700001]]]},{"type":"Polygon","coordinates":[[[166412.35809999984,4453854.489700001],[166415.28780000005,4453869.5600000005],[166421.70969999954,4453957.3803],[166421.28780000005,4453977.911599999],[166408.42059999984,4453990.2631],[166339.51439999975,4453988.856899999],[166307.54559999984,4453997.0600000005],[166042.06900000013,4454015.6225000005],[165995.42839999963,4453995.419399999],[165977.28780000005,4453989.5600000005],[165943.84250000026,4453975.989700001],[165935.42839999963,4453941.419399999],[165923.05339999963,4453917.4428],[166001.42839999963,4453911.5600000005],[166075.65500000026,4453903.9662999995],[166097.28780000005,4453881.419399999],[166109.14719999954,4453870.052200001],[166355.42839999963,4453857.5600000005],[166412.35809999984,4453854.489700001]]]},{"type":"Polygon","coordinates":[[[163316.35809999984,4453902.489700001],[163312.09250000026,4453898.8100000005],[163301.59250000026,4453875.2553],[163290.24870000035,4453865.5053],[163287.90500000026,4453836.489700001],[163291.72530000005,4453789.099099999],[163277.59250000026,4453763.7631],[163293.31900000013,4453744.0287999995],[163326.29559999984,4453756.146],[163340.68620000035,4453754.974099999],[163415.07689999975,4453762.286599999],[163418.35809999984,4453758.489700001],[163424.35809999984,4453758.489700001],[163424.35809999984,4453764.489700001],[163442.35809999984,4453764.489700001],[163450.77219999954,4453773.5835],[163571.82679999992,4453779.7006],[163586.61589999963,4453841.786599999],[163613.70969999954,4453881.1381],[163628.94400000013,4453945.146],[163613.24089999963,4453983.3725000005],[163600.88939999975,4454022.419399999],[163602.17839999963,4454055.3725000005],[163579.88939999975,4454076.021],[163562.59250000026,4454094.724099999],[163552.51429999992,4454104.052200001],[163532.35809999984,4454103.2553],[163523.26439999975,4454103.606899999],[163492.09250000026,4454087.1303],[163474.77219999954,4454060.271],[163463.24089999963,4454049.606899999],[163456.60809999984,4454042.4350000005],[163420.13939999975,4454018.9037999995],[163409.47530000005,4454007.3725000005],[163377.85809999984,4453995.0678],[163358.59250000026,4453974.2553],[163349.24089999963,4453965.606899999],[163343.47530000005,4453959.3725000005],[163321.32689999975,4453938.864700001],[163316.35809999984,4453902.489700001],[163337.24089999963,4453890.2085],[163320.29559999984,4453881.8881],[163316.35809999984,4453902.489700001]]]},{"type":"Polygon","coordinates":[[[167888.35809999984,4453716.489700001],[167891.19400000013,4453719.6537999995],[167945.52219999954,4453731.3256],[167969.19400000013,4453737.6537999995],[168030.90500000026,4453750.896],[168071.19400000013,4453767.6537999995],[168105.24870000035,4453778.177200001],[168143.52219999954,4453785.3256],[168224.03000000026,4453814.2006],[168233.19400000013,4453848.606899999],[168203.19400000013,4453887.3256],[168167.87370000035,4453948.0053],[168139.20969999954,4453989.021],[168075.36589999963,4453971.911599999],[168012.24870000035,4453949.271],[167969.68620000035,4453926.161599999],[167938.84250000026,4453912.0053],[167909.68620000035,4453896.161599999],[167885.03000000026,4453884.8178],[167844.78780000005,4453862.9506],[167819.52219999954,4453845.3256],[167807.03000000026,4453839.5835],[167825.52219999954,4453809.6537999995],[167831.19400000013,4453797.3256],[167847.03780000005,4453768.169399999],[167864.33469999954,4453730.481899999],[167888.35809999984,4453716.489700001]]]},{"type":"Polygon","coordinates":[[[167408.35809999984,4453818.489700001],[167405.52219999954,4453815.3256],[167364.41280000005,4453808.9037999995],[167357.52219999954,4453779.3256],[167348.96750000026,4453771.661599999],[167304.95189999975,4453774.286599999],[167280.34250000026,4453765.474099999],[167208.90500000026,4453769.7162999995],[167174.19400000013,4453760.4350000005],[167150.35809999984,4453761.8412999995],[167095.28000000026,4453758.5600000005],[167067.64719999954,4453748.646],[167041.81900000013,4453719.7475000005],[166992.34250000026,4453710.5131],[166949.52219999954,4453719.6537999995],[166833.55339999963,4453730.552200001],[166822.30339999963,4453717.9428],[166761.60030000005,4453721.552200001],[166745.52219999954,4453714.6381],[166774.20969999954,4453677.6303],[166793.52219999954,4453671.6537999995],[166800.10809999984,4453664.294399999],[166853.35809999984,4453667.4585],[166907.35809999984,4453664.2475000005],[166936.63150000013,4453665.981899999],[166975.16280000005,4453652.1537999995],[167004.34250000026,4453659.9585],[167018.35809999984,4453659.1381],[167041.20969999954,4453660.4975000005],[167053.25650000013,4453673.974099999],[167079.92839999963,4453659.489700001],[167124.08469999954,4453653.5835],[167111.19400000013,4453647.6537999995],[167095.35030000005,4453639.052200001],[167080.56120000035,4453615.802200001],[167081.87370000035,4453593.864700001],[167154.50650000013,4453586.3178],[167245.65500000026,4453591.731899999],[167236.51439999975,4453625.8335],[167216.59250000026,4453643.646],[167165.35809999984,4453640.599099999],[167145.64719999954,4453641.771],[167135.52219999954,4453654.3803],[167153.45189999975,4453653.302200001],[167183.19400000013,4453659.6537999995],[167291.80339999963,4453668.161599999],[167337.15500000026,4453658.481899999],[167357.19400000013,4453665.6537999995],[167391.36589999963,4453673.599099999],[167411.19400000013,4453707.6537999995],[167423.52219999954,4453725.3256],[167429.19400000013,4453743.6537999995],[167436.53000000026,4453764.1381],[167453.52219999954,4453779.3256],[167459.19400000013,4453785.6537999995],[167467.37370000035,4453792.989700001],[167495.42839999963,4453791.302200001],[167543.19400000013,4453797.6537999995],[167595.45969999954,4453803.771],[167656.79559999984,4453800.114700001],[167663.19400000013,4453778.669399999],[167627.94400000013,4453762.4975000005],[167621.52219999954,4453755.3256],[167584.98309999984,4453728.794399999],[167586.10809999984,4453709.974099999],[167649.27219999954,4453700.1303],[167669.19400000013,4453689.3256],[167691.55339999963,4453679.0600000005],[167758.65500000026,4453693.3803],[167777.19400000013,4453683.3256],[167837.52219999954,4453677.6537999995],[167867.47530000005,4453671.2553],[167873.19400000013,4453678.9662999995],[167849.19400000013,4453713.3256],[167830.56120000035,4453745.294399999],[167831.54559999984,4453761.489700001],[167830.56120000035,4453777.9428],[167783.19400000013,4453785.3256],[167759.49870000035,4453793.8335],[167702.54559999984,4453790.4350000005],[167673.38939999975,4453830.606899999],[167654.35809999984,4453836.489700001],[167654.35809999984,4453830.489700001],[167642.35809999984,4453830.489700001],[167630.35809999984,4453830.489700001],[167630.35809999984,4453824.489700001],[167600.35809999984,4453824.489700001],[167600.35809999984,4453830.489700001],[167570.35809999984,4453830.489700001],[167565.90500000026,4453825.4975000005],[167534.92059999984,4453814.3881],[167513.35809999984,4453815.677200001],[167433.15500000026,4453810.896],[167426.35809999984,4453818.489700001],[167408.35809999984,4453818.489700001]]]}]}');

/***/ }),

/***/ "./src/mapModules/colors.js":
/*!**********************************!*\
  !*** ./src/mapModules/colors.js ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "clamp": () => (/* binding */ clamp),
/* harmony export */   "getColor": () => (/* binding */ getColor)
/* harmony export */ });
/* harmony import */ var colormap__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! colormap */ "./node_modules/colormap/index.js");
/* harmony import */ var colormap__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(colormap__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var ol_sphere__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ol/sphere */ "./node_modules/ol/sphere.js");
/* harmony import */ var ol_geom_Circle__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ol/geom/Circle */ "./node_modules/ol/geom/Circle.js");




const clamp = (value, low, high) => {
  return Math.max(low, Math.min(value, high));
};

const getColor = (feature) => {
  if (feature.getGeometry() instanceof ol_geom_Circle__WEBPACK_IMPORTED_MODULE_1__.default) {
    return '#2196f3'; //skyblue
  }
  const minArea = 1e8;
  const maxArea = 2e13;
  const steps = 72;
  const ramp = colormap__WEBPACK_IMPORTED_MODULE_0___default()({
    colormap: 'hsv',
    nshades: steps,
    format: 'rgbaString',
    alpha: 0.3,
  });
  const area = (0,ol_sphere__WEBPACK_IMPORTED_MODULE_2__.getArea)(feature.getGeometry());
  const f = clamp((area - minArea) / (maxArea - minArea), 0, 1) ** (1 / 2);
  const index = Math.round(f * (steps - 1));
  return ramp[index];
};


/***/ }),

/***/ "./src/mapModules/controls.js":
/*!************************************!*\
  !*** ./src/mapModules/controls.js ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "selectYourMap": () => (/* binding */ selectYourMap),
/* harmony export */   "selectYourDrawType": () => (/* binding */ selectYourDrawType),
/* harmony export */   "selectYourProjection": () => (/* binding */ selectYourProjection)
/* harmony export */ });
/* harmony import */ var ol_control__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ol/control */ "./node_modules/ol/control/Control.js");


const selectYourMap = new ol_control__WEBPACK_IMPORTED_MODULE_0__.default({
  element: document.getElementById('layer-select'),
  target: document.getElementById('layer-div'),
});

const selectYourDrawType = new ol_control__WEBPACK_IMPORTED_MODULE_0__.default({
  element: document.getElementById('draw-type'),
  target: document.getElementById('draw-geometry'),
});

const selectYourProjection = new ol_control__WEBPACK_IMPORTED_MODULE_0__.default({
  element: document.getElementById('proj-select'),
  target: document.getElementById('proj-div'),
});


/***/ }),

/***/ "./src/mapModules/draw.js":
/*!********************************!*\
  !*** ./src/mapModules/draw.js ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createDraw": () => (/* binding */ createDraw),
/* harmony export */   "addDrawInteraction": () => (/* binding */ addDrawInteraction)
/* harmony export */ });
/* harmony import */ var ol_interaction_Draw__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ol/interaction/Draw */ "./node_modules/ol/interaction/Draw.js");


const createDraw = (source, selectDrawType) => {
  let drawing;
  const drawValue = selectDrawType.value;
  if (drawValue === 'FreeLine') {
    drawing = new ol_interaction_Draw__WEBPACK_IMPORTED_MODULE_0__.default({
      source,
      type: 'LineString',
      freehand: true,
    });
  }
  if (drawValue === 'FreePoly') {
    drawing = new ol_interaction_Draw__WEBPACK_IMPORTED_MODULE_0__.default({
      source,
      type: 'Polygon',
      freehand: true,
    });
  }
  if (
    drawValue === 'LineString' ||
    drawValue === 'Circle' ||
    drawValue === 'Polygon'
  ) {
    drawing = new ol_interaction_Draw__WEBPACK_IMPORTED_MODULE_0__.default({
      source,
      type: drawValue,
    });
  }
  return drawing;
};

const addDrawInteraction = (draw, map, type) => {
  if (type !== 'None') {
    return map.addInteraction(draw);
  }
};


/***/ }),

/***/ "./src/mapModules/export.js":
/*!**********************************!*\
  !*** ./src/mapModules/export.js ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "downloadGEO": () => (/* binding */ downloadGEO)
/* harmony export */ });
/* harmony import */ var ol_format__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ol/format */ "./node_modules/ol/format/GeoJSON.js");


// TODO: add shapefile download implementation
// export const downloadSHP = (source, downloadElementId) => {
//   const format = new GeoJSON({ featureProjection: 'EPSG: 3857' });
//   const download = document.getElementById(`${downloadElementId}`);
//   source.on('change', () => {
//     const features = source.getFeatures();
//     // const json = format.writeFeatures(features);
//     // download.href = `data:text/json;charset=utf-8, ${json}`;
//   });
// };

const downloadGEO = (source, downloadElementId) => {
  const format = new ol_format__WEBPACK_IMPORTED_MODULE_0__.default({ featureProjection: 'EPSG: 3857' });
  const download = document.getElementById(`${downloadElementId}`);
  source.on('change', () => {
    const features = source.getFeatures();
    const json = format.writeFeatures(features);
    download.href = `data:text/json;charset=utf-8, ${json}`;
  });
};


/***/ }),

/***/ "./src/mapModules/layers.js":
/*!**********************************!*\
  !*** ./src/mapModules/layers.js ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var ol_layer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ol/layer */ "./node_modules/ol/layer/Tile.js");
/* harmony import */ var ol_source__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ol/source */ "./node_modules/ol/source/OSM.js");



/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((myLayers) => {
  const layers = [];

  let i;
  for (i = 0; i < myLayers.length; i++) {
    const layerDesc = myLayers[i];
    if (layerDesc.url === '') {
      //For OSM Standard
      layers.push(
        new ol_layer__WEBPACK_IMPORTED_MODULE_0__.default({
          visible: false,
          preload: Infinity,
          source: new ol_source__WEBPACK_IMPORTED_MODULE_1__.default(),
        })
      );
    } else {
      layers.push(
        new ol_layer__WEBPACK_IMPORTED_MODULE_0__.default({
          visible: false,
          preload: Infinity,
          source: new ol_source__WEBPACK_IMPORTED_MODULE_1__.default({
            url: layerDesc.url,
            crossOrigin: 'Anonymous',
          }),
        })
      );
    }
  }

  return layers;
});


/***/ }),

/***/ "./src/mapModules/load.js":
/*!********************************!*\
  !*** ./src/mapModules/load.js ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "loadPGVectors": () => (/* binding */ loadPGVectors)
/* harmony export */ });
/* harmony import */ var ol_layer__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ol/layer */ "./node_modules/ol/layer/Vector.js");
/* harmony import */ var ol_source__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ol/source */ "./node_modules/ol/source/Vector.js");
/* harmony import */ var ol_style__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ol/style */ "./node_modules/ol/style/Style.js");
/* harmony import */ var ol_style__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ol/style */ "./node_modules/ol/style/Fill.js");
/* harmony import */ var ol_style__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ol/style */ "./node_modules/ol/style/Stroke.js");
/* harmony import */ var ol_style__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ol/style */ "./node_modules/ol/style/Circle.js");
/* harmony import */ var ol_format__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ol/format */ "./node_modules/ol/format/GeoJSON.js");
/* harmony import */ var _colors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./colors */ "./src/mapModules/colors.js");
/* harmony import */ var _assets_Azerbaijan_json__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../assets/Azerbaijan.json */ "./src/assets/Azerbaijan.json");
/* harmony import */ var _assets_Line_json__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../assets/Line.json */ "./src/assets/Line.json");
/* harmony import */ var _assets_Point_json__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../assets/Point.json */ "./src/assets/Point.json");
/* harmony import */ var _assets_Point1_json__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../assets/Point1.json */ "./src/assets/Point1.json");
/* harmony import */ var _assets_Polygon_json__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../assets/Polygon.json */ "./src/assets/Polygon.json");
/* harmony import */ var _assets_Poliqon1_json__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../assets/Poliqon1.json */ "./src/assets/Poliqon1.json");













const loadPGVectors = (map, elementId) => {
  const divVectorElement = document.getElementById(`${elementId}`);
  const PGLayers = [];

  const arrayOfTableNames = [
    'azerbaijan',
    'line',
    'point',
    'point1',
    'polygon',
    'poliqon1',
  ];

  const featureObjects = [
    _assets_Azerbaijan_json__WEBPACK_IMPORTED_MODULE_1__,
    _assets_Line_json__WEBPACK_IMPORTED_MODULE_2__,
    _assets_Point_json__WEBPACK_IMPORTED_MODULE_3__,
    _assets_Point1_json__WEBPACK_IMPORTED_MODULE_4__,
    _assets_Polygon_json__WEBPACK_IMPORTED_MODULE_5__,
    _assets_Poliqon1_json__WEBPACK_IMPORTED_MODULE_6__,
  ];

  for (const [counter, responseItem] of featureObjects.entries()) {
    const labelString = arrayOfTableNames[counter];
    divVectorElement.innerHTML += `
      <label class="checkbox-container">
         ${labelString.charAt(0).toUpperCase() + labelString.slice(1)}
        <input type="checkbox" id="cb-${counter}"/>
        <span class="checkmark"></span>
      </label>
      `;
    var newLayer = new ol_layer__WEBPACK_IMPORTED_MODULE_7__.default({
      title: 'My Title',
      source: new ol_source__WEBPACK_IMPORTED_MODULE_8__.default({
        features: new ol_format__WEBPACK_IMPORTED_MODULE_9__.default().readFeatures(responseItem),
      }),
      style: (feature) => {
        return new ol_style__WEBPACK_IMPORTED_MODULE_10__.default({
          fill: new ol_style__WEBPACK_IMPORTED_MODULE_11__.default({
            color: (0,_colors__WEBPACK_IMPORTED_MODULE_0__.getColor)(feature),
          }),
          stroke: new ol_style__WEBPACK_IMPORTED_MODULE_12__.default({
            color: '#333',
            width: 3,
          }),
          image: new ol_style__WEBPACK_IMPORTED_MODULE_13__.default({
            radius: 7,
            fill: new ol_style__WEBPACK_IMPORTED_MODULE_11__.default({
              color: (0,_colors__WEBPACK_IMPORTED_MODULE_0__.getColor)(feature),
            }),
          }),
        });
      },
    });
    map.addLayer(newLayer);
    newLayer.setVisible(false);
    PGLayers.push(newLayer);
  }
  return PGLayers;
};


/***/ }),

/***/ "./src/mapModules/projection.js":
/*!**************************************!*\
  !*** ./src/mapModules/projection.js ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "getView": () => (/* binding */ getView)
/* harmony export */ });
/* harmony import */ var proj4__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! proj4 */ "./node_modules/proj4/lib/index.js");
/* harmony import */ var ol__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ol */ "./node_modules/ol/View.js");
/* harmony import */ var ol_proj__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ol/proj */ "./node_modules/ol/proj.js");
/* harmony import */ var ol_proj_proj4__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ol/proj/proj4 */ "./node_modules/ol/proj/proj4.js");





const getView = (projection) => {
  // Set custom projection
  proj4__WEBPACK_IMPORTED_MODULE_0__.default.defs('EPSG:32639', '+proj=utm +zone=39 +datum=WGS84 +units=m +no_defs');
  (0,ol_proj_proj4__WEBPACK_IMPORTED_MODULE_2__.register)(proj4__WEBPACK_IMPORTED_MODULE_0__.default);

  // Centered longitude & latitude for Azerbaijan
  const lonLatCoords = [47.55175983657498, 40.430962138673834];

  const webMercatorView = new ol__WEBPACK_IMPORTED_MODULE_3__.default({
    center: (0,ol_proj__WEBPACK_IMPORTED_MODULE_1__.fromLonLat)(lonLatCoords, 'EPSG:3857'),
    projection: 'EPSG:3857',
    zoom: 8,
  });

  const geodeticView = new ol__WEBPACK_IMPORTED_MODULE_3__.default({
    center: (0,ol_proj__WEBPACK_IMPORTED_MODULE_1__.fromLonLat)(lonLatCoords, 'EPSG:4326'),
    projection: 'EPSG:4326',
    zoom: 8,
  });

  const UTMAzerbaijanView = new ol__WEBPACK_IMPORTED_MODULE_3__.default({
    center: (0,ol_proj__WEBPACK_IMPORTED_MODULE_1__.fromLonLat)(lonLatCoords, 'EPSG:32639'),
    projection: 'EPSG:32639',
    zoom: 8,
  });

  switch (projection) {
    case 'EPSG:3857':
      return webMercatorView;
      break;
    case 'EPSG:4326':
      return geodeticView;
      break;
    case 'EPSG:32639':
      return UTMAzerbaijanView;
      break;
    default:
      return null;
      break;
  }
};


/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			id: moduleId,
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => (module['default']) :
/******/ 				() => (module);
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
var __webpack_exports__ = {};
// This entry need to be wrapped in an IIFE because it need to be in strict mode.
(() => {
"use strict";
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var ol_ol_css__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ol/ol.css */ "./node_modules/ol/ol.css");
/* harmony import */ var ol__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ol */ "./node_modules/ol/Map.js");
/* harmony import */ var ol__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ol */ "./node_modules/ol/View.js");
/* harmony import */ var ol_layer__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ol/layer */ "./node_modules/ol/layer/Tile.js");
/* harmony import */ var ol_layer__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ol/layer */ "./node_modules/ol/layer/Vector.js");
/* harmony import */ var ol_source__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ol/source */ "./node_modules/ol/source/OSM.js");
/* harmony import */ var ol_source__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ol/source */ "./node_modules/ol/source/Vector.js");
/* harmony import */ var ol_style__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ol/style */ "./node_modules/ol/style/Style.js");
/* harmony import */ var ol_style__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ol/style */ "./node_modules/ol/style/Fill.js");
/* harmony import */ var ol_style__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ol/style */ "./node_modules/ol/style/Stroke.js");
/* harmony import */ var ol_style__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ol/style */ "./node_modules/ol/style/Circle.js");
/* harmony import */ var ol_interaction__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ol/interaction */ "./node_modules/ol/interaction/Modify.js");
/* harmony import */ var ol_interaction__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ol/interaction */ "./node_modules/ol/interaction/Snap.js");
/* harmony import */ var ol_interaction__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ol/interaction */ "./node_modules/ol/interaction/DragRotate.js");
/* harmony import */ var ol_control__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ol/control */ "./node_modules/ol/control/FullScreen.js");
/* harmony import */ var ol_control__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ol/control */ "./node_modules/ol/control/OverviewMap.js");
/* harmony import */ var ol_control__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ol/control */ "./node_modules/ol/control/ZoomSlider.js");
/* harmony import */ var ol_control__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ol/control */ "./node_modules/ol/control/ZoomToExtent.js");
/* harmony import */ var ol_control__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ol/control */ "./node_modules/ol/control.js");
/* harmony import */ var _mapModules_layers__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./mapModules/layers */ "./src/mapModules/layers.js");
/* harmony import */ var _mapModules_colors__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./mapModules/colors */ "./src/mapModules/colors.js");
/* harmony import */ var _mapModules_controls__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./mapModules/controls */ "./src/mapModules/controls.js");
/* harmony import */ var _mapModules_draw__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./mapModules/draw */ "./src/mapModules/draw.js");
/* harmony import */ var _mapModules_export__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./mapModules/export */ "./src/mapModules/export.js");
/* harmony import */ var ol_events_condition__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ol/events/condition */ "./node_modules/ol/events/condition.js");
/* harmony import */ var _mapModules_load__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./mapModules/load */ "./src/mapModules/load.js");
/* harmony import */ var _mapModules_projection__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./mapModules/projection */ "./src/mapModules/projection.js");
/* harmony import */ var _style_css__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./style.css */ "./src/style.css");

















/*=========================================
<!-- OVERRIDING AND ADDING MAP CONTROLS -->
=========================================*/
const fullScreenControl = new ol_control__WEBPACK_IMPORTED_MODULE_9__.default();
const overViewMapControl = new ol_control__WEBPACK_IMPORTED_MODULE_10__.default({
  collapsed: true,
  layers: [
    new ol_layer__WEBPACK_IMPORTED_MODULE_11__.default({
      source: new ol_source__WEBPACK_IMPORTED_MODULE_12__.default(),
    }),
  ],
});
const zoomSliderControl = new ol_control__WEBPACK_IMPORTED_MODULE_13__.default();
const zoomToExtentControl = new ol_control__WEBPACK_IMPORTED_MODULE_14__.default();

const baseLayerNames = [
  {
    url: '',
    scheme: 'OSMStandard',
  },
  {
    url: 'https://{a-c}.tile.openstreetmap.fr/hot/{z}/{x}/{y}.png',
    scheme: 'OSMHumanitarian',
  },
  {
    url: 'http://tile.stamen.com/terrain/{z}/{x}/{y}.jpg',
    scheme: 'StamenTerrain',
  },
];

const layers = (0,_mapModules_layers__WEBPACK_IMPORTED_MODULE_1__.default)(baseLayerNames);

/*===============
<!-- MAIN MAP -->
===============*/
var [lon, lat] = [5293437.691331564, 4928767.585347839];

const map = new ol__WEBPACK_IMPORTED_MODULE_15__.default({
  target: 'js-map',
  layers,
  view: new ol__WEBPACK_IMPORTED_MODULE_16__.default({
    center: [5293437.691331564, 4928767.585347839],
    zoom: 8,
  }),
  keyboardEventTarget: document,
  controls: (0,ol_control__WEBPACK_IMPORTED_MODULE_17__.defaults)().extend([
    fullScreenControl,
    overViewMapControl,
    zoomSliderControl,
    zoomToExtentControl,
  ]),
});

/*=============================================================
<!-- Create source and layer for user location and drawings -->
=============================================================*/
const source = new ol_source__WEBPACK_IMPORTED_MODULE_18__.default();
const vector = new ol_layer__WEBPACK_IMPORTED_MODULE_19__.default({
  source: source,
  style: (feature) => {
    return new ol_style__WEBPACK_IMPORTED_MODULE_20__.default({
      fill: new ol_style__WEBPACK_IMPORTED_MODULE_21__.default({
        color: (0,_mapModules_colors__WEBPACK_IMPORTED_MODULE_2__.getColor)(feature),
      }),
      stroke: new ol_style__WEBPACK_IMPORTED_MODULE_22__.default({
        color: '#333',
        width: 3,
      }),
      image: new ol_style__WEBPACK_IMPORTED_MODULE_23__.default({
        radius: 7,
        fill: new ol_style__WEBPACK_IMPORTED_MODULE_21__.default({
          color: (0,_mapModules_colors__WEBPACK_IMPORTED_MODULE_2__.getColor)(feature),
        }),
      }),
    });
  },
});
map.addLayer(vector);

/*=====================================
<!-- CHANGES THE SELECTED MAP LAYER -->
=====================================*/
map.addControl(_mapModules_controls__WEBPACK_IMPORTED_MODULE_3__.selectYourMap);

const selectMap = document.getElementById('layer-select');
const onMapChange = () => {
  const scheme = selectMap.value;
  for (let i = 0; i < layers.length; ++i) {
    layers[i].setVisible(baseLayerNames[i].scheme === scheme);
  }
};

selectMap.addEventListener('change', onMapChange);

onMapChange();

/*==========================
<!-- Download as GeoJSON -->
==========================*/
(0,_mapModules_export__WEBPACK_IMPORTED_MODULE_5__.downloadGEO)(source, 'download-geo');

/*==============================================
<!-- Load and Visualize Postgres Data on Map -->
==============================================*/
const PGLayers = (0,_mapModules_load__WEBPACK_IMPORTED_MODULE_6__.loadPGVectors)(map, 'loaded-vectors');
const onCheck = () => {
  for (let i = 0; i < PGLayers.length; i++) {
    var labelElement = document.getElementById(`cb-${i}`);
    PGLayers[i].setVisible(labelElement.checked);
  }
};

const check = document.getElementById('loaded-vectors');
check.addEventListener('change', onCheck);

/*============================
<!-- Change Map Projection -->
============================*/
map.addControl(_mapModules_controls__WEBPACK_IMPORTED_MODULE_3__.selectYourProjection);

const selectProjection = document.getElementById('proj-select');

const onProjChange = () => {
  const currentProjection = (0,_mapModules_projection__WEBPACK_IMPORTED_MODULE_7__.getView)(selectProjection.value);
  map.setView(currentProjection);
};

selectProjection.addEventListener('change', onProjChange);

onProjChange();

/*=========================
<!-- Modify Map Vectors -->
=========================*/
const modify = new ol_interaction__WEBPACK_IMPORTED_MODULE_24__.default({ source });
map.addInteraction(modify);

/*==========================
<!-- Add Drawing Feature -->
==========================*/
const selectDrawType = document.getElementById('draw-type');
let draw = (0,_mapModules_draw__WEBPACK_IMPORTED_MODULE_4__.createDraw)(source, selectDrawType);

selectDrawType.onchange = () => {
  map.removeInteraction(draw);
  draw = (0,_mapModules_draw__WEBPACK_IMPORTED_MODULE_4__.createDraw)(source, selectDrawType);
  (0,_mapModules_draw__WEBPACK_IMPORTED_MODULE_4__.addDrawInteraction)(draw, map, selectDrawType.value);
};

(0,_mapModules_draw__WEBPACK_IMPORTED_MODULE_4__.addDrawInteraction)(draw, map, selectDrawType.value);

map.addControl(_mapModules_controls__WEBPACK_IMPORTED_MODULE_3__.selectYourDrawType);

/*=======================
<!-- Snap Interaction -->
=======================*/
const snap = new ol_interaction__WEBPACK_IMPORTED_MODULE_25__.default({
  source: vector.getSource(),
});
map.addInteraction(snap);

/*==============================
<!-- Drag Rotate Interaction -->
==============================*/
const dragRotateInteraction = new ol_interaction__WEBPACK_IMPORTED_MODULE_26__.default({
  condition: ol_events_condition__WEBPACK_IMPORTED_MODULE_27__.altKeyOnly,
});
map.addInteraction(dragRotateInteraction);

/*=====================
<!-- Handle Zoom In -->
=====================*/
const zoomInElement = document.getElementById('zoomInBtn');
zoomInElement.addEventListener('click', () => {
  map.getView().animate({
    zoom: map.getView().getZoom() + 1,
    duration: 250,
  });
});

/*======================
<!-- Handle zoom out -->
======================*/
const zoomOutElement = document.getElementById('zoomOutBtn');
zoomOutElement.addEventListener('click', () => {
  map.getView().animate({
    zoom: map.getView().getZoom() - 1,
    duration: 250,
  });
});

/*========================================================
<!-- W3 Fullscreen API with cross-browser availability -->
========================================================*/
const fullScreenElement = document.getElementById('fullScreenBtn');
fullScreenElement.addEventListener('click', () => {
  var mapElement = document.getElementById('js-map');
  if (mapElement.requestFullscreen) {
    mapElement.requestFullscreen();
  } else if (mapElement.webkitRequestFullscreen) {
    mapElement.webkitRequestFullscreen();
  } else if (mapElement.mozRequestFullScreen) {
    mapElement.mozRequestFullScreen();
  } else if (mapElement.msRequestFullscreen) {
    mapElement.msRequestFullscreen();
  }
});

/*=============================================================
<!-- Clear user drawn vectors from map & reload map element -->
=============================================================*/
const clearElement = document.getElementById('clearBtn');
clearElement.addEventListener('click', () => {
  map.removeLayer(vector);
  document.getElementById('download-geo').removeAttribute('href');
});

})();

/******/ })()
;
//# sourceMappingURL=main.js.map